// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_item.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForgeQueueManipulateType int32

const (
	ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT ForgeQueueManipulateType = 0
	ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE     ForgeQueueManipulateType = 1
)

// Enum value maps for ForgeQueueManipulateType.
var (
	ForgeQueueManipulateType_name = map[int32]string{
		0: "FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT",
		1: "FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE",
	}
	ForgeQueueManipulateType_value = map[string]int32{
		"FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT": 0,
		"FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE":     1,
	}
)

func (x ForgeQueueManipulateType) Enum() *ForgeQueueManipulateType {
	p := new(ForgeQueueManipulateType)
	*p = x
	return p
}

func (x ForgeQueueManipulateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeQueueManipulateType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[0].Descriptor()
}

func (ForgeQueueManipulateType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[0]
}

func (x ForgeQueueManipulateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeQueueManipulateType.Descriptor instead.
func (ForgeQueueManipulateType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{0}
}

type MaterialDeleteReturnType int32

const (
	MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG  MaterialDeleteReturnType = 0
	MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_SEED MaterialDeleteReturnType = 1
)

// Enum value maps for MaterialDeleteReturnType.
var (
	MaterialDeleteReturnType_name = map[int32]string{
		0: "MATERIAL_DELETE_RETURN_BAG",
		1: "MATERIAL_DELETE_RETURN_SEED",
	}
	MaterialDeleteReturnType_value = map[string]int32{
		"MATERIAL_DELETE_RETURN_BAG":  0,
		"MATERIAL_DELETE_RETURN_SEED": 1,
	}
)

func (x MaterialDeleteReturnType) Enum() *MaterialDeleteReturnType {
	p := new(MaterialDeleteReturnType)
	*p = x
	return p
}

func (x MaterialDeleteReturnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialDeleteReturnType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[1].Descriptor()
}

func (MaterialDeleteReturnType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[1]
}

func (x MaterialDeleteReturnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialDeleteReturnType.Descriptor instead.
func (MaterialDeleteReturnType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{1}
}

type CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType int32

const (
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DEFAULT         CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 0
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_TEXT            CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 1
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DIALOG          CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 2
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 3
)

// Enum value maps for CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType.
var (
	CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType_name = map[int32]string{
		0: "ITEM_EXCEED_LIMIT_MSG_DEFAULT",
		1: "ITEM_EXCEED_LIMIT_MSG_TEXT",
		2: "ITEM_EXCEED_LIMIT_MSG_DIALOG",
		3: "ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK",
	}
	CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType_value = map[string]int32{
		"ITEM_EXCEED_LIMIT_MSG_DEFAULT":         0,
		"ITEM_EXCEED_LIMIT_MSG_TEXT":            1,
		"ITEM_EXCEED_LIMIT_MSG_DIALOG":          2,
		"ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK": 3,
	}
)

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Enum() *CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType {
	p := new(CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType)
	*p = x
	return p
}

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[2].Descriptor()
}

func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[2]
}

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType.Descriptor instead.
func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{61, 0}
}

type PlayerStoreNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList    []*Item   `protobuf:"bytes,15,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	WeightLimit uint32    `protobuf:"varint,8,opt,name=weight_limit,json=weightLimit,proto3" json:"weight_limit,omitempty"`
	StoreType   StoreType `protobuf:"varint,2,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *PlayerStoreNotify) Reset() {
	*x = PlayerStoreNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStoreNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStoreNotify) ProtoMessage() {}

func (x *PlayerStoreNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStoreNotify.ProtoReflect.Descriptor instead.
func (*PlayerStoreNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerStoreNotify) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *PlayerStoreNotify) GetWeightLimit() uint32 {
	if x != nil {
		return x.WeightLimit
	}
	return 0
}

func (x *PlayerStoreNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type StoreWeightLimitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponCountLimit    uint32    `protobuf:"varint,2,opt,name=weapon_count_limit,json=weaponCountLimit,proto3" json:"weapon_count_limit,omitempty"`
	StoreType           StoreType `protobuf:"varint,7,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	MaterialCountLimit  uint32    `protobuf:"varint,4,opt,name=material_count_limit,json=materialCountLimit,proto3" json:"material_count_limit,omitempty"`
	ReliquaryCountLimit uint32    `protobuf:"varint,6,opt,name=reliquary_count_limit,json=reliquaryCountLimit,proto3" json:"reliquary_count_limit,omitempty"`
	FurnitureCountLimit uint32    `protobuf:"varint,9,opt,name=furniture_count_limit,json=furnitureCountLimit,proto3" json:"furniture_count_limit,omitempty"`
	WeightLimit         uint32    `protobuf:"varint,15,opt,name=weight_limit,json=weightLimit,proto3" json:"weight_limit,omitempty"`
}

func (x *StoreWeightLimitNotify) Reset() {
	*x = StoreWeightLimitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreWeightLimitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreWeightLimitNotify) ProtoMessage() {}

func (x *StoreWeightLimitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreWeightLimitNotify.ProtoReflect.Descriptor instead.
func (*StoreWeightLimitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{1}
}

func (x *StoreWeightLimitNotify) GetWeaponCountLimit() uint32 {
	if x != nil {
		return x.WeaponCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *StoreWeightLimitNotify) GetMaterialCountLimit() uint32 {
	if x != nil {
		return x.MaterialCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetReliquaryCountLimit() uint32 {
	if x != nil {
		return x.ReliquaryCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetFurnitureCountLimit() uint32 {
	if x != nil {
		return x.FurnitureCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetWeightLimit() uint32 {
	if x != nil {
		return x.WeightLimit
	}
	return 0
}

type StoreItemChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreType StoreType `protobuf:"varint,12,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	ItemList  []*Item   `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *StoreItemChangeNotify) Reset() {
	*x = StoreItemChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreItemChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItemChangeNotify) ProtoMessage() {}

func (x *StoreItemChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItemChangeNotify.ProtoReflect.Descriptor instead.
func (*StoreItemChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{2}
}

func (x *StoreItemChangeNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *StoreItemChangeNotify) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type StoreItemDelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidList  []uint64  `protobuf:"varint,12,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
	StoreType StoreType `protobuf:"varint,15,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *StoreItemDelNotify) Reset() {
	*x = StoreItemDelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreItemDelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItemDelNotify) ProtoMessage() {}

func (x *StoreItemDelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItemDelNotify.ProtoReflect.Descriptor instead.
func (*StoreItemDelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{3}
}

func (x *StoreItemDelNotify) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

func (x *StoreItemDelNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type ItemHint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,8,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	IsNew  bool   `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	Count  uint32 `protobuf:"varint,15,opt,name=count,proto3" json:"count,omitempty"`
	Guid   uint64 `protobuf:"varint,4,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *ItemHint) Reset() {
	*x = ItemHint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemHint) ProtoMessage() {}

func (x *ItemHint) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemHint.ProtoReflect.Descriptor instead.
func (*ItemHint) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{4}
}

func (x *ItemHint) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemHint) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ItemHint) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ItemHint) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type ItemAddHintNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPositionValid             bool        `protobuf:"varint,14,opt,name=is_position_valid,json=isPositionValid,proto3" json:"is_position_valid,omitempty"`
	QuestId                     uint32      `protobuf:"varint,3,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	Reason                      uint32      `protobuf:"varint,6,opt,name=reason,proto3" json:"reason,omitempty"`
	IsGeneralRewardHiden        bool        `protobuf:"varint,15,opt,name=is_general_reward_hiden,json=isGeneralRewardHiden,proto3" json:"is_general_reward_hiden,omitempty"`
	ItemList                    []*ItemHint `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	IsTransferedFromAvatarCard  bool        `protobuf:"varint,12,opt,name=is_transfered_from_avatar_card,json=isTransferedFromAvatarCard,proto3" json:"is_transfered_from_avatar_card,omitempty"`
	Position                    *Vector     `protobuf:"bytes,9,opt,name=position,proto3" json:"position,omitempty"`
	OverflowTransformedItemList []*ItemHint `protobuf:"bytes,8,rep,name=overflow_transformed_item_list,json=overflowTransformedItemList,proto3" json:"overflow_transformed_item_list,omitempty"`
}

func (x *ItemAddHintNotify) Reset() {
	*x = ItemAddHintNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAddHintNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAddHintNotify) ProtoMessage() {}

func (x *ItemAddHintNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAddHintNotify.ProtoReflect.Descriptor instead.
func (*ItemAddHintNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{5}
}

func (x *ItemAddHintNotify) GetIsPositionValid() bool {
	if x != nil {
		return x.IsPositionValid
	}
	return false
}

func (x *ItemAddHintNotify) GetQuestId() uint32 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ItemAddHintNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *ItemAddHintNotify) GetIsGeneralRewardHiden() bool {
	if x != nil {
		return x.IsGeneralRewardHiden
	}
	return false
}

func (x *ItemAddHintNotify) GetItemList() []*ItemHint {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *ItemAddHintNotify) GetIsTransferedFromAvatarCard() bool {
	if x != nil {
		return x.IsTransferedFromAvatarCard
	}
	return false
}

func (x *ItemAddHintNotify) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ItemAddHintNotify) GetOverflowTransformedItemList() []*ItemHint {
	if x != nil {
		return x.OverflowTransformedItemList
	}
	return nil
}

type UseItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                uint32 `protobuf:"varint,13,opt,name=count,proto3" json:"count,omitempty"`
	TargetGuid           uint64 `protobuf:"varint,14,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
	Guid                 uint64 `protobuf:"varint,10,opt,name=guid,proto3" json:"guid,omitempty"`
	IsEnterMpDungeonTeam bool   `protobuf:"varint,15,opt,name=is_enter_mp_dungeon_team,json=isEnterMpDungeonTeam,proto3" json:"is_enter_mp_dungeon_team,omitempty"`
	OptionIdx            uint32 `protobuf:"varint,7,opt,name=option_idx,json=optionIdx,proto3" json:"option_idx,omitempty"`
}

func (x *UseItemReq) Reset() {
	*x = UseItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemReq) ProtoMessage() {}

func (x *UseItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemReq.ProtoReflect.Descriptor instead.
func (*UseItemReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{6}
}

func (x *UseItemReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UseItemReq) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

func (x *UseItemReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *UseItemReq) GetIsEnterMpDungeonTeam() bool {
	if x != nil {
		return x.IsEnterMpDungeonTeam
	}
	return false
}

func (x *UseItemReq) GetOptionIdx() uint32 {
	if x != nil {
		return x.OptionIdx
	}
	return 0
}

type UseItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid       uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
	TargetGuid uint64 `protobuf:"varint,1,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
	ItemId     uint32 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	OptionIdx  uint32 `protobuf:"varint,8,opt,name=option_idx,json=optionIdx,proto3" json:"option_idx,omitempty"`
	Retcode    int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *UseItemRsp) Reset() {
	*x = UseItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemRsp) ProtoMessage() {}

func (x *UseItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemRsp.ProtoReflect.Descriptor instead.
func (*UseItemRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{7}
}

func (x *UseItemRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *UseItemRsp) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

func (x *UseItemRsp) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *UseItemRsp) GetOptionIdx() uint32 {
	if x != nil {
		return x.OptionIdx
	}
	return 0
}

func (x *UseItemRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DropItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos       *Vector   `protobuf:"bytes,11,opt,name=pos,proto3" json:"pos,omitempty"`
	StoreType StoreType `protobuf:"varint,1,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	Count     uint32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Guid      uint64    `protobuf:"varint,13,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *DropItemReq) Reset() {
	*x = DropItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemReq) ProtoMessage() {}

func (x *DropItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemReq.ProtoReflect.Descriptor instead.
func (*DropItemReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{8}
}

func (x *DropItemReq) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *DropItemReq) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *DropItemReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DropItemReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type DropItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32     `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Guid      uint64    `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	StoreType StoreType `protobuf:"varint,15,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *DropItemRsp) Reset() {
	*x = DropItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemRsp) ProtoMessage() {}

func (x *DropItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemRsp.ProtoReflect.Descriptor instead.
func (*DropItemRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{9}
}

func (x *DropItemRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *DropItemRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *DropItemRsp) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type WearEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipGuid  uint64 `protobuf:"varint,7,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,5,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *WearEquipReq) Reset() {
	*x = WearEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WearEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearEquipReq) ProtoMessage() {}

func (x *WearEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearEquipReq.ProtoReflect.Descriptor instead.
func (*WearEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{10}
}

func (x *WearEquipReq) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *WearEquipReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type WearEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	EquipGuid  uint64 `protobuf:"varint,1,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *WearEquipRsp) Reset() {
	*x = WearEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WearEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearEquipRsp) ProtoMessage() {}

func (x *WearEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearEquipRsp.ProtoReflect.Descriptor instead.
func (*WearEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{11}
}

func (x *WearEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WearEquipRsp) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *WearEquipRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type TakeoffEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,8,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Slot       uint32 `protobuf:"varint,15,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *TakeoffEquipReq) Reset() {
	*x = TakeoffEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeoffEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoffEquipReq) ProtoMessage() {}

func (x *TakeoffEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoffEquipReq.ProtoReflect.Descriptor instead.
func (*TakeoffEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{12}
}

func (x *TakeoffEquipReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *TakeoffEquipReq) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type TakeoffEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,9,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Slot       uint32 `protobuf:"varint,10,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *TakeoffEquipRsp) Reset() {
	*x = TakeoffEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeoffEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoffEquipRsp) ProtoMessage() {}

func (x *TakeoffEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoffEquipRsp.ProtoReflect.Descriptor instead.
func (*TakeoffEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{13}
}

func (x *TakeoffEquipRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *TakeoffEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeoffEquipRsp) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type AvatarEquipChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64              `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EquipGuid  uint64              `protobuf:"varint,13,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	Reliquary  *SceneReliquaryInfo `protobuf:"bytes,1,opt,name=reliquary,proto3" json:"reliquary,omitempty"`
	Weapon     *SceneWeaponInfo    `protobuf:"bytes,15,opt,name=weapon,proto3" json:"weapon,omitempty"`
	ItemId     uint32              `protobuf:"varint,14,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	EquipType  uint32              `protobuf:"varint,8,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
}

func (x *AvatarEquipChangeNotify) Reset() {
	*x = AvatarEquipChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarEquipChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarEquipChangeNotify) ProtoMessage() {}

func (x *AvatarEquipChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarEquipChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarEquipChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{14}
}

func (x *AvatarEquipChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetReliquary() *SceneReliquaryInfo {
	if x != nil {
		return x.Reliquary
	}
	return nil
}

func (x *AvatarEquipChangeNotify) GetWeapon() *SceneWeaponInfo {
	if x != nil {
		return x.Weapon
	}
	return nil
}

func (x *AvatarEquipChangeNotify) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

type WeaponUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodWeaponGuidList []uint64     `protobuf:"varint,1,rep,packed,name=food_weapon_guid_list,json=foodWeaponGuidList,proto3" json:"food_weapon_guid_list,omitempty"`
	ItemParamList      []*ItemParam `protobuf:"bytes,15,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetWeaponGuid   uint64       `protobuf:"varint,4,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponUpgradeReq) Reset() {
	*x = WeaponUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponUpgradeReq) ProtoMessage() {}

func (x *WeaponUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponUpgradeReq.ProtoReflect.Descriptor instead.
func (*WeaponUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{15}
}

func (x *WeaponUpgradeReq) GetFoodWeaponGuidList() []uint64 {
	if x != nil {
		return x.FoodWeaponGuidList
	}
	return nil
}

func (x *WeaponUpgradeReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *WeaponUpgradeReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel         uint32       `protobuf:"varint,7,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	Retcode          int32        `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OldLevel         uint32       `protobuf:"varint,8,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	ItemParamList    []*ItemParam `protobuf:"bytes,2,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetWeaponGuid uint64       `protobuf:"varint,6,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponUpgradeRsp) Reset() {
	*x = WeaponUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponUpgradeRsp) ProtoMessage() {}

func (x *WeaponUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponUpgradeRsp.ProtoReflect.Descriptor instead.
func (*WeaponUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{16}
}

func (x *WeaponUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *WeaponUpgradeRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetWeaponGuid uint64 `protobuf:"varint,5,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponPromoteReq) Reset() {
	*x = WeaponPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPromoteReq) ProtoMessage() {}

func (x *WeaponPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPromoteReq.ProtoReflect.Descriptor instead.
func (*WeaponPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{17}
}

func (x *WeaponPromoteReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetWeaponGuid uint64 `protobuf:"varint,3,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	OldPromoteLevel  uint32 `protobuf:"varint,7,opt,name=old_promote_level,json=oldPromoteLevel,proto3" json:"old_promote_level,omitempty"`
	CurPromoteLevel  uint32 `protobuf:"varint,12,opt,name=cur_promote_level,json=curPromoteLevel,proto3" json:"cur_promote_level,omitempty"`
	Retcode          int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *WeaponPromoteRsp) Reset() {
	*x = WeaponPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPromoteRsp) ProtoMessage() {}

func (x *WeaponPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPromoteRsp.ProtoReflect.Descriptor instead.
func (*WeaponPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{18}
}

func (x *WeaponPromoteRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *WeaponPromoteRsp) GetOldPromoteLevel() uint32 {
	if x != nil {
		return x.OldPromoteLevel
	}
	return 0
}

func (x *WeaponPromoteRsp) GetCurPromoteLevel() uint32 {
	if x != nil {
		return x.CurPromoteLevel
	}
	return 0
}

func (x *WeaponPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemParamList         []*ItemParam `protobuf:"bytes,11,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetReliquaryGuid   uint64       `protobuf:"varint,6,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	FoodReliquaryGuidList []uint64     `protobuf:"varint,12,rep,packed,name=food_reliquary_guid_list,json=foodReliquaryGuidList,proto3" json:"food_reliquary_guid_list,omitempty"`
}

func (x *ReliquaryUpgradeReq) Reset() {
	*x = ReliquaryUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryUpgradeReq) ProtoMessage() {}

func (x *ReliquaryUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryUpgradeReq.ProtoReflect.Descriptor instead.
func (*ReliquaryUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{19}
}

func (x *ReliquaryUpgradeReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *ReliquaryUpgradeReq) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryUpgradeReq) GetFoodReliquaryGuidList() []uint64 {
	if x != nil {
		return x.FoodReliquaryGuidList
	}
	return nil
}

type ReliquaryUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldLevel            uint32   `protobuf:"varint,4,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	CurLevel            uint32   `protobuf:"varint,13,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	TargetReliquaryGuid uint64   `protobuf:"varint,9,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	CurAppendPropList   []uint32 `protobuf:"varint,2,rep,packed,name=cur_append_prop_list,json=curAppendPropList,proto3" json:"cur_append_prop_list,omitempty"`
	PowerUpRate         uint32   `protobuf:"varint,6,opt,name=power_up_rate,json=powerUpRate,proto3" json:"power_up_rate,omitempty"`
	OldAppendPropList   []uint32 `protobuf:"varint,15,rep,packed,name=old_append_prop_list,json=oldAppendPropList,proto3" json:"old_append_prop_list,omitempty"`
	Retcode             int32    `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ReliquaryUpgradeRsp) Reset() {
	*x = ReliquaryUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryUpgradeRsp) ProtoMessage() {}

func (x *ReliquaryUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryUpgradeRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{20}
}

func (x *ReliquaryUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetCurAppendPropList() []uint32 {
	if x != nil {
		return x.CurAppendPropList
	}
	return nil
}

func (x *ReliquaryUpgradeRsp) GetPowerUpRate() uint32 {
	if x != nil {
		return x.PowerUpRate
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetOldAppendPropList() []uint32 {
	if x != nil {
		return x.OldAppendPropList
	}
	return nil
}

func (x *ReliquaryUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuid   uint64 `protobuf:"varint,10,opt,name=item_guid,json=itemGuid,proto3" json:"item_guid,omitempty"`
	TargetGuid uint64 `protobuf:"varint,13,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
}

func (x *ReliquaryPromoteReq) Reset() {
	*x = ReliquaryPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryPromoteReq) ProtoMessage() {}

func (x *ReliquaryPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryPromoteReq.ProtoReflect.Descriptor instead.
func (*ReliquaryPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{21}
}

func (x *ReliquaryPromoteReq) GetItemGuid() uint64 {
	if x != nil {
		return x.ItemGuid
	}
	return 0
}

func (x *ReliquaryPromoteReq) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

type ReliquaryPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPromoteLevel     uint32   `protobuf:"varint,10,opt,name=old_promote_level,json=oldPromoteLevel,proto3" json:"old_promote_level,omitempty"`
	TargetReliquaryGuid uint64   `protobuf:"varint,6,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	CurAppendPropList   []uint32 `protobuf:"varint,9,rep,packed,name=cur_append_prop_list,json=curAppendPropList,proto3" json:"cur_append_prop_list,omitempty"`
	Retcode             int32    `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurPromoteLevel     uint32   `protobuf:"varint,2,opt,name=cur_promote_level,json=curPromoteLevel,proto3" json:"cur_promote_level,omitempty"`
	OldAppendPropList   []uint32 `protobuf:"varint,8,rep,packed,name=old_append_prop_list,json=oldAppendPropList,proto3" json:"old_append_prop_list,omitempty"`
}

func (x *ReliquaryPromoteRsp) Reset() {
	*x = ReliquaryPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryPromoteRsp) ProtoMessage() {}

func (x *ReliquaryPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryPromoteRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{22}
}

func (x *ReliquaryPromoteRsp) GetOldPromoteLevel() uint32 {
	if x != nil {
		return x.OldPromoteLevel
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetCurAppendPropList() []uint32 {
	if x != nil {
		return x.CurAppendPropList
	}
	return nil
}

func (x *ReliquaryPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetCurPromoteLevel() uint32 {
	if x != nil {
		return x.CurPromoteLevel
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetOldAppendPropList() []uint32 {
	if x != nil {
		return x.OldAppendPropList
	}
	return nil
}

type AvatarCardChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     uint32 `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Count      uint32 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AvatarCardChangeReq) Reset() {
	*x = AvatarCardChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarCardChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarCardChangeReq) ProtoMessage() {}

func (x *AvatarCardChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarCardChangeReq.ProtoReflect.Descriptor instead.
func (*AvatarCardChangeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{23}
}

func (x *AvatarCardChangeReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AvatarCardChangeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarCardChangeReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AvatarCardChangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarCardChangeRsp) Reset() {
	*x = AvatarCardChangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarCardChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarCardChangeRsp) ProtoMessage() {}

func (x *AvatarCardChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarCardChangeRsp.ProtoReflect.Descriptor instead.
func (*AvatarCardChangeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{24}
}

func (x *AvatarCardChangeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GrantRewardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward *Reward `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *GrantRewardNotify) Reset() {
	*x = GrantRewardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRewardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRewardNotify) ProtoMessage() {}

func (x *GrantRewardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRewardNotify.ProtoReflect.Descriptor instead.
func (*GrantRewardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{25}
}

func (x *GrantRewardNotify) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type WeaponAwakenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuid         uint64            `protobuf:"varint,10,opt,name=item_guid,json=itemGuid,proto3" json:"item_guid,omitempty"`
	AffixLevelMap    map[uint32]uint32 `protobuf:"bytes,7,rep,name=affix_level_map,json=affixLevelMap,proto3" json:"affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TargetWeaponGuid uint64            `protobuf:"varint,9,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponAwakenReq) Reset() {
	*x = WeaponAwakenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponAwakenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponAwakenReq) ProtoMessage() {}

func (x *WeaponAwakenReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponAwakenReq.ProtoReflect.Descriptor instead.
func (*WeaponAwakenReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{26}
}

func (x *WeaponAwakenReq) GetItemGuid() uint64 {
	if x != nil {
		return x.ItemGuid
	}
	return 0
}

func (x *WeaponAwakenReq) GetAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.AffixLevelMap
	}
	return nil
}

func (x *WeaponAwakenReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponAwakenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32             `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid              uint64            `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	OldAffixLevelMap        map[uint32]uint32 `protobuf:"bytes,4,rep,name=old_affix_level_map,json=oldAffixLevelMap,proto3" json:"old_affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TargetWeaponAwakenLevel uint32            `protobuf:"varint,2,opt,name=target_weapon_awaken_level,json=targetWeaponAwakenLevel,proto3" json:"target_weapon_awaken_level,omitempty"`
	TargetWeaponGuid        uint64            `protobuf:"varint,15,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	CurAffixLevelMap        map[uint32]uint32 `protobuf:"bytes,11,rep,name=cur_affix_level_map,json=curAffixLevelMap,proto3" json:"cur_affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *WeaponAwakenRsp) Reset() {
	*x = WeaponAwakenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponAwakenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponAwakenRsp) ProtoMessage() {}

func (x *WeaponAwakenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponAwakenRsp.ProtoReflect.Descriptor instead.
func (*WeaponAwakenRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{27}
}

func (x *WeaponAwakenRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WeaponAwakenRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *WeaponAwakenRsp) GetOldAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.OldAffixLevelMap
	}
	return nil
}

func (x *WeaponAwakenRsp) GetTargetWeaponAwakenLevel() uint32 {
	if x != nil {
		return x.TargetWeaponAwakenLevel
	}
	return 0
}

func (x *WeaponAwakenRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *WeaponAwakenRsp) GetCurAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.CurAffixLevelMap
	}
	return nil
}

type ItemCdGroupTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCdMap map[uint32]uint64 `protobuf:"bytes,9,rep,name=item_cd_map,json=itemCdMap,proto3" json:"item_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ItemCdGroupTimeNotify) Reset() {
	*x = ItemCdGroupTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCdGroupTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCdGroupTimeNotify) ProtoMessage() {}

func (x *ItemCdGroupTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCdGroupTimeNotify.ProtoReflect.Descriptor instead.
func (*ItemCdGroupTimeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{28}
}

func (x *ItemCdGroupTimeNotify) GetItemCdMap() map[uint32]uint64 {
	if x != nil {
		return x.ItemCdMap
	}
	return nil
}

type DropHintNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position   *Vector  `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	ItemIdList []uint32 `protobuf:"varint,14,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
}

func (x *DropHintNotify) Reset() {
	*x = DropHintNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropHintNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropHintNotify) ProtoMessage() {}

func (x *DropHintNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropHintNotify.ProtoReflect.Descriptor instead.
func (*DropHintNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{29}
}

func (x *DropHintNotify) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *DropHintNotify) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

type CombineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineCount uint32 `protobuf:"varint,12,opt,name=combine_count,json=combineCount,proto3" json:"combine_count,omitempty"`
	CombineId    uint32 `protobuf:"varint,9,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	AvatarGuid   uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *CombineReq) Reset() {
	*x = CombineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineReq) ProtoMessage() {}

func (x *CombineReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineReq.ProtoReflect.Descriptor instead.
func (*CombineReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{30}
}

func (x *CombineReq) GetCombineCount() uint32 {
	if x != nil {
		return x.CombineCount
	}
	return 0
}

func (x *CombineReq) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type CombineRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostItemList        []*ItemParam `protobuf:"bytes,3,rep,name=cost_item_list,json=costItemList,proto3" json:"cost_item_list,omitempty"`
	Retcode             int32        `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TotalExtraItemList  []*ItemParam `protobuf:"bytes,6,rep,name=total_extra_item_list,json=totalExtraItemList,proto3" json:"total_extra_item_list,omitempty"`
	CombineId           uint32       `protobuf:"varint,11,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	TotalRandomItemList []*ItemParam `protobuf:"bytes,9,rep,name=total_random_item_list,json=totalRandomItemList,proto3" json:"total_random_item_list,omitempty"`
	ResultItemList      []*ItemParam `protobuf:"bytes,2,rep,name=result_item_list,json=resultItemList,proto3" json:"result_item_list,omitempty"`
	CombineCount        uint32       `protobuf:"varint,13,opt,name=combine_count,json=combineCount,proto3" json:"combine_count,omitempty"`
	TotalReturnItemList []*ItemParam `protobuf:"bytes,12,rep,name=total_return_item_list,json=totalReturnItemList,proto3" json:"total_return_item_list,omitempty"`
	AvatarGuid          uint64       `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *CombineRsp) Reset() {
	*x = CombineRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineRsp) ProtoMessage() {}

func (x *CombineRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineRsp.ProtoReflect.Descriptor instead.
func (*CombineRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{31}
}

func (x *CombineRsp) GetCostItemList() []*ItemParam {
	if x != nil {
		return x.CostItemList
	}
	return nil
}

func (x *CombineRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CombineRsp) GetTotalExtraItemList() []*ItemParam {
	if x != nil {
		return x.TotalExtraItemList
	}
	return nil
}

func (x *CombineRsp) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineRsp) GetTotalRandomItemList() []*ItemParam {
	if x != nil {
		return x.TotalRandomItemList
	}
	return nil
}

func (x *CombineRsp) GetResultItemList() []*ItemParam {
	if x != nil {
		return x.ResultItemList
	}
	return nil
}

func (x *CombineRsp) GetCombineCount() uint32 {
	if x != nil {
		return x.CombineCount
	}
	return 0
}

func (x *CombineRsp) GetTotalReturnItemList() []*ItemParam {
	if x != nil {
		return x.TotalReturnItemList
	}
	return nil
}

func (x *CombineRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type ForgeQueueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishCount          uint32 `protobuf:"varint,13,opt,name=finish_count,json=finishCount,proto3" json:"finish_count,omitempty"`
	TotalFinishTimestamp uint32 `protobuf:"varint,14,opt,name=total_finish_timestamp,json=totalFinishTimestamp,proto3" json:"total_finish_timestamp,omitempty"`
	AvatarId             uint32 `protobuf:"varint,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	QueueId              uint32 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	UnfinishCount        uint32 `protobuf:"varint,10,opt,name=unfinish_count,json=unfinishCount,proto3" json:"unfinish_count,omitempty"`
	NextFinishTimestamp  uint32 `protobuf:"varint,11,opt,name=next_finish_timestamp,json=nextFinishTimestamp,proto3" json:"next_finish_timestamp,omitempty"`
	ForgeId              uint32 `protobuf:"varint,15,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
}

func (x *ForgeQueueData) Reset() {
	*x = ForgeQueueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueData) ProtoMessage() {}

func (x *ForgeQueueData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueData.ProtoReflect.Descriptor instead.
func (*ForgeQueueData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{32}
}

func (x *ForgeQueueData) GetFinishCount() uint32 {
	if x != nil {
		return x.FinishCount
	}
	return 0
}

func (x *ForgeQueueData) GetTotalFinishTimestamp() uint32 {
	if x != nil {
		return x.TotalFinishTimestamp
	}
	return 0
}

func (x *ForgeQueueData) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *ForgeQueueData) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *ForgeQueueData) GetUnfinishCount() uint32 {
	if x != nil {
		return x.UnfinishCount
	}
	return 0
}

func (x *ForgeQueueData) GetNextFinishTimestamp() uint32 {
	if x != nil {
		return x.NextFinishTimestamp
	}
	return 0
}

func (x *ForgeQueueData) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

type ForgeQueueDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueMap         map[uint32]*ForgeQueueData `protobuf:"bytes,7,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RemovedForgeQueueList []uint32                   `protobuf:"varint,6,rep,packed,name=removed_forge_queue_list,json=removedForgeQueueList,proto3" json:"removed_forge_queue_list,omitempty"`
}

func (x *ForgeQueueDataNotify) Reset() {
	*x = ForgeQueueDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueDataNotify) ProtoMessage() {}

func (x *ForgeQueueDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeQueueDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{33}
}

func (x *ForgeQueueDataNotify) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeQueueDataNotify) GetRemovedForgeQueueList() []uint32 {
	if x != nil {
		return x.RemovedForgeQueueList
	}
	return nil
}

type ForgeGetQueueDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForgeGetQueueDataReq) Reset() {
	*x = ForgeGetQueueDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeGetQueueDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeGetQueueDataReq) ProtoMessage() {}

func (x *ForgeGetQueueDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeGetQueueDataReq.ProtoReflect.Descriptor instead.
func (*ForgeGetQueueDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{34}
}

type ForgeGetQueueDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueMap map[uint32]*ForgeQueueData `protobuf:"bytes,2,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode       int32                      `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaxQueueNum   uint32                     `protobuf:"varint,6,opt,name=max_queue_num,json=maxQueueNum,proto3" json:"max_queue_num,omitempty"`
}

func (x *ForgeGetQueueDataRsp) Reset() {
	*x = ForgeGetQueueDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeGetQueueDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeGetQueueDataRsp) ProtoMessage() {}

func (x *ForgeGetQueueDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeGetQueueDataRsp.ProtoReflect.Descriptor instead.
func (*ForgeGetQueueDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{35}
}

func (x *ForgeGetQueueDataRsp) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeGetQueueDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ForgeGetQueueDataRsp) GetMaxQueueNum() uint32 {
	if x != nil {
		return x.MaxQueueNum
	}
	return 0
}

type ForgeStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId   uint32 `protobuf:"varint,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	ForgeId    uint32 `protobuf:"varint,4,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
	ForgeCount uint32 `protobuf:"varint,6,opt,name=forge_count,json=forgeCount,proto3" json:"forge_count,omitempty"`
}

func (x *ForgeStartReq) Reset() {
	*x = ForgeStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeStartReq) ProtoMessage() {}

func (x *ForgeStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeStartReq.ProtoReflect.Descriptor instead.
func (*ForgeStartReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{36}
}

func (x *ForgeStartReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *ForgeStartReq) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

func (x *ForgeStartReq) GetForgeCount() uint32 {
	if x != nil {
		return x.ForgeCount
	}
	return 0
}

type ForgeStartRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ForgeStartRsp) Reset() {
	*x = ForgeStartRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeStartRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeStartRsp) ProtoMessage() {}

func (x *ForgeStartRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeStartRsp.ProtoReflect.Descriptor instead.
func (*ForgeStartRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{37}
}

func (x *ForgeStartRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ForgeQueueManipulateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueId   uint32                   `protobuf:"varint,5,opt,name=forge_queue_id,json=forgeQueueId,proto3" json:"forge_queue_id,omitempty"`
	ManipulateType ForgeQueueManipulateType `protobuf:"varint,13,opt,name=manipulate_type,json=manipulateType,proto3,enum=proto.ForgeQueueManipulateType" json:"manipulate_type,omitempty"`
}

func (x *ForgeQueueManipulateReq) Reset() {
	*x = ForgeQueueManipulateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueManipulateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueManipulateReq) ProtoMessage() {}

func (x *ForgeQueueManipulateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueManipulateReq.ProtoReflect.Descriptor instead.
func (*ForgeQueueManipulateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{38}
}

func (x *ForgeQueueManipulateReq) GetForgeQueueId() uint32 {
	if x != nil {
		return x.ForgeQueueId
	}
	return 0
}

func (x *ForgeQueueManipulateReq) GetManipulateType() ForgeQueueManipulateType {
	if x != nil {
		return x.ManipulateType
	}
	return ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT
}

type ForgeQueueManipulateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManipulateType      ForgeQueueManipulateType `protobuf:"varint,4,opt,name=manipulate_type,json=manipulateType,proto3,enum=proto.ForgeQueueManipulateType" json:"manipulate_type,omitempty"`
	ExtraOutputItemList []*ItemParam             `protobuf:"bytes,13,rep,name=extra_output_item_list,json=extraOutputItemList,proto3" json:"extra_output_item_list,omitempty"`
	ReturnItemList      []*ItemParam             `protobuf:"bytes,10,rep,name=return_item_list,json=returnItemList,proto3" json:"return_item_list,omitempty"`
	Retcode             int32                    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OutputItemList      []*ItemParam             `protobuf:"bytes,9,rep,name=output_item_list,json=outputItemList,proto3" json:"output_item_list,omitempty"`
}

func (x *ForgeQueueManipulateRsp) Reset() {
	*x = ForgeQueueManipulateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueManipulateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueManipulateRsp) ProtoMessage() {}

func (x *ForgeQueueManipulateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueManipulateRsp.ProtoReflect.Descriptor instead.
func (*ForgeQueueManipulateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{39}
}

func (x *ForgeQueueManipulateRsp) GetManipulateType() ForgeQueueManipulateType {
	if x != nil {
		return x.ManipulateType
	}
	return ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT
}

func (x *ForgeQueueManipulateRsp) GetExtraOutputItemList() []*ItemParam {
	if x != nil {
		return x.ExtraOutputItemList
	}
	return nil
}

func (x *ForgeQueueManipulateRsp) GetReturnItemList() []*ItemParam {
	if x != nil {
		return x.ReturnItemList
	}
	return nil
}

func (x *ForgeQueueManipulateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ForgeQueueManipulateRsp) GetOutputItemList() []*ItemParam {
	if x != nil {
		return x.OutputItemList
	}
	return nil
}

type ResinChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextAddTimestamp uint32 `protobuf:"varint,6,opt,name=next_add_timestamp,json=nextAddTimestamp,proto3" json:"next_add_timestamp,omitempty"`
	CurBuyCount      uint32 `protobuf:"varint,4,opt,name=cur_buy_count,json=curBuyCount,proto3" json:"cur_buy_count,omitempty"`
	CurValue         uint32 `protobuf:"varint,12,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
}

func (x *ResinChangeNotify) Reset() {
	*x = ResinChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResinChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResinChangeNotify) ProtoMessage() {}

func (x *ResinChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResinChangeNotify.ProtoReflect.Descriptor instead.
func (*ResinChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{40}
}

func (x *ResinChangeNotify) GetNextAddTimestamp() uint32 {
	if x != nil {
		return x.NextAddTimestamp
	}
	return 0
}

func (x *ResinChangeNotify) GetCurBuyCount() uint32 {
	if x != nil {
		return x.CurBuyCount
	}
	return 0
}

func (x *ResinChangeNotify) GetCurValue() uint32 {
	if x != nil {
		return x.CurValue
	}
	return 0
}

type BuyResinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuyResinReq) Reset() {
	*x = BuyResinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResinReq) ProtoMessage() {}

func (x *BuyResinReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResinReq.ProtoReflect.Descriptor instead.
func (*BuyResinReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{41}
}

type BuyResinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurValue uint32 `protobuf:"varint,10,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
	Retcode  int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *BuyResinRsp) Reset() {
	*x = BuyResinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResinRsp) ProtoMessage() {}

func (x *BuyResinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResinRsp.ProtoReflect.Descriptor instead.
func (*BuyResinRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{42}
}

func (x *BuyResinRsp) GetCurValue() uint32 {
	if x != nil {
		return x.CurValue
	}
	return 0
}

func (x *BuyResinRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterialDeleteReturnNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnItemMap     map[uint32]uint32        `protobuf:"bytes,5,rep,name=return_item_map,json=returnItemMap,proto3" json:"return_item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Type              MaterialDeleteReturnType `protobuf:"varint,8,opt,name=type,proto3,enum=proto.MaterialDeleteReturnType" json:"type,omitempty"`
	DeleteMaterialMap map[uint32]uint32        `protobuf:"bytes,6,rep,name=delete_material_map,json=deleteMaterialMap,proto3" json:"delete_material_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MaterialDeleteReturnNotify) Reset() {
	*x = MaterialDeleteReturnNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialDeleteReturnNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialDeleteReturnNotify) ProtoMessage() {}

func (x *MaterialDeleteReturnNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialDeleteReturnNotify.ProtoReflect.Descriptor instead.
func (*MaterialDeleteReturnNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{43}
}

func (x *MaterialDeleteReturnNotify) GetReturnItemMap() map[uint32]uint32 {
	if x != nil {
		return x.ReturnItemMap
	}
	return nil
}

func (x *MaterialDeleteReturnNotify) GetType() MaterialDeleteReturnType {
	if x != nil {
		return x.Type
	}
	return MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG
}

func (x *MaterialDeleteReturnNotify) GetDeleteMaterialMap() map[uint32]uint32 {
	if x != nil {
		return x.DeleteMaterialMap
	}
	return nil
}

type TakeMaterialDeleteReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MaterialDeleteReturnType `protobuf:"varint,8,opt,name=type,proto3,enum=proto.MaterialDeleteReturnType" json:"type,omitempty"`
}

func (x *TakeMaterialDeleteReturnReq) Reset() {
	*x = TakeMaterialDeleteReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeMaterialDeleteReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeMaterialDeleteReturnReq) ProtoMessage() {}

func (x *TakeMaterialDeleteReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeMaterialDeleteReturnReq.ProtoReflect.Descriptor instead.
func (*TakeMaterialDeleteReturnReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{44}
}

func (x *TakeMaterialDeleteReturnReq) GetType() MaterialDeleteReturnType {
	if x != nil {
		return x.Type
	}
	return MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG
}

type TakeMaterialDeleteReturnRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeMaterialDeleteReturnRsp) Reset() {
	*x = TakeMaterialDeleteReturnRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeMaterialDeleteReturnRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeMaterialDeleteReturnRsp) ProtoMessage() {}

func (x *TakeMaterialDeleteReturnRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeMaterialDeleteReturnRsp.ProtoReflect.Descriptor instead.
func (*TakeMaterialDeleteReturnRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{45}
}

func (x *TakeMaterialDeleteReturnRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterialDeleteUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MaterialDeleteUpdateNotify) Reset() {
	*x = MaterialDeleteUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialDeleteUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialDeleteUpdateNotify) ProtoMessage() {}

func (x *MaterialDeleteUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialDeleteUpdateNotify.ProtoReflect.Descriptor instead.
func (*MaterialDeleteUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{46}
}

type McoinExchangeHcoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcoin     uint32 `protobuf:"varint,5,opt,name=hcoin,proto3" json:"hcoin,omitempty"`
	McoinCost uint32 `protobuf:"varint,1,opt,name=mcoin_cost,json=mcoinCost,proto3" json:"mcoin_cost,omitempty"`
}

func (x *McoinExchangeHcoinReq) Reset() {
	*x = McoinExchangeHcoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *McoinExchangeHcoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McoinExchangeHcoinReq) ProtoMessage() {}

func (x *McoinExchangeHcoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McoinExchangeHcoinReq.ProtoReflect.Descriptor instead.
func (*McoinExchangeHcoinReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{47}
}

func (x *McoinExchangeHcoinReq) GetHcoin() uint32 {
	if x != nil {
		return x.Hcoin
	}
	return 0
}

func (x *McoinExchangeHcoinReq) GetMcoinCost() uint32 {
	if x != nil {
		return x.McoinCost
	}
	return 0
}

type McoinExchangeHcoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	McoinCost uint32 `protobuf:"varint,8,opt,name=mcoin_cost,json=mcoinCost,proto3" json:"mcoin_cost,omitempty"`
	Hcoin     uint32 `protobuf:"varint,7,opt,name=hcoin,proto3" json:"hcoin,omitempty"`
	Retcode   int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *McoinExchangeHcoinRsp) Reset() {
	*x = McoinExchangeHcoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *McoinExchangeHcoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McoinExchangeHcoinRsp) ProtoMessage() {}

func (x *McoinExchangeHcoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McoinExchangeHcoinRsp.ProtoReflect.Descriptor instead.
func (*McoinExchangeHcoinRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{48}
}

func (x *McoinExchangeHcoinRsp) GetMcoinCost() uint32 {
	if x != nil {
		return x.McoinCost
	}
	return 0
}

func (x *McoinExchangeHcoinRsp) GetHcoin() uint32 {
	if x != nil {
		return x.Hcoin
	}
	return 0
}

func (x *McoinExchangeHcoinRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterilaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	Guid  uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *MaterilaInfo) Reset() {
	*x = MaterilaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterilaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterilaInfo) ProtoMessage() {}

func (x *MaterilaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterilaInfo.ProtoReflect.Descriptor instead.
func (*MaterilaInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{49}
}

func (x *MaterilaInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MaterilaInfo) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type DestroyMaterialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialList []*MaterilaInfo `protobuf:"bytes,5,rep,name=material_list,json=materialList,proto3" json:"material_list,omitempty"`
}

func (x *DestroyMaterialReq) Reset() {
	*x = DestroyMaterialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyMaterialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyMaterialReq) ProtoMessage() {}

func (x *DestroyMaterialReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyMaterialReq.ProtoReflect.Descriptor instead.
func (*DestroyMaterialReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{50}
}

func (x *DestroyMaterialReq) GetMaterialList() []*MaterilaInfo {
	if x != nil {
		return x.MaterialList
	}
	return nil
}

type DestroyMaterialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCountList []uint32 `protobuf:"varint,12,rep,packed,name=item_count_list,json=itemCountList,proto3" json:"item_count_list,omitempty"`
	ItemIdList    []uint32 `protobuf:"varint,13,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
	Retcode       int32    `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *DestroyMaterialRsp) Reset() {
	*x = DestroyMaterialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyMaterialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyMaterialRsp) ProtoMessage() {}

func (x *DestroyMaterialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyMaterialRsp.ProtoReflect.Descriptor instead.
func (*DestroyMaterialRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{51}
}

func (x *DestroyMaterialRsp) GetItemCountList() []uint32 {
	if x != nil {
		return x.ItemCountList
	}
	return nil
}

func (x *DestroyMaterialRsp) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

func (x *DestroyMaterialRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetEquipLockStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked        bool   `protobuf:"varint,15,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	TargetEquipGuid uint64 `protobuf:"varint,9,opt,name=target_equip_guid,json=targetEquipGuid,proto3" json:"target_equip_guid,omitempty"`
}

func (x *SetEquipLockStateReq) Reset() {
	*x = SetEquipLockStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEquipLockStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEquipLockStateReq) ProtoMessage() {}

func (x *SetEquipLockStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEquipLockStateReq.ProtoReflect.Descriptor instead.
func (*SetEquipLockStateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{52}
}

func (x *SetEquipLockStateReq) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *SetEquipLockStateReq) GetTargetEquipGuid() uint64 {
	if x != nil {
		return x.TargetEquipGuid
	}
	return 0
}

type SetEquipLockStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetEquipGuid uint64 `protobuf:"varint,14,opt,name=target_equip_guid,json=targetEquipGuid,proto3" json:"target_equip_guid,omitempty"`
	Retcode         int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsLocked        bool   `protobuf:"varint,10,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *SetEquipLockStateRsp) Reset() {
	*x = SetEquipLockStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEquipLockStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEquipLockStateRsp) ProtoMessage() {}

func (x *SetEquipLockStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEquipLockStateRsp.ProtoReflect.Descriptor instead.
func (*SetEquipLockStateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{53}
}

func (x *SetEquipLockStateRsp) GetTargetEquipGuid() uint64 {
	if x != nil {
		return x.TargetEquipGuid
	}
	return 0
}

func (x *SetEquipLockStateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetEquipLockStateRsp) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type CalcWeaponUpgradeReturnItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodWeaponGuidList []uint64     `protobuf:"varint,15,rep,packed,name=food_weapon_guid_list,json=foodWeaponGuidList,proto3" json:"food_weapon_guid_list,omitempty"`
	TargetWeaponGuid   uint64       `protobuf:"varint,12,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	ItemParamList      []*ItemParam `protobuf:"bytes,3,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
}

func (x *CalcWeaponUpgradeReturnItemsReq) Reset() {
	*x = CalcWeaponUpgradeReturnItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcWeaponUpgradeReturnItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcWeaponUpgradeReturnItemsReq) ProtoMessage() {}

func (x *CalcWeaponUpgradeReturnItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsReq.ProtoReflect.Descriptor instead.
func (*CalcWeaponUpgradeReturnItemsReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{54}
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetFoodWeaponGuidList() []uint64 {
	if x != nil {
		return x.FoodWeaponGuidList
	}
	return nil
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

type CalcWeaponUpgradeReturnItemsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemParamList    []*ItemParam `protobuf:"bytes,4,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	Retcode          int32        `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetWeaponGuid uint64       `protobuf:"varint,8,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *CalcWeaponUpgradeReturnItemsRsp) Reset() {
	*x = CalcWeaponUpgradeReturnItemsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcWeaponUpgradeReturnItemsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcWeaponUpgradeReturnItemsRsp) ProtoMessage() {}

func (x *CalcWeaponUpgradeReturnItemsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsRsp.ProtoReflect.Descriptor instead.
func (*CalcWeaponUpgradeReturnItemsRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{55}
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type ForgeDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeIdList   []uint32                   `protobuf:"varint,5,rep,packed,name=forge_id_list,json=forgeIdList,proto3" json:"forge_id_list,omitempty"`
	ForgeQueueMap map[uint32]*ForgeQueueData `protobuf:"bytes,8,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQueueNum   uint32                     `protobuf:"varint,14,opt,name=max_queue_num,json=maxQueueNum,proto3" json:"max_queue_num,omitempty"`
}

func (x *ForgeDataNotify) Reset() {
	*x = ForgeDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeDataNotify) ProtoMessage() {}

func (x *ForgeDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{56}
}

func (x *ForgeDataNotify) GetForgeIdList() []uint32 {
	if x != nil {
		return x.ForgeIdList
	}
	return nil
}

func (x *ForgeDataNotify) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeDataNotify) GetMaxQueueNum() uint32 {
	if x != nil {
		return x.MaxQueueNum
	}
	return 0
}

type ForgeFormulaDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked bool   `protobuf:"varint,15,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	ForgeId  uint32 `protobuf:"varint,13,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
}

func (x *ForgeFormulaDataNotify) Reset() {
	*x = ForgeFormulaDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeFormulaDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeFormulaDataNotify) ProtoMessage() {}

func (x *ForgeFormulaDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeFormulaDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeFormulaDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{57}
}

func (x *ForgeFormulaDataNotify) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *ForgeFormulaDataNotify) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

type CombineDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineIdList []uint32 `protobuf:"varint,5,rep,packed,name=combine_id_list,json=combineIdList,proto3" json:"combine_id_list,omitempty"`
}

func (x *CombineDataNotify) Reset() {
	*x = CombineDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineDataNotify) ProtoMessage() {}

func (x *CombineDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineDataNotify.ProtoReflect.Descriptor instead.
func (*CombineDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{58}
}

func (x *CombineDataNotify) GetCombineIdList() []uint32 {
	if x != nil {
		return x.CombineIdList
	}
	return nil
}

type CombineFormulaDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId uint32 `protobuf:"varint,6,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	IsLocked  bool   `protobuf:"varint,3,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *CombineFormulaDataNotify) Reset() {
	*x = CombineFormulaDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineFormulaDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineFormulaDataNotify) ProtoMessage() {}

func (x *CombineFormulaDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineFormulaDataNotify.ProtoReflect.Descriptor instead.
func (*CombineFormulaDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{59}
}

func (x *CombineFormulaDataNotify) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineFormulaDataNotify) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type ClosedItemNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIdList []uint32 `protobuf:"varint,8,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
}

func (x *ClosedItemNotify) Reset() {
	*x = ClosedItemNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosedItemNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosedItemNotify) ProtoMessage() {}

func (x *ClosedItemNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosedItemNotify.ProtoReflect.Descriptor instead.
func (*ClosedItemNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{60}
}

func (x *ClosedItemNotify) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

type CheckAddItemExceedLimitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDrop               bool                                                 `protobuf:"varint,5,opt,name=is_drop,json=isDrop,proto3" json:"is_drop,omitempty"`
	MsgType              CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3,enum=proto.CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType" json:"msg_type,omitempty"`
	ExceededItemTypeList []uint32                                             `protobuf:"varint,10,rep,packed,name=exceeded_item_type_list,json=exceededItemTypeList,proto3" json:"exceeded_item_type_list,omitempty"`
	ExceededItemList     []uint32                                             `protobuf:"varint,12,rep,packed,name=exceeded_item_list,json=exceededItemList,proto3" json:"exceeded_item_list,omitempty"`
	Reason               uint32                                               `protobuf:"varint,14,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CheckAddItemExceedLimitNotify) Reset() {
	*x = CheckAddItemExceedLimitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAddItemExceedLimitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAddItemExceedLimitNotify) ProtoMessage() {}

func (x *CheckAddItemExceedLimitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAddItemExceedLimitNotify.ProtoReflect.Descriptor instead.
func (*CheckAddItemExceedLimitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{61}
}

func (x *CheckAddItemExceedLimitNotify) GetIsDrop() bool {
	if x != nil {
		return x.IsDrop
	}
	return false
}

func (x *CheckAddItemExceedLimitNotify) GetMsgType() CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType {
	if x != nil {
		return x.MsgType
	}
	return CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DEFAULT
}

func (x *CheckAddItemExceedLimitNotify) GetExceededItemTypeList() []uint32 {
	if x != nil {
		return x.ExceededItemTypeList
	}
	return nil
}

func (x *CheckAddItemExceedLimitNotify) GetExceededItemList() []uint32 {
	if x != nil {
		return x.ExceededItemList
	}
	return nil
}

func (x *CheckAddItemExceedLimitNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type SetIsAutoUnlockSpecificEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAutoUnlockSpecificEquip bool `protobuf:"varint,14,opt,name=is_auto_unlock_specific_equip,json=isAutoUnlockSpecificEquip,proto3" json:"is_auto_unlock_specific_equip,omitempty"`
}

func (x *SetIsAutoUnlockSpecificEquipReq) Reset() {
	*x = SetIsAutoUnlockSpecificEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIsAutoUnlockSpecificEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIsAutoUnlockSpecificEquipReq) ProtoMessage() {}

func (x *SetIsAutoUnlockSpecificEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipReq.ProtoReflect.Descriptor instead.
func (*SetIsAutoUnlockSpecificEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{62}
}

func (x *SetIsAutoUnlockSpecificEquipReq) GetIsAutoUnlockSpecificEquip() bool {
	if x != nil {
		return x.IsAutoUnlockSpecificEquip
	}
	return false
}

type SetIsAutoUnlockSpecificEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetIsAutoUnlockSpecificEquipRsp) Reset() {
	*x = SetIsAutoUnlockSpecificEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIsAutoUnlockSpecificEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIsAutoUnlockSpecificEquipRsp) ProtoMessage() {}

func (x *SetIsAutoUnlockSpecificEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipRsp.ProtoReflect.Descriptor instead.
func (*SetIsAutoUnlockSpecificEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{63}
}

func (x *SetIsAutoUnlockSpecificEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryDecomposeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId    uint32   `protobuf:"varint,13,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	TargetCount uint32   `protobuf:"varint,9,opt,name=target_count,json=targetCount,proto3" json:"target_count,omitempty"`
	GuidList    []uint64 `protobuf:"varint,8,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
}

func (x *ReliquaryDecomposeReq) Reset() {
	*x = ReliquaryDecomposeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryDecomposeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryDecomposeReq) ProtoMessage() {}

func (x *ReliquaryDecomposeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryDecomposeReq.ProtoReflect.Descriptor instead.
func (*ReliquaryDecomposeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{64}
}

func (x *ReliquaryDecomposeReq) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ReliquaryDecomposeReq) GetTargetCount() uint32 {
	if x != nil {
		return x.TargetCount
	}
	return 0
}

func (x *ReliquaryDecomposeReq) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

type ReliquaryDecomposeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32    `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	GuidList []uint64 `protobuf:"varint,14,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
}

func (x *ReliquaryDecomposeRsp) Reset() {
	*x = ReliquaryDecomposeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryDecomposeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryDecomposeRsp) ProtoMessage() {}

func (x *ReliquaryDecomposeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryDecomposeRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryDecomposeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{65}
}

func (x *ReliquaryDecomposeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ReliquaryDecomposeRsp) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

type ReliquaryFilterStateSaveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReliquaryFilterStateMap map[uint32]uint32 `protobuf:"bytes,8,rep,name=reliquary_filter_state_map,json=reliquaryFilterStateMap,proto3" json:"reliquary_filter_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReliquaryFilterStateSaveNotify) Reset() {
	*x = ReliquaryFilterStateSaveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryFilterStateSaveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryFilterStateSaveNotify) ProtoMessage() {}

func (x *ReliquaryFilterStateSaveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryFilterStateSaveNotify.ProtoReflect.Descriptor instead.
func (*ReliquaryFilterStateSaveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{66}
}

func (x *ReliquaryFilterStateSaveNotify) GetReliquaryFilterStateMap() map[uint32]uint32 {
	if x != nil {
		return x.ReliquaryFilterStateMap
	}
	return nil
}

type ReliquaryFilterStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReliquaryFilterStateMap map[uint32]uint32 `protobuf:"bytes,5,rep,name=reliquary_filter_state_map,json=reliquaryFilterStateMap,proto3" json:"reliquary_filter_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReliquaryFilterStateNotify) Reset() {
	*x = ReliquaryFilterStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryFilterStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryFilterStateNotify) ProtoMessage() {}

func (x *ReliquaryFilterStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryFilterStateNotify.ProtoReflect.Descriptor instead.
func (*ReliquaryFilterStateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{67}
}

func (x *ReliquaryFilterStateNotify) GetReliquaryFilterStateMap() map[uint32]uint32 {
	if x != nil {
		return x.ReliquaryFilterStateMap
	}
	return nil
}

var File_cmd_cmd_item_proto protoreflect.FileDescriptor

var file_cmd_cmd_item_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x28, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb4, 0x02,
	0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x66, 0x75,
	0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x72, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x22, 0x9c, 0x03, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x48, 0x69,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x69, 0x64,
	0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x69, 0x64, 0x65, 0x6e, 0x12, 0x2c,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x1e,
	0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x1e, 0x6f,
	0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x69, 0x6e, 0x74, 0x52, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x70, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69,
	0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x70, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x78, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x44, 0x72, 0x6f,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x57, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x68, 0x0a, 0x0c, 0x57, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x0f,
	0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x22, 0x60, 0x0a, 0x0f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x77,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x66, 0x6f, 0x6f, 0x64, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47,
	0x75, 0x69, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x47, 0x75, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6c, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d,
	0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x15, 0x66, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x13, 0x52,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11,
	0x63, 0x75, 0x72, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x55,
	0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x53, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x22, 0x9d, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x14, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x13,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a,
	0x11, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x61, 0x66,
	0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x66, 0x66, 0x69,
	0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x61, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x1a, 0x40, 0x0a, 0x12, 0x41,
	0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x03,
	0x0a, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x13,
	0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73,
	0x70, 0x2e, 0x4f, 0x6c, 0x64, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x6f, 0x6c, 0x64, 0x41, 0x66, 0x66, 0x69,
	0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x77, 0x61, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x66, 0x66, 0x69,
	0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x75, 0x72, 0x41, 0x66, 0x66,
	0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x63, 0x75, 0x72, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61,
	0x70, 0x1a, 0x43, 0x0a, 0x15, 0x4f, 0x6c, 0x64, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x43, 0x75, 0x72, 0x41, 0x66, 0x66,
	0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x15,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4b, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x64,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x4d,
	0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x5d, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x48, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x71, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0xd2, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x45, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x97, 0x02, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75,
	0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x80, 0x02, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x56, 0x0a, 0x0f, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x57, 0x0a, 0x12, 0x46,
	0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x22, 0x85, 0x02, 0x0a,
	0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x1a, 0x57, 0x0a, 0x12, 0x46,
	0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29,
	0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0f, 0x6d,
	0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x6e,
	0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x16, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x13, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x5f,
	0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x75, 0x72, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x75, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52,
	0x65, 0x73, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa1,
	0x03, 0x0a, 0x1a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x5c, 0x0a,
	0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x68, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x52, 0x0a, 0x1b, 0x54, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a, 0x1b, 0x54, 0x61, 0x6b, 0x65, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x1c, 0x0a, 0x1a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x4c, 0x0a,
	0x15, 0x4d, 0x63, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x63,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x15, 0x4d,
	0x63, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x63, 0x6f, 0x69,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x6c, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x4e, 0x0a,
	0x12, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a,
	0x12, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x66, 0x6f, 0x6f, 0x64, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x85, 0x02, 0x0a, 0x0f, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x51, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4d, 0x61, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x1a, 0x57, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x50, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x56, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb8, 0x03,
	0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x56, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x45,
	0x78, 0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x35, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x14, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa8, 0x01,
	0x0a, 0x16, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x02, 0x12, 0x29, 0x0a,
	0x25, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x4e, 0x4f,
	0x4e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x22, 0x63, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x1d, 0x69,
	0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x71, 0x75, 0x69, 0x70, 0x22, 0x3b, 0x0a,
	0x1f, 0x53, 0x65, 0x74, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x15, 0x52, 0x65,
	0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x4e, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x44, 0x65, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xed, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x7f, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x72, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe5, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x7b, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x69,
	0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x17, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x76, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x2a, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x5f, 0x51, 0x55,
	0x45, 0x55, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x50, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x50,
	0x55, 0x54, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x5f, 0x51, 0x55,
	0x45, 0x55, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x50, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x10, 0x01,
	0x2a, 0x5b, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x42, 0x41, 0x47, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b,
	0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x53, 0x45, 0x45, 0x44, 0x10, 0x01, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76,
	0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_item_proto_rawDescOnce sync.Once
	file_cmd_cmd_item_proto_rawDescData = file_cmd_cmd_item_proto_rawDesc
)

func file_cmd_cmd_item_proto_rawDescGZIP() []byte {
	file_cmd_cmd_item_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_item_proto_rawDescData)
	})
	return file_cmd_cmd_item_proto_rawDescData
}

var file_cmd_cmd_item_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cmd_cmd_item_proto_msgTypes = make([]protoimpl.MessageInfo, 79)
var file_cmd_cmd_item_proto_goTypes = []interface{}{
	(ForgeQueueManipulateType)(0),                             // 0: proto.ForgeQueueManipulateType
	(MaterialDeleteReturnType)(0),                             // 1: proto.MaterialDeleteReturnType
	(CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType)(0), // 2: proto.CheckAddItemExceedLimitNotify.ItemExceedLimitMsgType
	(*PlayerStoreNotify)(nil),                                 // 3: proto.PlayerStoreNotify
	(*StoreWeightLimitNotify)(nil),                            // 4: proto.StoreWeightLimitNotify
	(*StoreItemChangeNotify)(nil),                             // 5: proto.StoreItemChangeNotify
	(*StoreItemDelNotify)(nil),                                // 6: proto.StoreItemDelNotify
	(*ItemHint)(nil),                                          // 7: proto.ItemHint
	(*ItemAddHintNotify)(nil),                                 // 8: proto.ItemAddHintNotify
	(*UseItemReq)(nil),                                        // 9: proto.UseItemReq
	(*UseItemRsp)(nil),                                        // 10: proto.UseItemRsp
	(*DropItemReq)(nil),                                       // 11: proto.DropItemReq
	(*DropItemRsp)(nil),                                       // 12: proto.DropItemRsp
	(*WearEquipReq)(nil),                                      // 13: proto.WearEquipReq
	(*WearEquipRsp)(nil),                                      // 14: proto.WearEquipRsp
	(*TakeoffEquipReq)(nil),                                   // 15: proto.TakeoffEquipReq
	(*TakeoffEquipRsp)(nil),                                   // 16: proto.TakeoffEquipRsp
	(*AvatarEquipChangeNotify)(nil),                           // 17: proto.AvatarEquipChangeNotify
	(*WeaponUpgradeReq)(nil),                                  // 18: proto.WeaponUpgradeReq
	(*WeaponUpgradeRsp)(nil),                                  // 19: proto.WeaponUpgradeRsp
	(*WeaponPromoteReq)(nil),                                  // 20: proto.WeaponPromoteReq
	(*WeaponPromoteRsp)(nil),                                  // 21: proto.WeaponPromoteRsp
	(*ReliquaryUpgradeReq)(nil),                               // 22: proto.ReliquaryUpgradeReq
	(*ReliquaryUpgradeRsp)(nil),                               // 23: proto.ReliquaryUpgradeRsp
	(*ReliquaryPromoteReq)(nil),                               // 24: proto.ReliquaryPromoteReq
	(*ReliquaryPromoteRsp)(nil),                               // 25: proto.ReliquaryPromoteRsp
	(*AvatarCardChangeReq)(nil),                               // 26: proto.AvatarCardChangeReq
	(*AvatarCardChangeRsp)(nil),                               // 27: proto.AvatarCardChangeRsp
	(*GrantRewardNotify)(nil),                                 // 28: proto.GrantRewardNotify
	(*WeaponAwakenReq)(nil),                                   // 29: proto.WeaponAwakenReq
	(*WeaponAwakenRsp)(nil),                                   // 30: proto.WeaponAwakenRsp
	(*ItemCdGroupTimeNotify)(nil),                             // 31: proto.ItemCdGroupTimeNotify
	(*DropHintNotify)(nil),                                    // 32: proto.DropHintNotify
	(*CombineReq)(nil),                                        // 33: proto.CombineReq
	(*CombineRsp)(nil),                                        // 34: proto.CombineRsp
	(*ForgeQueueData)(nil),                                    // 35: proto.ForgeQueueData
	(*ForgeQueueDataNotify)(nil),                              // 36: proto.ForgeQueueDataNotify
	(*ForgeGetQueueDataReq)(nil),                              // 37: proto.ForgeGetQueueDataReq
	(*ForgeGetQueueDataRsp)(nil),                              // 38: proto.ForgeGetQueueDataRsp
	(*ForgeStartReq)(nil),                                     // 39: proto.ForgeStartReq
	(*ForgeStartRsp)(nil),                                     // 40: proto.ForgeStartRsp
	(*ForgeQueueManipulateReq)(nil),                           // 41: proto.ForgeQueueManipulateReq
	(*ForgeQueueManipulateRsp)(nil),                           // 42: proto.ForgeQueueManipulateRsp
	(*ResinChangeNotify)(nil),                                 // 43: proto.ResinChangeNotify
	(*BuyResinReq)(nil),                                       // 44: proto.BuyResinReq
	(*BuyResinRsp)(nil),                                       // 45: proto.BuyResinRsp
	(*MaterialDeleteReturnNotify)(nil),                        // 46: proto.MaterialDeleteReturnNotify
	(*TakeMaterialDeleteReturnReq)(nil),                       // 47: proto.TakeMaterialDeleteReturnReq
	(*TakeMaterialDeleteReturnRsp)(nil),                       // 48: proto.TakeMaterialDeleteReturnRsp
	(*MaterialDeleteUpdateNotify)(nil),                        // 49: proto.MaterialDeleteUpdateNotify
	(*McoinExchangeHcoinReq)(nil),                             // 50: proto.McoinExchangeHcoinReq
	(*McoinExchangeHcoinRsp)(nil),                             // 51: proto.McoinExchangeHcoinRsp
	(*MaterilaInfo)(nil),                                      // 52: proto.MaterilaInfo
	(*DestroyMaterialReq)(nil),                                // 53: proto.DestroyMaterialReq
	(*DestroyMaterialRsp)(nil),                                // 54: proto.DestroyMaterialRsp
	(*SetEquipLockStateReq)(nil),                              // 55: proto.SetEquipLockStateReq
	(*SetEquipLockStateRsp)(nil),                              // 56: proto.SetEquipLockStateRsp
	(*CalcWeaponUpgradeReturnItemsReq)(nil),                   // 57: proto.CalcWeaponUpgradeReturnItemsReq
	(*CalcWeaponUpgradeReturnItemsRsp)(nil),                   // 58: proto.CalcWeaponUpgradeReturnItemsRsp
	(*ForgeDataNotify)(nil),                                   // 59: proto.ForgeDataNotify
	(*ForgeFormulaDataNotify)(nil),                            // 60: proto.ForgeFormulaDataNotify
	(*CombineDataNotify)(nil),                                 // 61: proto.CombineDataNotify
	(*CombineFormulaDataNotify)(nil),                          // 62: proto.CombineFormulaDataNotify
	(*ClosedItemNotify)(nil),                                  // 63: proto.ClosedItemNotify
	(*CheckAddItemExceedLimitNotify)(nil),                     // 64: proto.CheckAddItemExceedLimitNotify
	(*SetIsAutoUnlockSpecificEquipReq)(nil),                   // 65: proto.SetIsAutoUnlockSpecificEquipReq
	(*SetIsAutoUnlockSpecificEquipRsp)(nil),                   // 66: proto.SetIsAutoUnlockSpecificEquipRsp
	(*ReliquaryDecomposeReq)(nil),                             // 67: proto.ReliquaryDecomposeReq
	(*ReliquaryDecomposeRsp)(nil),                             // 68: proto.ReliquaryDecomposeRsp
	(*ReliquaryFilterStateSaveNotify)(nil),                    // 69: proto.ReliquaryFilterStateSaveNotify
	(*ReliquaryFilterStateNotify)(nil),                        // 70: proto.ReliquaryFilterStateNotify
	nil,                                                       // 71: proto.WeaponAwakenReq.AffixLevelMapEntry
	nil,                                                       // 72: proto.WeaponAwakenRsp.OldAffixLevelMapEntry
	nil,                                                       // 73: proto.WeaponAwakenRsp.CurAffixLevelMapEntry
	nil,                                                       // 74: proto.ItemCdGroupTimeNotify.ItemCdMapEntry
	nil,                                                       // 75: proto.ForgeQueueDataNotify.ForgeQueueMapEntry
	nil,                                                       // 76: proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry
	nil,                                                       // 77: proto.MaterialDeleteReturnNotify.ReturnItemMapEntry
	nil,                                                       // 78: proto.MaterialDeleteReturnNotify.DeleteMaterialMapEntry
	nil,                                                       // 79: proto.ForgeDataNotify.ForgeQueueMapEntry
	nil,                                                       // 80: proto.ReliquaryFilterStateSaveNotify.ReliquaryFilterStateMapEntry
	nil,                                                       // 81: proto.ReliquaryFilterStateNotify.ReliquaryFilterStateMapEntry
	(*Item)(nil),                                              // 82: proto.Item
	(StoreType)(0),                                            // 83: proto.StoreType
	(*Vector)(nil),                                            // 84: proto.Vector
	(*SceneReliquaryInfo)(nil),                                // 85: proto.SceneReliquaryInfo
	(*SceneWeaponInfo)(nil),                                   // 86: proto.SceneWeaponInfo
	(*ItemParam)(nil),                                         // 87: proto.ItemParam
	(*Reward)(nil),                                            // 88: proto.Reward
}
var file_cmd_cmd_item_proto_depIdxs = []int32{
	82, // 0: proto.PlayerStoreNotify.item_list:type_name -> proto.Item
	83, // 1: proto.PlayerStoreNotify.store_type:type_name -> proto.StoreType
	83, // 2: proto.StoreWeightLimitNotify.store_type:type_name -> proto.StoreType
	83, // 3: proto.StoreItemChangeNotify.store_type:type_name -> proto.StoreType
	82, // 4: proto.StoreItemChangeNotify.item_list:type_name -> proto.Item
	83, // 5: proto.StoreItemDelNotify.store_type:type_name -> proto.StoreType
	7,  // 6: proto.ItemAddHintNotify.item_list:type_name -> proto.ItemHint
	84, // 7: proto.ItemAddHintNotify.position:type_name -> proto.Vector
	7,  // 8: proto.ItemAddHintNotify.overflow_transformed_item_list:type_name -> proto.ItemHint
	84, // 9: proto.DropItemReq.pos:type_name -> proto.Vector
	83, // 10: proto.DropItemReq.store_type:type_name -> proto.StoreType
	83, // 11: proto.DropItemRsp.store_type:type_name -> proto.StoreType
	85, // 12: proto.AvatarEquipChangeNotify.reliquary:type_name -> proto.SceneReliquaryInfo
	86, // 13: proto.AvatarEquipChangeNotify.weapon:type_name -> proto.SceneWeaponInfo
	87, // 14: proto.WeaponUpgradeReq.item_param_list:type_name -> proto.ItemParam
	87, // 15: proto.WeaponUpgradeRsp.item_param_list:type_name -> proto.ItemParam
	87, // 16: proto.ReliquaryUpgradeReq.item_param_list:type_name -> proto.ItemParam
	88, // 17: proto.GrantRewardNotify.reward:type_name -> proto.Reward
	71, // 18: proto.WeaponAwakenReq.affix_level_map:type_name -> proto.WeaponAwakenReq.AffixLevelMapEntry
	72, // 19: proto.WeaponAwakenRsp.old_affix_level_map:type_name -> proto.WeaponAwakenRsp.OldAffixLevelMapEntry
	73, // 20: proto.WeaponAwakenRsp.cur_affix_level_map:type_name -> proto.WeaponAwakenRsp.CurAffixLevelMapEntry
	74, // 21: proto.ItemCdGroupTimeNotify.item_cd_map:type_name -> proto.ItemCdGroupTimeNotify.ItemCdMapEntry
	84, // 22: proto.DropHintNotify.position:type_name -> proto.Vector
	87, // 23: proto.CombineRsp.cost_item_list:type_name -> proto.ItemParam
	87, // 24: proto.CombineRsp.total_extra_item_list:type_name -> proto.ItemParam
	87, // 25: proto.CombineRsp.total_random_item_list:type_name -> proto.ItemParam
	87, // 26: proto.CombineRsp.result_item_list:type_name -> proto.ItemParam
	87, // 27: proto.CombineRsp.total_return_item_list:type_name -> proto.ItemParam
	75, // 28: proto.ForgeQueueDataNotify.forge_queue_map:type_name -> proto.ForgeQueueDataNotify.ForgeQueueMapEntry
	76, // 29: proto.ForgeGetQueueDataRsp.forge_queue_map:type_name -> proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry
	0,  // 30: proto.ForgeQueueManipulateReq.manipulate_type:type_name -> proto.ForgeQueueManipulateType
	0,  // 31: proto.ForgeQueueManipulateRsp.manipulate_type:type_name -> proto.ForgeQueueManipulateType
	87, // 32: proto.ForgeQueueManipulateRsp.extra_output_item_list:type_name -> proto.ItemParam
	87, // 33: proto.ForgeQueueManipulateRsp.return_item_list:type_name -> proto.ItemParam
	87, // 34: proto.ForgeQueueManipulateRsp.output_item_list:type_name -> proto.ItemParam
	77, // 35: proto.MaterialDeleteReturnNotify.return_item_map:type_name -> proto.MaterialDeleteReturnNotify.ReturnItemMapEntry
	1,  // 36: proto.MaterialDeleteReturnNotify.type:type_name -> proto.MaterialDeleteReturnType
	78, // 37: proto.MaterialDeleteReturnNotify.delete_material_map:type_name -> proto.MaterialDeleteReturnNotify.DeleteMaterialMapEntry
	1,  // 38: proto.TakeMaterialDeleteReturnReq.type:type_name -> proto.MaterialDeleteReturnType
	52, // 39: proto.DestroyMaterialReq.material_list:type_name -> proto.MaterilaInfo
	87, // 40: proto.CalcWeaponUpgradeReturnItemsReq.item_param_list:type_name -> proto.ItemParam
	87, // 41: proto.CalcWeaponUpgradeReturnItemsRsp.item_param_list:type_name -> proto.ItemParam
	79, // 42: proto.ForgeDataNotify.forge_queue_map:type_name -> proto.ForgeDataNotify.ForgeQueueMapEntry
	2,  // 43: proto.CheckAddItemExceedLimitNotify.msg_type:type_name -> proto.CheckAddItemExceedLimitNotify.ItemExceedLimitMsgType
	80, // 44: proto.ReliquaryFilterStateSaveNotify.reliquary_filter_state_map:type_name -> proto.ReliquaryFilterStateSaveNotify.ReliquaryFilterStateMapEntry
	81, // 45: proto.ReliquaryFilterStateNotify.reliquary_filter_state_map:type_name -> proto.ReliquaryFilterStateNotify.ReliquaryFilterStateMapEntry
	35, // 46: proto.ForgeQueueDataNotify.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	35, // 47: proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	35, // 48: proto.ForgeDataNotify.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_cmd_cmd_item_proto_init() }
func file_cmd_cmd_item_proto_init() {
	if File_cmd_cmd_item_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStoreNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreWeightLimitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreItemChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreItemDelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemHint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAddHintNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WearEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WearEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeoffEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeoffEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarEquipChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarCardChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarCardChangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRewardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponAwakenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponAwakenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCdGroupTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropHintNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeGetQueueDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeGetQueueDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeStartRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueManipulateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueManipulateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResinChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialDeleteReturnNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeMaterialDeleteReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeMaterialDeleteReturnRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialDeleteUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*McoinExchangeHcoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*McoinExchangeHcoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterilaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyMaterialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyMaterialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEquipLockStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEquipLockStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcWeaponUpgradeReturnItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcWeaponUpgradeReturnItemsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeFormulaDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineFormulaDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosedItemNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAddItemExceedLimitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIsAutoUnlockSpecificEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIsAutoUnlockSpecificEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryDecomposeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryDecomposeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryFilterStateSaveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryFilterStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_item_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   79,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_item_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_item_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_item_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_item_proto_msgTypes,
	}.Build()
	File_cmd_cmd_item_proto = out.File
	file_cmd_cmd_item_proto_rawDesc = nil
	file_cmd_cmd_item_proto_goTypes = nil
	file_cmd_cmd_item_proto_depIdxs = nil
}
