// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_item.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForgeQueueManipulateType int32

const (
	ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT ForgeQueueManipulateType = 0
	ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE     ForgeQueueManipulateType = 1
)

// Enum value maps for ForgeQueueManipulateType.
var (
	ForgeQueueManipulateType_name = map[int32]string{
		0: "FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT",
		1: "FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE",
	}
	ForgeQueueManipulateType_value = map[string]int32{
		"FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT": 0,
		"FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE":     1,
	}
)

func (x ForgeQueueManipulateType) Enum() *ForgeQueueManipulateType {
	p := new(ForgeQueueManipulateType)
	*p = x
	return p
}

func (x ForgeQueueManipulateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeQueueManipulateType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[0].Descriptor()
}

func (ForgeQueueManipulateType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[0]
}

func (x ForgeQueueManipulateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeQueueManipulateType.Descriptor instead.
func (ForgeQueueManipulateType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{0}
}

type MaterialDeleteReturnType int32

const (
	MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG  MaterialDeleteReturnType = 0
	MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_SEED MaterialDeleteReturnType = 1
)

// Enum value maps for MaterialDeleteReturnType.
var (
	MaterialDeleteReturnType_name = map[int32]string{
		0: "MATERIAL_DELETE_RETURN_BAG",
		1: "MATERIAL_DELETE_RETURN_SEED",
	}
	MaterialDeleteReturnType_value = map[string]int32{
		"MATERIAL_DELETE_RETURN_BAG":  0,
		"MATERIAL_DELETE_RETURN_SEED": 1,
	}
)

func (x MaterialDeleteReturnType) Enum() *MaterialDeleteReturnType {
	p := new(MaterialDeleteReturnType)
	*p = x
	return p
}

func (x MaterialDeleteReturnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialDeleteReturnType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[1].Descriptor()
}

func (MaterialDeleteReturnType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[1]
}

func (x MaterialDeleteReturnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialDeleteReturnType.Descriptor instead.
func (MaterialDeleteReturnType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{1}
}

type PlayerStoreNotify_CmdId int32

const (
	PlayerStoreNotify_NONE             PlayerStoreNotify_CmdId = 0
	PlayerStoreNotify_CMD_ID           PlayerStoreNotify_CmdId = 672
	PlayerStoreNotify_ENET_CHANNEL_ID  PlayerStoreNotify_CmdId = 0
	PlayerStoreNotify_ENET_IS_RELIABLE PlayerStoreNotify_CmdId = 1
)

// Enum value maps for PlayerStoreNotify_CmdId.
var (
	PlayerStoreNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		672: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PlayerStoreNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           672,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PlayerStoreNotify_CmdId) Enum() *PlayerStoreNotify_CmdId {
	p := new(PlayerStoreNotify_CmdId)
	*p = x
	return p
}

func (x PlayerStoreNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStoreNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[2].Descriptor()
}

func (PlayerStoreNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[2]
}

func (x PlayerStoreNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStoreNotify_CmdId.Descriptor instead.
func (PlayerStoreNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{0, 0}
}

type StoreWeightLimitNotify_CmdId int32

const (
	StoreWeightLimitNotify_NONE             StoreWeightLimitNotify_CmdId = 0
	StoreWeightLimitNotify_CMD_ID           StoreWeightLimitNotify_CmdId = 698
	StoreWeightLimitNotify_ENET_CHANNEL_ID  StoreWeightLimitNotify_CmdId = 0
	StoreWeightLimitNotify_ENET_IS_RELIABLE StoreWeightLimitNotify_CmdId = 1
)

// Enum value maps for StoreWeightLimitNotify_CmdId.
var (
	StoreWeightLimitNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		698: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	StoreWeightLimitNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           698,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x StoreWeightLimitNotify_CmdId) Enum() *StoreWeightLimitNotify_CmdId {
	p := new(StoreWeightLimitNotify_CmdId)
	*p = x
	return p
}

func (x StoreWeightLimitNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreWeightLimitNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[3].Descriptor()
}

func (StoreWeightLimitNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[3]
}

func (x StoreWeightLimitNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreWeightLimitNotify_CmdId.Descriptor instead.
func (StoreWeightLimitNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{1, 0}
}

type StoreItemChangeNotify_CmdId int32

const (
	StoreItemChangeNotify_NONE             StoreItemChangeNotify_CmdId = 0
	StoreItemChangeNotify_CMD_ID           StoreItemChangeNotify_CmdId = 612
	StoreItemChangeNotify_ENET_CHANNEL_ID  StoreItemChangeNotify_CmdId = 0
	StoreItemChangeNotify_ENET_IS_RELIABLE StoreItemChangeNotify_CmdId = 1
)

// Enum value maps for StoreItemChangeNotify_CmdId.
var (
	StoreItemChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		612: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	StoreItemChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           612,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x StoreItemChangeNotify_CmdId) Enum() *StoreItemChangeNotify_CmdId {
	p := new(StoreItemChangeNotify_CmdId)
	*p = x
	return p
}

func (x StoreItemChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreItemChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[4].Descriptor()
}

func (StoreItemChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[4]
}

func (x StoreItemChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreItemChangeNotify_CmdId.Descriptor instead.
func (StoreItemChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{2, 0}
}

type StoreItemDelNotify_CmdId int32

const (
	StoreItemDelNotify_NONE             StoreItemDelNotify_CmdId = 0
	StoreItemDelNotify_CMD_ID           StoreItemDelNotify_CmdId = 635
	StoreItemDelNotify_ENET_CHANNEL_ID  StoreItemDelNotify_CmdId = 0
	StoreItemDelNotify_ENET_IS_RELIABLE StoreItemDelNotify_CmdId = 1
)

// Enum value maps for StoreItemDelNotify_CmdId.
var (
	StoreItemDelNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		635: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	StoreItemDelNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           635,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x StoreItemDelNotify_CmdId) Enum() *StoreItemDelNotify_CmdId {
	p := new(StoreItemDelNotify_CmdId)
	*p = x
	return p
}

func (x StoreItemDelNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreItemDelNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[5].Descriptor()
}

func (StoreItemDelNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[5]
}

func (x StoreItemDelNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreItemDelNotify_CmdId.Descriptor instead.
func (StoreItemDelNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{3, 0}
}

type ItemAddHintNotify_CmdId int32

const (
	ItemAddHintNotify_NONE             ItemAddHintNotify_CmdId = 0
	ItemAddHintNotify_CMD_ID           ItemAddHintNotify_CmdId = 607
	ItemAddHintNotify_ENET_CHANNEL_ID  ItemAddHintNotify_CmdId = 0
	ItemAddHintNotify_ENET_IS_RELIABLE ItemAddHintNotify_CmdId = 1
)

// Enum value maps for ItemAddHintNotify_CmdId.
var (
	ItemAddHintNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		607: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ItemAddHintNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           607,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ItemAddHintNotify_CmdId) Enum() *ItemAddHintNotify_CmdId {
	p := new(ItemAddHintNotify_CmdId)
	*p = x
	return p
}

func (x ItemAddHintNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemAddHintNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[6].Descriptor()
}

func (ItemAddHintNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[6]
}

func (x ItemAddHintNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemAddHintNotify_CmdId.Descriptor instead.
func (ItemAddHintNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{5, 0}
}

type UseItemReq_CmdId int32

const (
	UseItemReq_NONE             UseItemReq_CmdId = 0
	UseItemReq_CMD_ID           UseItemReq_CmdId = 690
	UseItemReq_ENET_CHANNEL_ID  UseItemReq_CmdId = 0
	UseItemReq_ENET_IS_RELIABLE UseItemReq_CmdId = 1
	UseItemReq_IS_ALLOW_CLIENT  UseItemReq_CmdId = 1
)

// Enum value maps for UseItemReq_CmdId.
var (
	UseItemReq_CmdId_name = map[int32]string{
		0:   "NONE",
		690: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UseItemReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           690,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UseItemReq_CmdId) Enum() *UseItemReq_CmdId {
	p := new(UseItemReq_CmdId)
	*p = x
	return p
}

func (x UseItemReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseItemReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[7].Descriptor()
}

func (UseItemReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[7]
}

func (x UseItemReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseItemReq_CmdId.Descriptor instead.
func (UseItemReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{6, 0}
}

type UseItemRsp_CmdId int32

const (
	UseItemRsp_NONE             UseItemRsp_CmdId = 0
	UseItemRsp_CMD_ID           UseItemRsp_CmdId = 673
	UseItemRsp_ENET_CHANNEL_ID  UseItemRsp_CmdId = 0
	UseItemRsp_ENET_IS_RELIABLE UseItemRsp_CmdId = 1
)

// Enum value maps for UseItemRsp_CmdId.
var (
	UseItemRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		673: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UseItemRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           673,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UseItemRsp_CmdId) Enum() *UseItemRsp_CmdId {
	p := new(UseItemRsp_CmdId)
	*p = x
	return p
}

func (x UseItemRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseItemRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[8].Descriptor()
}

func (UseItemRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[8]
}

func (x UseItemRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseItemRsp_CmdId.Descriptor instead.
func (UseItemRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{7, 0}
}

type DropItemReq_CmdId int32

const (
	DropItemReq_NONE             DropItemReq_CmdId = 0
	DropItemReq_CMD_ID           DropItemReq_CmdId = 699
	DropItemReq_ENET_CHANNEL_ID  DropItemReq_CmdId = 0
	DropItemReq_ENET_IS_RELIABLE DropItemReq_CmdId = 1
	DropItemReq_IS_ALLOW_CLIENT  DropItemReq_CmdId = 1
)

// Enum value maps for DropItemReq_CmdId.
var (
	DropItemReq_CmdId_name = map[int32]string{
		0:   "NONE",
		699: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DropItemReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           699,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DropItemReq_CmdId) Enum() *DropItemReq_CmdId {
	p := new(DropItemReq_CmdId)
	*p = x
	return p
}

func (x DropItemReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropItemReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[9].Descriptor()
}

func (DropItemReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[9]
}

func (x DropItemReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropItemReq_CmdId.Descriptor instead.
func (DropItemReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{8, 0}
}

type DropItemRsp_CmdId int32

const (
	DropItemRsp_NONE             DropItemRsp_CmdId = 0
	DropItemRsp_CMD_ID           DropItemRsp_CmdId = 631
	DropItemRsp_ENET_CHANNEL_ID  DropItemRsp_CmdId = 0
	DropItemRsp_ENET_IS_RELIABLE DropItemRsp_CmdId = 1
)

// Enum value maps for DropItemRsp_CmdId.
var (
	DropItemRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		631: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DropItemRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           631,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DropItemRsp_CmdId) Enum() *DropItemRsp_CmdId {
	p := new(DropItemRsp_CmdId)
	*p = x
	return p
}

func (x DropItemRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropItemRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[10].Descriptor()
}

func (DropItemRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[10]
}

func (x DropItemRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropItemRsp_CmdId.Descriptor instead.
func (DropItemRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{9, 0}
}

type WearEquipReq_CmdId int32

const (
	WearEquipReq_NONE             WearEquipReq_CmdId = 0
	WearEquipReq_CMD_ID           WearEquipReq_CmdId = 697
	WearEquipReq_ENET_CHANNEL_ID  WearEquipReq_CmdId = 0
	WearEquipReq_ENET_IS_RELIABLE WearEquipReq_CmdId = 1
	WearEquipReq_IS_ALLOW_CLIENT  WearEquipReq_CmdId = 1
)

// Enum value maps for WearEquipReq_CmdId.
var (
	WearEquipReq_CmdId_name = map[int32]string{
		0:   "NONE",
		697: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WearEquipReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           697,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WearEquipReq_CmdId) Enum() *WearEquipReq_CmdId {
	p := new(WearEquipReq_CmdId)
	*p = x
	return p
}

func (x WearEquipReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WearEquipReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[11].Descriptor()
}

func (WearEquipReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[11]
}

func (x WearEquipReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WearEquipReq_CmdId.Descriptor instead.
func (WearEquipReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{10, 0}
}

type WearEquipRsp_CmdId int32

const (
	WearEquipRsp_NONE             WearEquipRsp_CmdId = 0
	WearEquipRsp_CMD_ID           WearEquipRsp_CmdId = 681
	WearEquipRsp_ENET_CHANNEL_ID  WearEquipRsp_CmdId = 0
	WearEquipRsp_ENET_IS_RELIABLE WearEquipRsp_CmdId = 1
)

// Enum value maps for WearEquipRsp_CmdId.
var (
	WearEquipRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		681: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WearEquipRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           681,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WearEquipRsp_CmdId) Enum() *WearEquipRsp_CmdId {
	p := new(WearEquipRsp_CmdId)
	*p = x
	return p
}

func (x WearEquipRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WearEquipRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[12].Descriptor()
}

func (WearEquipRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[12]
}

func (x WearEquipRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WearEquipRsp_CmdId.Descriptor instead.
func (WearEquipRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{11, 0}
}

type TakeoffEquipReq_CmdId int32

const (
	TakeoffEquipReq_NONE             TakeoffEquipReq_CmdId = 0
	TakeoffEquipReq_CMD_ID           TakeoffEquipReq_CmdId = 605
	TakeoffEquipReq_ENET_CHANNEL_ID  TakeoffEquipReq_CmdId = 0
	TakeoffEquipReq_ENET_IS_RELIABLE TakeoffEquipReq_CmdId = 1
	TakeoffEquipReq_IS_ALLOW_CLIENT  TakeoffEquipReq_CmdId = 1
)

// Enum value maps for TakeoffEquipReq_CmdId.
var (
	TakeoffEquipReq_CmdId_name = map[int32]string{
		0:   "NONE",
		605: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	TakeoffEquipReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           605,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x TakeoffEquipReq_CmdId) Enum() *TakeoffEquipReq_CmdId {
	p := new(TakeoffEquipReq_CmdId)
	*p = x
	return p
}

func (x TakeoffEquipReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeoffEquipReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[13].Descriptor()
}

func (TakeoffEquipReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[13]
}

func (x TakeoffEquipReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeoffEquipReq_CmdId.Descriptor instead.
func (TakeoffEquipReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{12, 0}
}

type TakeoffEquipRsp_CmdId int32

const (
	TakeoffEquipRsp_NONE             TakeoffEquipRsp_CmdId = 0
	TakeoffEquipRsp_CMD_ID           TakeoffEquipRsp_CmdId = 682
	TakeoffEquipRsp_ENET_CHANNEL_ID  TakeoffEquipRsp_CmdId = 0
	TakeoffEquipRsp_ENET_IS_RELIABLE TakeoffEquipRsp_CmdId = 1
)

// Enum value maps for TakeoffEquipRsp_CmdId.
var (
	TakeoffEquipRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		682: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	TakeoffEquipRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           682,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x TakeoffEquipRsp_CmdId) Enum() *TakeoffEquipRsp_CmdId {
	p := new(TakeoffEquipRsp_CmdId)
	*p = x
	return p
}

func (x TakeoffEquipRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeoffEquipRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[14].Descriptor()
}

func (TakeoffEquipRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[14]
}

func (x TakeoffEquipRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeoffEquipRsp_CmdId.Descriptor instead.
func (TakeoffEquipRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{13, 0}
}

type AvatarEquipChangeNotify_CmdId int32

const (
	AvatarEquipChangeNotify_NONE             AvatarEquipChangeNotify_CmdId = 0
	AvatarEquipChangeNotify_CMD_ID           AvatarEquipChangeNotify_CmdId = 647
	AvatarEquipChangeNotify_ENET_CHANNEL_ID  AvatarEquipChangeNotify_CmdId = 0
	AvatarEquipChangeNotify_ENET_IS_RELIABLE AvatarEquipChangeNotify_CmdId = 1
	AvatarEquipChangeNotify_IS_ALLOW_CLIENT  AvatarEquipChangeNotify_CmdId = 1
)

// Enum value maps for AvatarEquipChangeNotify_CmdId.
var (
	AvatarEquipChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		647: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarEquipChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           647,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarEquipChangeNotify_CmdId) Enum() *AvatarEquipChangeNotify_CmdId {
	p := new(AvatarEquipChangeNotify_CmdId)
	*p = x
	return p
}

func (x AvatarEquipChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarEquipChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[15].Descriptor()
}

func (AvatarEquipChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[15]
}

func (x AvatarEquipChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarEquipChangeNotify_CmdId.Descriptor instead.
func (AvatarEquipChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{14, 0}
}

type WeaponUpgradeReq_CmdId int32

const (
	WeaponUpgradeReq_NONE             WeaponUpgradeReq_CmdId = 0
	WeaponUpgradeReq_CMD_ID           WeaponUpgradeReq_CmdId = 639
	WeaponUpgradeReq_ENET_CHANNEL_ID  WeaponUpgradeReq_CmdId = 0
	WeaponUpgradeReq_ENET_IS_RELIABLE WeaponUpgradeReq_CmdId = 1
	WeaponUpgradeReq_IS_ALLOW_CLIENT  WeaponUpgradeReq_CmdId = 1
)

// Enum value maps for WeaponUpgradeReq_CmdId.
var (
	WeaponUpgradeReq_CmdId_name = map[int32]string{
		0:   "NONE",
		639: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WeaponUpgradeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           639,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WeaponUpgradeReq_CmdId) Enum() *WeaponUpgradeReq_CmdId {
	p := new(WeaponUpgradeReq_CmdId)
	*p = x
	return p
}

func (x WeaponUpgradeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponUpgradeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[16].Descriptor()
}

func (WeaponUpgradeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[16]
}

func (x WeaponUpgradeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponUpgradeReq_CmdId.Descriptor instead.
func (WeaponUpgradeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{15, 0}
}

type WeaponUpgradeRsp_CmdId int32

const (
	WeaponUpgradeRsp_NONE             WeaponUpgradeRsp_CmdId = 0
	WeaponUpgradeRsp_CMD_ID           WeaponUpgradeRsp_CmdId = 653
	WeaponUpgradeRsp_ENET_CHANNEL_ID  WeaponUpgradeRsp_CmdId = 0
	WeaponUpgradeRsp_ENET_IS_RELIABLE WeaponUpgradeRsp_CmdId = 1
)

// Enum value maps for WeaponUpgradeRsp_CmdId.
var (
	WeaponUpgradeRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		653: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WeaponUpgradeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           653,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WeaponUpgradeRsp_CmdId) Enum() *WeaponUpgradeRsp_CmdId {
	p := new(WeaponUpgradeRsp_CmdId)
	*p = x
	return p
}

func (x WeaponUpgradeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponUpgradeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[17].Descriptor()
}

func (WeaponUpgradeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[17]
}

func (x WeaponUpgradeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponUpgradeRsp_CmdId.Descriptor instead.
func (WeaponUpgradeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{16, 0}
}

type WeaponPromoteReq_CmdId int32

const (
	WeaponPromoteReq_NONE             WeaponPromoteReq_CmdId = 0
	WeaponPromoteReq_CMD_ID           WeaponPromoteReq_CmdId = 622
	WeaponPromoteReq_ENET_CHANNEL_ID  WeaponPromoteReq_CmdId = 0
	WeaponPromoteReq_ENET_IS_RELIABLE WeaponPromoteReq_CmdId = 1
	WeaponPromoteReq_IS_ALLOW_CLIENT  WeaponPromoteReq_CmdId = 1
)

// Enum value maps for WeaponPromoteReq_CmdId.
var (
	WeaponPromoteReq_CmdId_name = map[int32]string{
		0:   "NONE",
		622: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WeaponPromoteReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           622,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WeaponPromoteReq_CmdId) Enum() *WeaponPromoteReq_CmdId {
	p := new(WeaponPromoteReq_CmdId)
	*p = x
	return p
}

func (x WeaponPromoteReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponPromoteReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[18].Descriptor()
}

func (WeaponPromoteReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[18]
}

func (x WeaponPromoteReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponPromoteReq_CmdId.Descriptor instead.
func (WeaponPromoteReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{17, 0}
}

type WeaponPromoteRsp_CmdId int32

const (
	WeaponPromoteRsp_NONE             WeaponPromoteRsp_CmdId = 0
	WeaponPromoteRsp_CMD_ID           WeaponPromoteRsp_CmdId = 665
	WeaponPromoteRsp_ENET_CHANNEL_ID  WeaponPromoteRsp_CmdId = 0
	WeaponPromoteRsp_ENET_IS_RELIABLE WeaponPromoteRsp_CmdId = 1
)

// Enum value maps for WeaponPromoteRsp_CmdId.
var (
	WeaponPromoteRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		665: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WeaponPromoteRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           665,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WeaponPromoteRsp_CmdId) Enum() *WeaponPromoteRsp_CmdId {
	p := new(WeaponPromoteRsp_CmdId)
	*p = x
	return p
}

func (x WeaponPromoteRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponPromoteRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[19].Descriptor()
}

func (WeaponPromoteRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[19]
}

func (x WeaponPromoteRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponPromoteRsp_CmdId.Descriptor instead.
func (WeaponPromoteRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{18, 0}
}

type ReliquaryUpgradeReq_CmdId int32

const (
	ReliquaryUpgradeReq_NONE             ReliquaryUpgradeReq_CmdId = 0
	ReliquaryUpgradeReq_CMD_ID           ReliquaryUpgradeReq_CmdId = 604
	ReliquaryUpgradeReq_ENET_CHANNEL_ID  ReliquaryUpgradeReq_CmdId = 0
	ReliquaryUpgradeReq_ENET_IS_RELIABLE ReliquaryUpgradeReq_CmdId = 1
	ReliquaryUpgradeReq_IS_ALLOW_CLIENT  ReliquaryUpgradeReq_CmdId = 1
)

// Enum value maps for ReliquaryUpgradeReq_CmdId.
var (
	ReliquaryUpgradeReq_CmdId_name = map[int32]string{
		0:   "NONE",
		604: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReliquaryUpgradeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           604,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReliquaryUpgradeReq_CmdId) Enum() *ReliquaryUpgradeReq_CmdId {
	p := new(ReliquaryUpgradeReq_CmdId)
	*p = x
	return p
}

func (x ReliquaryUpgradeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryUpgradeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[20].Descriptor()
}

func (ReliquaryUpgradeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[20]
}

func (x ReliquaryUpgradeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryUpgradeReq_CmdId.Descriptor instead.
func (ReliquaryUpgradeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{19, 0}
}

type ReliquaryUpgradeRsp_CmdId int32

const (
	ReliquaryUpgradeRsp_NONE             ReliquaryUpgradeRsp_CmdId = 0
	ReliquaryUpgradeRsp_CMD_ID           ReliquaryUpgradeRsp_CmdId = 693
	ReliquaryUpgradeRsp_ENET_CHANNEL_ID  ReliquaryUpgradeRsp_CmdId = 0
	ReliquaryUpgradeRsp_ENET_IS_RELIABLE ReliquaryUpgradeRsp_CmdId = 1
)

// Enum value maps for ReliquaryUpgradeRsp_CmdId.
var (
	ReliquaryUpgradeRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		693: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ReliquaryUpgradeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           693,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ReliquaryUpgradeRsp_CmdId) Enum() *ReliquaryUpgradeRsp_CmdId {
	p := new(ReliquaryUpgradeRsp_CmdId)
	*p = x
	return p
}

func (x ReliquaryUpgradeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryUpgradeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[21].Descriptor()
}

func (ReliquaryUpgradeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[21]
}

func (x ReliquaryUpgradeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryUpgradeRsp_CmdId.Descriptor instead.
func (ReliquaryUpgradeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{20, 0}
}

type ReliquaryPromoteReq_CmdId int32

const (
	ReliquaryPromoteReq_NONE             ReliquaryPromoteReq_CmdId = 0
	ReliquaryPromoteReq_CMD_ID           ReliquaryPromoteReq_CmdId = 627
	ReliquaryPromoteReq_ENET_CHANNEL_ID  ReliquaryPromoteReq_CmdId = 0
	ReliquaryPromoteReq_ENET_IS_RELIABLE ReliquaryPromoteReq_CmdId = 1
	ReliquaryPromoteReq_IS_ALLOW_CLIENT  ReliquaryPromoteReq_CmdId = 1
)

// Enum value maps for ReliquaryPromoteReq_CmdId.
var (
	ReliquaryPromoteReq_CmdId_name = map[int32]string{
		0:   "NONE",
		627: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReliquaryPromoteReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           627,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReliquaryPromoteReq_CmdId) Enum() *ReliquaryPromoteReq_CmdId {
	p := new(ReliquaryPromoteReq_CmdId)
	*p = x
	return p
}

func (x ReliquaryPromoteReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryPromoteReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[22].Descriptor()
}

func (ReliquaryPromoteReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[22]
}

func (x ReliquaryPromoteReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryPromoteReq_CmdId.Descriptor instead.
func (ReliquaryPromoteReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{21, 0}
}

type ReliquaryPromoteRsp_CmdId int32

const (
	ReliquaryPromoteRsp_NONE             ReliquaryPromoteRsp_CmdId = 0
	ReliquaryPromoteRsp_CMD_ID           ReliquaryPromoteRsp_CmdId = 694
	ReliquaryPromoteRsp_ENET_CHANNEL_ID  ReliquaryPromoteRsp_CmdId = 0
	ReliquaryPromoteRsp_ENET_IS_RELIABLE ReliquaryPromoteRsp_CmdId = 1
)

// Enum value maps for ReliquaryPromoteRsp_CmdId.
var (
	ReliquaryPromoteRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		694: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ReliquaryPromoteRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           694,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ReliquaryPromoteRsp_CmdId) Enum() *ReliquaryPromoteRsp_CmdId {
	p := new(ReliquaryPromoteRsp_CmdId)
	*p = x
	return p
}

func (x ReliquaryPromoteRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryPromoteRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[23].Descriptor()
}

func (ReliquaryPromoteRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[23]
}

func (x ReliquaryPromoteRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryPromoteRsp_CmdId.Descriptor instead.
func (ReliquaryPromoteRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{22, 0}
}

type AvatarCardChangeReq_CmdId int32

const (
	AvatarCardChangeReq_NONE             AvatarCardChangeReq_CmdId = 0
	AvatarCardChangeReq_CMD_ID           AvatarCardChangeReq_CmdId = 688
	AvatarCardChangeReq_ENET_CHANNEL_ID  AvatarCardChangeReq_CmdId = 0
	AvatarCardChangeReq_ENET_IS_RELIABLE AvatarCardChangeReq_CmdId = 1
	AvatarCardChangeReq_IS_ALLOW_CLIENT  AvatarCardChangeReq_CmdId = 1
)

// Enum value maps for AvatarCardChangeReq_CmdId.
var (
	AvatarCardChangeReq_CmdId_name = map[int32]string{
		0:   "NONE",
		688: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarCardChangeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           688,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarCardChangeReq_CmdId) Enum() *AvatarCardChangeReq_CmdId {
	p := new(AvatarCardChangeReq_CmdId)
	*p = x
	return p
}

func (x AvatarCardChangeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarCardChangeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[24].Descriptor()
}

func (AvatarCardChangeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[24]
}

func (x AvatarCardChangeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarCardChangeReq_CmdId.Descriptor instead.
func (AvatarCardChangeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{23, 0}
}

type AvatarCardChangeRsp_CmdId int32

const (
	AvatarCardChangeRsp_NONE             AvatarCardChangeRsp_CmdId = 0
	AvatarCardChangeRsp_CMD_ID           AvatarCardChangeRsp_CmdId = 626
	AvatarCardChangeRsp_ENET_CHANNEL_ID  AvatarCardChangeRsp_CmdId = 0
	AvatarCardChangeRsp_ENET_IS_RELIABLE AvatarCardChangeRsp_CmdId = 1
)

// Enum value maps for AvatarCardChangeRsp_CmdId.
var (
	AvatarCardChangeRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		626: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarCardChangeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           626,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarCardChangeRsp_CmdId) Enum() *AvatarCardChangeRsp_CmdId {
	p := new(AvatarCardChangeRsp_CmdId)
	*p = x
	return p
}

func (x AvatarCardChangeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarCardChangeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[25].Descriptor()
}

func (AvatarCardChangeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[25]
}

func (x AvatarCardChangeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarCardChangeRsp_CmdId.Descriptor instead.
func (AvatarCardChangeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{24, 0}
}

type GrantRewardNotify_CmdId int32

const (
	GrantRewardNotify_NONE             GrantRewardNotify_CmdId = 0
	GrantRewardNotify_CMD_ID           GrantRewardNotify_CmdId = 663
	GrantRewardNotify_ENET_CHANNEL_ID  GrantRewardNotify_CmdId = 0
	GrantRewardNotify_ENET_IS_RELIABLE GrantRewardNotify_CmdId = 1
)

// Enum value maps for GrantRewardNotify_CmdId.
var (
	GrantRewardNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		663: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GrantRewardNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           663,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GrantRewardNotify_CmdId) Enum() *GrantRewardNotify_CmdId {
	p := new(GrantRewardNotify_CmdId)
	*p = x
	return p
}

func (x GrantRewardNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrantRewardNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[26].Descriptor()
}

func (GrantRewardNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[26]
}

func (x GrantRewardNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrantRewardNotify_CmdId.Descriptor instead.
func (GrantRewardNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{25, 0}
}

type WeaponAwakenReq_CmdId int32

const (
	WeaponAwakenReq_NONE             WeaponAwakenReq_CmdId = 0
	WeaponAwakenReq_CMD_ID           WeaponAwakenReq_CmdId = 695
	WeaponAwakenReq_ENET_CHANNEL_ID  WeaponAwakenReq_CmdId = 0
	WeaponAwakenReq_ENET_IS_RELIABLE WeaponAwakenReq_CmdId = 1
	WeaponAwakenReq_IS_ALLOW_CLIENT  WeaponAwakenReq_CmdId = 1
)

// Enum value maps for WeaponAwakenReq_CmdId.
var (
	WeaponAwakenReq_CmdId_name = map[int32]string{
		0:   "NONE",
		695: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WeaponAwakenReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           695,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WeaponAwakenReq_CmdId) Enum() *WeaponAwakenReq_CmdId {
	p := new(WeaponAwakenReq_CmdId)
	*p = x
	return p
}

func (x WeaponAwakenReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponAwakenReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[27].Descriptor()
}

func (WeaponAwakenReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[27]
}

func (x WeaponAwakenReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponAwakenReq_CmdId.Descriptor instead.
func (WeaponAwakenReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{26, 0}
}

type WeaponAwakenRsp_CmdId int32

const (
	WeaponAwakenRsp_NONE             WeaponAwakenRsp_CmdId = 0
	WeaponAwakenRsp_CMD_ID           WeaponAwakenRsp_CmdId = 606
	WeaponAwakenRsp_ENET_CHANNEL_ID  WeaponAwakenRsp_CmdId = 0
	WeaponAwakenRsp_ENET_IS_RELIABLE WeaponAwakenRsp_CmdId = 1
)

// Enum value maps for WeaponAwakenRsp_CmdId.
var (
	WeaponAwakenRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		606: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WeaponAwakenRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           606,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WeaponAwakenRsp_CmdId) Enum() *WeaponAwakenRsp_CmdId {
	p := new(WeaponAwakenRsp_CmdId)
	*p = x
	return p
}

func (x WeaponAwakenRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponAwakenRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[28].Descriptor()
}

func (WeaponAwakenRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[28]
}

func (x WeaponAwakenRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeaponAwakenRsp_CmdId.Descriptor instead.
func (WeaponAwakenRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{27, 0}
}

type ItemCdGroupTimeNotify_CmdId int32

const (
	ItemCdGroupTimeNotify_NONE             ItemCdGroupTimeNotify_CmdId = 0
	ItemCdGroupTimeNotify_CMD_ID           ItemCdGroupTimeNotify_CmdId = 634
	ItemCdGroupTimeNotify_ENET_CHANNEL_ID  ItemCdGroupTimeNotify_CmdId = 0
	ItemCdGroupTimeNotify_ENET_IS_RELIABLE ItemCdGroupTimeNotify_CmdId = 1
)

// Enum value maps for ItemCdGroupTimeNotify_CmdId.
var (
	ItemCdGroupTimeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		634: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ItemCdGroupTimeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           634,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ItemCdGroupTimeNotify_CmdId) Enum() *ItemCdGroupTimeNotify_CmdId {
	p := new(ItemCdGroupTimeNotify_CmdId)
	*p = x
	return p
}

func (x ItemCdGroupTimeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemCdGroupTimeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[29].Descriptor()
}

func (ItemCdGroupTimeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[29]
}

func (x ItemCdGroupTimeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemCdGroupTimeNotify_CmdId.Descriptor instead.
func (ItemCdGroupTimeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{28, 0}
}

type DropHintNotify_CmdId int32

const (
	DropHintNotify_NONE             DropHintNotify_CmdId = 0
	DropHintNotify_CMD_ID           DropHintNotify_CmdId = 650
	DropHintNotify_ENET_CHANNEL_ID  DropHintNotify_CmdId = 0
	DropHintNotify_ENET_IS_RELIABLE DropHintNotify_CmdId = 1
)

// Enum value maps for DropHintNotify_CmdId.
var (
	DropHintNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		650: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DropHintNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           650,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DropHintNotify_CmdId) Enum() *DropHintNotify_CmdId {
	p := new(DropHintNotify_CmdId)
	*p = x
	return p
}

func (x DropHintNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropHintNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[30].Descriptor()
}

func (DropHintNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[30]
}

func (x DropHintNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropHintNotify_CmdId.Descriptor instead.
func (DropHintNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{29, 0}
}

type CombineReq_CmdId int32

const (
	CombineReq_NONE             CombineReq_CmdId = 0
	CombineReq_CMD_ID           CombineReq_CmdId = 643
	CombineReq_ENET_CHANNEL_ID  CombineReq_CmdId = 0
	CombineReq_ENET_IS_RELIABLE CombineReq_CmdId = 1
	CombineReq_IS_ALLOW_CLIENT  CombineReq_CmdId = 1
)

// Enum value maps for CombineReq_CmdId.
var (
	CombineReq_CmdId_name = map[int32]string{
		0:   "NONE",
		643: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CombineReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           643,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CombineReq_CmdId) Enum() *CombineReq_CmdId {
	p := new(CombineReq_CmdId)
	*p = x
	return p
}

func (x CombineReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombineReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[31].Descriptor()
}

func (CombineReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[31]
}

func (x CombineReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombineReq_CmdId.Descriptor instead.
func (CombineReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{30, 0}
}

type CombineRsp_CmdId int32

const (
	CombineRsp_NONE             CombineRsp_CmdId = 0
	CombineRsp_CMD_ID           CombineRsp_CmdId = 674
	CombineRsp_ENET_CHANNEL_ID  CombineRsp_CmdId = 0
	CombineRsp_ENET_IS_RELIABLE CombineRsp_CmdId = 1
)

// Enum value maps for CombineRsp_CmdId.
var (
	CombineRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		674: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CombineRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           674,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CombineRsp_CmdId) Enum() *CombineRsp_CmdId {
	p := new(CombineRsp_CmdId)
	*p = x
	return p
}

func (x CombineRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombineRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[32].Descriptor()
}

func (CombineRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[32]
}

func (x CombineRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombineRsp_CmdId.Descriptor instead.
func (CombineRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{31, 0}
}

type ForgeQueueDataNotify_CmdId int32

const (
	ForgeQueueDataNotify_NONE             ForgeQueueDataNotify_CmdId = 0
	ForgeQueueDataNotify_CMD_ID           ForgeQueueDataNotify_CmdId = 676
	ForgeQueueDataNotify_ENET_CHANNEL_ID  ForgeQueueDataNotify_CmdId = 0
	ForgeQueueDataNotify_ENET_IS_RELIABLE ForgeQueueDataNotify_CmdId = 1
	ForgeQueueDataNotify_IS_ALLOW_CLIENT  ForgeQueueDataNotify_CmdId = 1
)

// Enum value maps for ForgeQueueDataNotify_CmdId.
var (
	ForgeQueueDataNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		676: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ForgeQueueDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           676,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ForgeQueueDataNotify_CmdId) Enum() *ForgeQueueDataNotify_CmdId {
	p := new(ForgeQueueDataNotify_CmdId)
	*p = x
	return p
}

func (x ForgeQueueDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeQueueDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[33].Descriptor()
}

func (ForgeQueueDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[33]
}

func (x ForgeQueueDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeQueueDataNotify_CmdId.Descriptor instead.
func (ForgeQueueDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{33, 0}
}

type ForgeGetQueueDataReq_CmdId int32

const (
	ForgeGetQueueDataReq_NONE             ForgeGetQueueDataReq_CmdId = 0
	ForgeGetQueueDataReq_CMD_ID           ForgeGetQueueDataReq_CmdId = 646
	ForgeGetQueueDataReq_ENET_CHANNEL_ID  ForgeGetQueueDataReq_CmdId = 0
	ForgeGetQueueDataReq_ENET_IS_RELIABLE ForgeGetQueueDataReq_CmdId = 1
	ForgeGetQueueDataReq_IS_ALLOW_CLIENT  ForgeGetQueueDataReq_CmdId = 1
)

// Enum value maps for ForgeGetQueueDataReq_CmdId.
var (
	ForgeGetQueueDataReq_CmdId_name = map[int32]string{
		0:   "NONE",
		646: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ForgeGetQueueDataReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           646,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ForgeGetQueueDataReq_CmdId) Enum() *ForgeGetQueueDataReq_CmdId {
	p := new(ForgeGetQueueDataReq_CmdId)
	*p = x
	return p
}

func (x ForgeGetQueueDataReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeGetQueueDataReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[34].Descriptor()
}

func (ForgeGetQueueDataReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[34]
}

func (x ForgeGetQueueDataReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeGetQueueDataReq_CmdId.Descriptor instead.
func (ForgeGetQueueDataReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{34, 0}
}

type ForgeGetQueueDataRsp_CmdId int32

const (
	ForgeGetQueueDataRsp_NONE             ForgeGetQueueDataRsp_CmdId = 0
	ForgeGetQueueDataRsp_CMD_ID           ForgeGetQueueDataRsp_CmdId = 641
	ForgeGetQueueDataRsp_ENET_CHANNEL_ID  ForgeGetQueueDataRsp_CmdId = 0
	ForgeGetQueueDataRsp_ENET_IS_RELIABLE ForgeGetQueueDataRsp_CmdId = 1
)

// Enum value maps for ForgeGetQueueDataRsp_CmdId.
var (
	ForgeGetQueueDataRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		641: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForgeGetQueueDataRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           641,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForgeGetQueueDataRsp_CmdId) Enum() *ForgeGetQueueDataRsp_CmdId {
	p := new(ForgeGetQueueDataRsp_CmdId)
	*p = x
	return p
}

func (x ForgeGetQueueDataRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeGetQueueDataRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[35].Descriptor()
}

func (ForgeGetQueueDataRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[35]
}

func (x ForgeGetQueueDataRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeGetQueueDataRsp_CmdId.Descriptor instead.
func (ForgeGetQueueDataRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{35, 0}
}

type ForgeStartReq_CmdId int32

const (
	ForgeStartReq_NONE             ForgeStartReq_CmdId = 0
	ForgeStartReq_CMD_ID           ForgeStartReq_CmdId = 649
	ForgeStartReq_ENET_CHANNEL_ID  ForgeStartReq_CmdId = 0
	ForgeStartReq_ENET_IS_RELIABLE ForgeStartReq_CmdId = 1
	ForgeStartReq_IS_ALLOW_CLIENT  ForgeStartReq_CmdId = 1
)

// Enum value maps for ForgeStartReq_CmdId.
var (
	ForgeStartReq_CmdId_name = map[int32]string{
		0:   "NONE",
		649: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ForgeStartReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           649,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ForgeStartReq_CmdId) Enum() *ForgeStartReq_CmdId {
	p := new(ForgeStartReq_CmdId)
	*p = x
	return p
}

func (x ForgeStartReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeStartReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[36].Descriptor()
}

func (ForgeStartReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[36]
}

func (x ForgeStartReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeStartReq_CmdId.Descriptor instead.
func (ForgeStartReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{36, 0}
}

type ForgeStartRsp_CmdId int32

const (
	ForgeStartRsp_NONE             ForgeStartRsp_CmdId = 0
	ForgeStartRsp_CMD_ID           ForgeStartRsp_CmdId = 691
	ForgeStartRsp_ENET_CHANNEL_ID  ForgeStartRsp_CmdId = 0
	ForgeStartRsp_ENET_IS_RELIABLE ForgeStartRsp_CmdId = 1
)

// Enum value maps for ForgeStartRsp_CmdId.
var (
	ForgeStartRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		691: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForgeStartRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           691,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForgeStartRsp_CmdId) Enum() *ForgeStartRsp_CmdId {
	p := new(ForgeStartRsp_CmdId)
	*p = x
	return p
}

func (x ForgeStartRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeStartRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[37].Descriptor()
}

func (ForgeStartRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[37]
}

func (x ForgeStartRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeStartRsp_CmdId.Descriptor instead.
func (ForgeStartRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{37, 0}
}

type ForgeQueueManipulateReq_CmdId int32

const (
	ForgeQueueManipulateReq_NONE             ForgeQueueManipulateReq_CmdId = 0
	ForgeQueueManipulateReq_CMD_ID           ForgeQueueManipulateReq_CmdId = 624
	ForgeQueueManipulateReq_ENET_CHANNEL_ID  ForgeQueueManipulateReq_CmdId = 0
	ForgeQueueManipulateReq_ENET_IS_RELIABLE ForgeQueueManipulateReq_CmdId = 1
	ForgeQueueManipulateReq_IS_ALLOW_CLIENT  ForgeQueueManipulateReq_CmdId = 1
)

// Enum value maps for ForgeQueueManipulateReq_CmdId.
var (
	ForgeQueueManipulateReq_CmdId_name = map[int32]string{
		0:   "NONE",
		624: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ForgeQueueManipulateReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           624,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ForgeQueueManipulateReq_CmdId) Enum() *ForgeQueueManipulateReq_CmdId {
	p := new(ForgeQueueManipulateReq_CmdId)
	*p = x
	return p
}

func (x ForgeQueueManipulateReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeQueueManipulateReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[38].Descriptor()
}

func (ForgeQueueManipulateReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[38]
}

func (x ForgeQueueManipulateReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeQueueManipulateReq_CmdId.Descriptor instead.
func (ForgeQueueManipulateReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{38, 0}
}

type ForgeQueueManipulateRsp_CmdId int32

const (
	ForgeQueueManipulateRsp_NONE             ForgeQueueManipulateRsp_CmdId = 0
	ForgeQueueManipulateRsp_CMD_ID           ForgeQueueManipulateRsp_CmdId = 656
	ForgeQueueManipulateRsp_ENET_CHANNEL_ID  ForgeQueueManipulateRsp_CmdId = 0
	ForgeQueueManipulateRsp_ENET_IS_RELIABLE ForgeQueueManipulateRsp_CmdId = 1
)

// Enum value maps for ForgeQueueManipulateRsp_CmdId.
var (
	ForgeQueueManipulateRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		656: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForgeQueueManipulateRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           656,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForgeQueueManipulateRsp_CmdId) Enum() *ForgeQueueManipulateRsp_CmdId {
	p := new(ForgeQueueManipulateRsp_CmdId)
	*p = x
	return p
}

func (x ForgeQueueManipulateRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeQueueManipulateRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[39].Descriptor()
}

func (ForgeQueueManipulateRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[39]
}

func (x ForgeQueueManipulateRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeQueueManipulateRsp_CmdId.Descriptor instead.
func (ForgeQueueManipulateRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{39, 0}
}

type ResinChangeNotify_CmdId int32

const (
	ResinChangeNotify_NONE             ResinChangeNotify_CmdId = 0
	ResinChangeNotify_CMD_ID           ResinChangeNotify_CmdId = 642
	ResinChangeNotify_ENET_CHANNEL_ID  ResinChangeNotify_CmdId = 0
	ResinChangeNotify_ENET_IS_RELIABLE ResinChangeNotify_CmdId = 1
)

// Enum value maps for ResinChangeNotify_CmdId.
var (
	ResinChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		642: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ResinChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           642,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ResinChangeNotify_CmdId) Enum() *ResinChangeNotify_CmdId {
	p := new(ResinChangeNotify_CmdId)
	*p = x
	return p
}

func (x ResinChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResinChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[40].Descriptor()
}

func (ResinChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[40]
}

func (x ResinChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResinChangeNotify_CmdId.Descriptor instead.
func (ResinChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{40, 0}
}

type BuyResinReq_CmdId int32

const (
	BuyResinReq_NONE             BuyResinReq_CmdId = 0
	BuyResinReq_CMD_ID           BuyResinReq_CmdId = 602
	BuyResinReq_ENET_CHANNEL_ID  BuyResinReq_CmdId = 0
	BuyResinReq_ENET_IS_RELIABLE BuyResinReq_CmdId = 1
	BuyResinReq_IS_ALLOW_CLIENT  BuyResinReq_CmdId = 1
)

// Enum value maps for BuyResinReq_CmdId.
var (
	BuyResinReq_CmdId_name = map[int32]string{
		0:   "NONE",
		602: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	BuyResinReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           602,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x BuyResinReq_CmdId) Enum() *BuyResinReq_CmdId {
	p := new(BuyResinReq_CmdId)
	*p = x
	return p
}

func (x BuyResinReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuyResinReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[41].Descriptor()
}

func (BuyResinReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[41]
}

func (x BuyResinReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuyResinReq_CmdId.Descriptor instead.
func (BuyResinReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{41, 0}
}

type BuyResinRsp_CmdId int32

const (
	BuyResinRsp_NONE             BuyResinRsp_CmdId = 0
	BuyResinRsp_CMD_ID           BuyResinRsp_CmdId = 619
	BuyResinRsp_ENET_CHANNEL_ID  BuyResinRsp_CmdId = 0
	BuyResinRsp_ENET_IS_RELIABLE BuyResinRsp_CmdId = 1
	BuyResinRsp_IS_ALLOW_CLIENT  BuyResinRsp_CmdId = 1
)

// Enum value maps for BuyResinRsp_CmdId.
var (
	BuyResinRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		619: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	BuyResinRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           619,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x BuyResinRsp_CmdId) Enum() *BuyResinRsp_CmdId {
	p := new(BuyResinRsp_CmdId)
	*p = x
	return p
}

func (x BuyResinRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuyResinRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[42].Descriptor()
}

func (BuyResinRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[42]
}

func (x BuyResinRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuyResinRsp_CmdId.Descriptor instead.
func (BuyResinRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{42, 0}
}

type MaterialDeleteReturnNotify_CmdId int32

const (
	MaterialDeleteReturnNotify_NONE             MaterialDeleteReturnNotify_CmdId = 0
	MaterialDeleteReturnNotify_CMD_ID           MaterialDeleteReturnNotify_CmdId = 661
	MaterialDeleteReturnNotify_ENET_CHANNEL_ID  MaterialDeleteReturnNotify_CmdId = 0
	MaterialDeleteReturnNotify_ENET_IS_RELIABLE MaterialDeleteReturnNotify_CmdId = 1
)

// Enum value maps for MaterialDeleteReturnNotify_CmdId.
var (
	MaterialDeleteReturnNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		661: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	MaterialDeleteReturnNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           661,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x MaterialDeleteReturnNotify_CmdId) Enum() *MaterialDeleteReturnNotify_CmdId {
	p := new(MaterialDeleteReturnNotify_CmdId)
	*p = x
	return p
}

func (x MaterialDeleteReturnNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialDeleteReturnNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[43].Descriptor()
}

func (MaterialDeleteReturnNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[43]
}

func (x MaterialDeleteReturnNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialDeleteReturnNotify_CmdId.Descriptor instead.
func (MaterialDeleteReturnNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{43, 0}
}

type TakeMaterialDeleteReturnReq_CmdId int32

const (
	TakeMaterialDeleteReturnReq_NONE             TakeMaterialDeleteReturnReq_CmdId = 0
	TakeMaterialDeleteReturnReq_CMD_ID           TakeMaterialDeleteReturnReq_CmdId = 629
	TakeMaterialDeleteReturnReq_ENET_CHANNEL_ID  TakeMaterialDeleteReturnReq_CmdId = 0
	TakeMaterialDeleteReturnReq_ENET_IS_RELIABLE TakeMaterialDeleteReturnReq_CmdId = 1
	TakeMaterialDeleteReturnReq_IS_ALLOW_CLIENT  TakeMaterialDeleteReturnReq_CmdId = 1
)

// Enum value maps for TakeMaterialDeleteReturnReq_CmdId.
var (
	TakeMaterialDeleteReturnReq_CmdId_name = map[int32]string{
		0:   "NONE",
		629: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	TakeMaterialDeleteReturnReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           629,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x TakeMaterialDeleteReturnReq_CmdId) Enum() *TakeMaterialDeleteReturnReq_CmdId {
	p := new(TakeMaterialDeleteReturnReq_CmdId)
	*p = x
	return p
}

func (x TakeMaterialDeleteReturnReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeMaterialDeleteReturnReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[44].Descriptor()
}

func (TakeMaterialDeleteReturnReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[44]
}

func (x TakeMaterialDeleteReturnReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeMaterialDeleteReturnReq_CmdId.Descriptor instead.
func (TakeMaterialDeleteReturnReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{44, 0}
}

type TakeMaterialDeleteReturnRsp_CmdId int32

const (
	TakeMaterialDeleteReturnRsp_NONE             TakeMaterialDeleteReturnRsp_CmdId = 0
	TakeMaterialDeleteReturnRsp_CMD_ID           TakeMaterialDeleteReturnRsp_CmdId = 657
	TakeMaterialDeleteReturnRsp_ENET_CHANNEL_ID  TakeMaterialDeleteReturnRsp_CmdId = 0
	TakeMaterialDeleteReturnRsp_ENET_IS_RELIABLE TakeMaterialDeleteReturnRsp_CmdId = 1
)

// Enum value maps for TakeMaterialDeleteReturnRsp_CmdId.
var (
	TakeMaterialDeleteReturnRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		657: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	TakeMaterialDeleteReturnRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           657,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x TakeMaterialDeleteReturnRsp_CmdId) Enum() *TakeMaterialDeleteReturnRsp_CmdId {
	p := new(TakeMaterialDeleteReturnRsp_CmdId)
	*p = x
	return p
}

func (x TakeMaterialDeleteReturnRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeMaterialDeleteReturnRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[45].Descriptor()
}

func (TakeMaterialDeleteReturnRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[45]
}

func (x TakeMaterialDeleteReturnRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeMaterialDeleteReturnRsp_CmdId.Descriptor instead.
func (TakeMaterialDeleteReturnRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{45, 0}
}

type MaterialDeleteUpdateNotify_CmdId int32

const (
	MaterialDeleteUpdateNotify_NONE             MaterialDeleteUpdateNotify_CmdId = 0
	MaterialDeleteUpdateNotify_CMD_ID           MaterialDeleteUpdateNotify_CmdId = 700
	MaterialDeleteUpdateNotify_ENET_CHANNEL_ID  MaterialDeleteUpdateNotify_CmdId = 0
	MaterialDeleteUpdateNotify_ENET_IS_RELIABLE MaterialDeleteUpdateNotify_CmdId = 1
)

// Enum value maps for MaterialDeleteUpdateNotify_CmdId.
var (
	MaterialDeleteUpdateNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		700: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	MaterialDeleteUpdateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           700,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x MaterialDeleteUpdateNotify_CmdId) Enum() *MaterialDeleteUpdateNotify_CmdId {
	p := new(MaterialDeleteUpdateNotify_CmdId)
	*p = x
	return p
}

func (x MaterialDeleteUpdateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialDeleteUpdateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[46].Descriptor()
}

func (MaterialDeleteUpdateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[46]
}

func (x MaterialDeleteUpdateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialDeleteUpdateNotify_CmdId.Descriptor instead.
func (MaterialDeleteUpdateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{46, 0}
}

type McoinExchangeHcoinReq_CmdId int32

const (
	McoinExchangeHcoinReq_NONE             McoinExchangeHcoinReq_CmdId = 0
	McoinExchangeHcoinReq_CMD_ID           McoinExchangeHcoinReq_CmdId = 616
	McoinExchangeHcoinReq_ENET_CHANNEL_ID  McoinExchangeHcoinReq_CmdId = 0
	McoinExchangeHcoinReq_ENET_IS_RELIABLE McoinExchangeHcoinReq_CmdId = 1
	McoinExchangeHcoinReq_IS_ALLOW_CLIENT  McoinExchangeHcoinReq_CmdId = 1
)

// Enum value maps for McoinExchangeHcoinReq_CmdId.
var (
	McoinExchangeHcoinReq_CmdId_name = map[int32]string{
		0:   "NONE",
		616: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	McoinExchangeHcoinReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           616,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x McoinExchangeHcoinReq_CmdId) Enum() *McoinExchangeHcoinReq_CmdId {
	p := new(McoinExchangeHcoinReq_CmdId)
	*p = x
	return p
}

func (x McoinExchangeHcoinReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McoinExchangeHcoinReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[47].Descriptor()
}

func (McoinExchangeHcoinReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[47]
}

func (x McoinExchangeHcoinReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McoinExchangeHcoinReq_CmdId.Descriptor instead.
func (McoinExchangeHcoinReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{47, 0}
}

type McoinExchangeHcoinRsp_CmdId int32

const (
	McoinExchangeHcoinRsp_NONE             McoinExchangeHcoinRsp_CmdId = 0
	McoinExchangeHcoinRsp_CMD_ID           McoinExchangeHcoinRsp_CmdId = 687
	McoinExchangeHcoinRsp_ENET_CHANNEL_ID  McoinExchangeHcoinRsp_CmdId = 0
	McoinExchangeHcoinRsp_ENET_IS_RELIABLE McoinExchangeHcoinRsp_CmdId = 1
)

// Enum value maps for McoinExchangeHcoinRsp_CmdId.
var (
	McoinExchangeHcoinRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		687: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	McoinExchangeHcoinRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           687,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x McoinExchangeHcoinRsp_CmdId) Enum() *McoinExchangeHcoinRsp_CmdId {
	p := new(McoinExchangeHcoinRsp_CmdId)
	*p = x
	return p
}

func (x McoinExchangeHcoinRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McoinExchangeHcoinRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[48].Descriptor()
}

func (McoinExchangeHcoinRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[48]
}

func (x McoinExchangeHcoinRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McoinExchangeHcoinRsp_CmdId.Descriptor instead.
func (McoinExchangeHcoinRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{48, 0}
}

type DestroyMaterialReq_CmdId int32

const (
	DestroyMaterialReq_NONE             DestroyMaterialReq_CmdId = 0
	DestroyMaterialReq_CMD_ID           DestroyMaterialReq_CmdId = 640
	DestroyMaterialReq_ENET_CHANNEL_ID  DestroyMaterialReq_CmdId = 0
	DestroyMaterialReq_ENET_IS_RELIABLE DestroyMaterialReq_CmdId = 1
	DestroyMaterialReq_IS_ALLOW_CLIENT  DestroyMaterialReq_CmdId = 1
)

// Enum value maps for DestroyMaterialReq_CmdId.
var (
	DestroyMaterialReq_CmdId_name = map[int32]string{
		0:   "NONE",
		640: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DestroyMaterialReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           640,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DestroyMaterialReq_CmdId) Enum() *DestroyMaterialReq_CmdId {
	p := new(DestroyMaterialReq_CmdId)
	*p = x
	return p
}

func (x DestroyMaterialReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DestroyMaterialReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[49].Descriptor()
}

func (DestroyMaterialReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[49]
}

func (x DestroyMaterialReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DestroyMaterialReq_CmdId.Descriptor instead.
func (DestroyMaterialReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{50, 0}
}

type DestroyMaterialRsp_CmdId int32

const (
	DestroyMaterialRsp_NONE             DestroyMaterialRsp_CmdId = 0
	DestroyMaterialRsp_CMD_ID           DestroyMaterialRsp_CmdId = 618
	DestroyMaterialRsp_ENET_CHANNEL_ID  DestroyMaterialRsp_CmdId = 0
	DestroyMaterialRsp_ENET_IS_RELIABLE DestroyMaterialRsp_CmdId = 1
)

// Enum value maps for DestroyMaterialRsp_CmdId.
var (
	DestroyMaterialRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		618: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DestroyMaterialRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           618,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DestroyMaterialRsp_CmdId) Enum() *DestroyMaterialRsp_CmdId {
	p := new(DestroyMaterialRsp_CmdId)
	*p = x
	return p
}

func (x DestroyMaterialRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DestroyMaterialRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[50].Descriptor()
}

func (DestroyMaterialRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[50]
}

func (x DestroyMaterialRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DestroyMaterialRsp_CmdId.Descriptor instead.
func (DestroyMaterialRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{51, 0}
}

type SetEquipLockStateReq_CmdId int32

const (
	SetEquipLockStateReq_NONE             SetEquipLockStateReq_CmdId = 0
	SetEquipLockStateReq_CMD_ID           SetEquipLockStateReq_CmdId = 666
	SetEquipLockStateReq_ENET_CHANNEL_ID  SetEquipLockStateReq_CmdId = 0
	SetEquipLockStateReq_ENET_IS_RELIABLE SetEquipLockStateReq_CmdId = 1
	SetEquipLockStateReq_IS_ALLOW_CLIENT  SetEquipLockStateReq_CmdId = 1
)

// Enum value maps for SetEquipLockStateReq_CmdId.
var (
	SetEquipLockStateReq_CmdId_name = map[int32]string{
		0:   "NONE",
		666: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetEquipLockStateReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           666,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetEquipLockStateReq_CmdId) Enum() *SetEquipLockStateReq_CmdId {
	p := new(SetEquipLockStateReq_CmdId)
	*p = x
	return p
}

func (x SetEquipLockStateReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetEquipLockStateReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[51].Descriptor()
}

func (SetEquipLockStateReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[51]
}

func (x SetEquipLockStateReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetEquipLockStateReq_CmdId.Descriptor instead.
func (SetEquipLockStateReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{52, 0}
}

type SetEquipLockStateRsp_CmdId int32

const (
	SetEquipLockStateRsp_NONE             SetEquipLockStateRsp_CmdId = 0
	SetEquipLockStateRsp_CMD_ID           SetEquipLockStateRsp_CmdId = 668
	SetEquipLockStateRsp_ENET_CHANNEL_ID  SetEquipLockStateRsp_CmdId = 0
	SetEquipLockStateRsp_ENET_IS_RELIABLE SetEquipLockStateRsp_CmdId = 1
)

// Enum value maps for SetEquipLockStateRsp_CmdId.
var (
	SetEquipLockStateRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		668: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetEquipLockStateRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           668,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetEquipLockStateRsp_CmdId) Enum() *SetEquipLockStateRsp_CmdId {
	p := new(SetEquipLockStateRsp_CmdId)
	*p = x
	return p
}

func (x SetEquipLockStateRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetEquipLockStateRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[52].Descriptor()
}

func (SetEquipLockStateRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[52]
}

func (x SetEquipLockStateRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetEquipLockStateRsp_CmdId.Descriptor instead.
func (SetEquipLockStateRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{53, 0}
}

type CalcWeaponUpgradeReturnItemsReq_CmdId int32

const (
	CalcWeaponUpgradeReturnItemsReq_NONE             CalcWeaponUpgradeReturnItemsReq_CmdId = 0
	CalcWeaponUpgradeReturnItemsReq_CMD_ID           CalcWeaponUpgradeReturnItemsReq_CmdId = 633
	CalcWeaponUpgradeReturnItemsReq_ENET_CHANNEL_ID  CalcWeaponUpgradeReturnItemsReq_CmdId = 0
	CalcWeaponUpgradeReturnItemsReq_ENET_IS_RELIABLE CalcWeaponUpgradeReturnItemsReq_CmdId = 1
	CalcWeaponUpgradeReturnItemsReq_IS_ALLOW_CLIENT  CalcWeaponUpgradeReturnItemsReq_CmdId = 1
)

// Enum value maps for CalcWeaponUpgradeReturnItemsReq_CmdId.
var (
	CalcWeaponUpgradeReturnItemsReq_CmdId_name = map[int32]string{
		0:   "NONE",
		633: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CalcWeaponUpgradeReturnItemsReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           633,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CalcWeaponUpgradeReturnItemsReq_CmdId) Enum() *CalcWeaponUpgradeReturnItemsReq_CmdId {
	p := new(CalcWeaponUpgradeReturnItemsReq_CmdId)
	*p = x
	return p
}

func (x CalcWeaponUpgradeReturnItemsReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcWeaponUpgradeReturnItemsReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[53].Descriptor()
}

func (CalcWeaponUpgradeReturnItemsReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[53]
}

func (x CalcWeaponUpgradeReturnItemsReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsReq_CmdId.Descriptor instead.
func (CalcWeaponUpgradeReturnItemsReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{54, 0}
}

type CalcWeaponUpgradeReturnItemsRsp_CmdId int32

const (
	CalcWeaponUpgradeReturnItemsRsp_NONE             CalcWeaponUpgradeReturnItemsRsp_CmdId = 0
	CalcWeaponUpgradeReturnItemsRsp_CMD_ID           CalcWeaponUpgradeReturnItemsRsp_CmdId = 684
	CalcWeaponUpgradeReturnItemsRsp_ENET_CHANNEL_ID  CalcWeaponUpgradeReturnItemsRsp_CmdId = 0
	CalcWeaponUpgradeReturnItemsRsp_ENET_IS_RELIABLE CalcWeaponUpgradeReturnItemsRsp_CmdId = 1
)

// Enum value maps for CalcWeaponUpgradeReturnItemsRsp_CmdId.
var (
	CalcWeaponUpgradeReturnItemsRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		684: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CalcWeaponUpgradeReturnItemsRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           684,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CalcWeaponUpgradeReturnItemsRsp_CmdId) Enum() *CalcWeaponUpgradeReturnItemsRsp_CmdId {
	p := new(CalcWeaponUpgradeReturnItemsRsp_CmdId)
	*p = x
	return p
}

func (x CalcWeaponUpgradeReturnItemsRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcWeaponUpgradeReturnItemsRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[54].Descriptor()
}

func (CalcWeaponUpgradeReturnItemsRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[54]
}

func (x CalcWeaponUpgradeReturnItemsRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsRsp_CmdId.Descriptor instead.
func (CalcWeaponUpgradeReturnItemsRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{55, 0}
}

type ForgeDataNotify_CmdId int32

const (
	ForgeDataNotify_NONE             ForgeDataNotify_CmdId = 0
	ForgeDataNotify_CMD_ID           ForgeDataNotify_CmdId = 680
	ForgeDataNotify_ENET_CHANNEL_ID  ForgeDataNotify_CmdId = 0
	ForgeDataNotify_ENET_IS_RELIABLE ForgeDataNotify_CmdId = 1
)

// Enum value maps for ForgeDataNotify_CmdId.
var (
	ForgeDataNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		680: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForgeDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           680,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForgeDataNotify_CmdId) Enum() *ForgeDataNotify_CmdId {
	p := new(ForgeDataNotify_CmdId)
	*p = x
	return p
}

func (x ForgeDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[55].Descriptor()
}

func (ForgeDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[55]
}

func (x ForgeDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeDataNotify_CmdId.Descriptor instead.
func (ForgeDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{56, 0}
}

type ForgeFormulaDataNotify_CmdId int32

const (
	ForgeFormulaDataNotify_NONE             ForgeFormulaDataNotify_CmdId = 0
	ForgeFormulaDataNotify_CMD_ID           ForgeFormulaDataNotify_CmdId = 689
	ForgeFormulaDataNotify_ENET_CHANNEL_ID  ForgeFormulaDataNotify_CmdId = 0
	ForgeFormulaDataNotify_ENET_IS_RELIABLE ForgeFormulaDataNotify_CmdId = 1
)

// Enum value maps for ForgeFormulaDataNotify_CmdId.
var (
	ForgeFormulaDataNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		689: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForgeFormulaDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           689,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForgeFormulaDataNotify_CmdId) Enum() *ForgeFormulaDataNotify_CmdId {
	p := new(ForgeFormulaDataNotify_CmdId)
	*p = x
	return p
}

func (x ForgeFormulaDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForgeFormulaDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[56].Descriptor()
}

func (ForgeFormulaDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[56]
}

func (x ForgeFormulaDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForgeFormulaDataNotify_CmdId.Descriptor instead.
func (ForgeFormulaDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{57, 0}
}

type CombineDataNotify_CmdId int32

const (
	CombineDataNotify_NONE             CombineDataNotify_CmdId = 0
	CombineDataNotify_CMD_ID           CombineDataNotify_CmdId = 659
	CombineDataNotify_ENET_CHANNEL_ID  CombineDataNotify_CmdId = 0
	CombineDataNotify_ENET_IS_RELIABLE CombineDataNotify_CmdId = 1
)

// Enum value maps for CombineDataNotify_CmdId.
var (
	CombineDataNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		659: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CombineDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           659,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CombineDataNotify_CmdId) Enum() *CombineDataNotify_CmdId {
	p := new(CombineDataNotify_CmdId)
	*p = x
	return p
}

func (x CombineDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombineDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[57].Descriptor()
}

func (CombineDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[57]
}

func (x CombineDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombineDataNotify_CmdId.Descriptor instead.
func (CombineDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{58, 0}
}

type CombineFormulaDataNotify_CmdId int32

const (
	CombineFormulaDataNotify_NONE             CombineFormulaDataNotify_CmdId = 0
	CombineFormulaDataNotify_CMD_ID           CombineFormulaDataNotify_CmdId = 632
	CombineFormulaDataNotify_ENET_CHANNEL_ID  CombineFormulaDataNotify_CmdId = 0
	CombineFormulaDataNotify_ENET_IS_RELIABLE CombineFormulaDataNotify_CmdId = 1
)

// Enum value maps for CombineFormulaDataNotify_CmdId.
var (
	CombineFormulaDataNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		632: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CombineFormulaDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           632,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CombineFormulaDataNotify_CmdId) Enum() *CombineFormulaDataNotify_CmdId {
	p := new(CombineFormulaDataNotify_CmdId)
	*p = x
	return p
}

func (x CombineFormulaDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombineFormulaDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[58].Descriptor()
}

func (CombineFormulaDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[58]
}

func (x CombineFormulaDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombineFormulaDataNotify_CmdId.Descriptor instead.
func (CombineFormulaDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{59, 0}
}

type ClosedItemNotify_CmdId int32

const (
	ClosedItemNotify_NONE             ClosedItemNotify_CmdId = 0
	ClosedItemNotify_CMD_ID           ClosedItemNotify_CmdId = 614
	ClosedItemNotify_ENET_CHANNEL_ID  ClosedItemNotify_CmdId = 0
	ClosedItemNotify_ENET_IS_RELIABLE ClosedItemNotify_CmdId = 1
)

// Enum value maps for ClosedItemNotify_CmdId.
var (
	ClosedItemNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		614: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ClosedItemNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           614,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ClosedItemNotify_CmdId) Enum() *ClosedItemNotify_CmdId {
	p := new(ClosedItemNotify_CmdId)
	*p = x
	return p
}

func (x ClosedItemNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClosedItemNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[59].Descriptor()
}

func (ClosedItemNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[59]
}

func (x ClosedItemNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClosedItemNotify_CmdId.Descriptor instead.
func (ClosedItemNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{60, 0}
}

type CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType int32

const (
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DEFAULT         CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 0
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_TEXT            CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 1
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DIALOG          CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 2
	CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType = 3
)

// Enum value maps for CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType.
var (
	CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType_name = map[int32]string{
		0: "ITEM_EXCEED_LIMIT_MSG_DEFAULT",
		1: "ITEM_EXCEED_LIMIT_MSG_TEXT",
		2: "ITEM_EXCEED_LIMIT_MSG_DIALOG",
		3: "ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK",
	}
	CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType_value = map[string]int32{
		"ITEM_EXCEED_LIMIT_MSG_DEFAULT":         0,
		"ITEM_EXCEED_LIMIT_MSG_TEXT":            1,
		"ITEM_EXCEED_LIMIT_MSG_DIALOG":          2,
		"ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK": 3,
	}
)

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Enum() *CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType {
	p := new(CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType)
	*p = x
	return p
}

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[60].Descriptor()
}

func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[60]
}

func (x CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType.Descriptor instead.
func (CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{61, 0}
}

type CheckAddItemExceedLimitNotify_CmdId int32

const (
	CheckAddItemExceedLimitNotify_NONE             CheckAddItemExceedLimitNotify_CmdId = 0
	CheckAddItemExceedLimitNotify_CMD_ID           CheckAddItemExceedLimitNotify_CmdId = 692
	CheckAddItemExceedLimitNotify_ENET_CHANNEL_ID  CheckAddItemExceedLimitNotify_CmdId = 0
	CheckAddItemExceedLimitNotify_ENET_IS_RELIABLE CheckAddItemExceedLimitNotify_CmdId = 1
)

// Enum value maps for CheckAddItemExceedLimitNotify_CmdId.
var (
	CheckAddItemExceedLimitNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		692: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CheckAddItemExceedLimitNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           692,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CheckAddItemExceedLimitNotify_CmdId) Enum() *CheckAddItemExceedLimitNotify_CmdId {
	p := new(CheckAddItemExceedLimitNotify_CmdId)
	*p = x
	return p
}

func (x CheckAddItemExceedLimitNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckAddItemExceedLimitNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[61].Descriptor()
}

func (CheckAddItemExceedLimitNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[61]
}

func (x CheckAddItemExceedLimitNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckAddItemExceedLimitNotify_CmdId.Descriptor instead.
func (CheckAddItemExceedLimitNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{61, 1}
}

type SetIsAutoUnlockSpecificEquipReq_CmdId int32

const (
	SetIsAutoUnlockSpecificEquipReq_NONE             SetIsAutoUnlockSpecificEquipReq_CmdId = 0
	SetIsAutoUnlockSpecificEquipReq_CMD_ID           SetIsAutoUnlockSpecificEquipReq_CmdId = 620
	SetIsAutoUnlockSpecificEquipReq_ENET_CHANNEL_ID  SetIsAutoUnlockSpecificEquipReq_CmdId = 0
	SetIsAutoUnlockSpecificEquipReq_ENET_IS_RELIABLE SetIsAutoUnlockSpecificEquipReq_CmdId = 1
	SetIsAutoUnlockSpecificEquipReq_IS_ALLOW_CLIENT  SetIsAutoUnlockSpecificEquipReq_CmdId = 1
)

// Enum value maps for SetIsAutoUnlockSpecificEquipReq_CmdId.
var (
	SetIsAutoUnlockSpecificEquipReq_CmdId_name = map[int32]string{
		0:   "NONE",
		620: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetIsAutoUnlockSpecificEquipReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           620,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetIsAutoUnlockSpecificEquipReq_CmdId) Enum() *SetIsAutoUnlockSpecificEquipReq_CmdId {
	p := new(SetIsAutoUnlockSpecificEquipReq_CmdId)
	*p = x
	return p
}

func (x SetIsAutoUnlockSpecificEquipReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetIsAutoUnlockSpecificEquipReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[62].Descriptor()
}

func (SetIsAutoUnlockSpecificEquipReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[62]
}

func (x SetIsAutoUnlockSpecificEquipReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipReq_CmdId.Descriptor instead.
func (SetIsAutoUnlockSpecificEquipReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{62, 0}
}

type SetIsAutoUnlockSpecificEquipRsp_CmdId int32

const (
	SetIsAutoUnlockSpecificEquipRsp_NONE             SetIsAutoUnlockSpecificEquipRsp_CmdId = 0
	SetIsAutoUnlockSpecificEquipRsp_CMD_ID           SetIsAutoUnlockSpecificEquipRsp_CmdId = 664
	SetIsAutoUnlockSpecificEquipRsp_ENET_CHANNEL_ID  SetIsAutoUnlockSpecificEquipRsp_CmdId = 0
	SetIsAutoUnlockSpecificEquipRsp_ENET_IS_RELIABLE SetIsAutoUnlockSpecificEquipRsp_CmdId = 1
)

// Enum value maps for SetIsAutoUnlockSpecificEquipRsp_CmdId.
var (
	SetIsAutoUnlockSpecificEquipRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		664: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetIsAutoUnlockSpecificEquipRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           664,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetIsAutoUnlockSpecificEquipRsp_CmdId) Enum() *SetIsAutoUnlockSpecificEquipRsp_CmdId {
	p := new(SetIsAutoUnlockSpecificEquipRsp_CmdId)
	*p = x
	return p
}

func (x SetIsAutoUnlockSpecificEquipRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetIsAutoUnlockSpecificEquipRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[63].Descriptor()
}

func (SetIsAutoUnlockSpecificEquipRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[63]
}

func (x SetIsAutoUnlockSpecificEquipRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipRsp_CmdId.Descriptor instead.
func (SetIsAutoUnlockSpecificEquipRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{63, 0}
}

type ReliquaryDecomposeReq_CmdId int32

const (
	ReliquaryDecomposeReq_NONE             ReliquaryDecomposeReq_CmdId = 0
	ReliquaryDecomposeReq_CMD_ID           ReliquaryDecomposeReq_CmdId = 638
	ReliquaryDecomposeReq_ENET_CHANNEL_ID  ReliquaryDecomposeReq_CmdId = 0
	ReliquaryDecomposeReq_ENET_IS_RELIABLE ReliquaryDecomposeReq_CmdId = 1
	ReliquaryDecomposeReq_IS_ALLOW_CLIENT  ReliquaryDecomposeReq_CmdId = 1
)

// Enum value maps for ReliquaryDecomposeReq_CmdId.
var (
	ReliquaryDecomposeReq_CmdId_name = map[int32]string{
		0:   "NONE",
		638: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReliquaryDecomposeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           638,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReliquaryDecomposeReq_CmdId) Enum() *ReliquaryDecomposeReq_CmdId {
	p := new(ReliquaryDecomposeReq_CmdId)
	*p = x
	return p
}

func (x ReliquaryDecomposeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryDecomposeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[64].Descriptor()
}

func (ReliquaryDecomposeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[64]
}

func (x ReliquaryDecomposeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryDecomposeReq_CmdId.Descriptor instead.
func (ReliquaryDecomposeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{64, 0}
}

type ReliquaryDecomposeRsp_CmdId int32

const (
	ReliquaryDecomposeRsp_NONE             ReliquaryDecomposeRsp_CmdId = 0
	ReliquaryDecomposeRsp_CMD_ID           ReliquaryDecomposeRsp_CmdId = 611
	ReliquaryDecomposeRsp_ENET_CHANNEL_ID  ReliquaryDecomposeRsp_CmdId = 0
	ReliquaryDecomposeRsp_ENET_IS_RELIABLE ReliquaryDecomposeRsp_CmdId = 1
	ReliquaryDecomposeRsp_IS_ALLOW_CLIENT  ReliquaryDecomposeRsp_CmdId = 1
)

// Enum value maps for ReliquaryDecomposeRsp_CmdId.
var (
	ReliquaryDecomposeRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		611: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReliquaryDecomposeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           611,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReliquaryDecomposeRsp_CmdId) Enum() *ReliquaryDecomposeRsp_CmdId {
	p := new(ReliquaryDecomposeRsp_CmdId)
	*p = x
	return p
}

func (x ReliquaryDecomposeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryDecomposeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[65].Descriptor()
}

func (ReliquaryDecomposeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[65]
}

func (x ReliquaryDecomposeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryDecomposeRsp_CmdId.Descriptor instead.
func (ReliquaryDecomposeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{65, 0}
}

type ReliquaryFilterStateSaveNotify_CmdId int32

const (
	ReliquaryFilterStateSaveNotify_NONE             ReliquaryFilterStateSaveNotify_CmdId = 0
	ReliquaryFilterStateSaveNotify_CMD_ID           ReliquaryFilterStateSaveNotify_CmdId = 644
	ReliquaryFilterStateSaveNotify_ENET_CHANNEL_ID  ReliquaryFilterStateSaveNotify_CmdId = 0
	ReliquaryFilterStateSaveNotify_ENET_IS_RELIABLE ReliquaryFilterStateSaveNotify_CmdId = 1
	ReliquaryFilterStateSaveNotify_IS_ALLOW_CLIENT  ReliquaryFilterStateSaveNotify_CmdId = 1
)

// Enum value maps for ReliquaryFilterStateSaveNotify_CmdId.
var (
	ReliquaryFilterStateSaveNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		644: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReliquaryFilterStateSaveNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           644,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReliquaryFilterStateSaveNotify_CmdId) Enum() *ReliquaryFilterStateSaveNotify_CmdId {
	p := new(ReliquaryFilterStateSaveNotify_CmdId)
	*p = x
	return p
}

func (x ReliquaryFilterStateSaveNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryFilterStateSaveNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[66].Descriptor()
}

func (ReliquaryFilterStateSaveNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[66]
}

func (x ReliquaryFilterStateSaveNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryFilterStateSaveNotify_CmdId.Descriptor instead.
func (ReliquaryFilterStateSaveNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{66, 0}
}

type ReliquaryFilterStateNotify_CmdId int32

const (
	ReliquaryFilterStateNotify_NONE             ReliquaryFilterStateNotify_CmdId = 0
	ReliquaryFilterStateNotify_CMD_ID           ReliquaryFilterStateNotify_CmdId = 686
	ReliquaryFilterStateNotify_ENET_CHANNEL_ID  ReliquaryFilterStateNotify_CmdId = 0
	ReliquaryFilterStateNotify_ENET_IS_RELIABLE ReliquaryFilterStateNotify_CmdId = 1
)

// Enum value maps for ReliquaryFilterStateNotify_CmdId.
var (
	ReliquaryFilterStateNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		686: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ReliquaryFilterStateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           686,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ReliquaryFilterStateNotify_CmdId) Enum() *ReliquaryFilterStateNotify_CmdId {
	p := new(ReliquaryFilterStateNotify_CmdId)
	*p = x
	return p
}

func (x ReliquaryFilterStateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReliquaryFilterStateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_item_proto_enumTypes[67].Descriptor()
}

func (ReliquaryFilterStateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_item_proto_enumTypes[67]
}

func (x ReliquaryFilterStateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReliquaryFilterStateNotify_CmdId.Descriptor instead.
func (ReliquaryFilterStateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{67, 0}
}

type PlayerStoreNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList    []*Item   `protobuf:"bytes,15,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	WeightLimit uint32    `protobuf:"varint,8,opt,name=weight_limit,json=weightLimit,proto3" json:"weight_limit,omitempty"`
	StoreType   StoreType `protobuf:"varint,2,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *PlayerStoreNotify) Reset() {
	*x = PlayerStoreNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStoreNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStoreNotify) ProtoMessage() {}

func (x *PlayerStoreNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStoreNotify.ProtoReflect.Descriptor instead.
func (*PlayerStoreNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerStoreNotify) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *PlayerStoreNotify) GetWeightLimit() uint32 {
	if x != nil {
		return x.WeightLimit
	}
	return 0
}

func (x *PlayerStoreNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type StoreWeightLimitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponCountLimit    uint32    `protobuf:"varint,2,opt,name=weapon_count_limit,json=weaponCountLimit,proto3" json:"weapon_count_limit,omitempty"`
	StoreType           StoreType `protobuf:"varint,7,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	MaterialCountLimit  uint32    `protobuf:"varint,4,opt,name=material_count_limit,json=materialCountLimit,proto3" json:"material_count_limit,omitempty"`
	ReliquaryCountLimit uint32    `protobuf:"varint,6,opt,name=reliquary_count_limit,json=reliquaryCountLimit,proto3" json:"reliquary_count_limit,omitempty"`
	FurnitureCountLimit uint32    `protobuf:"varint,9,opt,name=furniture_count_limit,json=furnitureCountLimit,proto3" json:"furniture_count_limit,omitempty"`
	WeightLimit         uint32    `protobuf:"varint,15,opt,name=weight_limit,json=weightLimit,proto3" json:"weight_limit,omitempty"`
}

func (x *StoreWeightLimitNotify) Reset() {
	*x = StoreWeightLimitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreWeightLimitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreWeightLimitNotify) ProtoMessage() {}

func (x *StoreWeightLimitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreWeightLimitNotify.ProtoReflect.Descriptor instead.
func (*StoreWeightLimitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{1}
}

func (x *StoreWeightLimitNotify) GetWeaponCountLimit() uint32 {
	if x != nil {
		return x.WeaponCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *StoreWeightLimitNotify) GetMaterialCountLimit() uint32 {
	if x != nil {
		return x.MaterialCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetReliquaryCountLimit() uint32 {
	if x != nil {
		return x.ReliquaryCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetFurnitureCountLimit() uint32 {
	if x != nil {
		return x.FurnitureCountLimit
	}
	return 0
}

func (x *StoreWeightLimitNotify) GetWeightLimit() uint32 {
	if x != nil {
		return x.WeightLimit
	}
	return 0
}

type StoreItemChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreType StoreType `protobuf:"varint,12,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	ItemList  []*Item   `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *StoreItemChangeNotify) Reset() {
	*x = StoreItemChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreItemChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItemChangeNotify) ProtoMessage() {}

func (x *StoreItemChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItemChangeNotify.ProtoReflect.Descriptor instead.
func (*StoreItemChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{2}
}

func (x *StoreItemChangeNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *StoreItemChangeNotify) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type StoreItemDelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidList  []uint64  `protobuf:"varint,12,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
	StoreType StoreType `protobuf:"varint,15,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *StoreItemDelNotify) Reset() {
	*x = StoreItemDelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreItemDelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItemDelNotify) ProtoMessage() {}

func (x *StoreItemDelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItemDelNotify.ProtoReflect.Descriptor instead.
func (*StoreItemDelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{3}
}

func (x *StoreItemDelNotify) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

func (x *StoreItemDelNotify) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type ItemHint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,8,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	IsNew  bool   `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	Count  uint32 `protobuf:"varint,15,opt,name=count,proto3" json:"count,omitempty"`
	Guid   uint64 `protobuf:"varint,4,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *ItemHint) Reset() {
	*x = ItemHint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemHint) ProtoMessage() {}

func (x *ItemHint) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemHint.ProtoReflect.Descriptor instead.
func (*ItemHint) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{4}
}

func (x *ItemHint) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemHint) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ItemHint) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ItemHint) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type ItemAddHintNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPositionValid             bool        `protobuf:"varint,14,opt,name=is_position_valid,json=isPositionValid,proto3" json:"is_position_valid,omitempty"`
	QuestId                     uint32      `protobuf:"varint,3,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	Reason                      uint32      `protobuf:"varint,6,opt,name=reason,proto3" json:"reason,omitempty"`
	IsGeneralRewardHiden        bool        `protobuf:"varint,15,opt,name=is_general_reward_hiden,json=isGeneralRewardHiden,proto3" json:"is_general_reward_hiden,omitempty"`
	ItemList                    []*ItemHint `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	IsTransferedFromAvatarCard  bool        `protobuf:"varint,12,opt,name=is_transfered_from_avatar_card,json=isTransferedFromAvatarCard,proto3" json:"is_transfered_from_avatar_card,omitempty"`
	Position                    *Vector     `protobuf:"bytes,9,opt,name=position,proto3" json:"position,omitempty"`
	OverflowTransformedItemList []*ItemHint `protobuf:"bytes,8,rep,name=overflow_transformed_item_list,json=overflowTransformedItemList,proto3" json:"overflow_transformed_item_list,omitempty"`
}

func (x *ItemAddHintNotify) Reset() {
	*x = ItemAddHintNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAddHintNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAddHintNotify) ProtoMessage() {}

func (x *ItemAddHintNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAddHintNotify.ProtoReflect.Descriptor instead.
func (*ItemAddHintNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{5}
}

func (x *ItemAddHintNotify) GetIsPositionValid() bool {
	if x != nil {
		return x.IsPositionValid
	}
	return false
}

func (x *ItemAddHintNotify) GetQuestId() uint32 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ItemAddHintNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *ItemAddHintNotify) GetIsGeneralRewardHiden() bool {
	if x != nil {
		return x.IsGeneralRewardHiden
	}
	return false
}

func (x *ItemAddHintNotify) GetItemList() []*ItemHint {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *ItemAddHintNotify) GetIsTransferedFromAvatarCard() bool {
	if x != nil {
		return x.IsTransferedFromAvatarCard
	}
	return false
}

func (x *ItemAddHintNotify) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ItemAddHintNotify) GetOverflowTransformedItemList() []*ItemHint {
	if x != nil {
		return x.OverflowTransformedItemList
	}
	return nil
}

type UseItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                uint32 `protobuf:"varint,13,opt,name=count,proto3" json:"count,omitempty"`
	TargetGuid           uint64 `protobuf:"varint,14,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
	Guid                 uint64 `protobuf:"varint,10,opt,name=guid,proto3" json:"guid,omitempty"`
	IsEnterMpDungeonTeam bool   `protobuf:"varint,15,opt,name=is_enter_mp_dungeon_team,json=isEnterMpDungeonTeam,proto3" json:"is_enter_mp_dungeon_team,omitempty"`
	OptionIdx            uint32 `protobuf:"varint,7,opt,name=option_idx,json=optionIdx,proto3" json:"option_idx,omitempty"`
}

func (x *UseItemReq) Reset() {
	*x = UseItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemReq) ProtoMessage() {}

func (x *UseItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemReq.ProtoReflect.Descriptor instead.
func (*UseItemReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{6}
}

func (x *UseItemReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UseItemReq) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

func (x *UseItemReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *UseItemReq) GetIsEnterMpDungeonTeam() bool {
	if x != nil {
		return x.IsEnterMpDungeonTeam
	}
	return false
}

func (x *UseItemReq) GetOptionIdx() uint32 {
	if x != nil {
		return x.OptionIdx
	}
	return 0
}

type UseItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid       uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
	TargetGuid uint64 `protobuf:"varint,1,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
	ItemId     uint32 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	OptionIdx  uint32 `protobuf:"varint,8,opt,name=option_idx,json=optionIdx,proto3" json:"option_idx,omitempty"`
	Retcode    int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *UseItemRsp) Reset() {
	*x = UseItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemRsp) ProtoMessage() {}

func (x *UseItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemRsp.ProtoReflect.Descriptor instead.
func (*UseItemRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{7}
}

func (x *UseItemRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *UseItemRsp) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

func (x *UseItemRsp) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *UseItemRsp) GetOptionIdx() uint32 {
	if x != nil {
		return x.OptionIdx
	}
	return 0
}

func (x *UseItemRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DropItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos       *Vector   `protobuf:"bytes,11,opt,name=pos,proto3" json:"pos,omitempty"`
	StoreType StoreType `protobuf:"varint,1,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
	Count     uint32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Guid      uint64    `protobuf:"varint,13,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *DropItemReq) Reset() {
	*x = DropItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemReq) ProtoMessage() {}

func (x *DropItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemReq.ProtoReflect.Descriptor instead.
func (*DropItemReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{8}
}

func (x *DropItemReq) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *DropItemReq) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

func (x *DropItemReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DropItemReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type DropItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32     `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Guid      uint64    `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	StoreType StoreType `protobuf:"varint,15,opt,name=store_type,json=storeType,proto3,enum=proto.StoreType" json:"store_type,omitempty"`
}

func (x *DropItemRsp) Reset() {
	*x = DropItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemRsp) ProtoMessage() {}

func (x *DropItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemRsp.ProtoReflect.Descriptor instead.
func (*DropItemRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{9}
}

func (x *DropItemRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *DropItemRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *DropItemRsp) GetStoreType() StoreType {
	if x != nil {
		return x.StoreType
	}
	return StoreType_STORE_NONE
}

type WearEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipGuid  uint64 `protobuf:"varint,7,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,5,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *WearEquipReq) Reset() {
	*x = WearEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WearEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearEquipReq) ProtoMessage() {}

func (x *WearEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearEquipReq.ProtoReflect.Descriptor instead.
func (*WearEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{10}
}

func (x *WearEquipReq) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *WearEquipReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type WearEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	EquipGuid  uint64 `protobuf:"varint,1,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *WearEquipRsp) Reset() {
	*x = WearEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WearEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearEquipRsp) ProtoMessage() {}

func (x *WearEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearEquipRsp.ProtoReflect.Descriptor instead.
func (*WearEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{11}
}

func (x *WearEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WearEquipRsp) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *WearEquipRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type TakeoffEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,8,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Slot       uint32 `protobuf:"varint,15,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *TakeoffEquipReq) Reset() {
	*x = TakeoffEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeoffEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoffEquipReq) ProtoMessage() {}

func (x *TakeoffEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoffEquipReq.ProtoReflect.Descriptor instead.
func (*TakeoffEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{12}
}

func (x *TakeoffEquipReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *TakeoffEquipReq) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type TakeoffEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,9,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Slot       uint32 `protobuf:"varint,10,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *TakeoffEquipRsp) Reset() {
	*x = TakeoffEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeoffEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoffEquipRsp) ProtoMessage() {}

func (x *TakeoffEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoffEquipRsp.ProtoReflect.Descriptor instead.
func (*TakeoffEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{13}
}

func (x *TakeoffEquipRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *TakeoffEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeoffEquipRsp) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type AvatarEquipChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64              `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EquipGuid  uint64              `protobuf:"varint,13,opt,name=equip_guid,json=equipGuid,proto3" json:"equip_guid,omitempty"`
	Reliquary  *SceneReliquaryInfo `protobuf:"bytes,1,opt,name=reliquary,proto3" json:"reliquary,omitempty"`
	Weapon     *SceneWeaponInfo    `protobuf:"bytes,15,opt,name=weapon,proto3" json:"weapon,omitempty"`
	ItemId     uint32              `protobuf:"varint,14,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	EquipType  uint32              `protobuf:"varint,8,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
}

func (x *AvatarEquipChangeNotify) Reset() {
	*x = AvatarEquipChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarEquipChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarEquipChangeNotify) ProtoMessage() {}

func (x *AvatarEquipChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarEquipChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarEquipChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{14}
}

func (x *AvatarEquipChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetEquipGuid() uint64 {
	if x != nil {
		return x.EquipGuid
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetReliquary() *SceneReliquaryInfo {
	if x != nil {
		return x.Reliquary
	}
	return nil
}

func (x *AvatarEquipChangeNotify) GetWeapon() *SceneWeaponInfo {
	if x != nil {
		return x.Weapon
	}
	return nil
}

func (x *AvatarEquipChangeNotify) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AvatarEquipChangeNotify) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

type WeaponUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodWeaponGuidList []uint64     `protobuf:"varint,1,rep,packed,name=food_weapon_guid_list,json=foodWeaponGuidList,proto3" json:"food_weapon_guid_list,omitempty"`
	ItemParamList      []*ItemParam `protobuf:"bytes,15,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetWeaponGuid   uint64       `protobuf:"varint,4,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponUpgradeReq) Reset() {
	*x = WeaponUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponUpgradeReq) ProtoMessage() {}

func (x *WeaponUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponUpgradeReq.ProtoReflect.Descriptor instead.
func (*WeaponUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{15}
}

func (x *WeaponUpgradeReq) GetFoodWeaponGuidList() []uint64 {
	if x != nil {
		return x.FoodWeaponGuidList
	}
	return nil
}

func (x *WeaponUpgradeReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *WeaponUpgradeReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel         uint32       `protobuf:"varint,7,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	Retcode          int32        `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OldLevel         uint32       `protobuf:"varint,8,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	ItemParamList    []*ItemParam `protobuf:"bytes,2,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetWeaponGuid uint64       `protobuf:"varint,6,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponUpgradeRsp) Reset() {
	*x = WeaponUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponUpgradeRsp) ProtoMessage() {}

func (x *WeaponUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponUpgradeRsp.ProtoReflect.Descriptor instead.
func (*WeaponUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{16}
}

func (x *WeaponUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *WeaponUpgradeRsp) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *WeaponUpgradeRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetWeaponGuid uint64 `protobuf:"varint,5,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponPromoteReq) Reset() {
	*x = WeaponPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPromoteReq) ProtoMessage() {}

func (x *WeaponPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPromoteReq.ProtoReflect.Descriptor instead.
func (*WeaponPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{17}
}

func (x *WeaponPromoteReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetWeaponGuid uint64 `protobuf:"varint,3,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	OldPromoteLevel  uint32 `protobuf:"varint,7,opt,name=old_promote_level,json=oldPromoteLevel,proto3" json:"old_promote_level,omitempty"`
	CurPromoteLevel  uint32 `protobuf:"varint,12,opt,name=cur_promote_level,json=curPromoteLevel,proto3" json:"cur_promote_level,omitempty"`
	Retcode          int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *WeaponPromoteRsp) Reset() {
	*x = WeaponPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponPromoteRsp) ProtoMessage() {}

func (x *WeaponPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponPromoteRsp.ProtoReflect.Descriptor instead.
func (*WeaponPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{18}
}

func (x *WeaponPromoteRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *WeaponPromoteRsp) GetOldPromoteLevel() uint32 {
	if x != nil {
		return x.OldPromoteLevel
	}
	return 0
}

func (x *WeaponPromoteRsp) GetCurPromoteLevel() uint32 {
	if x != nil {
		return x.CurPromoteLevel
	}
	return 0
}

func (x *WeaponPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemParamList         []*ItemParam `protobuf:"bytes,11,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	TargetReliquaryGuid   uint64       `protobuf:"varint,6,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	FoodReliquaryGuidList []uint64     `protobuf:"varint,12,rep,packed,name=food_reliquary_guid_list,json=foodReliquaryGuidList,proto3" json:"food_reliquary_guid_list,omitempty"`
}

func (x *ReliquaryUpgradeReq) Reset() {
	*x = ReliquaryUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryUpgradeReq) ProtoMessage() {}

func (x *ReliquaryUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryUpgradeReq.ProtoReflect.Descriptor instead.
func (*ReliquaryUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{19}
}

func (x *ReliquaryUpgradeReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *ReliquaryUpgradeReq) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryUpgradeReq) GetFoodReliquaryGuidList() []uint64 {
	if x != nil {
		return x.FoodReliquaryGuidList
	}
	return nil
}

type ReliquaryUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldLevel            uint32   `protobuf:"varint,4,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	CurLevel            uint32   `protobuf:"varint,13,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	TargetReliquaryGuid uint64   `protobuf:"varint,9,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	CurAppendPropList   []uint32 `protobuf:"varint,2,rep,packed,name=cur_append_prop_list,json=curAppendPropList,proto3" json:"cur_append_prop_list,omitempty"`
	PowerUpRate         uint32   `protobuf:"varint,6,opt,name=power_up_rate,json=powerUpRate,proto3" json:"power_up_rate,omitempty"`
	OldAppendPropList   []uint32 `protobuf:"varint,15,rep,packed,name=old_append_prop_list,json=oldAppendPropList,proto3" json:"old_append_prop_list,omitempty"`
	Retcode             int32    `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ReliquaryUpgradeRsp) Reset() {
	*x = ReliquaryUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryUpgradeRsp) ProtoMessage() {}

func (x *ReliquaryUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryUpgradeRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{20}
}

func (x *ReliquaryUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetCurAppendPropList() []uint32 {
	if x != nil {
		return x.CurAppendPropList
	}
	return nil
}

func (x *ReliquaryUpgradeRsp) GetPowerUpRate() uint32 {
	if x != nil {
		return x.PowerUpRate
	}
	return 0
}

func (x *ReliquaryUpgradeRsp) GetOldAppendPropList() []uint32 {
	if x != nil {
		return x.OldAppendPropList
	}
	return nil
}

func (x *ReliquaryUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuid   uint64 `protobuf:"varint,10,opt,name=item_guid,json=itemGuid,proto3" json:"item_guid,omitempty"`
	TargetGuid uint64 `protobuf:"varint,13,opt,name=target_guid,json=targetGuid,proto3" json:"target_guid,omitempty"`
}

func (x *ReliquaryPromoteReq) Reset() {
	*x = ReliquaryPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryPromoteReq) ProtoMessage() {}

func (x *ReliquaryPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryPromoteReq.ProtoReflect.Descriptor instead.
func (*ReliquaryPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{21}
}

func (x *ReliquaryPromoteReq) GetItemGuid() uint64 {
	if x != nil {
		return x.ItemGuid
	}
	return 0
}

func (x *ReliquaryPromoteReq) GetTargetGuid() uint64 {
	if x != nil {
		return x.TargetGuid
	}
	return 0
}

type ReliquaryPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPromoteLevel     uint32   `protobuf:"varint,10,opt,name=old_promote_level,json=oldPromoteLevel,proto3" json:"old_promote_level,omitempty"`
	TargetReliquaryGuid uint64   `protobuf:"varint,6,opt,name=target_reliquary_guid,json=targetReliquaryGuid,proto3" json:"target_reliquary_guid,omitempty"`
	CurAppendPropList   []uint32 `protobuf:"varint,9,rep,packed,name=cur_append_prop_list,json=curAppendPropList,proto3" json:"cur_append_prop_list,omitempty"`
	Retcode             int32    `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurPromoteLevel     uint32   `protobuf:"varint,2,opt,name=cur_promote_level,json=curPromoteLevel,proto3" json:"cur_promote_level,omitempty"`
	OldAppendPropList   []uint32 `protobuf:"varint,8,rep,packed,name=old_append_prop_list,json=oldAppendPropList,proto3" json:"old_append_prop_list,omitempty"`
}

func (x *ReliquaryPromoteRsp) Reset() {
	*x = ReliquaryPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryPromoteRsp) ProtoMessage() {}

func (x *ReliquaryPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryPromoteRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{22}
}

func (x *ReliquaryPromoteRsp) GetOldPromoteLevel() uint32 {
	if x != nil {
		return x.OldPromoteLevel
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetTargetReliquaryGuid() uint64 {
	if x != nil {
		return x.TargetReliquaryGuid
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetCurAppendPropList() []uint32 {
	if x != nil {
		return x.CurAppendPropList
	}
	return nil
}

func (x *ReliquaryPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetCurPromoteLevel() uint32 {
	if x != nil {
		return x.CurPromoteLevel
	}
	return 0
}

func (x *ReliquaryPromoteRsp) GetOldAppendPropList() []uint32 {
	if x != nil {
		return x.OldAppendPropList
	}
	return nil
}

type AvatarCardChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     uint32 `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Count      uint32 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AvatarCardChangeReq) Reset() {
	*x = AvatarCardChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarCardChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarCardChangeReq) ProtoMessage() {}

func (x *AvatarCardChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarCardChangeReq.ProtoReflect.Descriptor instead.
func (*AvatarCardChangeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{23}
}

func (x *AvatarCardChangeReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AvatarCardChangeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarCardChangeReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AvatarCardChangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarCardChangeRsp) Reset() {
	*x = AvatarCardChangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarCardChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarCardChangeRsp) ProtoMessage() {}

func (x *AvatarCardChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarCardChangeRsp.ProtoReflect.Descriptor instead.
func (*AvatarCardChangeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{24}
}

func (x *AvatarCardChangeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GrantRewardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward *Reward `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *GrantRewardNotify) Reset() {
	*x = GrantRewardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRewardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRewardNotify) ProtoMessage() {}

func (x *GrantRewardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRewardNotify.ProtoReflect.Descriptor instead.
func (*GrantRewardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{25}
}

func (x *GrantRewardNotify) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type WeaponAwakenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuid         uint64            `protobuf:"varint,10,opt,name=item_guid,json=itemGuid,proto3" json:"item_guid,omitempty"`
	AffixLevelMap    map[uint32]uint32 `protobuf:"bytes,7,rep,name=affix_level_map,json=affixLevelMap,proto3" json:"affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TargetWeaponGuid uint64            `protobuf:"varint,9,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *WeaponAwakenReq) Reset() {
	*x = WeaponAwakenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponAwakenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponAwakenReq) ProtoMessage() {}

func (x *WeaponAwakenReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponAwakenReq.ProtoReflect.Descriptor instead.
func (*WeaponAwakenReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{26}
}

func (x *WeaponAwakenReq) GetItemGuid() uint64 {
	if x != nil {
		return x.ItemGuid
	}
	return 0
}

func (x *WeaponAwakenReq) GetAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.AffixLevelMap
	}
	return nil
}

func (x *WeaponAwakenReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type WeaponAwakenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32             `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid              uint64            `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	OldAffixLevelMap        map[uint32]uint32 `protobuf:"bytes,4,rep,name=old_affix_level_map,json=oldAffixLevelMap,proto3" json:"old_affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TargetWeaponAwakenLevel uint32            `protobuf:"varint,2,opt,name=target_weapon_awaken_level,json=targetWeaponAwakenLevel,proto3" json:"target_weapon_awaken_level,omitempty"`
	TargetWeaponGuid        uint64            `protobuf:"varint,15,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	CurAffixLevelMap        map[uint32]uint32 `protobuf:"bytes,11,rep,name=cur_affix_level_map,json=curAffixLevelMap,proto3" json:"cur_affix_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *WeaponAwakenRsp) Reset() {
	*x = WeaponAwakenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponAwakenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponAwakenRsp) ProtoMessage() {}

func (x *WeaponAwakenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponAwakenRsp.ProtoReflect.Descriptor instead.
func (*WeaponAwakenRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{27}
}

func (x *WeaponAwakenRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WeaponAwakenRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *WeaponAwakenRsp) GetOldAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.OldAffixLevelMap
	}
	return nil
}

func (x *WeaponAwakenRsp) GetTargetWeaponAwakenLevel() uint32 {
	if x != nil {
		return x.TargetWeaponAwakenLevel
	}
	return 0
}

func (x *WeaponAwakenRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *WeaponAwakenRsp) GetCurAffixLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.CurAffixLevelMap
	}
	return nil
}

type ItemCdGroupTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCdMap map[uint32]uint64 `protobuf:"bytes,9,rep,name=item_cd_map,json=itemCdMap,proto3" json:"item_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ItemCdGroupTimeNotify) Reset() {
	*x = ItemCdGroupTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCdGroupTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCdGroupTimeNotify) ProtoMessage() {}

func (x *ItemCdGroupTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCdGroupTimeNotify.ProtoReflect.Descriptor instead.
func (*ItemCdGroupTimeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{28}
}

func (x *ItemCdGroupTimeNotify) GetItemCdMap() map[uint32]uint64 {
	if x != nil {
		return x.ItemCdMap
	}
	return nil
}

type DropHintNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position   *Vector  `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	ItemIdList []uint32 `protobuf:"varint,14,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
}

func (x *DropHintNotify) Reset() {
	*x = DropHintNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropHintNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropHintNotify) ProtoMessage() {}

func (x *DropHintNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropHintNotify.ProtoReflect.Descriptor instead.
func (*DropHintNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{29}
}

func (x *DropHintNotify) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *DropHintNotify) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

type CombineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineCount uint32 `protobuf:"varint,12,opt,name=combine_count,json=combineCount,proto3" json:"combine_count,omitempty"`
	CombineId    uint32 `protobuf:"varint,9,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	AvatarGuid   uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *CombineReq) Reset() {
	*x = CombineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineReq) ProtoMessage() {}

func (x *CombineReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineReq.ProtoReflect.Descriptor instead.
func (*CombineReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{30}
}

func (x *CombineReq) GetCombineCount() uint32 {
	if x != nil {
		return x.CombineCount
	}
	return 0
}

func (x *CombineReq) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type CombineRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostItemList        []*ItemParam `protobuf:"bytes,3,rep,name=cost_item_list,json=costItemList,proto3" json:"cost_item_list,omitempty"`
	Retcode             int32        `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TotalExtraItemList  []*ItemParam `protobuf:"bytes,6,rep,name=total_extra_item_list,json=totalExtraItemList,proto3" json:"total_extra_item_list,omitempty"`
	CombineId           uint32       `protobuf:"varint,11,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	TotalRandomItemList []*ItemParam `protobuf:"bytes,9,rep,name=total_random_item_list,json=totalRandomItemList,proto3" json:"total_random_item_list,omitempty"`
	ResultItemList      []*ItemParam `protobuf:"bytes,2,rep,name=result_item_list,json=resultItemList,proto3" json:"result_item_list,omitempty"`
	CombineCount        uint32       `protobuf:"varint,13,opt,name=combine_count,json=combineCount,proto3" json:"combine_count,omitempty"`
	TotalReturnItemList []*ItemParam `protobuf:"bytes,12,rep,name=total_return_item_list,json=totalReturnItemList,proto3" json:"total_return_item_list,omitempty"`
	AvatarGuid          uint64       `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *CombineRsp) Reset() {
	*x = CombineRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineRsp) ProtoMessage() {}

func (x *CombineRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineRsp.ProtoReflect.Descriptor instead.
func (*CombineRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{31}
}

func (x *CombineRsp) GetCostItemList() []*ItemParam {
	if x != nil {
		return x.CostItemList
	}
	return nil
}

func (x *CombineRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CombineRsp) GetTotalExtraItemList() []*ItemParam {
	if x != nil {
		return x.TotalExtraItemList
	}
	return nil
}

func (x *CombineRsp) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineRsp) GetTotalRandomItemList() []*ItemParam {
	if x != nil {
		return x.TotalRandomItemList
	}
	return nil
}

func (x *CombineRsp) GetResultItemList() []*ItemParam {
	if x != nil {
		return x.ResultItemList
	}
	return nil
}

func (x *CombineRsp) GetCombineCount() uint32 {
	if x != nil {
		return x.CombineCount
	}
	return 0
}

func (x *CombineRsp) GetTotalReturnItemList() []*ItemParam {
	if x != nil {
		return x.TotalReturnItemList
	}
	return nil
}

func (x *CombineRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type ForgeQueueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishCount          uint32 `protobuf:"varint,13,opt,name=finish_count,json=finishCount,proto3" json:"finish_count,omitempty"`
	TotalFinishTimestamp uint32 `protobuf:"varint,14,opt,name=total_finish_timestamp,json=totalFinishTimestamp,proto3" json:"total_finish_timestamp,omitempty"`
	AvatarId             uint32 `protobuf:"varint,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	QueueId              uint32 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	UnfinishCount        uint32 `protobuf:"varint,10,opt,name=unfinish_count,json=unfinishCount,proto3" json:"unfinish_count,omitempty"`
	NextFinishTimestamp  uint32 `protobuf:"varint,11,opt,name=next_finish_timestamp,json=nextFinishTimestamp,proto3" json:"next_finish_timestamp,omitempty"`
	ForgeId              uint32 `protobuf:"varint,15,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
}

func (x *ForgeQueueData) Reset() {
	*x = ForgeQueueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueData) ProtoMessage() {}

func (x *ForgeQueueData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueData.ProtoReflect.Descriptor instead.
func (*ForgeQueueData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{32}
}

func (x *ForgeQueueData) GetFinishCount() uint32 {
	if x != nil {
		return x.FinishCount
	}
	return 0
}

func (x *ForgeQueueData) GetTotalFinishTimestamp() uint32 {
	if x != nil {
		return x.TotalFinishTimestamp
	}
	return 0
}

func (x *ForgeQueueData) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *ForgeQueueData) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *ForgeQueueData) GetUnfinishCount() uint32 {
	if x != nil {
		return x.UnfinishCount
	}
	return 0
}

func (x *ForgeQueueData) GetNextFinishTimestamp() uint32 {
	if x != nil {
		return x.NextFinishTimestamp
	}
	return 0
}

func (x *ForgeQueueData) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

type ForgeQueueDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueMap         map[uint32]*ForgeQueueData `protobuf:"bytes,7,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RemovedForgeQueueList []uint32                   `protobuf:"varint,6,rep,packed,name=removed_forge_queue_list,json=removedForgeQueueList,proto3" json:"removed_forge_queue_list,omitempty"`
}

func (x *ForgeQueueDataNotify) Reset() {
	*x = ForgeQueueDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueDataNotify) ProtoMessage() {}

func (x *ForgeQueueDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeQueueDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{33}
}

func (x *ForgeQueueDataNotify) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeQueueDataNotify) GetRemovedForgeQueueList() []uint32 {
	if x != nil {
		return x.RemovedForgeQueueList
	}
	return nil
}

type ForgeGetQueueDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForgeGetQueueDataReq) Reset() {
	*x = ForgeGetQueueDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeGetQueueDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeGetQueueDataReq) ProtoMessage() {}

func (x *ForgeGetQueueDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeGetQueueDataReq.ProtoReflect.Descriptor instead.
func (*ForgeGetQueueDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{34}
}

type ForgeGetQueueDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueMap map[uint32]*ForgeQueueData `protobuf:"bytes,2,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode       int32                      `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaxQueueNum   uint32                     `protobuf:"varint,6,opt,name=max_queue_num,json=maxQueueNum,proto3" json:"max_queue_num,omitempty"`
}

func (x *ForgeGetQueueDataRsp) Reset() {
	*x = ForgeGetQueueDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeGetQueueDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeGetQueueDataRsp) ProtoMessage() {}

func (x *ForgeGetQueueDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeGetQueueDataRsp.ProtoReflect.Descriptor instead.
func (*ForgeGetQueueDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{35}
}

func (x *ForgeGetQueueDataRsp) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeGetQueueDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ForgeGetQueueDataRsp) GetMaxQueueNum() uint32 {
	if x != nil {
		return x.MaxQueueNum
	}
	return 0
}

type ForgeStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId   uint32 `protobuf:"varint,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	ForgeId    uint32 `protobuf:"varint,4,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
	ForgeCount uint32 `protobuf:"varint,6,opt,name=forge_count,json=forgeCount,proto3" json:"forge_count,omitempty"`
}

func (x *ForgeStartReq) Reset() {
	*x = ForgeStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeStartReq) ProtoMessage() {}

func (x *ForgeStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeStartReq.ProtoReflect.Descriptor instead.
func (*ForgeStartReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{36}
}

func (x *ForgeStartReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *ForgeStartReq) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

func (x *ForgeStartReq) GetForgeCount() uint32 {
	if x != nil {
		return x.ForgeCount
	}
	return 0
}

type ForgeStartRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ForgeStartRsp) Reset() {
	*x = ForgeStartRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeStartRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeStartRsp) ProtoMessage() {}

func (x *ForgeStartRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeStartRsp.ProtoReflect.Descriptor instead.
func (*ForgeStartRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{37}
}

func (x *ForgeStartRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ForgeQueueManipulateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeQueueId   uint32                   `protobuf:"varint,5,opt,name=forge_queue_id,json=forgeQueueId,proto3" json:"forge_queue_id,omitempty"`
	ManipulateType ForgeQueueManipulateType `protobuf:"varint,13,opt,name=manipulate_type,json=manipulateType,proto3,enum=proto.ForgeQueueManipulateType" json:"manipulate_type,omitempty"`
}

func (x *ForgeQueueManipulateReq) Reset() {
	*x = ForgeQueueManipulateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueManipulateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueManipulateReq) ProtoMessage() {}

func (x *ForgeQueueManipulateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueManipulateReq.ProtoReflect.Descriptor instead.
func (*ForgeQueueManipulateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{38}
}

func (x *ForgeQueueManipulateReq) GetForgeQueueId() uint32 {
	if x != nil {
		return x.ForgeQueueId
	}
	return 0
}

func (x *ForgeQueueManipulateReq) GetManipulateType() ForgeQueueManipulateType {
	if x != nil {
		return x.ManipulateType
	}
	return ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT
}

type ForgeQueueManipulateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManipulateType      ForgeQueueManipulateType `protobuf:"varint,4,opt,name=manipulate_type,json=manipulateType,proto3,enum=proto.ForgeQueueManipulateType" json:"manipulate_type,omitempty"`
	ExtraOutputItemList []*ItemParam             `protobuf:"bytes,13,rep,name=extra_output_item_list,json=extraOutputItemList,proto3" json:"extra_output_item_list,omitempty"`
	ReturnItemList      []*ItemParam             `protobuf:"bytes,10,rep,name=return_item_list,json=returnItemList,proto3" json:"return_item_list,omitempty"`
	Retcode             int32                    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OutputItemList      []*ItemParam             `protobuf:"bytes,9,rep,name=output_item_list,json=outputItemList,proto3" json:"output_item_list,omitempty"`
}

func (x *ForgeQueueManipulateRsp) Reset() {
	*x = ForgeQueueManipulateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeQueueManipulateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeQueueManipulateRsp) ProtoMessage() {}

func (x *ForgeQueueManipulateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeQueueManipulateRsp.ProtoReflect.Descriptor instead.
func (*ForgeQueueManipulateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{39}
}

func (x *ForgeQueueManipulateRsp) GetManipulateType() ForgeQueueManipulateType {
	if x != nil {
		return x.ManipulateType
	}
	return ForgeQueueManipulateType_FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT
}

func (x *ForgeQueueManipulateRsp) GetExtraOutputItemList() []*ItemParam {
	if x != nil {
		return x.ExtraOutputItemList
	}
	return nil
}

func (x *ForgeQueueManipulateRsp) GetReturnItemList() []*ItemParam {
	if x != nil {
		return x.ReturnItemList
	}
	return nil
}

func (x *ForgeQueueManipulateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ForgeQueueManipulateRsp) GetOutputItemList() []*ItemParam {
	if x != nil {
		return x.OutputItemList
	}
	return nil
}

type ResinChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextAddTimestamp uint32 `protobuf:"varint,6,opt,name=next_add_timestamp,json=nextAddTimestamp,proto3" json:"next_add_timestamp,omitempty"`
	CurBuyCount      uint32 `protobuf:"varint,4,opt,name=cur_buy_count,json=curBuyCount,proto3" json:"cur_buy_count,omitempty"`
	CurValue         uint32 `protobuf:"varint,12,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
}

func (x *ResinChangeNotify) Reset() {
	*x = ResinChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResinChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResinChangeNotify) ProtoMessage() {}

func (x *ResinChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResinChangeNotify.ProtoReflect.Descriptor instead.
func (*ResinChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{40}
}

func (x *ResinChangeNotify) GetNextAddTimestamp() uint32 {
	if x != nil {
		return x.NextAddTimestamp
	}
	return 0
}

func (x *ResinChangeNotify) GetCurBuyCount() uint32 {
	if x != nil {
		return x.CurBuyCount
	}
	return 0
}

func (x *ResinChangeNotify) GetCurValue() uint32 {
	if x != nil {
		return x.CurValue
	}
	return 0
}

type BuyResinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuyResinReq) Reset() {
	*x = BuyResinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResinReq) ProtoMessage() {}

func (x *BuyResinReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResinReq.ProtoReflect.Descriptor instead.
func (*BuyResinReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{41}
}

type BuyResinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurValue uint32 `protobuf:"varint,10,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
	Retcode  int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *BuyResinRsp) Reset() {
	*x = BuyResinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResinRsp) ProtoMessage() {}

func (x *BuyResinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResinRsp.ProtoReflect.Descriptor instead.
func (*BuyResinRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{42}
}

func (x *BuyResinRsp) GetCurValue() uint32 {
	if x != nil {
		return x.CurValue
	}
	return 0
}

func (x *BuyResinRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterialDeleteReturnNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnItemMap     map[uint32]uint32        `protobuf:"bytes,5,rep,name=return_item_map,json=returnItemMap,proto3" json:"return_item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Type              MaterialDeleteReturnType `protobuf:"varint,8,opt,name=type,proto3,enum=proto.MaterialDeleteReturnType" json:"type,omitempty"`
	DeleteMaterialMap map[uint32]uint32        `protobuf:"bytes,6,rep,name=delete_material_map,json=deleteMaterialMap,proto3" json:"delete_material_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MaterialDeleteReturnNotify) Reset() {
	*x = MaterialDeleteReturnNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialDeleteReturnNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialDeleteReturnNotify) ProtoMessage() {}

func (x *MaterialDeleteReturnNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialDeleteReturnNotify.ProtoReflect.Descriptor instead.
func (*MaterialDeleteReturnNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{43}
}

func (x *MaterialDeleteReturnNotify) GetReturnItemMap() map[uint32]uint32 {
	if x != nil {
		return x.ReturnItemMap
	}
	return nil
}

func (x *MaterialDeleteReturnNotify) GetType() MaterialDeleteReturnType {
	if x != nil {
		return x.Type
	}
	return MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG
}

func (x *MaterialDeleteReturnNotify) GetDeleteMaterialMap() map[uint32]uint32 {
	if x != nil {
		return x.DeleteMaterialMap
	}
	return nil
}

type TakeMaterialDeleteReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MaterialDeleteReturnType `protobuf:"varint,8,opt,name=type,proto3,enum=proto.MaterialDeleteReturnType" json:"type,omitempty"`
}

func (x *TakeMaterialDeleteReturnReq) Reset() {
	*x = TakeMaterialDeleteReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeMaterialDeleteReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeMaterialDeleteReturnReq) ProtoMessage() {}

func (x *TakeMaterialDeleteReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeMaterialDeleteReturnReq.ProtoReflect.Descriptor instead.
func (*TakeMaterialDeleteReturnReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{44}
}

func (x *TakeMaterialDeleteReturnReq) GetType() MaterialDeleteReturnType {
	if x != nil {
		return x.Type
	}
	return MaterialDeleteReturnType_MATERIAL_DELETE_RETURN_BAG
}

type TakeMaterialDeleteReturnRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeMaterialDeleteReturnRsp) Reset() {
	*x = TakeMaterialDeleteReturnRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeMaterialDeleteReturnRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeMaterialDeleteReturnRsp) ProtoMessage() {}

func (x *TakeMaterialDeleteReturnRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeMaterialDeleteReturnRsp.ProtoReflect.Descriptor instead.
func (*TakeMaterialDeleteReturnRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{45}
}

func (x *TakeMaterialDeleteReturnRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterialDeleteUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MaterialDeleteUpdateNotify) Reset() {
	*x = MaterialDeleteUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialDeleteUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialDeleteUpdateNotify) ProtoMessage() {}

func (x *MaterialDeleteUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialDeleteUpdateNotify.ProtoReflect.Descriptor instead.
func (*MaterialDeleteUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{46}
}

type McoinExchangeHcoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcoin     uint32 `protobuf:"varint,5,opt,name=hcoin,proto3" json:"hcoin,omitempty"`
	McoinCost uint32 `protobuf:"varint,1,opt,name=mcoin_cost,json=mcoinCost,proto3" json:"mcoin_cost,omitempty"`
}

func (x *McoinExchangeHcoinReq) Reset() {
	*x = McoinExchangeHcoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *McoinExchangeHcoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McoinExchangeHcoinReq) ProtoMessage() {}

func (x *McoinExchangeHcoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McoinExchangeHcoinReq.ProtoReflect.Descriptor instead.
func (*McoinExchangeHcoinReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{47}
}

func (x *McoinExchangeHcoinReq) GetHcoin() uint32 {
	if x != nil {
		return x.Hcoin
	}
	return 0
}

func (x *McoinExchangeHcoinReq) GetMcoinCost() uint32 {
	if x != nil {
		return x.McoinCost
	}
	return 0
}

type McoinExchangeHcoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	McoinCost uint32 `protobuf:"varint,8,opt,name=mcoin_cost,json=mcoinCost,proto3" json:"mcoin_cost,omitempty"`
	Hcoin     uint32 `protobuf:"varint,7,opt,name=hcoin,proto3" json:"hcoin,omitempty"`
	Retcode   int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *McoinExchangeHcoinRsp) Reset() {
	*x = McoinExchangeHcoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *McoinExchangeHcoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McoinExchangeHcoinRsp) ProtoMessage() {}

func (x *McoinExchangeHcoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McoinExchangeHcoinRsp.ProtoReflect.Descriptor instead.
func (*McoinExchangeHcoinRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{48}
}

func (x *McoinExchangeHcoinRsp) GetMcoinCost() uint32 {
	if x != nil {
		return x.McoinCost
	}
	return 0
}

func (x *McoinExchangeHcoinRsp) GetHcoin() uint32 {
	if x != nil {
		return x.Hcoin
	}
	return 0
}

func (x *McoinExchangeHcoinRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MaterilaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	Guid  uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *MaterilaInfo) Reset() {
	*x = MaterilaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterilaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterilaInfo) ProtoMessage() {}

func (x *MaterilaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterilaInfo.ProtoReflect.Descriptor instead.
func (*MaterilaInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{49}
}

func (x *MaterilaInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MaterilaInfo) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type DestroyMaterialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialList []*MaterilaInfo `protobuf:"bytes,5,rep,name=material_list,json=materialList,proto3" json:"material_list,omitempty"`
}

func (x *DestroyMaterialReq) Reset() {
	*x = DestroyMaterialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyMaterialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyMaterialReq) ProtoMessage() {}

func (x *DestroyMaterialReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyMaterialReq.ProtoReflect.Descriptor instead.
func (*DestroyMaterialReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{50}
}

func (x *DestroyMaterialReq) GetMaterialList() []*MaterilaInfo {
	if x != nil {
		return x.MaterialList
	}
	return nil
}

type DestroyMaterialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCountList []uint32 `protobuf:"varint,12,rep,packed,name=item_count_list,json=itemCountList,proto3" json:"item_count_list,omitempty"`
	ItemIdList    []uint32 `protobuf:"varint,13,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
	Retcode       int32    `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *DestroyMaterialRsp) Reset() {
	*x = DestroyMaterialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyMaterialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyMaterialRsp) ProtoMessage() {}

func (x *DestroyMaterialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyMaterialRsp.ProtoReflect.Descriptor instead.
func (*DestroyMaterialRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{51}
}

func (x *DestroyMaterialRsp) GetItemCountList() []uint32 {
	if x != nil {
		return x.ItemCountList
	}
	return nil
}

func (x *DestroyMaterialRsp) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

func (x *DestroyMaterialRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetEquipLockStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked        bool   `protobuf:"varint,15,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	TargetEquipGuid uint64 `protobuf:"varint,9,opt,name=target_equip_guid,json=targetEquipGuid,proto3" json:"target_equip_guid,omitempty"`
}

func (x *SetEquipLockStateReq) Reset() {
	*x = SetEquipLockStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEquipLockStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEquipLockStateReq) ProtoMessage() {}

func (x *SetEquipLockStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEquipLockStateReq.ProtoReflect.Descriptor instead.
func (*SetEquipLockStateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{52}
}

func (x *SetEquipLockStateReq) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *SetEquipLockStateReq) GetTargetEquipGuid() uint64 {
	if x != nil {
		return x.TargetEquipGuid
	}
	return 0
}

type SetEquipLockStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetEquipGuid uint64 `protobuf:"varint,14,opt,name=target_equip_guid,json=targetEquipGuid,proto3" json:"target_equip_guid,omitempty"`
	Retcode         int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsLocked        bool   `protobuf:"varint,10,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *SetEquipLockStateRsp) Reset() {
	*x = SetEquipLockStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEquipLockStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEquipLockStateRsp) ProtoMessage() {}

func (x *SetEquipLockStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEquipLockStateRsp.ProtoReflect.Descriptor instead.
func (*SetEquipLockStateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{53}
}

func (x *SetEquipLockStateRsp) GetTargetEquipGuid() uint64 {
	if x != nil {
		return x.TargetEquipGuid
	}
	return 0
}

func (x *SetEquipLockStateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetEquipLockStateRsp) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type CalcWeaponUpgradeReturnItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodWeaponGuidList []uint64     `protobuf:"varint,15,rep,packed,name=food_weapon_guid_list,json=foodWeaponGuidList,proto3" json:"food_weapon_guid_list,omitempty"`
	TargetWeaponGuid   uint64       `protobuf:"varint,12,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
	ItemParamList      []*ItemParam `protobuf:"bytes,3,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
}

func (x *CalcWeaponUpgradeReturnItemsReq) Reset() {
	*x = CalcWeaponUpgradeReturnItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcWeaponUpgradeReturnItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcWeaponUpgradeReturnItemsReq) ProtoMessage() {}

func (x *CalcWeaponUpgradeReturnItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsReq.ProtoReflect.Descriptor instead.
func (*CalcWeaponUpgradeReturnItemsReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{54}
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetFoodWeaponGuidList() []uint64 {
	if x != nil {
		return x.FoodWeaponGuidList
	}
	return nil
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

func (x *CalcWeaponUpgradeReturnItemsReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

type CalcWeaponUpgradeReturnItemsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemParamList    []*ItemParam `protobuf:"bytes,4,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	Retcode          int32        `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetWeaponGuid uint64       `protobuf:"varint,8,opt,name=target_weapon_guid,json=targetWeaponGuid,proto3" json:"target_weapon_guid,omitempty"`
}

func (x *CalcWeaponUpgradeReturnItemsRsp) Reset() {
	*x = CalcWeaponUpgradeReturnItemsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcWeaponUpgradeReturnItemsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcWeaponUpgradeReturnItemsRsp) ProtoMessage() {}

func (x *CalcWeaponUpgradeReturnItemsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcWeaponUpgradeReturnItemsRsp.ProtoReflect.Descriptor instead.
func (*CalcWeaponUpgradeReturnItemsRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{55}
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CalcWeaponUpgradeReturnItemsRsp) GetTargetWeaponGuid() uint64 {
	if x != nil {
		return x.TargetWeaponGuid
	}
	return 0
}

type ForgeDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForgeIdList   []uint32                   `protobuf:"varint,5,rep,packed,name=forge_id_list,json=forgeIdList,proto3" json:"forge_id_list,omitempty"`
	ForgeQueueMap map[uint32]*ForgeQueueData `protobuf:"bytes,8,rep,name=forge_queue_map,json=forgeQueueMap,proto3" json:"forge_queue_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQueueNum   uint32                     `protobuf:"varint,14,opt,name=max_queue_num,json=maxQueueNum,proto3" json:"max_queue_num,omitempty"`
}

func (x *ForgeDataNotify) Reset() {
	*x = ForgeDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeDataNotify) ProtoMessage() {}

func (x *ForgeDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{56}
}

func (x *ForgeDataNotify) GetForgeIdList() []uint32 {
	if x != nil {
		return x.ForgeIdList
	}
	return nil
}

func (x *ForgeDataNotify) GetForgeQueueMap() map[uint32]*ForgeQueueData {
	if x != nil {
		return x.ForgeQueueMap
	}
	return nil
}

func (x *ForgeDataNotify) GetMaxQueueNum() uint32 {
	if x != nil {
		return x.MaxQueueNum
	}
	return 0
}

type ForgeFormulaDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked bool   `protobuf:"varint,15,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	ForgeId  uint32 `protobuf:"varint,13,opt,name=forge_id,json=forgeId,proto3" json:"forge_id,omitempty"`
}

func (x *ForgeFormulaDataNotify) Reset() {
	*x = ForgeFormulaDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgeFormulaDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgeFormulaDataNotify) ProtoMessage() {}

func (x *ForgeFormulaDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgeFormulaDataNotify.ProtoReflect.Descriptor instead.
func (*ForgeFormulaDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{57}
}

func (x *ForgeFormulaDataNotify) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *ForgeFormulaDataNotify) GetForgeId() uint32 {
	if x != nil {
		return x.ForgeId
	}
	return 0
}

type CombineDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineIdList []uint32 `protobuf:"varint,5,rep,packed,name=combine_id_list,json=combineIdList,proto3" json:"combine_id_list,omitempty"`
}

func (x *CombineDataNotify) Reset() {
	*x = CombineDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineDataNotify) ProtoMessage() {}

func (x *CombineDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineDataNotify.ProtoReflect.Descriptor instead.
func (*CombineDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{58}
}

func (x *CombineDataNotify) GetCombineIdList() []uint32 {
	if x != nil {
		return x.CombineIdList
	}
	return nil
}

type CombineFormulaDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId uint32 `protobuf:"varint,6,opt,name=combine_id,json=combineId,proto3" json:"combine_id,omitempty"`
	IsLocked  bool   `protobuf:"varint,3,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *CombineFormulaDataNotify) Reset() {
	*x = CombineFormulaDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineFormulaDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineFormulaDataNotify) ProtoMessage() {}

func (x *CombineFormulaDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineFormulaDataNotify.ProtoReflect.Descriptor instead.
func (*CombineFormulaDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{59}
}

func (x *CombineFormulaDataNotify) GetCombineId() uint32 {
	if x != nil {
		return x.CombineId
	}
	return 0
}

func (x *CombineFormulaDataNotify) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type ClosedItemNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIdList []uint32 `protobuf:"varint,8,rep,packed,name=item_id_list,json=itemIdList,proto3" json:"item_id_list,omitempty"`
}

func (x *ClosedItemNotify) Reset() {
	*x = ClosedItemNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosedItemNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosedItemNotify) ProtoMessage() {}

func (x *ClosedItemNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosedItemNotify.ProtoReflect.Descriptor instead.
func (*ClosedItemNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{60}
}

func (x *ClosedItemNotify) GetItemIdList() []uint32 {
	if x != nil {
		return x.ItemIdList
	}
	return nil
}

type CheckAddItemExceedLimitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDrop               bool                                                 `protobuf:"varint,5,opt,name=is_drop,json=isDrop,proto3" json:"is_drop,omitempty"`
	MsgType              CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3,enum=proto.CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType" json:"msg_type,omitempty"`
	ExceededItemTypeList []uint32                                             `protobuf:"varint,10,rep,packed,name=exceeded_item_type_list,json=exceededItemTypeList,proto3" json:"exceeded_item_type_list,omitempty"`
	ExceededItemList     []uint32                                             `protobuf:"varint,12,rep,packed,name=exceeded_item_list,json=exceededItemList,proto3" json:"exceeded_item_list,omitempty"`
	Reason               uint32                                               `protobuf:"varint,14,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CheckAddItemExceedLimitNotify) Reset() {
	*x = CheckAddItemExceedLimitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAddItemExceedLimitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAddItemExceedLimitNotify) ProtoMessage() {}

func (x *CheckAddItemExceedLimitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAddItemExceedLimitNotify.ProtoReflect.Descriptor instead.
func (*CheckAddItemExceedLimitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{61}
}

func (x *CheckAddItemExceedLimitNotify) GetIsDrop() bool {
	if x != nil {
		return x.IsDrop
	}
	return false
}

func (x *CheckAddItemExceedLimitNotify) GetMsgType() CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType {
	if x != nil {
		return x.MsgType
	}
	return CheckAddItemExceedLimitNotify_ITEM_EXCEED_LIMIT_MSG_DEFAULT
}

func (x *CheckAddItemExceedLimitNotify) GetExceededItemTypeList() []uint32 {
	if x != nil {
		return x.ExceededItemTypeList
	}
	return nil
}

func (x *CheckAddItemExceedLimitNotify) GetExceededItemList() []uint32 {
	if x != nil {
		return x.ExceededItemList
	}
	return nil
}

func (x *CheckAddItemExceedLimitNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type SetIsAutoUnlockSpecificEquipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAutoUnlockSpecificEquip bool `protobuf:"varint,14,opt,name=is_auto_unlock_specific_equip,json=isAutoUnlockSpecificEquip,proto3" json:"is_auto_unlock_specific_equip,omitempty"`
}

func (x *SetIsAutoUnlockSpecificEquipReq) Reset() {
	*x = SetIsAutoUnlockSpecificEquipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIsAutoUnlockSpecificEquipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIsAutoUnlockSpecificEquipReq) ProtoMessage() {}

func (x *SetIsAutoUnlockSpecificEquipReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipReq.ProtoReflect.Descriptor instead.
func (*SetIsAutoUnlockSpecificEquipReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{62}
}

func (x *SetIsAutoUnlockSpecificEquipReq) GetIsAutoUnlockSpecificEquip() bool {
	if x != nil {
		return x.IsAutoUnlockSpecificEquip
	}
	return false
}

type SetIsAutoUnlockSpecificEquipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetIsAutoUnlockSpecificEquipRsp) Reset() {
	*x = SetIsAutoUnlockSpecificEquipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIsAutoUnlockSpecificEquipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIsAutoUnlockSpecificEquipRsp) ProtoMessage() {}

func (x *SetIsAutoUnlockSpecificEquipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIsAutoUnlockSpecificEquipRsp.ProtoReflect.Descriptor instead.
func (*SetIsAutoUnlockSpecificEquipRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{63}
}

func (x *SetIsAutoUnlockSpecificEquipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReliquaryDecomposeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId    uint32   `protobuf:"varint,13,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	TargetCount uint32   `protobuf:"varint,9,opt,name=target_count,json=targetCount,proto3" json:"target_count,omitempty"`
	GuidList    []uint64 `protobuf:"varint,8,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
}

func (x *ReliquaryDecomposeReq) Reset() {
	*x = ReliquaryDecomposeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryDecomposeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryDecomposeReq) ProtoMessage() {}

func (x *ReliquaryDecomposeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryDecomposeReq.ProtoReflect.Descriptor instead.
func (*ReliquaryDecomposeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{64}
}

func (x *ReliquaryDecomposeReq) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ReliquaryDecomposeReq) GetTargetCount() uint32 {
	if x != nil {
		return x.TargetCount
	}
	return 0
}

func (x *ReliquaryDecomposeReq) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

type ReliquaryDecomposeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32    `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	GuidList []uint64 `protobuf:"varint,14,rep,packed,name=guid_list,json=guidList,proto3" json:"guid_list,omitempty"`
}

func (x *ReliquaryDecomposeRsp) Reset() {
	*x = ReliquaryDecomposeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryDecomposeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryDecomposeRsp) ProtoMessage() {}

func (x *ReliquaryDecomposeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryDecomposeRsp.ProtoReflect.Descriptor instead.
func (*ReliquaryDecomposeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{65}
}

func (x *ReliquaryDecomposeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ReliquaryDecomposeRsp) GetGuidList() []uint64 {
	if x != nil {
		return x.GuidList
	}
	return nil
}

type ReliquaryFilterStateSaveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReliquaryFilterStateMap map[uint32]uint32 `protobuf:"bytes,8,rep,name=reliquary_filter_state_map,json=reliquaryFilterStateMap,proto3" json:"reliquary_filter_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReliquaryFilterStateSaveNotify) Reset() {
	*x = ReliquaryFilterStateSaveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryFilterStateSaveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryFilterStateSaveNotify) ProtoMessage() {}

func (x *ReliquaryFilterStateSaveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryFilterStateSaveNotify.ProtoReflect.Descriptor instead.
func (*ReliquaryFilterStateSaveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{66}
}

func (x *ReliquaryFilterStateSaveNotify) GetReliquaryFilterStateMap() map[uint32]uint32 {
	if x != nil {
		return x.ReliquaryFilterStateMap
	}
	return nil
}

type ReliquaryFilterStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReliquaryFilterStateMap map[uint32]uint32 `protobuf:"bytes,5,rep,name=reliquary_filter_state_map,json=reliquaryFilterStateMap,proto3" json:"reliquary_filter_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReliquaryFilterStateNotify) Reset() {
	*x = ReliquaryFilterStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_item_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliquaryFilterStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliquaryFilterStateNotify) ProtoMessage() {}

func (x *ReliquaryFilterStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_item_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliquaryFilterStateNotify.ProtoReflect.Descriptor instead.
func (*ReliquaryFilterStateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_item_proto_rawDescGZIP(), []int{67}
}

func (x *ReliquaryFilterStateNotify) GetReliquaryFilterStateMap() map[uint32]uint32 {
	if x != nil {
		return x.ReliquaryFilterStateMap
	}
	return nil
}

var File_cmd_cmd_item_proto protoreflect.FileDescriptor

var file_cmd_cmd_item_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x28, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa0, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x83, 0x03, 0x0a,
	0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x69,
	0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x66, 0x75, 0x72,
	0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xba, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xe4, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfb, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x64, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x22, 0xeb, 0x03, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x69, 0x64, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x1e, 0x69, 0x73,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x1e, 0x6f, 0x76, 0x65,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdf, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x92,
	0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x70, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x4d, 0x70, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb2, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa1, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x0b, 0x44, 0x72, 0x6f,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xbb, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbb, 0x01, 0x0a, 0x0b, 0x44, 0x72, 0x6f,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xf7, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x57, 0x65, 0x61, 0x72, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x0c,
	0x57, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xa9, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66,
	0x66, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdd, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xaa, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xde, 0x02, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x87,
	0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x91, 0x02, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x66, 0x6f, 0x6f, 0x64, 0x57,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xff, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9d, 0x02, 0x0a, 0x10, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8d, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c,
	0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xee, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x81, 0x02, 0x0a, 0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0x99, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xa0, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x15, 0x66, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xdc, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf2, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x69,
	0x71, 0x75, 0x61, 0x72, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x14, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x11, 0x6f, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb5, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb7, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xf3, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xec, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x69, 0x71,
	0x75, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x14, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75,
	0x72, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xb6, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x7e, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xf2, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x97, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd5, 0x02,
	0x0a, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x12, 0x51,
	0x0a, 0x0f, 0x61, 0x66, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x2e,
	0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61,
	0x70, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x1a,
	0x40, 0x0a, 0x12, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb7,
	0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xca, 0x04, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x13, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x66, 0x66, 0x69,
	0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x4f, 0x6c, 0x64, 0x41, 0x66, 0x66,
	0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x6f, 0x6c, 0x64, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61,
	0x70, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x61, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c,
	0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x13,
	0x63, 0x75, 0x72, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x73,
	0x70, 0x2e, 0x43, 0x75, 0x72, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x75, 0x72, 0x41, 0x66, 0x66, 0x69,
	0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x1a, 0x43, 0x0a, 0x15, 0x4f, 0x6c, 0x64,
	0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43,
	0x0a, 0x15, 0x43, 0x75, 0x72, 0x41, 0x66, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xde, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xf1, 0x01, 0x0a, 0x15, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4b, 0x0a, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xfa, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x48,
	0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x8a, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd5, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x83, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa1, 0x04,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x43,
	0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x16, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xa2, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x97, 0x02, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75,
	0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6e, 0x65, 0x78,
	0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49, 0x64, 0x22, 0xe4, 0x02, 0x0a, 0x14,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x56, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x37, 0x0a, 0x18,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x15,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x57, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa4, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x7a, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x86, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd4,
	0x02, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x1a, 0x57, 0x0a,
	0x12, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x81, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x89, 0x05,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x78, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb3, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xed,
	0x01, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x48, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x69,
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf0, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8b,
	0x03, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x6d, 0x61,
	0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x13, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x3a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x90, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd1, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x42, 0x75, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x82,
	0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x71, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xda, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xeb, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf0,
	0x03, 0x0a, 0x1a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x5c, 0x0a,
	0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x68, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x95, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x54, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xf5, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x54,
	0x61, 0x6b, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x91, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x6b, 0x0a, 0x1a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbc,
	0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xb0, 0x01, 0x0a, 0x15, 0x4d, 0x63, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe8, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x4d, 0x63, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6d, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x68, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaf, 0x05, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x38, 0x0a, 0x0c, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0d,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x80, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xea, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x9a, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc8, 0x01, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x9c, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa0, 0x02, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x6f, 0x6f,
	0x64, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x66, 0x6f, 0x6f, 0x64, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xf9, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf2, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6c,
	0x63, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xac, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd4, 0x02,
	0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x1a, 0x57, 0x0a, 0x12,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xa8, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x75, 0x6c, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb1, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x93, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf8, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x83, 0x01, 0x0a, 0x10,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xe6, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x87, 0x04, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x56, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65,
	0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12,
	0x20, 0x0a, 0x1c, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10,
	0x02, 0x12, 0x29, 0x0a, 0x25, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f,
	0x47, 0x5f, 0x4e, 0x4f, 0x4e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb4, 0x05, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x1f,
	0x53, 0x65, 0x74, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xec,
	0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x49, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0x98, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfe, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb2, 0x01,
	0x0a, 0x15, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe3, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xd1, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x7f, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x72,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x84, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb4, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x6c, 0x69, 0x71,
	0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x7b, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x72, 0x65, 0x6c, 0x69, 0x71,
	0x75, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xae, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x2a, 0x76, 0x0a,
	0x18, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x2a, 0x46, 0x4f, 0x52,
	0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x50, 0x55, 0x4c,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45,
	0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x46, 0x4f, 0x52,
	0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x50, 0x55, 0x4c,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x46, 0x4f,
	0x52, 0x47, 0x45, 0x10, 0x01, 0x2a, 0x5b, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x42, 0x41, 0x47, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x53, 0x45, 0x45, 0x44,
	0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68,
	0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_item_proto_rawDescOnce sync.Once
	file_cmd_cmd_item_proto_rawDescData = file_cmd_cmd_item_proto_rawDesc
)

func file_cmd_cmd_item_proto_rawDescGZIP() []byte {
	file_cmd_cmd_item_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_item_proto_rawDescData)
	})
	return file_cmd_cmd_item_proto_rawDescData
}

var file_cmd_cmd_item_proto_enumTypes = make([]protoimpl.EnumInfo, 68)
var file_cmd_cmd_item_proto_msgTypes = make([]protoimpl.MessageInfo, 79)
var file_cmd_cmd_item_proto_goTypes = []interface{}{
	(ForgeQueueManipulateType)(0),                             // 0: proto.ForgeQueueManipulateType
	(MaterialDeleteReturnType)(0),                             // 1: proto.MaterialDeleteReturnType
	(PlayerStoreNotify_CmdId)(0),                              // 2: proto.PlayerStoreNotify.CmdId
	(StoreWeightLimitNotify_CmdId)(0),                         // 3: proto.StoreWeightLimitNotify.CmdId
	(StoreItemChangeNotify_CmdId)(0),                          // 4: proto.StoreItemChangeNotify.CmdId
	(StoreItemDelNotify_CmdId)(0),                             // 5: proto.StoreItemDelNotify.CmdId
	(ItemAddHintNotify_CmdId)(0),                              // 6: proto.ItemAddHintNotify.CmdId
	(UseItemReq_CmdId)(0),                                     // 7: proto.UseItemReq.CmdId
	(UseItemRsp_CmdId)(0),                                     // 8: proto.UseItemRsp.CmdId
	(DropItemReq_CmdId)(0),                                    // 9: proto.DropItemReq.CmdId
	(DropItemRsp_CmdId)(0),                                    // 10: proto.DropItemRsp.CmdId
	(WearEquipReq_CmdId)(0),                                   // 11: proto.WearEquipReq.CmdId
	(WearEquipRsp_CmdId)(0),                                   // 12: proto.WearEquipRsp.CmdId
	(TakeoffEquipReq_CmdId)(0),                                // 13: proto.TakeoffEquipReq.CmdId
	(TakeoffEquipRsp_CmdId)(0),                                // 14: proto.TakeoffEquipRsp.CmdId
	(AvatarEquipChangeNotify_CmdId)(0),                        // 15: proto.AvatarEquipChangeNotify.CmdId
	(WeaponUpgradeReq_CmdId)(0),                               // 16: proto.WeaponUpgradeReq.CmdId
	(WeaponUpgradeRsp_CmdId)(0),                               // 17: proto.WeaponUpgradeRsp.CmdId
	(WeaponPromoteReq_CmdId)(0),                               // 18: proto.WeaponPromoteReq.CmdId
	(WeaponPromoteRsp_CmdId)(0),                               // 19: proto.WeaponPromoteRsp.CmdId
	(ReliquaryUpgradeReq_CmdId)(0),                            // 20: proto.ReliquaryUpgradeReq.CmdId
	(ReliquaryUpgradeRsp_CmdId)(0),                            // 21: proto.ReliquaryUpgradeRsp.CmdId
	(ReliquaryPromoteReq_CmdId)(0),                            // 22: proto.ReliquaryPromoteReq.CmdId
	(ReliquaryPromoteRsp_CmdId)(0),                            // 23: proto.ReliquaryPromoteRsp.CmdId
	(AvatarCardChangeReq_CmdId)(0),                            // 24: proto.AvatarCardChangeReq.CmdId
	(AvatarCardChangeRsp_CmdId)(0),                            // 25: proto.AvatarCardChangeRsp.CmdId
	(GrantRewardNotify_CmdId)(0),                              // 26: proto.GrantRewardNotify.CmdId
	(WeaponAwakenReq_CmdId)(0),                                // 27: proto.WeaponAwakenReq.CmdId
	(WeaponAwakenRsp_CmdId)(0),                                // 28: proto.WeaponAwakenRsp.CmdId
	(ItemCdGroupTimeNotify_CmdId)(0),                          // 29: proto.ItemCdGroupTimeNotify.CmdId
	(DropHintNotify_CmdId)(0),                                 // 30: proto.DropHintNotify.CmdId
	(CombineReq_CmdId)(0),                                     // 31: proto.CombineReq.CmdId
	(CombineRsp_CmdId)(0),                                     // 32: proto.CombineRsp.CmdId
	(ForgeQueueDataNotify_CmdId)(0),                           // 33: proto.ForgeQueueDataNotify.CmdId
	(ForgeGetQueueDataReq_CmdId)(0),                           // 34: proto.ForgeGetQueueDataReq.CmdId
	(ForgeGetQueueDataRsp_CmdId)(0),                           // 35: proto.ForgeGetQueueDataRsp.CmdId
	(ForgeStartReq_CmdId)(0),                                  // 36: proto.ForgeStartReq.CmdId
	(ForgeStartRsp_CmdId)(0),                                  // 37: proto.ForgeStartRsp.CmdId
	(ForgeQueueManipulateReq_CmdId)(0),                        // 38: proto.ForgeQueueManipulateReq.CmdId
	(ForgeQueueManipulateRsp_CmdId)(0),                        // 39: proto.ForgeQueueManipulateRsp.CmdId
	(ResinChangeNotify_CmdId)(0),                              // 40: proto.ResinChangeNotify.CmdId
	(BuyResinReq_CmdId)(0),                                    // 41: proto.BuyResinReq.CmdId
	(BuyResinRsp_CmdId)(0),                                    // 42: proto.BuyResinRsp.CmdId
	(MaterialDeleteReturnNotify_CmdId)(0),                     // 43: proto.MaterialDeleteReturnNotify.CmdId
	(TakeMaterialDeleteReturnReq_CmdId)(0),                    // 44: proto.TakeMaterialDeleteReturnReq.CmdId
	(TakeMaterialDeleteReturnRsp_CmdId)(0),                    // 45: proto.TakeMaterialDeleteReturnRsp.CmdId
	(MaterialDeleteUpdateNotify_CmdId)(0),                     // 46: proto.MaterialDeleteUpdateNotify.CmdId
	(McoinExchangeHcoinReq_CmdId)(0),                          // 47: proto.McoinExchangeHcoinReq.CmdId
	(McoinExchangeHcoinRsp_CmdId)(0),                          // 48: proto.McoinExchangeHcoinRsp.CmdId
	(DestroyMaterialReq_CmdId)(0),                             // 49: proto.DestroyMaterialReq.CmdId
	(DestroyMaterialRsp_CmdId)(0),                             // 50: proto.DestroyMaterialRsp.CmdId
	(SetEquipLockStateReq_CmdId)(0),                           // 51: proto.SetEquipLockStateReq.CmdId
	(SetEquipLockStateRsp_CmdId)(0),                           // 52: proto.SetEquipLockStateRsp.CmdId
	(CalcWeaponUpgradeReturnItemsReq_CmdId)(0),                // 53: proto.CalcWeaponUpgradeReturnItemsReq.CmdId
	(CalcWeaponUpgradeReturnItemsRsp_CmdId)(0),                // 54: proto.CalcWeaponUpgradeReturnItemsRsp.CmdId
	(ForgeDataNotify_CmdId)(0),                                // 55: proto.ForgeDataNotify.CmdId
	(ForgeFormulaDataNotify_CmdId)(0),                         // 56: proto.ForgeFormulaDataNotify.CmdId
	(CombineDataNotify_CmdId)(0),                              // 57: proto.CombineDataNotify.CmdId
	(CombineFormulaDataNotify_CmdId)(0),                       // 58: proto.CombineFormulaDataNotify.CmdId
	(ClosedItemNotify_CmdId)(0),                               // 59: proto.ClosedItemNotify.CmdId
	(CheckAddItemExceedLimitNotify_ItemExceedLimitMsgType)(0), // 60: proto.CheckAddItemExceedLimitNotify.ItemExceedLimitMsgType
	(CheckAddItemExceedLimitNotify_CmdId)(0),                  // 61: proto.CheckAddItemExceedLimitNotify.CmdId
	(SetIsAutoUnlockSpecificEquipReq_CmdId)(0),                // 62: proto.SetIsAutoUnlockSpecificEquipReq.CmdId
	(SetIsAutoUnlockSpecificEquipRsp_CmdId)(0),                // 63: proto.SetIsAutoUnlockSpecificEquipRsp.CmdId
	(ReliquaryDecomposeReq_CmdId)(0),                          // 64: proto.ReliquaryDecomposeReq.CmdId
	(ReliquaryDecomposeRsp_CmdId)(0),                          // 65: proto.ReliquaryDecomposeRsp.CmdId
	(ReliquaryFilterStateSaveNotify_CmdId)(0),                 // 66: proto.ReliquaryFilterStateSaveNotify.CmdId
	(ReliquaryFilterStateNotify_CmdId)(0),                     // 67: proto.ReliquaryFilterStateNotify.CmdId
	(*PlayerStoreNotify)(nil),                                 // 68: proto.PlayerStoreNotify
	(*StoreWeightLimitNotify)(nil),                            // 69: proto.StoreWeightLimitNotify
	(*StoreItemChangeNotify)(nil),                             // 70: proto.StoreItemChangeNotify
	(*StoreItemDelNotify)(nil),                                // 71: proto.StoreItemDelNotify
	(*ItemHint)(nil),                                          // 72: proto.ItemHint
	(*ItemAddHintNotify)(nil),                                 // 73: proto.ItemAddHintNotify
	(*UseItemReq)(nil),                                        // 74: proto.UseItemReq
	(*UseItemRsp)(nil),                                        // 75: proto.UseItemRsp
	(*DropItemReq)(nil),                                       // 76: proto.DropItemReq
	(*DropItemRsp)(nil),                                       // 77: proto.DropItemRsp
	(*WearEquipReq)(nil),                                      // 78: proto.WearEquipReq
	(*WearEquipRsp)(nil),                                      // 79: proto.WearEquipRsp
	(*TakeoffEquipReq)(nil),                                   // 80: proto.TakeoffEquipReq
	(*TakeoffEquipRsp)(nil),                                   // 81: proto.TakeoffEquipRsp
	(*AvatarEquipChangeNotify)(nil),                           // 82: proto.AvatarEquipChangeNotify
	(*WeaponUpgradeReq)(nil),                                  // 83: proto.WeaponUpgradeReq
	(*WeaponUpgradeRsp)(nil),                                  // 84: proto.WeaponUpgradeRsp
	(*WeaponPromoteReq)(nil),                                  // 85: proto.WeaponPromoteReq
	(*WeaponPromoteRsp)(nil),                                  // 86: proto.WeaponPromoteRsp
	(*ReliquaryUpgradeReq)(nil),                               // 87: proto.ReliquaryUpgradeReq
	(*ReliquaryUpgradeRsp)(nil),                               // 88: proto.ReliquaryUpgradeRsp
	(*ReliquaryPromoteReq)(nil),                               // 89: proto.ReliquaryPromoteReq
	(*ReliquaryPromoteRsp)(nil),                               // 90: proto.ReliquaryPromoteRsp
	(*AvatarCardChangeReq)(nil),                               // 91: proto.AvatarCardChangeReq
	(*AvatarCardChangeRsp)(nil),                               // 92: proto.AvatarCardChangeRsp
	(*GrantRewardNotify)(nil),                                 // 93: proto.GrantRewardNotify
	(*WeaponAwakenReq)(nil),                                   // 94: proto.WeaponAwakenReq
	(*WeaponAwakenRsp)(nil),                                   // 95: proto.WeaponAwakenRsp
	(*ItemCdGroupTimeNotify)(nil),                             // 96: proto.ItemCdGroupTimeNotify
	(*DropHintNotify)(nil),                                    // 97: proto.DropHintNotify
	(*CombineReq)(nil),                                        // 98: proto.CombineReq
	(*CombineRsp)(nil),                                        // 99: proto.CombineRsp
	(*ForgeQueueData)(nil),                                    // 100: proto.ForgeQueueData
	(*ForgeQueueDataNotify)(nil),                              // 101: proto.ForgeQueueDataNotify
	(*ForgeGetQueueDataReq)(nil),                              // 102: proto.ForgeGetQueueDataReq
	(*ForgeGetQueueDataRsp)(nil),                              // 103: proto.ForgeGetQueueDataRsp
	(*ForgeStartReq)(nil),                                     // 104: proto.ForgeStartReq
	(*ForgeStartRsp)(nil),                                     // 105: proto.ForgeStartRsp
	(*ForgeQueueManipulateReq)(nil),                           // 106: proto.ForgeQueueManipulateReq
	(*ForgeQueueManipulateRsp)(nil),                           // 107: proto.ForgeQueueManipulateRsp
	(*ResinChangeNotify)(nil),                                 // 108: proto.ResinChangeNotify
	(*BuyResinReq)(nil),                                       // 109: proto.BuyResinReq
	(*BuyResinRsp)(nil),                                       // 110: proto.BuyResinRsp
	(*MaterialDeleteReturnNotify)(nil),                        // 111: proto.MaterialDeleteReturnNotify
	(*TakeMaterialDeleteReturnReq)(nil),                       // 112: proto.TakeMaterialDeleteReturnReq
	(*TakeMaterialDeleteReturnRsp)(nil),                       // 113: proto.TakeMaterialDeleteReturnRsp
	(*MaterialDeleteUpdateNotify)(nil),                        // 114: proto.MaterialDeleteUpdateNotify
	(*McoinExchangeHcoinReq)(nil),                             // 115: proto.McoinExchangeHcoinReq
	(*McoinExchangeHcoinRsp)(nil),                             // 116: proto.McoinExchangeHcoinRsp
	(*MaterilaInfo)(nil),                                      // 117: proto.MaterilaInfo
	(*DestroyMaterialReq)(nil),                                // 118: proto.DestroyMaterialReq
	(*DestroyMaterialRsp)(nil),                                // 119: proto.DestroyMaterialRsp
	(*SetEquipLockStateReq)(nil),                              // 120: proto.SetEquipLockStateReq
	(*SetEquipLockStateRsp)(nil),                              // 121: proto.SetEquipLockStateRsp
	(*CalcWeaponUpgradeReturnItemsReq)(nil),                   // 122: proto.CalcWeaponUpgradeReturnItemsReq
	(*CalcWeaponUpgradeReturnItemsRsp)(nil),                   // 123: proto.CalcWeaponUpgradeReturnItemsRsp
	(*ForgeDataNotify)(nil),                                   // 124: proto.ForgeDataNotify
	(*ForgeFormulaDataNotify)(nil),                            // 125: proto.ForgeFormulaDataNotify
	(*CombineDataNotify)(nil),                                 // 126: proto.CombineDataNotify
	(*CombineFormulaDataNotify)(nil),                          // 127: proto.CombineFormulaDataNotify
	(*ClosedItemNotify)(nil),                                  // 128: proto.ClosedItemNotify
	(*CheckAddItemExceedLimitNotify)(nil),                     // 129: proto.CheckAddItemExceedLimitNotify
	(*SetIsAutoUnlockSpecificEquipReq)(nil),                   // 130: proto.SetIsAutoUnlockSpecificEquipReq
	(*SetIsAutoUnlockSpecificEquipRsp)(nil),                   // 131: proto.SetIsAutoUnlockSpecificEquipRsp
	(*ReliquaryDecomposeReq)(nil),                             // 132: proto.ReliquaryDecomposeReq
	(*ReliquaryDecomposeRsp)(nil),                             // 133: proto.ReliquaryDecomposeRsp
	(*ReliquaryFilterStateSaveNotify)(nil),                    // 134: proto.ReliquaryFilterStateSaveNotify
	(*ReliquaryFilterStateNotify)(nil),                        // 135: proto.ReliquaryFilterStateNotify
	nil,                                                       // 136: proto.WeaponAwakenReq.AffixLevelMapEntry
	nil,                                                       // 137: proto.WeaponAwakenRsp.OldAffixLevelMapEntry
	nil,                                                       // 138: proto.WeaponAwakenRsp.CurAffixLevelMapEntry
	nil,                                                       // 139: proto.ItemCdGroupTimeNotify.ItemCdMapEntry
	nil,                                                       // 140: proto.ForgeQueueDataNotify.ForgeQueueMapEntry
	nil,                                                       // 141: proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry
	nil,                                                       // 142: proto.MaterialDeleteReturnNotify.ReturnItemMapEntry
	nil,                                                       // 143: proto.MaterialDeleteReturnNotify.DeleteMaterialMapEntry
	nil,                                                       // 144: proto.ForgeDataNotify.ForgeQueueMapEntry
	nil,                                                       // 145: proto.ReliquaryFilterStateSaveNotify.ReliquaryFilterStateMapEntry
	nil,                                                       // 146: proto.ReliquaryFilterStateNotify.ReliquaryFilterStateMapEntry
	(*Item)(nil),                                              // 147: proto.Item
	(StoreType)(0),                                            // 148: proto.StoreType
	(*Vector)(nil),                                            // 149: proto.Vector
	(*SceneReliquaryInfo)(nil),                                // 150: proto.SceneReliquaryInfo
	(*SceneWeaponInfo)(nil),                                   // 151: proto.SceneWeaponInfo
	(*ItemParam)(nil),                                         // 152: proto.ItemParam
	(*Reward)(nil),                                            // 153: proto.Reward
}
var file_cmd_cmd_item_proto_depIdxs = []int32{
	147, // 0: proto.PlayerStoreNotify.item_list:type_name -> proto.Item
	148, // 1: proto.PlayerStoreNotify.store_type:type_name -> proto.StoreType
	148, // 2: proto.StoreWeightLimitNotify.store_type:type_name -> proto.StoreType
	148, // 3: proto.StoreItemChangeNotify.store_type:type_name -> proto.StoreType
	147, // 4: proto.StoreItemChangeNotify.item_list:type_name -> proto.Item
	148, // 5: proto.StoreItemDelNotify.store_type:type_name -> proto.StoreType
	72,  // 6: proto.ItemAddHintNotify.item_list:type_name -> proto.ItemHint
	149, // 7: proto.ItemAddHintNotify.position:type_name -> proto.Vector
	72,  // 8: proto.ItemAddHintNotify.overflow_transformed_item_list:type_name -> proto.ItemHint
	149, // 9: proto.DropItemReq.pos:type_name -> proto.Vector
	148, // 10: proto.DropItemReq.store_type:type_name -> proto.StoreType
	148, // 11: proto.DropItemRsp.store_type:type_name -> proto.StoreType
	150, // 12: proto.AvatarEquipChangeNotify.reliquary:type_name -> proto.SceneReliquaryInfo
	151, // 13: proto.AvatarEquipChangeNotify.weapon:type_name -> proto.SceneWeaponInfo
	152, // 14: proto.WeaponUpgradeReq.item_param_list:type_name -> proto.ItemParam
	152, // 15: proto.WeaponUpgradeRsp.item_param_list:type_name -> proto.ItemParam
	152, // 16: proto.ReliquaryUpgradeReq.item_param_list:type_name -> proto.ItemParam
	153, // 17: proto.GrantRewardNotify.reward:type_name -> proto.Reward
	136, // 18: proto.WeaponAwakenReq.affix_level_map:type_name -> proto.WeaponAwakenReq.AffixLevelMapEntry
	137, // 19: proto.WeaponAwakenRsp.old_affix_level_map:type_name -> proto.WeaponAwakenRsp.OldAffixLevelMapEntry
	138, // 20: proto.WeaponAwakenRsp.cur_affix_level_map:type_name -> proto.WeaponAwakenRsp.CurAffixLevelMapEntry
	139, // 21: proto.ItemCdGroupTimeNotify.item_cd_map:type_name -> proto.ItemCdGroupTimeNotify.ItemCdMapEntry
	149, // 22: proto.DropHintNotify.position:type_name -> proto.Vector
	152, // 23: proto.CombineRsp.cost_item_list:type_name -> proto.ItemParam
	152, // 24: proto.CombineRsp.total_extra_item_list:type_name -> proto.ItemParam
	152, // 25: proto.CombineRsp.total_random_item_list:type_name -> proto.ItemParam
	152, // 26: proto.CombineRsp.result_item_list:type_name -> proto.ItemParam
	152, // 27: proto.CombineRsp.total_return_item_list:type_name -> proto.ItemParam
	140, // 28: proto.ForgeQueueDataNotify.forge_queue_map:type_name -> proto.ForgeQueueDataNotify.ForgeQueueMapEntry
	141, // 29: proto.ForgeGetQueueDataRsp.forge_queue_map:type_name -> proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry
	0,   // 30: proto.ForgeQueueManipulateReq.manipulate_type:type_name -> proto.ForgeQueueManipulateType
	0,   // 31: proto.ForgeQueueManipulateRsp.manipulate_type:type_name -> proto.ForgeQueueManipulateType
	152, // 32: proto.ForgeQueueManipulateRsp.extra_output_item_list:type_name -> proto.ItemParam
	152, // 33: proto.ForgeQueueManipulateRsp.return_item_list:type_name -> proto.ItemParam
	152, // 34: proto.ForgeQueueManipulateRsp.output_item_list:type_name -> proto.ItemParam
	142, // 35: proto.MaterialDeleteReturnNotify.return_item_map:type_name -> proto.MaterialDeleteReturnNotify.ReturnItemMapEntry
	1,   // 36: proto.MaterialDeleteReturnNotify.type:type_name -> proto.MaterialDeleteReturnType
	143, // 37: proto.MaterialDeleteReturnNotify.delete_material_map:type_name -> proto.MaterialDeleteReturnNotify.DeleteMaterialMapEntry
	1,   // 38: proto.TakeMaterialDeleteReturnReq.type:type_name -> proto.MaterialDeleteReturnType
	117, // 39: proto.DestroyMaterialReq.material_list:type_name -> proto.MaterilaInfo
	152, // 40: proto.CalcWeaponUpgradeReturnItemsReq.item_param_list:type_name -> proto.ItemParam
	152, // 41: proto.CalcWeaponUpgradeReturnItemsRsp.item_param_list:type_name -> proto.ItemParam
	144, // 42: proto.ForgeDataNotify.forge_queue_map:type_name -> proto.ForgeDataNotify.ForgeQueueMapEntry
	60,  // 43: proto.CheckAddItemExceedLimitNotify.msg_type:type_name -> proto.CheckAddItemExceedLimitNotify.ItemExceedLimitMsgType
	145, // 44: proto.ReliquaryFilterStateSaveNotify.reliquary_filter_state_map:type_name -> proto.ReliquaryFilterStateSaveNotify.ReliquaryFilterStateMapEntry
	146, // 45: proto.ReliquaryFilterStateNotify.reliquary_filter_state_map:type_name -> proto.ReliquaryFilterStateNotify.ReliquaryFilterStateMapEntry
	100, // 46: proto.ForgeQueueDataNotify.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	100, // 47: proto.ForgeGetQueueDataRsp.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	100, // 48: proto.ForgeDataNotify.ForgeQueueMapEntry.value:type_name -> proto.ForgeQueueData
	49,  // [49:49] is the sub-list for method output_type
	49,  // [49:49] is the sub-list for method input_type
	49,  // [49:49] is the sub-list for extension type_name
	49,  // [49:49] is the sub-list for extension extendee
	0,   // [0:49] is the sub-list for field type_name
}

func init() { file_cmd_cmd_item_proto_init() }
func file_cmd_cmd_item_proto_init() {
	if File_cmd_cmd_item_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStoreNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreWeightLimitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreItemChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreItemDelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemHint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAddHintNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WearEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WearEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeoffEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeoffEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarEquipChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarCardChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarCardChangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRewardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponAwakenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponAwakenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCdGroupTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropHintNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeGetQueueDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeGetQueueDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeStartRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueManipulateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeQueueManipulateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResinChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialDeleteReturnNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeMaterialDeleteReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeMaterialDeleteReturnRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialDeleteUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*McoinExchangeHcoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*McoinExchangeHcoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterilaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyMaterialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyMaterialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEquipLockStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEquipLockStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcWeaponUpgradeReturnItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcWeaponUpgradeReturnItemsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgeFormulaDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineFormulaDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosedItemNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAddItemExceedLimitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIsAutoUnlockSpecificEquipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIsAutoUnlockSpecificEquipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryDecomposeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryDecomposeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryFilterStateSaveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_item_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliquaryFilterStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_item_proto_rawDesc,
			NumEnums:      68,
			NumMessages:   79,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_item_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_item_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_item_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_item_proto_msgTypes,
	}.Build()
	File_cmd_cmd_item_proto = out.File
	file_cmd_cmd_item_proto_rawDesc = nil
	file_cmd_cmd_item_proto_goTypes = nil
	file_cmd_cmd_item_proto_depIdxs = nil
}
