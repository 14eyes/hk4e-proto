// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_pathfinding.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryPathReq_CmdId int32

const (
	QueryPathReq_NONE             QueryPathReq_CmdId = 0
	QueryPathReq_CMD_ID           QueryPathReq_CmdId = 2372
	QueryPathReq_ENET_CHANNEL_ID  QueryPathReq_CmdId = 0
	QueryPathReq_ENET_IS_RELIABLE QueryPathReq_CmdId = 1
	QueryPathReq_IS_ALLOW_CLIENT  QueryPathReq_CmdId = 1
)

// Enum value maps for QueryPathReq_CmdId.
var (
	QueryPathReq_CmdId_name = map[int32]string{
		0:    "NONE",
		2372: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	QueryPathReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2372,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x QueryPathReq_CmdId) Enum() *QueryPathReq_CmdId {
	p := new(QueryPathReq_CmdId)
	*p = x
	return p
}

func (x QueryPathReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPathReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[0].Descriptor()
}

func (QueryPathReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[0]
}

func (x QueryPathReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPathReq_CmdId.Descriptor instead.
func (QueryPathReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{1, 0}
}

type QueryPathReq_OptionType int32

const (
	QueryPathReq_OPTION_NONE         QueryPathReq_OptionType = 0
	QueryPathReq_OPTION_NORMAL       QueryPathReq_OptionType = 1
	QueryPathReq_OPTION_FIRST_CAN_GO QueryPathReq_OptionType = 2
)

// Enum value maps for QueryPathReq_OptionType.
var (
	QueryPathReq_OptionType_name = map[int32]string{
		0: "OPTION_NONE",
		1: "OPTION_NORMAL",
		2: "OPTION_FIRST_CAN_GO",
	}
	QueryPathReq_OptionType_value = map[string]int32{
		"OPTION_NONE":         0,
		"OPTION_NORMAL":       1,
		"OPTION_FIRST_CAN_GO": 2,
	}
)

func (x QueryPathReq_OptionType) Enum() *QueryPathReq_OptionType {
	p := new(QueryPathReq_OptionType)
	*p = x
	return p
}

func (x QueryPathReq_OptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPathReq_OptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[1].Descriptor()
}

func (QueryPathReq_OptionType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[1]
}

func (x QueryPathReq_OptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPathReq_OptionType.Descriptor instead.
func (QueryPathReq_OptionType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{1, 1}
}

type QueryPathRsp_CmdId int32

const (
	QueryPathRsp_NONE             QueryPathRsp_CmdId = 0
	QueryPathRsp_CMD_ID           QueryPathRsp_CmdId = 2398
	QueryPathRsp_ENET_CHANNEL_ID  QueryPathRsp_CmdId = 0
	QueryPathRsp_ENET_IS_RELIABLE QueryPathRsp_CmdId = 1
)

// Enum value maps for QueryPathRsp_CmdId.
var (
	QueryPathRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		2398: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	QueryPathRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2398,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x QueryPathRsp_CmdId) Enum() *QueryPathRsp_CmdId {
	p := new(QueryPathRsp_CmdId)
	*p = x
	return p
}

func (x QueryPathRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPathRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[2].Descriptor()
}

func (QueryPathRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[2]
}

func (x QueryPathRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPathRsp_CmdId.Descriptor instead.
func (QueryPathRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{2, 0}
}

type QueryPathRsp_PathStatusType int32

const (
	QueryPathRsp_STATUS_FAIL    QueryPathRsp_PathStatusType = 0
	QueryPathRsp_STATUS_SUCC    QueryPathRsp_PathStatusType = 1
	QueryPathRsp_STATUS_PARTIAL QueryPathRsp_PathStatusType = 2
)

// Enum value maps for QueryPathRsp_PathStatusType.
var (
	QueryPathRsp_PathStatusType_name = map[int32]string{
		0: "STATUS_FAIL",
		1: "STATUS_SUCC",
		2: "STATUS_PARTIAL",
	}
	QueryPathRsp_PathStatusType_value = map[string]int32{
		"STATUS_FAIL":    0,
		"STATUS_SUCC":    1,
		"STATUS_PARTIAL": 2,
	}
)

func (x QueryPathRsp_PathStatusType) Enum() *QueryPathRsp_PathStatusType {
	p := new(QueryPathRsp_PathStatusType)
	*p = x
	return p
}

func (x QueryPathRsp_PathStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPathRsp_PathStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[3].Descriptor()
}

func (QueryPathRsp_PathStatusType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[3]
}

func (x QueryPathRsp_PathStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPathRsp_PathStatusType.Descriptor instead.
func (QueryPathRsp_PathStatusType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{2, 1}
}

type ObstacleInfo_ShapeType int32

const (
	ObstacleInfo_OBSTACLE_SHAPE_CAPSULE ObstacleInfo_ShapeType = 0
	ObstacleInfo_OBSTACLE_SHAPE_BOX     ObstacleInfo_ShapeType = 1
)

// Enum value maps for ObstacleInfo_ShapeType.
var (
	ObstacleInfo_ShapeType_name = map[int32]string{
		0: "OBSTACLE_SHAPE_CAPSULE",
		1: "OBSTACLE_SHAPE_BOX",
	}
	ObstacleInfo_ShapeType_value = map[string]int32{
		"OBSTACLE_SHAPE_CAPSULE": 0,
		"OBSTACLE_SHAPE_BOX":     1,
	}
)

func (x ObstacleInfo_ShapeType) Enum() *ObstacleInfo_ShapeType {
	p := new(ObstacleInfo_ShapeType)
	*p = x
	return p
}

func (x ObstacleInfo_ShapeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObstacleInfo_ShapeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[4].Descriptor()
}

func (ObstacleInfo_ShapeType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[4]
}

func (x ObstacleInfo_ShapeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObstacleInfo_ShapeType.Descriptor instead.
func (ObstacleInfo_ShapeType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{3, 0}
}

type ObstacleModifyNotify_CmdId int32

const (
	ObstacleModifyNotify_NONE             ObstacleModifyNotify_CmdId = 0
	ObstacleModifyNotify_CMD_ID           ObstacleModifyNotify_CmdId = 2312
	ObstacleModifyNotify_ENET_CHANNEL_ID  ObstacleModifyNotify_CmdId = 0
	ObstacleModifyNotify_ENET_IS_RELIABLE ObstacleModifyNotify_CmdId = 1
	ObstacleModifyNotify_IS_ALLOW_CLIENT  ObstacleModifyNotify_CmdId = 1
)

// Enum value maps for ObstacleModifyNotify_CmdId.
var (
	ObstacleModifyNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		2312: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ObstacleModifyNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2312,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ObstacleModifyNotify_CmdId) Enum() *ObstacleModifyNotify_CmdId {
	p := new(ObstacleModifyNotify_CmdId)
	*p = x
	return p
}

func (x ObstacleModifyNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObstacleModifyNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[5].Descriptor()
}

func (ObstacleModifyNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[5]
}

func (x ObstacleModifyNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObstacleModifyNotify_CmdId.Descriptor instead.
func (ObstacleModifyNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{4, 0}
}

type PathfindingPingNotify_CmdId int32

const (
	PathfindingPingNotify_NONE             PathfindingPingNotify_CmdId = 0
	PathfindingPingNotify_CMD_ID           PathfindingPingNotify_CmdId = 2335
	PathfindingPingNotify_ENET_CHANNEL_ID  PathfindingPingNotify_CmdId = 0
	PathfindingPingNotify_ENET_IS_RELIABLE PathfindingPingNotify_CmdId = 1
	PathfindingPingNotify_IS_ALLOW_CLIENT  PathfindingPingNotify_CmdId = 1
)

// Enum value maps for PathfindingPingNotify_CmdId.
var (
	PathfindingPingNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		2335: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	PathfindingPingNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2335,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x PathfindingPingNotify_CmdId) Enum() *PathfindingPingNotify_CmdId {
	p := new(PathfindingPingNotify_CmdId)
	*p = x
	return p
}

func (x PathfindingPingNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathfindingPingNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[6].Descriptor()
}

func (PathfindingPingNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[6]
}

func (x PathfindingPingNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathfindingPingNotify_CmdId.Descriptor instead.
func (PathfindingPingNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{5, 0}
}

type PathfindingEnterSceneReq_CmdId int32

const (
	PathfindingEnterSceneReq_NONE             PathfindingEnterSceneReq_CmdId = 0
	PathfindingEnterSceneReq_CMD_ID           PathfindingEnterSceneReq_CmdId = 2307
	PathfindingEnterSceneReq_ENET_CHANNEL_ID  PathfindingEnterSceneReq_CmdId = 0
	PathfindingEnterSceneReq_ENET_IS_RELIABLE PathfindingEnterSceneReq_CmdId = 1
	PathfindingEnterSceneReq_IS_ALLOW_CLIENT  PathfindingEnterSceneReq_CmdId = 1
)

// Enum value maps for PathfindingEnterSceneReq_CmdId.
var (
	PathfindingEnterSceneReq_CmdId_name = map[int32]string{
		0:    "NONE",
		2307: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	PathfindingEnterSceneReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2307,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x PathfindingEnterSceneReq_CmdId) Enum() *PathfindingEnterSceneReq_CmdId {
	p := new(PathfindingEnterSceneReq_CmdId)
	*p = x
	return p
}

func (x PathfindingEnterSceneReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathfindingEnterSceneReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[7].Descriptor()
}

func (PathfindingEnterSceneReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[7]
}

func (x PathfindingEnterSceneReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathfindingEnterSceneReq_CmdId.Descriptor instead.
func (PathfindingEnterSceneReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{6, 0}
}

type PathfindingEnterSceneRsp_CmdId int32

const (
	PathfindingEnterSceneRsp_NONE             PathfindingEnterSceneRsp_CmdId = 0
	PathfindingEnterSceneRsp_CMD_ID           PathfindingEnterSceneRsp_CmdId = 2321
	PathfindingEnterSceneRsp_ENET_CHANNEL_ID  PathfindingEnterSceneRsp_CmdId = 0
	PathfindingEnterSceneRsp_ENET_IS_RELIABLE PathfindingEnterSceneRsp_CmdId = 1
)

// Enum value maps for PathfindingEnterSceneRsp_CmdId.
var (
	PathfindingEnterSceneRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		2321: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PathfindingEnterSceneRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2321,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PathfindingEnterSceneRsp_CmdId) Enum() *PathfindingEnterSceneRsp_CmdId {
	p := new(PathfindingEnterSceneRsp_CmdId)
	*p = x
	return p
}

func (x PathfindingEnterSceneRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathfindingEnterSceneRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[8].Descriptor()
}

func (PathfindingEnterSceneRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[8]
}

func (x PathfindingEnterSceneRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathfindingEnterSceneRsp_CmdId.Descriptor instead.
func (PathfindingEnterSceneRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{7, 0}
}

type GMShowObstacleReq_CmdId int32

const (
	GMShowObstacleReq_NONE             GMShowObstacleReq_CmdId = 0
	GMShowObstacleReq_CMD_ID           GMShowObstacleReq_CmdId = 2361
	GMShowObstacleReq_ENET_CHANNEL_ID  GMShowObstacleReq_CmdId = 0
	GMShowObstacleReq_ENET_IS_RELIABLE GMShowObstacleReq_CmdId = 1
	GMShowObstacleReq_IS_ALLOW_CLIENT  GMShowObstacleReq_CmdId = 1
)

// Enum value maps for GMShowObstacleReq_CmdId.
var (
	GMShowObstacleReq_CmdId_name = map[int32]string{
		0:    "NONE",
		2361: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GMShowObstacleReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2361,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GMShowObstacleReq_CmdId) Enum() *GMShowObstacleReq_CmdId {
	p := new(GMShowObstacleReq_CmdId)
	*p = x
	return p
}

func (x GMShowObstacleReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMShowObstacleReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[9].Descriptor()
}

func (GMShowObstacleReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[9]
}

func (x GMShowObstacleReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMShowObstacleReq_CmdId.Descriptor instead.
func (GMShowObstacleReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{8, 0}
}

type GMObstacleInfo_ShapeType int32

const (
	GMObstacleInfo_OBSTACLE_SHAPE_CAPSULE GMObstacleInfo_ShapeType = 0
	GMObstacleInfo_OBSTACLE_SHAPE_BOX     GMObstacleInfo_ShapeType = 1
)

// Enum value maps for GMObstacleInfo_ShapeType.
var (
	GMObstacleInfo_ShapeType_name = map[int32]string{
		0: "OBSTACLE_SHAPE_CAPSULE",
		1: "OBSTACLE_SHAPE_BOX",
	}
	GMObstacleInfo_ShapeType_value = map[string]int32{
		"OBSTACLE_SHAPE_CAPSULE": 0,
		"OBSTACLE_SHAPE_BOX":     1,
	}
)

func (x GMObstacleInfo_ShapeType) Enum() *GMObstacleInfo_ShapeType {
	p := new(GMObstacleInfo_ShapeType)
	*p = x
	return p
}

func (x GMObstacleInfo_ShapeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMObstacleInfo_ShapeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[10].Descriptor()
}

func (GMObstacleInfo_ShapeType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[10]
}

func (x GMObstacleInfo_ShapeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMObstacleInfo_ShapeType.Descriptor instead.
func (GMObstacleInfo_ShapeType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{9, 0}
}

type GMShowObstacleRsp_CmdId int32

const (
	GMShowObstacleRsp_NONE             GMShowObstacleRsp_CmdId = 0
	GMShowObstacleRsp_CMD_ID           GMShowObstacleRsp_CmdId = 2329
	GMShowObstacleRsp_ENET_CHANNEL_ID  GMShowObstacleRsp_CmdId = 0
	GMShowObstacleRsp_ENET_IS_RELIABLE GMShowObstacleRsp_CmdId = 1
)

// Enum value maps for GMShowObstacleRsp_CmdId.
var (
	GMShowObstacleRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		2329: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GMShowObstacleRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2329,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GMShowObstacleRsp_CmdId) Enum() *GMShowObstacleRsp_CmdId {
	p := new(GMShowObstacleRsp_CmdId)
	*p = x
	return p
}

func (x GMShowObstacleRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMShowObstacleRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[11].Descriptor()
}

func (GMShowObstacleRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[11]
}

func (x GMShowObstacleRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMShowObstacleRsp_CmdId.Descriptor instead.
func (GMShowObstacleRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{10, 0}
}

type GMShowNavMeshReq_CmdId int32

const (
	GMShowNavMeshReq_NONE             GMShowNavMeshReq_CmdId = 0
	GMShowNavMeshReq_CMD_ID           GMShowNavMeshReq_CmdId = 2357
	GMShowNavMeshReq_ENET_CHANNEL_ID  GMShowNavMeshReq_CmdId = 0
	GMShowNavMeshReq_ENET_IS_RELIABLE GMShowNavMeshReq_CmdId = 1
	GMShowNavMeshReq_IS_ALLOW_CLIENT  GMShowNavMeshReq_CmdId = 1
)

// Enum value maps for GMShowNavMeshReq_CmdId.
var (
	GMShowNavMeshReq_CmdId_name = map[int32]string{
		0:    "NONE",
		2357: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GMShowNavMeshReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2357,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GMShowNavMeshReq_CmdId) Enum() *GMShowNavMeshReq_CmdId {
	p := new(GMShowNavMeshReq_CmdId)
	*p = x
	return p
}

func (x GMShowNavMeshReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMShowNavMeshReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[12].Descriptor()
}

func (GMShowNavMeshReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[12]
}

func (x GMShowNavMeshReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMShowNavMeshReq_CmdId.Descriptor instead.
func (GMShowNavMeshReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{11, 0}
}

type PBNavMeshPoly_EdgeType int32

const (
	PBNavMeshPoly_INNER                PBNavMeshPoly_EdgeType = 0
	PBNavMeshPoly_TILE_BOUND           PBNavMeshPoly_EdgeType = 1
	PBNavMeshPoly_TILE_BOUND_UNCONNECT PBNavMeshPoly_EdgeType = 2
	PBNavMeshPoly_TILE_BOUND_OVERIDE   PBNavMeshPoly_EdgeType = 3
)

// Enum value maps for PBNavMeshPoly_EdgeType.
var (
	PBNavMeshPoly_EdgeType_name = map[int32]string{
		0: "INNER",
		1: "TILE_BOUND",
		2: "TILE_BOUND_UNCONNECT",
		3: "TILE_BOUND_OVERIDE",
	}
	PBNavMeshPoly_EdgeType_value = map[string]int32{
		"INNER":                0,
		"TILE_BOUND":           1,
		"TILE_BOUND_UNCONNECT": 2,
		"TILE_BOUND_OVERIDE":   3,
	}
)

func (x PBNavMeshPoly_EdgeType) Enum() *PBNavMeshPoly_EdgeType {
	p := new(PBNavMeshPoly_EdgeType)
	*p = x
	return p
}

func (x PBNavMeshPoly_EdgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PBNavMeshPoly_EdgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[13].Descriptor()
}

func (PBNavMeshPoly_EdgeType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[13]
}

func (x PBNavMeshPoly_EdgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PBNavMeshPoly_EdgeType.Descriptor instead.
func (PBNavMeshPoly_EdgeType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{12, 0}
}

type GMShowNavMeshRsp_CmdId int32

const (
	GMShowNavMeshRsp_NONE             GMShowNavMeshRsp_CmdId = 0
	GMShowNavMeshRsp_CMD_ID           GMShowNavMeshRsp_CmdId = 2400
	GMShowNavMeshRsp_ENET_CHANNEL_ID  GMShowNavMeshRsp_CmdId = 0
	GMShowNavMeshRsp_ENET_IS_RELIABLE GMShowNavMeshRsp_CmdId = 1
)

// Enum value maps for GMShowNavMeshRsp_CmdId.
var (
	GMShowNavMeshRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		2400: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GMShowNavMeshRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2400,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GMShowNavMeshRsp_CmdId) Enum() *GMShowNavMeshRsp_CmdId {
	p := new(GMShowNavMeshRsp_CmdId)
	*p = x
	return p
}

func (x GMShowNavMeshRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMShowNavMeshRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[14].Descriptor()
}

func (GMShowNavMeshRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[14]
}

func (x GMShowNavMeshRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMShowNavMeshRsp_CmdId.Descriptor instead.
func (GMShowNavMeshRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{14, 0}
}

type NavMeshStatsNotify_CmdId int32

const (
	NavMeshStatsNotify_NONE             NavMeshStatsNotify_CmdId = 0
	NavMeshStatsNotify_CMD_ID           NavMeshStatsNotify_CmdId = 2316
	NavMeshStatsNotify_ENET_CHANNEL_ID  NavMeshStatsNotify_CmdId = 0
	NavMeshStatsNotify_ENET_IS_RELIABLE NavMeshStatsNotify_CmdId = 1
	NavMeshStatsNotify_IS_ALLOW_CLIENT  NavMeshStatsNotify_CmdId = 1
)

// Enum value maps for NavMeshStatsNotify_CmdId.
var (
	NavMeshStatsNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		2316: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	NavMeshStatsNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           2316,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x NavMeshStatsNotify_CmdId) Enum() *NavMeshStatsNotify_CmdId {
	p := new(NavMeshStatsNotify_CmdId)
	*p = x
	return p
}

func (x NavMeshStatsNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NavMeshStatsNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_pathfinding_proto_enumTypes[15].Descriptor()
}

func (NavMeshStatsNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_pathfinding_proto_enumTypes[15]
}

func (x NavMeshStatsNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NavMeshStatsNotify_CmdId.Descriptor instead.
func (NavMeshStatsNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{16, 0}
}

type QueryFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32 `protobuf:"varint,9,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	AreaMask int32 `protobuf:"varint,13,opt,name=area_mask,json=areaMask,proto3" json:"area_mask,omitempty"`
}

func (x *QueryFilter) Reset() {
	*x = QueryFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilter) ProtoMessage() {}

func (x *QueryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFilter.ProtoReflect.Descriptor instead.
func (*QueryFilter) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{0}
}

func (x *QueryFilter) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *QueryFilter) GetAreaMask() int32 {
	if x != nil {
		return x.AreaMask
	}
	return 0
}

type QueryPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryType         QueryPathReq_OptionType `protobuf:"varint,13,opt,name=query_type,json=queryType,proto3,enum=proto.QueryPathReq_OptionType" json:"query_type,omitempty"`
	SourceExtend      *Vector3Int             `protobuf:"bytes,6,opt,name=source_extend,json=sourceExtend,proto3" json:"source_extend,omitempty"`
	SourcePos         *Vector                 `protobuf:"bytes,2,opt,name=source_pos,json=sourcePos,proto3" json:"source_pos,omitempty"`
	Filter            *QueryFilter            `protobuf:"bytes,12,opt,name=filter,proto3" json:"filter,omitempty"`
	QueryId           int32                   `protobuf:"varint,15,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	DestinationExtend *Vector3Int             `protobuf:"bytes,4,opt,name=destination_extend,json=destinationExtend,proto3" json:"destination_extend,omitempty"`
	DestinationPos    []*Vector               `protobuf:"bytes,10,rep,name=destination_pos,json=destinationPos,proto3" json:"destination_pos,omitempty"`
	SceneId           uint32                  `protobuf:"varint,11,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *QueryPathReq) Reset() {
	*x = QueryPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPathReq) ProtoMessage() {}

func (x *QueryPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPathReq.ProtoReflect.Descriptor instead.
func (*QueryPathReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPathReq) GetQueryType() QueryPathReq_OptionType {
	if x != nil {
		return x.QueryType
	}
	return QueryPathReq_OPTION_NONE
}

func (x *QueryPathReq) GetSourceExtend() *Vector3Int {
	if x != nil {
		return x.SourceExtend
	}
	return nil
}

func (x *QueryPathReq) GetSourcePos() *Vector {
	if x != nil {
		return x.SourcePos
	}
	return nil
}

func (x *QueryPathReq) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryPathReq) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *QueryPathReq) GetDestinationExtend() *Vector3Int {
	if x != nil {
		return x.DestinationExtend
	}
	return nil
}

func (x *QueryPathReq) GetDestinationPos() []*Vector {
	if x != nil {
		return x.DestinationPos
	}
	return nil
}

func (x *QueryPathReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type QueryPathRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId     int32                       `protobuf:"varint,12,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Corners     []*Vector                   `protobuf:"bytes,6,rep,name=corners,proto3" json:"corners,omitempty"`
	QueryStatus QueryPathRsp_PathStatusType `protobuf:"varint,8,opt,name=query_status,json=queryStatus,proto3,enum=proto.QueryPathRsp_PathStatusType" json:"query_status,omitempty"`
	Retcode     int32                       `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *QueryPathRsp) Reset() {
	*x = QueryPathRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPathRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPathRsp) ProtoMessage() {}

func (x *QueryPathRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPathRsp.ProtoReflect.Descriptor instead.
func (*QueryPathRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPathRsp) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *QueryPathRsp) GetCorners() []*Vector {
	if x != nil {
		return x.Corners
	}
	return nil
}

func (x *QueryPathRsp) GetQueryStatus() QueryPathRsp_PathStatusType {
	if x != nil {
		return x.QueryStatus
	}
	return QueryPathRsp_STATUS_FAIL
}

func (x *QueryPathRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ObstacleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation   *MathQuaternion        `protobuf:"bytes,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
	ObstacleId int32                  `protobuf:"varint,2,opt,name=obstacle_id,json=obstacleId,proto3" json:"obstacle_id,omitempty"`
	Center     *Vector                `protobuf:"bytes,14,opt,name=center,proto3" json:"center,omitempty"`
	Shape      ObstacleInfo_ShapeType `protobuf:"varint,6,opt,name=shape,proto3,enum=proto.ObstacleInfo_ShapeType" json:"shape,omitempty"`
	Extents    *Vector3Int            `protobuf:"bytes,12,opt,name=extents,proto3" json:"extents,omitempty"`
}

func (x *ObstacleInfo) Reset() {
	*x = ObstacleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObstacleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleInfo) ProtoMessage() {}

func (x *ObstacleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleInfo.ProtoReflect.Descriptor instead.
func (*ObstacleInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{3}
}

func (x *ObstacleInfo) GetRotation() *MathQuaternion {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *ObstacleInfo) GetObstacleId() int32 {
	if x != nil {
		return x.ObstacleId
	}
	return 0
}

func (x *ObstacleInfo) GetCenter() *Vector {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *ObstacleInfo) GetShape() ObstacleInfo_ShapeType {
	if x != nil {
		return x.Shape
	}
	return ObstacleInfo_OBSTACLE_SHAPE_CAPSULE
}

func (x *ObstacleInfo) GetExtents() *Vector3Int {
	if x != nil {
		return x.Extents
	}
	return nil
}

type ObstacleModifyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoveObstacleIds []int32         `protobuf:"varint,9,rep,packed,name=remove_obstacle_ids,json=removeObstacleIds,proto3" json:"remove_obstacle_ids,omitempty"`
	AddObstacles      []*ObstacleInfo `protobuf:"bytes,6,rep,name=add_obstacles,json=addObstacles,proto3" json:"add_obstacles,omitempty"`
	SceneId           uint32          `protobuf:"varint,5,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *ObstacleModifyNotify) Reset() {
	*x = ObstacleModifyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObstacleModifyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleModifyNotify) ProtoMessage() {}

func (x *ObstacleModifyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleModifyNotify.ProtoReflect.Descriptor instead.
func (*ObstacleModifyNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{4}
}

func (x *ObstacleModifyNotify) GetRemoveObstacleIds() []int32 {
	if x != nil {
		return x.RemoveObstacleIds
	}
	return nil
}

func (x *ObstacleModifyNotify) GetAddObstacles() []*ObstacleInfo {
	if x != nil {
		return x.AddObstacles
	}
	return nil
}

func (x *ObstacleModifyNotify) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type PathfindingPingNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PathfindingPingNotify) Reset() {
	*x = PathfindingPingNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathfindingPingNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathfindingPingNotify) ProtoMessage() {}

func (x *PathfindingPingNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathfindingPingNotify.ProtoReflect.Descriptor instead.
func (*PathfindingPingNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{5}
}

type PathfindingEnterSceneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId      uint32          `protobuf:"varint,12,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	ActivityId   []uint32        `protobuf:"varint,14,rep,packed,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	SceneTagHash uint32          `protobuf:"varint,15,opt,name=scene_tag_hash,json=sceneTagHash,proto3" json:"scene_tag_hash,omitempty"`
	Version      uint32          `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	IsEditor     bool            `protobuf:"varint,11,opt,name=is_editor,json=isEditor,proto3" json:"is_editor,omitempty"`
	Obstacles    []*ObstacleInfo `protobuf:"bytes,13,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	PolygonId    uint32          `protobuf:"varint,4,opt,name=polygon_id,json=polygonId,proto3" json:"polygon_id,omitempty"`
}

func (x *PathfindingEnterSceneReq) Reset() {
	*x = PathfindingEnterSceneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathfindingEnterSceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathfindingEnterSceneReq) ProtoMessage() {}

func (x *PathfindingEnterSceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathfindingEnterSceneReq.ProtoReflect.Descriptor instead.
func (*PathfindingEnterSceneReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{6}
}

func (x *PathfindingEnterSceneReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *PathfindingEnterSceneReq) GetActivityId() []uint32 {
	if x != nil {
		return x.ActivityId
	}
	return nil
}

func (x *PathfindingEnterSceneReq) GetSceneTagHash() uint32 {
	if x != nil {
		return x.SceneTagHash
	}
	return 0
}

func (x *PathfindingEnterSceneReq) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PathfindingEnterSceneReq) GetIsEditor() bool {
	if x != nil {
		return x.IsEditor
	}
	return false
}

func (x *PathfindingEnterSceneReq) GetObstacles() []*ObstacleInfo {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

func (x *PathfindingEnterSceneReq) GetPolygonId() uint32 {
	if x != nil {
		return x.PolygonId
	}
	return 0
}

type PathfindingEnterSceneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PathfindingEnterSceneRsp) Reset() {
	*x = PathfindingEnterSceneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathfindingEnterSceneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathfindingEnterSceneRsp) ProtoMessage() {}

func (x *PathfindingEnterSceneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathfindingEnterSceneRsp.ProtoReflect.Descriptor instead.
func (*PathfindingEnterSceneRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{7}
}

func (x *PathfindingEnterSceneRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GMShowObstacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GMShowObstacleReq) Reset() {
	*x = GMShowObstacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMShowObstacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMShowObstacleReq) ProtoMessage() {}

func (x *GMShowObstacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMShowObstacleReq.ProtoReflect.Descriptor instead.
func (*GMShowObstacleReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{8}
}

type GMObstacleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64                    `protobuf:"varint,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Shape      GMObstacleInfo_ShapeType `protobuf:"varint,2,opt,name=shape,proto3,enum=proto.GMObstacleInfo_ShapeType" json:"shape,omitempty"`
	ObstacleId int32                    `protobuf:"varint,13,opt,name=obstacle_id,json=obstacleId,proto3" json:"obstacle_id,omitempty"`
	Rotation   *MathQuaternion          `protobuf:"bytes,3,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Center     *Vector                  `protobuf:"bytes,8,opt,name=center,proto3" json:"center,omitempty"`
	Extents    *Vector3Int              `protobuf:"bytes,15,opt,name=extents,proto3" json:"extents,omitempty"`
}

func (x *GMObstacleInfo) Reset() {
	*x = GMObstacleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMObstacleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMObstacleInfo) ProtoMessage() {}

func (x *GMObstacleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMObstacleInfo.ProtoReflect.Descriptor instead.
func (*GMObstacleInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{9}
}

func (x *GMObstacleInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GMObstacleInfo) GetShape() GMObstacleInfo_ShapeType {
	if x != nil {
		return x.Shape
	}
	return GMObstacleInfo_OBSTACLE_SHAPE_CAPSULE
}

func (x *GMObstacleInfo) GetObstacleId() int32 {
	if x != nil {
		return x.ObstacleId
	}
	return 0
}

func (x *GMObstacleInfo) GetRotation() *MathQuaternion {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *GMObstacleInfo) GetCenter() *Vector {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GMObstacleInfo) GetExtents() *Vector3Int {
	if x != nil {
		return x.Extents
	}
	return nil
}

type GMShowObstacleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32             `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Obstacles []*GMObstacleInfo `protobuf:"bytes,6,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
}

func (x *GMShowObstacleRsp) Reset() {
	*x = GMShowObstacleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMShowObstacleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMShowObstacleRsp) ProtoMessage() {}

func (x *GMShowObstacleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMShowObstacleRsp.ProtoReflect.Descriptor instead.
func (*GMShowObstacleRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{10}
}

func (x *GMShowObstacleRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GMShowObstacleRsp) GetObstacles() []*GMObstacleInfo {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

type GMShowNavMeshReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center *Vector `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Extent *Vector `protobuf:"bytes,5,opt,name=extent,proto3" json:"extent,omitempty"`
}

func (x *GMShowNavMeshReq) Reset() {
	*x = GMShowNavMeshReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMShowNavMeshReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMShowNavMeshReq) ProtoMessage() {}

func (x *GMShowNavMeshReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMShowNavMeshReq.ProtoReflect.Descriptor instead.
func (*GMShowNavMeshReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{11}
}

func (x *GMShowNavMeshReq) GetCenter() *Vector {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GMShowNavMeshReq) GetExtent() *Vector {
	if x != nil {
		return x.Extent
	}
	return nil
}

type PBNavMeshPoly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeTypes []PBNavMeshPoly_EdgeType `protobuf:"varint,10,rep,packed,name=edge_types,json=edgeTypes,proto3,enum=proto.PBNavMeshPoly_EdgeType" json:"edge_types,omitempty"`
	Area      int32                    `protobuf:"varint,6,opt,name=area,proto3" json:"area,omitempty"`
	Vects     []int32                  `protobuf:"varint,7,rep,packed,name=vects,proto3" json:"vects,omitempty"`
}

func (x *PBNavMeshPoly) Reset() {
	*x = PBNavMeshPoly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBNavMeshPoly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBNavMeshPoly) ProtoMessage() {}

func (x *PBNavMeshPoly) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBNavMeshPoly.ProtoReflect.Descriptor instead.
func (*PBNavMeshPoly) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{12}
}

func (x *PBNavMeshPoly) GetEdgeTypes() []PBNavMeshPoly_EdgeType {
	if x != nil {
		return x.EdgeTypes
	}
	return nil
}

func (x *PBNavMeshPoly) GetArea() int32 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *PBNavMeshPoly) GetVects() []int32 {
	if x != nil {
		return x.Vects
	}
	return nil
}

type PBNavMeshTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vecs  []*Vector        `protobuf:"bytes,4,rep,name=vecs,proto3" json:"vecs,omitempty"`
	Polys []*PBNavMeshPoly `protobuf:"bytes,8,rep,name=polys,proto3" json:"polys,omitempty"`
}

func (x *PBNavMeshTile) Reset() {
	*x = PBNavMeshTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBNavMeshTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBNavMeshTile) ProtoMessage() {}

func (x *PBNavMeshTile) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBNavMeshTile.ProtoReflect.Descriptor instead.
func (*PBNavMeshTile) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{13}
}

func (x *PBNavMeshTile) GetVecs() []*Vector {
	if x != nil {
		return x.Vecs
	}
	return nil
}

func (x *PBNavMeshTile) GetPolys() []*PBNavMeshPoly {
	if x != nil {
		return x.Polys
	}
	return nil
}

type GMShowNavMeshRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles   []*PBNavMeshTile `protobuf:"bytes,11,rep,name=tiles,proto3" json:"tiles,omitempty"`
	Retcode int32            `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *GMShowNavMeshRsp) Reset() {
	*x = GMShowNavMeshRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GMShowNavMeshRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMShowNavMeshRsp) ProtoMessage() {}

func (x *GMShowNavMeshRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMShowNavMeshRsp.ProtoReflect.Descriptor instead.
func (*GMShowNavMeshRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{14}
}

func (x *GMShowNavMeshRsp) GetTiles() []*PBNavMeshTile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *GMShowNavMeshRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PbNavMeshStatsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorityAiInCombat   int32 `protobuf:"varint,10,opt,name=authority_ai_in_combat,json=authorityAiInCombat,proto3" json:"authority_ai_in_combat,omitempty"`
	NoAuthorityAiInCombat int32 `protobuf:"varint,11,opt,name=no_authority_ai_in_combat,json=noAuthorityAiInCombat,proto3" json:"no_authority_ai_in_combat,omitempty"`
	TotalAuthorityAi      int32 `protobuf:"varint,8,opt,name=total_authority_ai,json=totalAuthorityAi,proto3" json:"total_authority_ai,omitempty"`
	TotalNoAuthorityAi    int32 `protobuf:"varint,13,opt,name=total_no_authority_ai,json=totalNoAuthorityAi,proto3" json:"total_no_authority_ai,omitempty"`
}

func (x *PbNavMeshStatsInfo) Reset() {
	*x = PbNavMeshStatsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbNavMeshStatsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbNavMeshStatsInfo) ProtoMessage() {}

func (x *PbNavMeshStatsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbNavMeshStatsInfo.ProtoReflect.Descriptor instead.
func (*PbNavMeshStatsInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{15}
}

func (x *PbNavMeshStatsInfo) GetAuthorityAiInCombat() int32 {
	if x != nil {
		return x.AuthorityAiInCombat
	}
	return 0
}

func (x *PbNavMeshStatsInfo) GetNoAuthorityAiInCombat() int32 {
	if x != nil {
		return x.NoAuthorityAiInCombat
	}
	return 0
}

func (x *PbNavMeshStatsInfo) GetTotalAuthorityAi() int32 {
	if x != nil {
		return x.TotalAuthorityAi
	}
	return 0
}

func (x *PbNavMeshStatsInfo) GetTotalNoAuthorityAi() int32 {
	if x != nil {
		return x.TotalNoAuthorityAi
	}
	return 0
}

type NavMeshStatsNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PbNavMeshStatsInfo `protobuf:"bytes,4,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *NavMeshStatsNotify) Reset() {
	*x = NavMeshStatsNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_pathfinding_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavMeshStatsNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavMeshStatsNotify) ProtoMessage() {}

func (x *NavMeshStatsNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_pathfinding_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavMeshStatsNotify.ProtoReflect.Descriptor instead.
func (*NavMeshStatsNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_pathfinding_proto_rawDescGZIP(), []int{16}
}

func (x *NavMeshStatsNotify) GetInfos() []*PbNavMeshStatsInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_cmd_cmd_pathfinding_proto protoreflect.FileDescriptor

var file_cmd_cmd_pathfinding_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x43, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x65,
	0x61, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xbe, 0x04, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x49, 0x6e, 0x74, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x40, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x49, 0x6e,
	0x74, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xc4, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x49, 0x0a, 0x0a, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x41,
	0x4e, 0x5f, 0x47, 0x4f, 0x10, 0x02, 0x22, 0xca, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x73, 0x70, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xde, 0x12, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x0e, 0x50,
	0x61, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41,
	0x4c, 0x10, 0x02, 0x22, 0xac, 0x02, 0x0a, 0x0c, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x68, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x62,
	0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x49, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x3f, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x4f, 0x42, 0x53, 0x54, 0x41, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45,
	0x5f, 0x43, 0x41, 0x50, 0x53, 0x55, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x42,
	0x53, 0x54, 0x41, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x58,
	0x10, 0x01, 0x22, 0xff, 0x01, 0x0a, 0x14, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x61,
	0x64, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x4f, 0x62, 0x73, 0x74,
	0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x88, 0x12,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x7b, 0x0a, 0x15, 0x50, 0x61, 0x74, 0x68, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9f, 0x12, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xe9, 0x02, 0x0a, 0x18, 0x50, 0x61, 0x74, 0x68, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x83, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x83, 0x01,
	0x0a, 0x18, 0x50, 0x61, 0x74, 0x68, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x91, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x77, 0x0a, 0x11, 0x47, 0x4d, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x62, 0x73,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xce, 0x02, 0x0a,
	0x0e, 0x47, 0x4d, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x4d, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x68, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x49, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3f, 0x0a, 0x09,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x42, 0x53,
	0x54, 0x41, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x50, 0x53,
	0x55, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x42, 0x53, 0x54, 0x41, 0x43, 0x4c,
	0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x01, 0x22, 0xb1, 0x01,
	0x0a, 0x11, 0x47, 0x4d, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a,
	0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x4d, 0x4f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c,
	0x65, 0x73, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x99, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x47, 0x4d, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x76, 0x4d,
	0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xb5, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x50, 0x42, 0x4e,
	0x61, 0x76, 0x4d, 0x65, 0x73, 0x68, 0x50, 0x6f, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x64,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x42, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73, 0x68,
	0x50, 0x6f, 0x6c, 0x79, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x57, 0x0a, 0x08, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x49, 0x4c,
	0x45, 0x5f, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x49, 0x4c,
	0x45, 0x5f, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x49, 0x44, 0x45, 0x10, 0x03, 0x22, 0x5e, 0x0a, 0x0d, 0x50,
	0x42, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x76, 0x65, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x76, 0x65, 0x63, 0x73, 0x12,
	0x2a, 0x0a, 0x05, 0x70, 0x6f, 0x6c, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x42, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73, 0x68,
	0x50, 0x6f, 0x6c, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x6c, 0x79, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x10,
	0x47, 0x4d, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x42, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73,
	0x68, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xe0, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe4, 0x01, 0x0a, 0x12, 0x50, 0x62, 0x4e, 0x61, 0x76, 0x4d,
	0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x16,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x69, 0x5f, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x41, 0x69, 0x49, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x12, 0x38, 0x0a, 0x19, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x61, 0x69, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x69, 0x49, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61,
	0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x41, 0x69, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x61, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x6f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x41, 0x69, 0x22, 0xa9, 0x01, 0x0a,
	0x12, 0x4e, 0x61, 0x76, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x62, 0x4e, 0x61, 0x76,
	0x4d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x8c, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_pathfinding_proto_rawDescOnce sync.Once
	file_cmd_cmd_pathfinding_proto_rawDescData = file_cmd_cmd_pathfinding_proto_rawDesc
)

func file_cmd_cmd_pathfinding_proto_rawDescGZIP() []byte {
	file_cmd_cmd_pathfinding_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_pathfinding_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_pathfinding_proto_rawDescData)
	})
	return file_cmd_cmd_pathfinding_proto_rawDescData
}

var file_cmd_cmd_pathfinding_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_cmd_cmd_pathfinding_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cmd_cmd_pathfinding_proto_goTypes = []interface{}{
	(QueryPathReq_CmdId)(0),             // 0: proto.QueryPathReq.CmdId
	(QueryPathReq_OptionType)(0),        // 1: proto.QueryPathReq.OptionType
	(QueryPathRsp_CmdId)(0),             // 2: proto.QueryPathRsp.CmdId
	(QueryPathRsp_PathStatusType)(0),    // 3: proto.QueryPathRsp.PathStatusType
	(ObstacleInfo_ShapeType)(0),         // 4: proto.ObstacleInfo.ShapeType
	(ObstacleModifyNotify_CmdId)(0),     // 5: proto.ObstacleModifyNotify.CmdId
	(PathfindingPingNotify_CmdId)(0),    // 6: proto.PathfindingPingNotify.CmdId
	(PathfindingEnterSceneReq_CmdId)(0), // 7: proto.PathfindingEnterSceneReq.CmdId
	(PathfindingEnterSceneRsp_CmdId)(0), // 8: proto.PathfindingEnterSceneRsp.CmdId
	(GMShowObstacleReq_CmdId)(0),        // 9: proto.GMShowObstacleReq.CmdId
	(GMObstacleInfo_ShapeType)(0),       // 10: proto.GMObstacleInfo.ShapeType
	(GMShowObstacleRsp_CmdId)(0),        // 11: proto.GMShowObstacleRsp.CmdId
	(GMShowNavMeshReq_CmdId)(0),         // 12: proto.GMShowNavMeshReq.CmdId
	(PBNavMeshPoly_EdgeType)(0),         // 13: proto.PBNavMeshPoly.EdgeType
	(GMShowNavMeshRsp_CmdId)(0),         // 14: proto.GMShowNavMeshRsp.CmdId
	(NavMeshStatsNotify_CmdId)(0),       // 15: proto.NavMeshStatsNotify.CmdId
	(*QueryFilter)(nil),                 // 16: proto.QueryFilter
	(*QueryPathReq)(nil),                // 17: proto.QueryPathReq
	(*QueryPathRsp)(nil),                // 18: proto.QueryPathRsp
	(*ObstacleInfo)(nil),                // 19: proto.ObstacleInfo
	(*ObstacleModifyNotify)(nil),        // 20: proto.ObstacleModifyNotify
	(*PathfindingPingNotify)(nil),       // 21: proto.PathfindingPingNotify
	(*PathfindingEnterSceneReq)(nil),    // 22: proto.PathfindingEnterSceneReq
	(*PathfindingEnterSceneRsp)(nil),    // 23: proto.PathfindingEnterSceneRsp
	(*GMShowObstacleReq)(nil),           // 24: proto.GMShowObstacleReq
	(*GMObstacleInfo)(nil),              // 25: proto.GMObstacleInfo
	(*GMShowObstacleRsp)(nil),           // 26: proto.GMShowObstacleRsp
	(*GMShowNavMeshReq)(nil),            // 27: proto.GMShowNavMeshReq
	(*PBNavMeshPoly)(nil),               // 28: proto.PBNavMeshPoly
	(*PBNavMeshTile)(nil),               // 29: proto.PBNavMeshTile
	(*GMShowNavMeshRsp)(nil),            // 30: proto.GMShowNavMeshRsp
	(*PbNavMeshStatsInfo)(nil),          // 31: proto.PbNavMeshStatsInfo
	(*NavMeshStatsNotify)(nil),          // 32: proto.NavMeshStatsNotify
	(*Vector3Int)(nil),                  // 33: proto.Vector3Int
	(*Vector)(nil),                      // 34: proto.Vector
	(*MathQuaternion)(nil),              // 35: proto.MathQuaternion
}
var file_cmd_cmd_pathfinding_proto_depIdxs = []int32{
	1,  // 0: proto.QueryPathReq.query_type:type_name -> proto.QueryPathReq.OptionType
	33, // 1: proto.QueryPathReq.source_extend:type_name -> proto.Vector3Int
	34, // 2: proto.QueryPathReq.source_pos:type_name -> proto.Vector
	16, // 3: proto.QueryPathReq.filter:type_name -> proto.QueryFilter
	33, // 4: proto.QueryPathReq.destination_extend:type_name -> proto.Vector3Int
	34, // 5: proto.QueryPathReq.destination_pos:type_name -> proto.Vector
	34, // 6: proto.QueryPathRsp.corners:type_name -> proto.Vector
	3,  // 7: proto.QueryPathRsp.query_status:type_name -> proto.QueryPathRsp.PathStatusType
	35, // 8: proto.ObstacleInfo.rotation:type_name -> proto.MathQuaternion
	34, // 9: proto.ObstacleInfo.center:type_name -> proto.Vector
	4,  // 10: proto.ObstacleInfo.shape:type_name -> proto.ObstacleInfo.ShapeType
	33, // 11: proto.ObstacleInfo.extents:type_name -> proto.Vector3Int
	19, // 12: proto.ObstacleModifyNotify.add_obstacles:type_name -> proto.ObstacleInfo
	19, // 13: proto.PathfindingEnterSceneReq.obstacles:type_name -> proto.ObstacleInfo
	10, // 14: proto.GMObstacleInfo.shape:type_name -> proto.GMObstacleInfo.ShapeType
	35, // 15: proto.GMObstacleInfo.rotation:type_name -> proto.MathQuaternion
	34, // 16: proto.GMObstacleInfo.center:type_name -> proto.Vector
	33, // 17: proto.GMObstacleInfo.extents:type_name -> proto.Vector3Int
	25, // 18: proto.GMShowObstacleRsp.obstacles:type_name -> proto.GMObstacleInfo
	34, // 19: proto.GMShowNavMeshReq.center:type_name -> proto.Vector
	34, // 20: proto.GMShowNavMeshReq.extent:type_name -> proto.Vector
	13, // 21: proto.PBNavMeshPoly.edge_types:type_name -> proto.PBNavMeshPoly.EdgeType
	34, // 22: proto.PBNavMeshTile.vecs:type_name -> proto.Vector
	28, // 23: proto.PBNavMeshTile.polys:type_name -> proto.PBNavMeshPoly
	29, // 24: proto.GMShowNavMeshRsp.tiles:type_name -> proto.PBNavMeshTile
	31, // 25: proto.NavMeshStatsNotify.infos:type_name -> proto.PbNavMeshStatsInfo
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_cmd_cmd_pathfinding_proto_init() }
func file_cmd_cmd_pathfinding_proto_init() {
	if File_cmd_cmd_pathfinding_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_pathfinding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPathRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObstacleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObstacleModifyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathfindingPingNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathfindingEnterSceneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathfindingEnterSceneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMShowObstacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMObstacleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMShowObstacleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMShowNavMeshReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBNavMeshPoly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBNavMeshTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GMShowNavMeshRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbNavMeshStatsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_pathfinding_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavMeshStatsNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_pathfinding_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_pathfinding_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_pathfinding_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_pathfinding_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_pathfinding_proto_msgTypes,
	}.Build()
	File_cmd_cmd_pathfinding_proto = out.File
	file_cmd_cmd_pathfinding_proto_rawDesc = nil
	file_cmd_cmd_pathfinding_proto_goTypes = nil
	file_cmd_cmd_pathfinding_proto_depIdxs = nil
}
