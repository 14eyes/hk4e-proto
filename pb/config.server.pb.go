// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/config.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataVersionConfig_DataVersionType int32

const (
	DataVersionConfig_SERVER         DataVersionConfig_DataVersionType = 0
	DataVersionConfig_CLIENT         DataVersionConfig_DataVersionType = 1
	DataVersionConfig_CLIENT_SILENCE DataVersionConfig_DataVersionType = 2
)

// Enum value maps for DataVersionConfig_DataVersionType.
var (
	DataVersionConfig_DataVersionType_name = map[int32]string{
		0: "SERVER",
		1: "CLIENT",
		2: "CLIENT_SILENCE",
	}
	DataVersionConfig_DataVersionType_value = map[string]int32{
		"SERVER":         0,
		"CLIENT":         1,
		"CLIENT_SILENCE": 2,
	}
)

func (x DataVersionConfig_DataVersionType) Enum() *DataVersionConfig_DataVersionType {
	p := new(DataVersionConfig_DataVersionType)
	*p = x
	return p
}

func (x DataVersionConfig_DataVersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataVersionConfig_DataVersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_config_server_proto_enumTypes[0].Descriptor()
}

func (DataVersionConfig_DataVersionType) Type() protoreflect.EnumType {
	return &file_server_only_config_server_proto_enumTypes[0]
}

func (x DataVersionConfig_DataVersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataVersionConfig_DataVersionType.Descriptor instead.
func (DataVersionConfig_DataVersionType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{5, 0}
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos   int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{0}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type StopServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime     *Timestamp `protobuf:"bytes,1,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime       *Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Url           string     `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	TextId        uint32     `protobuf:"varint,4,opt,name=text_id,json=textId,proto3" json:"text_id,omitempty"`
	ContentTextId uint32     `protobuf:"varint,5,opt,name=content_text_id,json=contentTextId,proto3" json:"content_text_id,omitempty"`
}

func (x *StopServerConfig) Reset() {
	*x = StopServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerConfig) ProtoMessage() {}

func (x *StopServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerConfig.ProtoReflect.Descriptor instead.
func (*StopServerConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{1}
}

func (x *StopServerConfig) GetBeginTime() *Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *StopServerConfig) GetEndTime() *Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *StopServerConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *StopServerConfig) GetTextId() uint32 {
	if x != nil {
		return x.TextId
	}
	return 0
}

func (x *StopServerConfig) GetContentTextId() uint32 {
	if x != nil {
		return x.ContentTextId
	}
	return 0
}

type StopRegisterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime    *Timestamp `protobuf:"bytes,1,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime      *Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	MaxPlayerNum uint32     `protobuf:"varint,3,opt,name=max_player_num,json=maxPlayerNum,proto3" json:"max_player_num,omitempty"`
}

func (x *StopRegisterConfig) Reset() {
	*x = StopRegisterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRegisterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRegisterConfig) ProtoMessage() {}

func (x *StopRegisterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRegisterConfig.ProtoReflect.Descriptor instead.
func (*StopRegisterConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{2}
}

func (x *StopRegisterConfig) GetBeginTime() *Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *StopRegisterConfig) GetEndTime() *Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *StopRegisterConfig) GetMaxPlayerNum() uint32 {
	if x != nil {
		return x.MaxPlayerNum
	}
	return 0
}

type ForceUpdateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	TextId uint32 `protobuf:"varint,2,opt,name=text_id,json=textId,proto3" json:"text_id,omitempty"`
}

func (x *ForceUpdateConfig) Reset() {
	*x = ForceUpdateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceUpdateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUpdateConfig) ProtoMessage() {}

func (x *ForceUpdateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUpdateConfig.ProtoReflect.Descriptor instead.
func (*ForceUpdateConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{3}
}

func (x *ForceUpdateConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ForceUpdateConfig) GetTextId() uint32 {
	if x != nil {
		return x.TextId
	}
	return 0
}

type DateTimeIntervalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime *Timestamp `protobuf:"bytes,1,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   *Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	TextId    uint32     `protobuf:"varint,3,opt,name=text_id,json=textId,proto3" json:"text_id,omitempty"`
}

func (x *DateTimeIntervalConfig) Reset() {
	*x = DateTimeIntervalConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTimeIntervalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeIntervalConfig) ProtoMessage() {}

func (x *DateTimeIntervalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTimeIntervalConfig.ProtoReflect.Descriptor instead.
func (*DateTimeIntervalConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{4}
}

func (x *DateTimeIntervalConfig) GetBeginTime() *Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *DateTimeIntervalConfig) GetEndTime() *Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *DateTimeIntervalConfig) GetTextId() uint32 {
	if x != nil {
		return x.TextId
	}
	return 0
}

type DataVersionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server                     uint32            `protobuf:"varint,1,opt,name=server,proto3" json:"server,omitempty"`
	Client                     uint32            `protobuf:"varint,2,opt,name=client,proto3" json:"client,omitempty"`
	ClientSilence              uint32            `protobuf:"varint,3,opt,name=client_silence,json=clientSilence,proto3" json:"client_silence,omitempty"`
	ClientMd5                  map[string]string `protobuf:"bytes,4,rep,name=client_md5,json=clientMd5,proto3" json:"client_md5,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientPlatformMd5          map[uint32]string `protobuf:"bytes,5,rep,name=client_platform_md5,json=clientPlatformMd5,proto3" json:"client_platform_md5,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientSilenceMd5           map[string]string `protobuf:"bytes,6,rep,name=client_silence_md5,json=clientSilenceMd5,proto3" json:"client_silence_md5,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientSilencePlatformMd5   map[uint32]string `protobuf:"bytes,7,rep,name=client_silence_platform_md5,json=clientSilencePlatformMd5,proto3" json:"client_silence_platform_md5,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientVersionSuffix        string            `protobuf:"bytes,8,opt,name=client_version_suffix,json=clientVersionSuffix,proto3" json:"client_version_suffix,omitempty"`
	ClientSilenceVersionSuffix string            `protobuf:"bytes,9,opt,name=client_silence_version_suffix,json=clientSilenceVersionSuffix,proto3" json:"client_silence_version_suffix,omitempty"`
	Relogin                    bool              `protobuf:"varint,10,opt,name=relogin,proto3" json:"relogin,omitempty"`
	MpRelogin                  bool              `protobuf:"varint,11,opt,name=mp_relogin,json=mpRelogin,proto3" json:"mp_relogin,omitempty"`
	GcgForbidRelogin           bool              `protobuf:"varint,12,opt,name=gcg_forbid_relogin,json=gcgForbidRelogin,proto3" json:"gcg_forbid_relogin,omitempty"`
}

func (x *DataVersionConfig) Reset() {
	*x = DataVersionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataVersionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVersionConfig) ProtoMessage() {}

func (x *DataVersionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataVersionConfig.ProtoReflect.Descriptor instead.
func (*DataVersionConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{5}
}

func (x *DataVersionConfig) GetServer() uint32 {
	if x != nil {
		return x.Server
	}
	return 0
}

func (x *DataVersionConfig) GetClient() uint32 {
	if x != nil {
		return x.Client
	}
	return 0
}

func (x *DataVersionConfig) GetClientSilence() uint32 {
	if x != nil {
		return x.ClientSilence
	}
	return 0
}

func (x *DataVersionConfig) GetClientMd5() map[string]string {
	if x != nil {
		return x.ClientMd5
	}
	return nil
}

func (x *DataVersionConfig) GetClientPlatformMd5() map[uint32]string {
	if x != nil {
		return x.ClientPlatformMd5
	}
	return nil
}

func (x *DataVersionConfig) GetClientSilenceMd5() map[string]string {
	if x != nil {
		return x.ClientSilenceMd5
	}
	return nil
}

func (x *DataVersionConfig) GetClientSilencePlatformMd5() map[uint32]string {
	if x != nil {
		return x.ClientSilencePlatformMd5
	}
	return nil
}

func (x *DataVersionConfig) GetClientVersionSuffix() string {
	if x != nil {
		return x.ClientVersionSuffix
	}
	return ""
}

func (x *DataVersionConfig) GetClientSilenceVersionSuffix() string {
	if x != nil {
		return x.ClientSilenceVersionSuffix
	}
	return ""
}

func (x *DataVersionConfig) GetRelogin() bool {
	if x != nil {
		return x.Relogin
	}
	return false
}

func (x *DataVersionConfig) GetMpRelogin() bool {
	if x != nil {
		return x.MpRelogin
	}
	return false
}

func (x *DataVersionConfig) GetGcgForbidRelogin() bool {
	if x != nil {
		return x.GcgForbidRelogin
	}
	return false
}

type SdkAccountReqConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ChannelId  uint32 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	OpenId     string `protobuf:"bytes,3,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	ComboToken string `protobuf:"bytes,4,opt,name=combo_token,json=comboToken,proto3" json:"combo_token,omitempty"`
	Sign       string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	Region     string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *SdkAccountReqConfig) Reset() {
	*x = SdkAccountReqConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkAccountReqConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkAccountReqConfig) ProtoMessage() {}

func (x *SdkAccountReqConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkAccountReqConfig.ProtoReflect.Descriptor instead.
func (*SdkAccountReqConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{6}
}

func (x *SdkAccountReqConfig) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *SdkAccountReqConfig) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *SdkAccountReqConfig) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *SdkAccountReqConfig) GetComboToken() string {
	if x != nil {
		return x.ComboToken
	}
	return ""
}

func (x *SdkAccountReqConfig) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *SdkAccountReqConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GachaUpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemParentType uint32   `protobuf:"varint,1,opt,name=item_parent_type,json=itemParentType,proto3" json:"item_parent_type,omitempty"`
	Prob           uint32   `protobuf:"varint,2,opt,name=prob,proto3" json:"prob,omitempty"`
	ItemList       []uint32 `protobuf:"varint,3,rep,packed,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *GachaUpConfig) Reset() {
	*x = GachaUpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GachaUpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GachaUpConfig) ProtoMessage() {}

func (x *GachaUpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GachaUpConfig.ProtoReflect.Descriptor instead.
func (*GachaUpConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{7}
}

func (x *GachaUpConfig) GetItemParentType() uint32 {
	if x != nil {
		return x.ItemParentType
	}
	return 0
}

func (x *GachaUpConfig) GetProb() uint32 {
	if x != nil {
		return x.Prob
	}
	return 0
}

func (x *GachaUpConfig) GetItemList() []uint32 {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type DbGachaUpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GachaUpList []*GachaUpConfig `protobuf:"bytes,1,rep,name=gacha_up_list,json=gachaUpList,proto3" json:"gacha_up_list,omitempty"`
}

func (x *DbGachaUpConfig) Reset() {
	*x = DbGachaUpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbGachaUpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGachaUpConfig) ProtoMessage() {}

func (x *DbGachaUpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGachaUpConfig.ProtoReflect.Descriptor instead.
func (*DbGachaUpConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{8}
}

func (x *DbGachaUpConfig) GetGachaUpList() []*GachaUpConfig {
	if x != nil {
		return x.GachaUpList
	}
	return nil
}

type DbGachaRuleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GachaRuleList []uint32 `protobuf:"varint,1,rep,packed,name=gacha_rule_list,json=gachaRuleList,proto3" json:"gacha_rule_list,omitempty"`
}

func (x *DbGachaRuleConfig) Reset() {
	*x = DbGachaRuleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbGachaRuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGachaRuleConfig) ProtoMessage() {}

func (x *DbGachaRuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGachaRuleConfig.ProtoReflect.Descriptor instead.
func (*DbGachaRuleConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{9}
}

func (x *DbGachaRuleConfig) GetGachaRuleList() []uint32 {
	if x != nil {
		return x.GachaRuleList
	}
	return nil
}

type AntiCheatConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSegmentCrcValid bool `protobuf:"varint,1,opt,name=is_segment_crc_valid,json=isSegmentCrcValid,proto3" json:"is_segment_crc_valid,omitempty"`
}

func (x *AntiCheatConfig) Reset() {
	*x = AntiCheatConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiCheatConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatConfig) ProtoMessage() {}

func (x *AntiCheatConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatConfig.ProtoReflect.Descriptor instead.
func (*AntiCheatConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{10}
}

func (x *AntiCheatConfig) GetIsSegmentCrcValid() bool {
	if x != nil {
		return x.IsSegmentCrcValid
	}
	return false
}

type GameplayRecommendationSkillConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillIdList []uint32 `protobuf:"varint,1,rep,packed,name=skill_id_list,json=skillIdList,proto3" json:"skill_id_list,omitempty"`
}

func (x *GameplayRecommendationSkillConfig) Reset() {
	*x = GameplayRecommendationSkillConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationSkillConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationSkillConfig) ProtoMessage() {}

func (x *GameplayRecommendationSkillConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationSkillConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationSkillConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{11}
}

func (x *GameplayRecommendationSkillConfig) GetSkillIdList() []uint32 {
	if x != nil {
		return x.SkillIdList
	}
	return nil
}

type GameplayRecommendationReliquaryMainPropConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainPropId uint32 `protobuf:"varint,1,opt,name=main_prop_id,json=mainPropId,proto3" json:"main_prop_id,omitempty"`
	Permillage uint32 `protobuf:"varint,2,opt,name=permillage,proto3" json:"permillage,omitempty"`
}

func (x *GameplayRecommendationReliquaryMainPropConfig) Reset() {
	*x = GameplayRecommendationReliquaryMainPropConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryMainPropConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryMainPropConfig) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryMainPropConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryMainPropConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryMainPropConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{12}
}

func (x *GameplayRecommendationReliquaryMainPropConfig) GetMainPropId() uint32 {
	if x != nil {
		return x.MainPropId
	}
	return 0
}

func (x *GameplayRecommendationReliquaryMainPropConfig) GetPermillage() uint32 {
	if x != nil {
		return x.Permillage
	}
	return 0
}

type GameplayRecommendationReliquaryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainPropConfigList []*GameplayRecommendationReliquaryMainPropConfig `protobuf:"bytes,1,rep,name=main_prop_config_list,json=mainPropConfigList,proto3" json:"main_prop_config_list,omitempty"`
}

func (x *GameplayRecommendationReliquaryConfig) Reset() {
	*x = GameplayRecommendationReliquaryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryConfig) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{13}
}

func (x *GameplayRecommendationReliquaryConfig) GetMainPropConfigList() []*GameplayRecommendationReliquaryMainPropConfig {
	if x != nil {
		return x.MainPropConfigList
	}
	return nil
}

type GameplayRecommendationReliquaryMapConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReliquaryConfigMap map[uint32]*GameplayRecommendationReliquaryConfig `protobuf:"bytes,1,rep,name=reliquary_config_map,json=reliquaryConfigMap,proto3" json:"reliquary_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameplayRecommendationReliquaryMapConfig) Reset() {
	*x = GameplayRecommendationReliquaryMapConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryMapConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryMapConfig) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryMapConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryMapConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryMapConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{14}
}

func (x *GameplayRecommendationReliquaryMapConfig) GetReliquaryConfigMap() map[uint32]*GameplayRecommendationReliquaryConfig {
	if x != nil {
		return x.ReliquaryConfigMap
	}
	return nil
}

type GameplayRecommendationAvatarConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillConfigMap            map[uint32]*GameplayRecommendationSkillConfig        `protobuf:"bytes,1,rep,name=skill_config_map,json=skillConfigMap,proto3" json:"skill_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReliquaryConfigMap        map[uint32]*GameplayRecommendationReliquaryConfig    `protobuf:"bytes,2,rep,name=reliquary_config_map,json=reliquaryConfigMap,proto3" json:"reliquary_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ElementReliquaryConfigMap map[uint32]*GameplayRecommendationReliquaryMapConfig `protobuf:"bytes,3,rep,name=element_reliquary_config_map,json=elementReliquaryConfigMap,proto3" json:"element_reliquary_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameplayRecommendationAvatarConfig) Reset() {
	*x = GameplayRecommendationAvatarConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationAvatarConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationAvatarConfig) ProtoMessage() {}

func (x *GameplayRecommendationAvatarConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationAvatarConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationAvatarConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{15}
}

func (x *GameplayRecommendationAvatarConfig) GetSkillConfigMap() map[uint32]*GameplayRecommendationSkillConfig {
	if x != nil {
		return x.SkillConfigMap
	}
	return nil
}

func (x *GameplayRecommendationAvatarConfig) GetReliquaryConfigMap() map[uint32]*GameplayRecommendationReliquaryConfig {
	if x != nil {
		return x.ReliquaryConfigMap
	}
	return nil
}

func (x *GameplayRecommendationAvatarConfig) GetElementReliquaryConfigMap() map[uint32]*GameplayRecommendationReliquaryMapConfig {
	if x != nil {
		return x.ElementReliquaryConfigMap
	}
	return nil
}

type GameplayRecommendationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarConfigMap map[uint32]*GameplayRecommendationAvatarConfig `protobuf:"bytes,1,rep,name=avatar_config_map,json=avatarConfigMap,proto3" json:"avatar_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameplayRecommendationConfig) Reset() {
	*x = GameplayRecommendationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_config_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationConfig) ProtoMessage() {}

func (x *GameplayRecommendationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_config_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationConfig.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationConfig) Descriptor() ([]byte, []int) {
	return file_server_only_config_server_proto_rawDescGZIP(), []int{16}
}

func (x *GameplayRecommendationConfig) GetAvatarConfigMap() map[uint32]*GameplayRecommendationAvatarConfig {
	if x != nil {
		return x.AvatarConfigMap
	}
	return nil
}

var File_server_only_config_server_proto protoreflect.FileDescriptor

var file_server_only_config_server_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x3e, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x9b, 0x08, 0x0a, 0x11, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x64, 0x35, 0x12, 0x5f, 0x0a,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x64, 0x35, 0x12, 0x5c,
	0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x75, 0x0a, 0x1b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4d, 0x64, 0x35, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x70, 0x52, 0x65, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x63, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x67, 0x63, 0x67, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x64, 0x35, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x44, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x1d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x4c,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x53, 0x64, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x0d, 0x47, 0x61,
	0x63, 0x68, 0x61, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x44, 0x62, 0x47, 0x61, 0x63, 0x68,
	0x61, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x0d, 0x67, 0x61, 0x63,
	0x68, 0x61, 0x5f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x63, 0x68, 0x61, 0x55, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x67, 0x61, 0x63, 0x68, 0x61, 0x55, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x44, 0x62, 0x47, 0x61, 0x63, 0x68, 0x61, 0x52, 0x75,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x63, 0x68,
	0x61, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0d, 0x67, 0x61, 0x63, 0x68, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x42, 0x0a, 0x0f, 0x41, 0x6e, 0x74, 0x69, 0x43, 0x68, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x72, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x73, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x63, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x21, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x71, 0x0a,
	0x2d, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x4d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65,
	0x22, 0x90, 0x01, 0x0a, 0x25, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71,
	0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x67, 0x0a, 0x15, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x12, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x28, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x79, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x1a, 0x73, 0x0a, 0x17, 0x52,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xef, 0x05, 0x0a, 0x22, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x67, 0x0a, 0x10, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x12, 0x73, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x89, 0x01, 0x0a, 0x1c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x19, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x1a, 0x6b, 0x0a, 0x13, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x73,
	0x0a, 0x17, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x7d, 0x0a, 0x1e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x4d, 0x61,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xf3, 0x01, 0x0a, 0x1c, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x64, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x1a, 0x6d, 0x0a, 0x14, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_config_server_proto_rawDescOnce sync.Once
	file_server_only_config_server_proto_rawDescData = file_server_only_config_server_proto_rawDesc
)

func file_server_only_config_server_proto_rawDescGZIP() []byte {
	file_server_only_config_server_proto_rawDescOnce.Do(func() {
		file_server_only_config_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_config_server_proto_rawDescData)
	})
	return file_server_only_config_server_proto_rawDescData
}

var file_server_only_config_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_only_config_server_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_server_only_config_server_proto_goTypes = []interface{}{
	(DataVersionConfig_DataVersionType)(0),                // 0: proto.DataVersionConfig.DataVersionType
	(*Timestamp)(nil),                                     // 1: proto.Timestamp
	(*StopServerConfig)(nil),                              // 2: proto.StopServerConfig
	(*StopRegisterConfig)(nil),                            // 3: proto.StopRegisterConfig
	(*ForceUpdateConfig)(nil),                             // 4: proto.ForceUpdateConfig
	(*DateTimeIntervalConfig)(nil),                        // 5: proto.DateTimeIntervalConfig
	(*DataVersionConfig)(nil),                             // 6: proto.DataVersionConfig
	(*SdkAccountReqConfig)(nil),                           // 7: proto.SdkAccountReqConfig
	(*GachaUpConfig)(nil),                                 // 8: proto.GachaUpConfig
	(*DbGachaUpConfig)(nil),                               // 9: proto.DbGachaUpConfig
	(*DbGachaRuleConfig)(nil),                             // 10: proto.DbGachaRuleConfig
	(*AntiCheatConfig)(nil),                               // 11: proto.AntiCheatConfig
	(*GameplayRecommendationSkillConfig)(nil),             // 12: proto.GameplayRecommendationSkillConfig
	(*GameplayRecommendationReliquaryMainPropConfig)(nil), // 13: proto.GameplayRecommendationReliquaryMainPropConfig
	(*GameplayRecommendationReliquaryConfig)(nil),         // 14: proto.GameplayRecommendationReliquaryConfig
	(*GameplayRecommendationReliquaryMapConfig)(nil),      // 15: proto.GameplayRecommendationReliquaryMapConfig
	(*GameplayRecommendationAvatarConfig)(nil),            // 16: proto.GameplayRecommendationAvatarConfig
	(*GameplayRecommendationConfig)(nil),                  // 17: proto.GameplayRecommendationConfig
	nil,                                                   // 18: proto.DataVersionConfig.ClientMd5Entry
	nil,                                                   // 19: proto.DataVersionConfig.ClientPlatformMd5Entry
	nil,                                                   // 20: proto.DataVersionConfig.ClientSilenceMd5Entry
	nil,                                                   // 21: proto.DataVersionConfig.ClientSilencePlatformMd5Entry
	nil,                                                   // 22: proto.GameplayRecommendationReliquaryMapConfig.ReliquaryConfigMapEntry
	nil,                                                   // 23: proto.GameplayRecommendationAvatarConfig.SkillConfigMapEntry
	nil,                                                   // 24: proto.GameplayRecommendationAvatarConfig.ReliquaryConfigMapEntry
	nil,                                                   // 25: proto.GameplayRecommendationAvatarConfig.ElementReliquaryConfigMapEntry
	nil,                                                   // 26: proto.GameplayRecommendationConfig.AvatarConfigMapEntry
}
var file_server_only_config_server_proto_depIdxs = []int32{
	1,  // 0: proto.StopServerConfig.begin_time:type_name -> proto.Timestamp
	1,  // 1: proto.StopServerConfig.end_time:type_name -> proto.Timestamp
	1,  // 2: proto.StopRegisterConfig.begin_time:type_name -> proto.Timestamp
	1,  // 3: proto.StopRegisterConfig.end_time:type_name -> proto.Timestamp
	1,  // 4: proto.DateTimeIntervalConfig.begin_time:type_name -> proto.Timestamp
	1,  // 5: proto.DateTimeIntervalConfig.end_time:type_name -> proto.Timestamp
	18, // 6: proto.DataVersionConfig.client_md5:type_name -> proto.DataVersionConfig.ClientMd5Entry
	19, // 7: proto.DataVersionConfig.client_platform_md5:type_name -> proto.DataVersionConfig.ClientPlatformMd5Entry
	20, // 8: proto.DataVersionConfig.client_silence_md5:type_name -> proto.DataVersionConfig.ClientSilenceMd5Entry
	21, // 9: proto.DataVersionConfig.client_silence_platform_md5:type_name -> proto.DataVersionConfig.ClientSilencePlatformMd5Entry
	8,  // 10: proto.DbGachaUpConfig.gacha_up_list:type_name -> proto.GachaUpConfig
	13, // 11: proto.GameplayRecommendationReliquaryConfig.main_prop_config_list:type_name -> proto.GameplayRecommendationReliquaryMainPropConfig
	22, // 12: proto.GameplayRecommendationReliquaryMapConfig.reliquary_config_map:type_name -> proto.GameplayRecommendationReliquaryMapConfig.ReliquaryConfigMapEntry
	23, // 13: proto.GameplayRecommendationAvatarConfig.skill_config_map:type_name -> proto.GameplayRecommendationAvatarConfig.SkillConfigMapEntry
	24, // 14: proto.GameplayRecommendationAvatarConfig.reliquary_config_map:type_name -> proto.GameplayRecommendationAvatarConfig.ReliquaryConfigMapEntry
	25, // 15: proto.GameplayRecommendationAvatarConfig.element_reliquary_config_map:type_name -> proto.GameplayRecommendationAvatarConfig.ElementReliquaryConfigMapEntry
	26, // 16: proto.GameplayRecommendationConfig.avatar_config_map:type_name -> proto.GameplayRecommendationConfig.AvatarConfigMapEntry
	14, // 17: proto.GameplayRecommendationReliquaryMapConfig.ReliquaryConfigMapEntry.value:type_name -> proto.GameplayRecommendationReliquaryConfig
	12, // 18: proto.GameplayRecommendationAvatarConfig.SkillConfigMapEntry.value:type_name -> proto.GameplayRecommendationSkillConfig
	14, // 19: proto.GameplayRecommendationAvatarConfig.ReliquaryConfigMapEntry.value:type_name -> proto.GameplayRecommendationReliquaryConfig
	15, // 20: proto.GameplayRecommendationAvatarConfig.ElementReliquaryConfigMapEntry.value:type_name -> proto.GameplayRecommendationReliquaryMapConfig
	16, // 21: proto.GameplayRecommendationConfig.AvatarConfigMapEntry.value:type_name -> proto.GameplayRecommendationAvatarConfig
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_server_only_config_server_proto_init() }
func file_server_only_config_server_proto_init() {
	if File_server_only_config_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_only_config_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRegisterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceUpdateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTimeIntervalConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataVersionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkAccountReqConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GachaUpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbGachaUpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbGachaRuleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiCheatConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationSkillConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryMainPropConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryMapConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationAvatarConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_config_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_config_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_config_server_proto_goTypes,
		DependencyIndexes: file_server_only_config_server_proto_depIdxs,
		EnumInfos:         file_server_only_config_server_proto_enumTypes,
		MessageInfos:      file_server_only_config_server_proto_msgTypes,
	}.Build()
	File_server_only_config_server_proto = out.File
	file_server_only_config_server_proto_rawDesc = nil
	file_server_only_config_server_proto_goTypes = nil
	file_server_only_config_server_proto_depIdxs = nil
}
