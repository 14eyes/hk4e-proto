// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_social.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PSRequstReason int32

const (
	PSRequstReason_PS_REASON_NONE           PSRequstReason = 0
	PSRequstReason_PS_REASON_FRIEND_LIST    PSRequstReason = 1
	PSRequstReason_PS_REASON_APPLY_ENTER_MP PSRequstReason = 2
	PSRequstReason_PS_REASON_BLACK_LIST     PSRequstReason = 3
)

// Enum value maps for PSRequstReason.
var (
	PSRequstReason_name = map[int32]string{
		0: "PS_REASON_NONE",
		1: "PS_REASON_FRIEND_LIST",
		2: "PS_REASON_APPLY_ENTER_MP",
		3: "PS_REASON_BLACK_LIST",
	}
	PSRequstReason_value = map[string]int32{
		"PS_REASON_NONE":           0,
		"PS_REASON_FRIEND_LIST":    1,
		"PS_REASON_APPLY_ENTER_MP": 2,
		"PS_REASON_BLACK_LIST":     3,
	}
)

func (x PSRequstReason) Enum() *PSRequstReason {
	p := new(PSRequstReason)
	*p = x
	return p
}

func (x PSRequstReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PSRequstReason) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_social_server_proto_enumTypes[0].Descriptor()
}

func (PSRequstReason) Type() protoreflect.EnumType {
	return &file_server_only_cmd_social_server_proto_enumTypes[0]
}

func (x PSRequstReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PSRequstReason.Descriptor instead.
func (PSRequstReason) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{0}
}

type FriendBriefRequestReason int32

const (
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_NONE                  FriendBriefRequestReason = 0
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_BLESSING_ACTIVITY     FriendBriefRequestReason = 1
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_PLANT_FLOWER_ACTIVITY FriendBriefRequestReason = 2
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_WINTER_CAMP_ACTIVITY  FriendBriefRequestReason = 3
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_GACHA_ACTIVITY        FriendBriefRequestReason = 4
	FriendBriefRequestReason_FRIEND_BRIEF_REASON_VINTAGE_ACTIVITY      FriendBriefRequestReason = 5
)

// Enum value maps for FriendBriefRequestReason.
var (
	FriendBriefRequestReason_name = map[int32]string{
		0: "FRIEND_BRIEF_REASON_NONE",
		1: "FRIEND_BRIEF_REASON_BLESSING_ACTIVITY",
		2: "FRIEND_BRIEF_REASON_PLANT_FLOWER_ACTIVITY",
		3: "FRIEND_BRIEF_REASON_WINTER_CAMP_ACTIVITY",
		4: "FRIEND_BRIEF_REASON_GACHA_ACTIVITY",
		5: "FRIEND_BRIEF_REASON_VINTAGE_ACTIVITY",
	}
	FriendBriefRequestReason_value = map[string]int32{
		"FRIEND_BRIEF_REASON_NONE":                  0,
		"FRIEND_BRIEF_REASON_BLESSING_ACTIVITY":     1,
		"FRIEND_BRIEF_REASON_PLANT_FLOWER_ACTIVITY": 2,
		"FRIEND_BRIEF_REASON_WINTER_CAMP_ACTIVITY":  3,
		"FRIEND_BRIEF_REASON_GACHA_ACTIVITY":        4,
		"FRIEND_BRIEF_REASON_VINTAGE_ACTIVITY":      5,
	}
)

func (x FriendBriefRequestReason) Enum() *FriendBriefRequestReason {
	p := new(FriendBriefRequestReason)
	*p = x
	return p
}

func (x FriendBriefRequestReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendBriefRequestReason) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_social_server_proto_enumTypes[1].Descriptor()
}

func (FriendBriefRequestReason) Type() protoreflect.EnumType {
	return &file_server_only_cmd_social_server_proto_enumTypes[1]
}

func (x FriendBriefRequestReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendBriefRequestReason.Descriptor instead.
func (FriendBriefRequestReason) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{1}
}

type SaveCustomDungeonType int32

const (
	SaveCustomDungeonType_SAVE_CUSTOM_DUNGEON_NONE    SaveCustomDungeonType = 0
	SaveCustomDungeonType_SAVE_CUSTOM_DUNGEON_ROOM    SaveCustomDungeonType = 1
	SaveCustomDungeonType_SAVE_CUSTOM_DUNGEON_SETTING SaveCustomDungeonType = 2
)

// Enum value maps for SaveCustomDungeonType.
var (
	SaveCustomDungeonType_name = map[int32]string{
		0: "SAVE_CUSTOM_DUNGEON_NONE",
		1: "SAVE_CUSTOM_DUNGEON_ROOM",
		2: "SAVE_CUSTOM_DUNGEON_SETTING",
	}
	SaveCustomDungeonType_value = map[string]int32{
		"SAVE_CUSTOM_DUNGEON_NONE":    0,
		"SAVE_CUSTOM_DUNGEON_ROOM":    1,
		"SAVE_CUSTOM_DUNGEON_SETTING": 2,
	}
)

func (x SaveCustomDungeonType) Enum() *SaveCustomDungeonType {
	p := new(SaveCustomDungeonType)
	*p = x
	return p
}

func (x SaveCustomDungeonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SaveCustomDungeonType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_social_server_proto_enumTypes[2].Descriptor()
}

func (SaveCustomDungeonType) Type() protoreflect.EnumType {
	return &file_server_only_cmd_social_server_proto_enumTypes[2]
}

func (x SaveCustomDungeonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SaveCustomDungeonType.Descriptor instead.
func (SaveCustomDungeonType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{2}
}

type CustomDungeonSocialUpdateType int32

const (
	CustomDungeonSocialUpdateType_CUSTOM_DUNGEON_SOCIAL_UPDATE_NONE  CustomDungeonSocialUpdateType = 0
	CustomDungeonSocialUpdateType_CUSTOM_DUNGEON_SOCIAL_UPDATE_STORE CustomDungeonSocialUpdateType = 1
	CustomDungeonSocialUpdateType_CUSTOM_DUNGEON_SOCIAL_UPDATE_PLAY  CustomDungeonSocialUpdateType = 2
	CustomDungeonSocialUpdateType_CUSTOM_DUNGEON_SOCIAL_UPDATE_LIKE  CustomDungeonSocialUpdateType = 3
)

// Enum value maps for CustomDungeonSocialUpdateType.
var (
	CustomDungeonSocialUpdateType_name = map[int32]string{
		0: "CUSTOM_DUNGEON_SOCIAL_UPDATE_NONE",
		1: "CUSTOM_DUNGEON_SOCIAL_UPDATE_STORE",
		2: "CUSTOM_DUNGEON_SOCIAL_UPDATE_PLAY",
		3: "CUSTOM_DUNGEON_SOCIAL_UPDATE_LIKE",
	}
	CustomDungeonSocialUpdateType_value = map[string]int32{
		"CUSTOM_DUNGEON_SOCIAL_UPDATE_NONE":  0,
		"CUSTOM_DUNGEON_SOCIAL_UPDATE_STORE": 1,
		"CUSTOM_DUNGEON_SOCIAL_UPDATE_PLAY":  2,
		"CUSTOM_DUNGEON_SOCIAL_UPDATE_LIKE":  3,
	}
)

func (x CustomDungeonSocialUpdateType) Enum() *CustomDungeonSocialUpdateType {
	p := new(CustomDungeonSocialUpdateType)
	*p = x
	return p
}

func (x CustomDungeonSocialUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomDungeonSocialUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_social_server_proto_enumTypes[3].Descriptor()
}

func (CustomDungeonSocialUpdateType) Type() protoreflect.EnumType {
	return &file_server_only_cmd_social_server_proto_enumTypes[3]
}

func (x CustomDungeonSocialUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomDungeonSocialUpdateType.Descriptor instead.
func (CustomDungeonSocialUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{3}
}

type CustomDungeonBriefGetType int32

const (
	CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_NONE     CustomDungeonBriefGetType = 0
	CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_MY       CustomDungeonBriefGetType = 1
	CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_STORE    CustomDungeonBriefGetType = 2
	CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_SEARCH   CustomDungeonBriefGetType = 3
	CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_GM_SCORE CustomDungeonBriefGetType = 4
)

// Enum value maps for CustomDungeonBriefGetType.
var (
	CustomDungeonBriefGetType_name = map[int32]string{
		0: "CUSTOM_DUNGEON_BRIEF_GET_NONE",
		1: "CUSTOM_DUNGEON_BRIEF_GET_MY",
		2: "CUSTOM_DUNGEON_BRIEF_GET_STORE",
		3: "CUSTOM_DUNGEON_BRIEF_GET_SEARCH",
		4: "CUSTOM_DUNGEON_BRIEF_GET_GM_SCORE",
	}
	CustomDungeonBriefGetType_value = map[string]int32{
		"CUSTOM_DUNGEON_BRIEF_GET_NONE":     0,
		"CUSTOM_DUNGEON_BRIEF_GET_MY":       1,
		"CUSTOM_DUNGEON_BRIEF_GET_STORE":    2,
		"CUSTOM_DUNGEON_BRIEF_GET_SEARCH":   3,
		"CUSTOM_DUNGEON_BRIEF_GET_GM_SCORE": 4,
	}
)

func (x CustomDungeonBriefGetType) Enum() *CustomDungeonBriefGetType {
	p := new(CustomDungeonBriefGetType)
	*p = x
	return p
}

func (x CustomDungeonBriefGetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomDungeonBriefGetType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_social_server_proto_enumTypes[4].Descriptor()
}

func (CustomDungeonBriefGetType) Type() protoreflect.EnumType {
	return &file_server_only_cmd_social_server_proto_enumTypes[4]
}

func (x CustomDungeonBriefGetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomDungeonBriefGetType.Descriptor instead.
func (CustomDungeonBriefGetType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{4}
}

type AddAskFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId uint32 `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *AddAskFriendNotify) Reset() {
	*x = AddAskFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAskFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAskFriendNotify) ProtoMessage() {}

func (x *AddAskFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAskFriendNotify.ProtoReflect.Descriptor instead.
func (*AddAskFriendNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{0}
}

func (x *AddAskFriendNotify) GetSourceId() uint32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

type ServerGetPlayerFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerGetPlayerFriendListReq) Reset() {
	*x = ServerGetPlayerFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerFriendListReq) ProtoMessage() {}

func (x *ServerGetPlayerFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerFriendListReq.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerFriendListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{1}
}

type ServerGetPlayerFriendListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode             int32    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FriendUidList       []uint32 `protobuf:"varint,2,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
	AskAddFriendUidList []uint32 `protobuf:"varint,3,rep,packed,name=ask_add_friend_uid_list,json=askAddFriendUidList,proto3" json:"ask_add_friend_uid_list,omitempty"`
	BlacklistUidList    []uint32 `protobuf:"varint,4,rep,packed,name=blacklist_uid_list,json=blacklistUidList,proto3" json:"blacklist_uid_list,omitempty"`
	PsnFriendUidList    []uint32 `protobuf:"varint,5,rep,packed,name=psn_friend_uid_list,json=psnFriendUidList,proto3" json:"psn_friend_uid_list,omitempty"`
	PsnBlacklistUidList []uint32 `protobuf:"varint,6,rep,packed,name=psn_blacklist_uid_list,json=psnBlacklistUidList,proto3" json:"psn_blacklist_uid_list,omitempty"`
}

func (x *ServerGetPlayerFriendListRsp) Reset() {
	*x = ServerGetPlayerFriendListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerFriendListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerFriendListRsp) ProtoMessage() {}

func (x *ServerGetPlayerFriendListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerFriendListRsp.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerFriendListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{2}
}

func (x *ServerGetPlayerFriendListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetPlayerFriendListRsp) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

func (x *ServerGetPlayerFriendListRsp) GetAskAddFriendUidList() []uint32 {
	if x != nil {
		return x.AskAddFriendUidList
	}
	return nil
}

func (x *ServerGetPlayerFriendListRsp) GetBlacklistUidList() []uint32 {
	if x != nil {
		return x.BlacklistUidList
	}
	return nil
}

func (x *ServerGetPlayerFriendListRsp) GetPsnFriendUidList() []uint32 {
	if x != nil {
		return x.PsnFriendUidList
	}
	return nil
}

func (x *ServerGetPlayerFriendListRsp) GetPsnBlacklistUidList() []uint32 {
	if x != nil {
		return x.PsnBlacklistUidList
	}
	return nil
}

type ServerGetSocialDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerGetSocialDetailReq) Reset() {
	*x = ServerGetSocialDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetSocialDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetSocialDetailReq) ProtoMessage() {}

func (x *ServerGetSocialDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetSocialDetailReq.ProtoReflect.Descriptor instead.
func (*ServerGetSocialDetailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{3}
}

func (x *ServerGetSocialDetailReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerGetSocialDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	SocialDetail *SocialDetail `protobuf:"bytes,2,opt,name=social_detail,json=socialDetail,proto3" json:"social_detail,omitempty"`
}

func (x *ServerGetSocialDetailRsp) Reset() {
	*x = ServerGetSocialDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetSocialDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetSocialDetailRsp) ProtoMessage() {}

func (x *ServerGetSocialDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetSocialDetailRsp.ProtoReflect.Descriptor instead.
func (*ServerGetSocialDetailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{4}
}

func (x *ServerGetSocialDetailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetSocialDetailRsp) GetSocialDetail() *SocialDetail {
	if x != nil {
		return x.SocialDetail
	}
	return nil
}

type ServerAskAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerAskAddFriendReq) Reset() {
	*x = ServerAskAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAskAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAskAddFriendReq) ProtoMessage() {}

func (x *ServerAskAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAskAddFriendReq.ProtoReflect.Descriptor instead.
func (*ServerAskAddFriendReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{5}
}

func (x *ServerAskAddFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerAskAddFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerAskAddFriendRsp) Reset() {
	*x = ServerAskAddFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAskAddFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAskAddFriendRsp) ProtoMessage() {}

func (x *ServerAskAddFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAskAddFriendRsp.ProtoReflect.Descriptor instead.
func (*ServerAskAddFriendRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{6}
}

func (x *ServerAskAddFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAskAddFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerDealAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid           uint32                  `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	DealAddFriendResult DealAddFriendResultType `protobuf:"varint,2,opt,name=deal_add_friend_result,json=dealAddFriendResult,proto3,enum=proto.DealAddFriendResultType" json:"deal_add_friend_result,omitempty"`
}

func (x *ServerDealAddFriendReq) Reset() {
	*x = ServerDealAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDealAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDealAddFriendReq) ProtoMessage() {}

func (x *ServerDealAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDealAddFriendReq.ProtoReflect.Descriptor instead.
func (*ServerDealAddFriendReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{7}
}

func (x *ServerDealAddFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerDealAddFriendReq) GetDealAddFriendResult() DealAddFriendResultType {
	if x != nil {
		return x.DealAddFriendResult
	}
	return DealAddFriendResultType_DEAL_ADD_FRIEND_REJECT
}

type ServerDealAddFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode             int32                   `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid           uint32                  `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	DealAddFriendResult DealAddFriendResultType `protobuf:"varint,3,opt,name=deal_add_friend_result,json=dealAddFriendResult,proto3,enum=proto.DealAddFriendResultType" json:"deal_add_friend_result,omitempty"`
	TargetFriendNum     uint32                  `protobuf:"varint,4,opt,name=target_friend_num,json=targetFriendNum,proto3" json:"target_friend_num,omitempty"`
	TargetFriendBrief   *FriendBrief            `protobuf:"bytes,5,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
}

func (x *ServerDealAddFriendRsp) Reset() {
	*x = ServerDealAddFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDealAddFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDealAddFriendRsp) ProtoMessage() {}

func (x *ServerDealAddFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDealAddFriendRsp.ProtoReflect.Descriptor instead.
func (*ServerDealAddFriendRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{8}
}

func (x *ServerDealAddFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerDealAddFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerDealAddFriendRsp) GetDealAddFriendResult() DealAddFriendResultType {
	if x != nil {
		return x.DealAddFriendResult
	}
	return DealAddFriendResultType_DEAL_ADD_FRIEND_REJECT
}

func (x *ServerDealAddFriendRsp) GetTargetFriendNum() uint32 {
	if x != nil {
		return x.TargetFriendNum
	}
	return 0
}

func (x *ServerDealAddFriendRsp) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

type ServerDeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerDeleteFriendReq) Reset() {
	*x = ServerDeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeleteFriendReq) ProtoMessage() {}

func (x *ServerDeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeleteFriendReq.ProtoReflect.Descriptor instead.
func (*ServerDeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{9}
}

func (x *ServerDeleteFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerDeleteFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid       uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetFriendNum uint32 `protobuf:"varint,3,opt,name=target_friend_num,json=targetFriendNum,proto3" json:"target_friend_num,omitempty"`
}

func (x *ServerDeleteFriendRsp) Reset() {
	*x = ServerDeleteFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeleteFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeleteFriendRsp) ProtoMessage() {}

func (x *ServerDeleteFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeleteFriendRsp.ProtoReflect.Descriptor instead.
func (*ServerDeleteFriendRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{10}
}

func (x *ServerDeleteFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerDeleteFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerDeleteFriendRsp) GetTargetFriendNum() uint32 {
	if x != nil {
		return x.TargetFriendNum
	}
	return 0
}

type ServerSetSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ServerSetSignatureReq) Reset() {
	*x = ServerSetSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSetSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSetSignatureReq) ProtoMessage() {}

func (x *ServerSetSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSetSignatureReq.ProtoReflect.Descriptor instead.
func (*ServerSetSignatureReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{11}
}

func (x *ServerSetSignatureReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type ServerSetSignatureRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ServerSetSignatureRsp) Reset() {
	*x = ServerSetSignatureRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSetSignatureRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSetSignatureRsp) ProtoMessage() {}

func (x *ServerSetSignatureRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSetSignatureRsp.ProtoReflect.Descriptor instead.
func (*ServerSetSignatureRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{12}
}

func (x *ServerSetSignatureRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerSetSignatureRsp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type ServerGetPlayerFriendBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUidList []uint32 `protobuf:"varint,1,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
}

func (x *ServerGetPlayerFriendBriefReq) Reset() {
	*x = ServerGetPlayerFriendBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerFriendBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerFriendBriefReq) ProtoMessage() {}

func (x *ServerGetPlayerFriendBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerFriendBriefReq.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerFriendBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{13}
}

func (x *ServerGetPlayerFriendBriefReq) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

type ServerGetPlayerFriendBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FriendBriefList []*FriendBrief `protobuf:"bytes,2,rep,name=friend_brief_list,json=friendBriefList,proto3" json:"friend_brief_list,omitempty"`
}

func (x *ServerGetPlayerFriendBriefRsp) Reset() {
	*x = ServerGetPlayerFriendBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerFriendBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerFriendBriefRsp) ProtoMessage() {}

func (x *ServerGetPlayerFriendBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerFriendBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerFriendBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{14}
}

func (x *ServerGetPlayerFriendBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetPlayerFriendBriefRsp) GetFriendBriefList() []*FriendBrief {
	if x != nil {
		return x.FriendBriefList
	}
	return nil
}

type SeverGetPS4FriendUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnIdList     []string       `protobuf:"bytes,1,rep,name=psn_id_list,json=psnIdList,proto3" json:"psn_id_list,omitempty"`
	RequestReason PSRequstReason `protobuf:"varint,2,opt,name=request_reason,json=requestReason,proto3,enum=proto.PSRequstReason" json:"request_reason,omitempty"`
}

func (x *SeverGetPS4FriendUidReq) Reset() {
	*x = SeverGetPS4FriendUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeverGetPS4FriendUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeverGetPS4FriendUidReq) ProtoMessage() {}

func (x *SeverGetPS4FriendUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeverGetPS4FriendUidReq.ProtoReflect.Descriptor instead.
func (*SeverGetPS4FriendUidReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{15}
}

func (x *SeverGetPS4FriendUidReq) GetPsnIdList() []string {
	if x != nil {
		return x.PsnIdList
	}
	return nil
}

func (x *SeverGetPS4FriendUidReq) GetRequestReason() PSRequstReason {
	if x != nil {
		return x.RequestReason
	}
	return PSRequstReason_PS_REASON_NONE
}

type SeverGetPS4FriendUidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UidIdList       []uint32       `protobuf:"varint,2,rep,packed,name=uid_id_list,json=uidIdList,proto3" json:"uid_id_list,omitempty"`
	RequestReason   PSRequstReason `protobuf:"varint,3,opt,name=request_reason,json=requestReason,proto3,enum=proto.PSRequstReason" json:"request_reason,omitempty"`
	FriendBriefList []*FriendBrief `protobuf:"bytes,4,rep,name=friend_brief_list,json=friendBriefList,proto3" json:"friend_brief_list,omitempty"`
}

func (x *SeverGetPS4FriendUidRsp) Reset() {
	*x = SeverGetPS4FriendUidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeverGetPS4FriendUidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeverGetPS4FriendUidRsp) ProtoMessage() {}

func (x *SeverGetPS4FriendUidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeverGetPS4FriendUidRsp.ProtoReflect.Descriptor instead.
func (*SeverGetPS4FriendUidRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{16}
}

func (x *SeverGetPS4FriendUidRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SeverGetPS4FriendUidRsp) GetUidIdList() []uint32 {
	if x != nil {
		return x.UidIdList
	}
	return nil
}

func (x *SeverGetPS4FriendUidRsp) GetRequestReason() PSRequstReason {
	if x != nil {
		return x.RequestReason
	}
	return PSRequstReason_PS_REASON_NONE
}

func (x *SeverGetPS4FriendUidRsp) GetFriendBriefList() []*FriendBrief {
	if x != nil {
		return x.FriendBriefList
	}
	return nil
}

type SyncPlayerBriefNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicBriefData  *PlayerBasicBriefData  `protobuf:"bytes,1,opt,name=basic_brief_data,json=basicBriefData,proto3" json:"basic_brief_data,omitempty"`
	MpBriefData     *PlayerMpBriefData     `protobuf:"bytes,2,opt,name=mp_brief_data,json=mpBriefData,proto3" json:"mp_brief_data,omitempty"`
	SocialBriefData *PlayerSocialBriefData `protobuf:"bytes,3,opt,name=social_brief_data,json=socialBriefData,proto3" json:"social_brief_data,omitempty"`
	HomeBriefData   *PlayerHomeBriefData   `protobuf:"bytes,4,opt,name=home_brief_data,json=homeBriefData,proto3" json:"home_brief_data,omitempty"`
}

func (x *SyncPlayerBriefNotify) Reset() {
	*x = SyncPlayerBriefNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayerBriefNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayerBriefNotify) ProtoMessage() {}

func (x *SyncPlayerBriefNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayerBriefNotify.ProtoReflect.Descriptor instead.
func (*SyncPlayerBriefNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{17}
}

func (x *SyncPlayerBriefNotify) GetBasicBriefData() *PlayerBasicBriefData {
	if x != nil {
		return x.BasicBriefData
	}
	return nil
}

func (x *SyncPlayerBriefNotify) GetMpBriefData() *PlayerMpBriefData {
	if x != nil {
		return x.MpBriefData
	}
	return nil
}

func (x *SyncPlayerBriefNotify) GetSocialBriefData() *PlayerSocialBriefData {
	if x != nil {
		return x.SocialBriefData
	}
	return nil
}

func (x *SyncPlayerBriefNotify) GetHomeBriefData() *PlayerHomeBriefData {
	if x != nil {
		return x.HomeBriefData
	}
	return nil
}

type ServerAddBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	IsFriend  bool   `protobuf:"varint,2,opt,name=is_friend,json=isFriend,proto3" json:"is_friend,omitempty"`
}

func (x *ServerAddBlacklistReq) Reset() {
	*x = ServerAddBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddBlacklistReq) ProtoMessage() {}

func (x *ServerAddBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddBlacklistReq.ProtoReflect.Descriptor instead.
func (*ServerAddBlacklistReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{18}
}

func (x *ServerAddBlacklistReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerAddBlacklistReq) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

type ServerAddBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32        `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetFriendBrief *FriendBrief `protobuf:"bytes,2,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
}

func (x *ServerAddBlacklistRsp) Reset() {
	*x = ServerAddBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddBlacklistRsp) ProtoMessage() {}

func (x *ServerAddBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddBlacklistRsp.ProtoReflect.Descriptor instead.
func (*ServerAddBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{19}
}

func (x *ServerAddBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAddBlacklistRsp) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

type ServerRemoveBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerRemoveBlacklistReq) Reset() {
	*x = ServerRemoveBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRemoveBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRemoveBlacklistReq) ProtoMessage() {}

func (x *ServerRemoveBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRemoveBlacklistReq.ProtoReflect.Descriptor instead.
func (*ServerRemoveBlacklistReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{20}
}

func (x *ServerRemoveBlacklistReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerRemoveBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerRemoveBlacklistRsp) Reset() {
	*x = ServerRemoveBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRemoveBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRemoveBlacklistRsp) ProtoMessage() {}

func (x *ServerRemoveBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRemoveBlacklistRsp.ProtoReflect.Descriptor instead.
func (*ServerRemoveBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{21}
}

func (x *ServerRemoveBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerRemoveBlacklistRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerGetRecentMpPlayerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentPlayerUidList []uint32 `protobuf:"varint,1,rep,packed,name=recent_player_uid_list,json=recentPlayerUidList,proto3" json:"recent_player_uid_list,omitempty"`
}

func (x *ServerGetRecentMpPlayerListReq) Reset() {
	*x = ServerGetRecentMpPlayerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetRecentMpPlayerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetRecentMpPlayerListReq) ProtoMessage() {}

func (x *ServerGetRecentMpPlayerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetRecentMpPlayerListReq.ProtoReflect.Descriptor instead.
func (*ServerGetRecentMpPlayerListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{22}
}

func (x *ServerGetRecentMpPlayerListReq) GetRecentPlayerUidList() []uint32 {
	if x != nil {
		return x.RecentPlayerUidList
	}
	return nil
}

type ServerGetRecentMpPlayerListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RecentMpPlayerBriefList []*FriendBrief `protobuf:"bytes,2,rep,name=recent_mp_player_brief_list,json=recentMpPlayerBriefList,proto3" json:"recent_mp_player_brief_list,omitempty"`
}

func (x *ServerGetRecentMpPlayerListRsp) Reset() {
	*x = ServerGetRecentMpPlayerListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetRecentMpPlayerListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetRecentMpPlayerListRsp) ProtoMessage() {}

func (x *ServerGetRecentMpPlayerListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetRecentMpPlayerListRsp.ProtoReflect.Descriptor instead.
func (*ServerGetRecentMpPlayerListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{23}
}

func (x *ServerGetRecentMpPlayerListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetRecentMpPlayerListRsp) GetRecentMpPlayerBriefList() []*FriendBrief {
	if x != nil {
		return x.RecentMpPlayerBriefList
	}
	return nil
}

type ServerGetPlayerBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlacklistUidList []uint32 `protobuf:"varint,1,rep,packed,name=blacklist_uid_list,json=blacklistUidList,proto3" json:"blacklist_uid_list,omitempty"`
}

func (x *ServerGetPlayerBlacklistReq) Reset() {
	*x = ServerGetPlayerBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerBlacklistReq) ProtoMessage() {}

func (x *ServerGetPlayerBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerBlacklistReq.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerBlacklistReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{24}
}

func (x *ServerGetPlayerBlacklistReq) GetBlacklistUidList() []uint32 {
	if x != nil {
		return x.BlacklistUidList
	}
	return nil
}

type ServerGetPlayerBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Blacklist []*FriendBrief `protobuf:"bytes,2,rep,name=blacklist,proto3" json:"blacklist,omitempty"`
}

func (x *ServerGetPlayerBlacklistRsp) Reset() {
	*x = ServerGetPlayerBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetPlayerBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetPlayerBlacklistRsp) ProtoMessage() {}

func (x *ServerGetPlayerBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetPlayerBlacklistRsp.ProtoReflect.Descriptor instead.
func (*ServerGetPlayerBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{25}
}

func (x *ServerGetPlayerBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetPlayerBlacklistRsp) GetBlacklist() []*FriendBrief {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

type ServerPrivateChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatInfo    *ChatInfo `protobuf:"bytes,1,opt,name=chat_info,json=chatInfo,proto3" json:"chat_info,omitempty"`
	IsPs4Friend bool      `protobuf:"varint,2,opt,name=is_ps4_friend,json=isPs4Friend,proto3" json:"is_ps4_friend,omitempty"`
}

func (x *ServerPrivateChatReq) Reset() {
	*x = ServerPrivateChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPrivateChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPrivateChatReq) ProtoMessage() {}

func (x *ServerPrivateChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPrivateChatReq.ProtoReflect.Descriptor instead.
func (*ServerPrivateChatReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{26}
}

func (x *ServerPrivateChatReq) GetChatInfo() *ChatInfo {
	if x != nil {
		return x.ChatInfo
	}
	return nil
}

func (x *ServerPrivateChatReq) GetIsPs4Friend() bool {
	if x != nil {
		return x.IsPs4Friend
	}
	return false
}

type ServerPrivateChatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ServerPrivateChatRsp) Reset() {
	*x = ServerPrivateChatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPrivateChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPrivateChatRsp) ProtoMessage() {}

func (x *ServerPrivateChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPrivateChatRsp.ProtoReflect.Descriptor instead.
func (*ServerPrivateChatRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{27}
}

func (x *ServerPrivateChatRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ServerPullPrivateChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUid      uint32 `protobuf:"varint,1,opt,name=from_uid,json=fromUid,proto3" json:"from_uid,omitempty"`
	ToUid        uint32 `protobuf:"varint,2,opt,name=to_uid,json=toUid,proto3" json:"to_uid,omitempty"`
	FromSequence uint32 `protobuf:"varint,3,opt,name=from_sequence,json=fromSequence,proto3" json:"from_sequence,omitempty"`
	PullNum      uint32 `protobuf:"varint,4,opt,name=pull_num,json=pullNum,proto3" json:"pull_num,omitempty"`
	IsPs4Friend  bool   `protobuf:"varint,5,opt,name=is_ps4_friend,json=isPs4Friend,proto3" json:"is_ps4_friend,omitempty"`
}

func (x *ServerPullPrivateChatReq) Reset() {
	*x = ServerPullPrivateChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPullPrivateChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPullPrivateChatReq) ProtoMessage() {}

func (x *ServerPullPrivateChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPullPrivateChatReq.ProtoReflect.Descriptor instead.
func (*ServerPullPrivateChatReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{28}
}

func (x *ServerPullPrivateChatReq) GetFromUid() uint32 {
	if x != nil {
		return x.FromUid
	}
	return 0
}

func (x *ServerPullPrivateChatReq) GetToUid() uint32 {
	if x != nil {
		return x.ToUid
	}
	return 0
}

func (x *ServerPullPrivateChatReq) GetFromSequence() uint32 {
	if x != nil {
		return x.FromSequence
	}
	return 0
}

func (x *ServerPullPrivateChatReq) GetPullNum() uint32 {
	if x != nil {
		return x.PullNum
	}
	return 0
}

func (x *ServerPullPrivateChatReq) GetIsPs4Friend() bool {
	if x != nil {
		return x.IsPs4Friend
	}
	return false
}

type ServerPullRecentChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromSequence uint32 `protobuf:"varint,1,opt,name=from_sequence,json=fromSequence,proto3" json:"from_sequence,omitempty"`
	PullNum      uint32 `protobuf:"varint,2,opt,name=pull_num,json=pullNum,proto3" json:"pull_num,omitempty"`
}

func (x *ServerPullRecentChatReq) Reset() {
	*x = ServerPullRecentChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPullRecentChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPullRecentChatReq) ProtoMessage() {}

func (x *ServerPullRecentChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPullRecentChatReq.ProtoReflect.Descriptor instead.
func (*ServerPullRecentChatReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{29}
}

func (x *ServerPullRecentChatReq) GetFromSequence() uint32 {
	if x != nil {
		return x.FromSequence
	}
	return 0
}

func (x *ServerPullRecentChatReq) GetPullNum() uint32 {
	if x != nil {
		return x.PullNum
	}
	return 0
}

type ServerUpdateActivitySocialDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SocialDataList []*ActivitySocialData `protobuf:"bytes,1,rep,name=social_data_list,json=socialDataList,proto3" json:"social_data_list,omitempty"`
}

func (x *ServerUpdateActivitySocialDataNotify) Reset() {
	*x = ServerUpdateActivitySocialDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUpdateActivitySocialDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUpdateActivitySocialDataNotify) ProtoMessage() {}

func (x *ServerUpdateActivitySocialDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUpdateActivitySocialDataNotify.ProtoReflect.Descriptor instead.
func (*ServerUpdateActivitySocialDataNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{30}
}

func (x *ServerUpdateActivitySocialDataNotify) GetSocialDataList() []*ActivitySocialData {
	if x != nil {
		return x.SocialDataList
	}
	return nil
}

type ServerBlessingGetFriendPicListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUidList []uint32 `protobuf:"varint,1,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
	ScheduleId    uint32   `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
}

func (x *ServerBlessingGetFriendPicListReq) Reset() {
	*x = ServerBlessingGetFriendPicListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerBlessingGetFriendPicListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerBlessingGetFriendPicListReq) ProtoMessage() {}

func (x *ServerBlessingGetFriendPicListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerBlessingGetFriendPicListReq.ProtoReflect.Descriptor instead.
func (*ServerBlessingGetFriendPicListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{31}
}

func (x *ServerBlessingGetFriendPicListReq) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

func (x *ServerBlessingGetFriendPicListReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

type ServerBlessingGetFriendPicListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32                    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FriendPicDataList []*BlessingFriendPicData `protobuf:"bytes,2,rep,name=friend_pic_data_list,json=friendPicDataList,proto3" json:"friend_pic_data_list,omitempty"`
}

func (x *ServerBlessingGetFriendPicListRsp) Reset() {
	*x = ServerBlessingGetFriendPicListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerBlessingGetFriendPicListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerBlessingGetFriendPicListRsp) ProtoMessage() {}

func (x *ServerBlessingGetFriendPicListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerBlessingGetFriendPicListRsp.ProtoReflect.Descriptor instead.
func (*ServerBlessingGetFriendPicListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{32}
}

func (x *ServerBlessingGetFriendPicListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerBlessingGetFriendPicListRsp) GetFriendPicDataList() []*BlessingFriendPicData {
	if x != nil {
		return x.FriendPicDataList
	}
	return nil
}

type ServerGetFriendBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []uint32                 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	Reason  FriendBriefRequestReason `protobuf:"varint,2,opt,name=reason,proto3,enum=proto.FriendBriefRequestReason" json:"reason,omitempty"`
}

func (x *ServerGetFriendBriefReq) Reset() {
	*x = ServerGetFriendBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendBriefReq) ProtoMessage() {}

func (x *ServerGetFriendBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendBriefReq.ProtoReflect.Descriptor instead.
func (*ServerGetFriendBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{33}
}

func (x *ServerGetFriendBriefReq) GetUidList() []uint32 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *ServerGetFriendBriefReq) GetReason() FriendBriefRequestReason {
	if x != nil {
		return x.Reason
	}
	return FriendBriefRequestReason_FRIEND_BRIEF_REASON_NONE
}

type ServerGetFriendBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32                    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FriendBriefList []*FriendBrief           `protobuf:"bytes,2,rep,name=friend_brief_list,json=friendBriefList,proto3" json:"friend_brief_list,omitempty"`
	Reason          FriendBriefRequestReason `protobuf:"varint,3,opt,name=reason,proto3,enum=proto.FriendBriefRequestReason" json:"reason,omitempty"`
}

func (x *ServerGetFriendBriefRsp) Reset() {
	*x = ServerGetFriendBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendBriefRsp) ProtoMessage() {}

func (x *ServerGetFriendBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerGetFriendBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{34}
}

func (x *ServerGetFriendBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetFriendBriefRsp) GetFriendBriefList() []*FriendBrief {
	if x != nil {
		return x.FriendBriefList
	}
	return nil
}

func (x *ServerGetFriendBriefRsp) GetReason() FriendBriefRequestReason {
	if x != nil {
		return x.Reason
	}
	return FriendBriefRequestReason_FRIEND_BRIEF_REASON_NONE
}

type ServerUpdateShowAvatarInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowAvatarInfoList []*ShowAvatarInfo `protobuf:"bytes,1,rep,name=show_avatar_info_list,json=showAvatarInfoList,proto3" json:"show_avatar_info_list,omitempty"`
}

func (x *ServerUpdateShowAvatarInfoNotify) Reset() {
	*x = ServerUpdateShowAvatarInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUpdateShowAvatarInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUpdateShowAvatarInfoNotify) ProtoMessage() {}

func (x *ServerUpdateShowAvatarInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUpdateShowAvatarInfoNotify.ProtoReflect.Descriptor instead.
func (*ServerUpdateShowAvatarInfoNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{35}
}

func (x *ServerUpdateShowAvatarInfoNotify) GetShowAvatarInfoList() []*ShowAvatarInfo {
	if x != nil {
		return x.ShowAvatarInfoList
	}
	return nil
}

type ServerGetFriendShowAvatarInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ServerGetFriendShowAvatarInfoReq) Reset() {
	*x = ServerGetFriendShowAvatarInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendShowAvatarInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendShowAvatarInfoReq) ProtoMessage() {}

func (x *ServerGetFriendShowAvatarInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendShowAvatarInfoReq.ProtoReflect.Descriptor instead.
func (*ServerGetFriendShowAvatarInfoReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{36}
}

func (x *ServerGetFriendShowAvatarInfoReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ServerGetFriendShowAvatarInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Uid                uint32            `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ShowAvatarInfoList []*ShowAvatarInfo `protobuf:"bytes,3,rep,name=show_avatar_info_list,json=showAvatarInfoList,proto3" json:"show_avatar_info_list,omitempty"`
}

func (x *ServerGetFriendShowAvatarInfoRsp) Reset() {
	*x = ServerGetFriendShowAvatarInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendShowAvatarInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendShowAvatarInfoRsp) ProtoMessage() {}

func (x *ServerGetFriendShowAvatarInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendShowAvatarInfoRsp.ProtoReflect.Descriptor instead.
func (*ServerGetFriendShowAvatarInfoRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{37}
}

func (x *ServerGetFriendShowAvatarInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetFriendShowAvatarInfoRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ServerGetFriendShowAvatarInfoRsp) GetShowAvatarInfoList() []*ShowAvatarInfo {
	if x != nil {
		return x.ShowAvatarInfoList
	}
	return nil
}

type ServerReadPrivateChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUid     uint32 `protobuf:"varint,1,opt,name=from_uid,json=fromUid,proto3" json:"from_uid,omitempty"`
	TargetUid   uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	IsPs4Friend bool   `protobuf:"varint,3,opt,name=is_ps4_friend,json=isPs4Friend,proto3" json:"is_ps4_friend,omitempty"`
}

func (x *ServerReadPrivateChatReq) Reset() {
	*x = ServerReadPrivateChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerReadPrivateChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReadPrivateChatReq) ProtoMessage() {}

func (x *ServerReadPrivateChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReadPrivateChatReq.ProtoReflect.Descriptor instead.
func (*ServerReadPrivateChatReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{38}
}

func (x *ServerReadPrivateChatReq) GetFromUid() uint32 {
	if x != nil {
		return x.FromUid
	}
	return 0
}

func (x *ServerReadPrivateChatReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerReadPrivateChatReq) GetIsPs4Friend() bool {
	if x != nil {
		return x.IsPs4Friend
	}
	return false
}

type ServerGetFriendShowNameCardInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ServerGetFriendShowNameCardInfoReq) Reset() {
	*x = ServerGetFriendShowNameCardInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendShowNameCardInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendShowNameCardInfoReq) ProtoMessage() {}

func (x *ServerGetFriendShowNameCardInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendShowNameCardInfoReq.ProtoReflect.Descriptor instead.
func (*ServerGetFriendShowNameCardInfoReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{39}
}

func (x *ServerGetFriendShowNameCardInfoReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ServerGetFriendShowNameCardInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Uid                uint32   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ShowNameCardIdList []uint32 `protobuf:"varint,3,rep,packed,name=show_name_card_id_list,json=showNameCardIdList,proto3" json:"show_name_card_id_list,omitempty"`
}

func (x *ServerGetFriendShowNameCardInfoRsp) Reset() {
	*x = ServerGetFriendShowNameCardInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetFriendShowNameCardInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetFriendShowNameCardInfoRsp) ProtoMessage() {}

func (x *ServerGetFriendShowNameCardInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetFriendShowNameCardInfoRsp.ProtoReflect.Descriptor instead.
func (*ServerGetFriendShowNameCardInfoRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{40}
}

func (x *ServerGetFriendShowNameCardInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetFriendShowNameCardInfoRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ServerGetFriendShowNameCardInfoRsp) GetShowNameCardIdList() []uint32 {
	if x != nil {
		return x.ShowNameCardIdList
	}
	return nil
}

type ServerGetAskFriendBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AskAddFriendUidList []uint32 `protobuf:"varint,1,rep,packed,name=ask_add_friend_uid_list,json=askAddFriendUidList,proto3" json:"ask_add_friend_uid_list,omitempty"`
}

func (x *ServerGetAskFriendBriefReq) Reset() {
	*x = ServerGetAskFriendBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetAskFriendBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetAskFriendBriefReq) ProtoMessage() {}

func (x *ServerGetAskFriendBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetAskFriendBriefReq.ProtoReflect.Descriptor instead.
func (*ServerGetAskFriendBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{41}
}

func (x *ServerGetAskFriendBriefReq) GetAskAddFriendUidList() []uint32 {
	if x != nil {
		return x.AskAddFriendUidList
	}
	return nil
}

type ServerGetAskFriendBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode               int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AskAddFriendBriefList []*FriendBrief `protobuf:"bytes,2,rep,name=ask_add_friend_brief_list,json=askAddFriendBriefList,proto3" json:"ask_add_friend_brief_list,omitempty"`
}

func (x *ServerGetAskFriendBriefRsp) Reset() {
	*x = ServerGetAskFriendBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetAskFriendBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetAskFriendBriefRsp) ProtoMessage() {}

func (x *ServerGetAskFriendBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetAskFriendBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerGetAskFriendBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{42}
}

func (x *ServerGetAskFriendBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetAskFriendBriefRsp) GetAskAddFriendBriefList() []*FriendBrief {
	if x != nil {
		return x.AskAddFriendBriefList
	}
	return nil
}

type ServerAddPsnFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceAddPsnFriendUidList []uint32 `protobuf:"varint,1,rep,packed,name=force_add_psn_friend_uid_list,json=forceAddPsnFriendUidList,proto3" json:"force_add_psn_friend_uid_list,omitempty"`
}

func (x *ServerAddPsnFriendReq) Reset() {
	*x = ServerAddPsnFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddPsnFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddPsnFriendReq) ProtoMessage() {}

func (x *ServerAddPsnFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddPsnFriendReq.ProtoReflect.Descriptor instead.
func (*ServerAddPsnFriendReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{43}
}

func (x *ServerAddPsnFriendReq) GetForceAddPsnFriendUidList() []uint32 {
	if x != nil {
		return x.ForceAddPsnFriendUidList
	}
	return nil
}

type ServerAddPsnFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                    int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ForceAddPsnFriendUidList   []uint32       `protobuf:"varint,2,rep,packed,name=force_add_psn_friend_uid_list,json=forceAddPsnFriendUidList,proto3" json:"force_add_psn_friend_uid_list,omitempty"`
	ForceAddPsnFriendBriefList []*FriendBrief `protobuf:"bytes,3,rep,name=force_add_psn_friend_brief_list,json=forceAddPsnFriendBriefList,proto3" json:"force_add_psn_friend_brief_list,omitempty"`
}

func (x *ServerAddPsnFriendRsp) Reset() {
	*x = ServerAddPsnFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddPsnFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddPsnFriendRsp) ProtoMessage() {}

func (x *ServerAddPsnFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddPsnFriendRsp.ProtoReflect.Descriptor instead.
func (*ServerAddPsnFriendRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{44}
}

func (x *ServerAddPsnFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAddPsnFriendRsp) GetForceAddPsnFriendUidList() []uint32 {
	if x != nil {
		return x.ForceAddPsnFriendUidList
	}
	return nil
}

func (x *ServerAddPsnFriendRsp) GetForceAddPsnFriendBriefList() []*FriendBrief {
	if x != nil {
		return x.ForceAddPsnFriendBriefList
	}
	return nil
}

type ServerAddPsnBlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceAddPsnBlackUidList []uint32 `protobuf:"varint,1,rep,packed,name=force_add_psn_black_uid_list,json=forceAddPsnBlackUidList,proto3" json:"force_add_psn_black_uid_list,omitempty"`
}

func (x *ServerAddPsnBlackReq) Reset() {
	*x = ServerAddPsnBlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddPsnBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddPsnBlackReq) ProtoMessage() {}

func (x *ServerAddPsnBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddPsnBlackReq.ProtoReflect.Descriptor instead.
func (*ServerAddPsnBlackReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{45}
}

func (x *ServerAddPsnBlackReq) GetForceAddPsnBlackUidList() []uint32 {
	if x != nil {
		return x.ForceAddPsnBlackUidList
	}
	return nil
}

type ServerAddPsnBlackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ForceAddPsnBlackUidList []uint32 `protobuf:"varint,2,rep,packed,name=force_add_psn_black_uid_list,json=forceAddPsnBlackUidList,proto3" json:"force_add_psn_black_uid_list,omitempty"`
}

func (x *ServerAddPsnBlackRsp) Reset() {
	*x = ServerAddPsnBlackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddPsnBlackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddPsnBlackRsp) ProtoMessage() {}

func (x *ServerAddPsnBlackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddPsnBlackRsp.ProtoReflect.Descriptor instead.
func (*ServerAddPsnBlackRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{46}
}

func (x *ServerAddPsnBlackRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAddPsnBlackRsp) GetForceAddPsnBlackUidList() []uint32 {
	if x != nil {
		return x.ForceAddPsnBlackUidList
	}
	return nil
}

type ServerFriendInfoChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyUid         uint32   `protobuf:"varint,1,opt,name=my_uid,json=myUid,proto3" json:"my_uid,omitempty"`
	MyOnlineId    string   `protobuf:"bytes,2,opt,name=my_online_id,json=myOnlineId,proto3" json:"my_online_id,omitempty"`
	NotifyUidList []uint32 `protobuf:"varint,3,rep,packed,name=notify_uid_list,json=notifyUidList,proto3" json:"notify_uid_list,omitempty"`
}

func (x *ServerFriendInfoChangeNotify) Reset() {
	*x = ServerFriendInfoChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFriendInfoChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFriendInfoChangeNotify) ProtoMessage() {}

func (x *ServerFriendInfoChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFriendInfoChangeNotify.ProtoReflect.Descriptor instead.
func (*ServerFriendInfoChangeNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{47}
}

func (x *ServerFriendInfoChangeNotify) GetMyUid() uint32 {
	if x != nil {
		return x.MyUid
	}
	return 0
}

func (x *ServerFriendInfoChangeNotify) GetMyOnlineId() string {
	if x != nil {
		return x.MyOnlineId
	}
	return ""
}

func (x *ServerFriendInfoChangeNotify) GetNotifyUidList() []uint32 {
	if x != nil {
		return x.NotifyUidList
	}
	return nil
}

type ServerPlantFlowerGetFriendFlowerDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId       uint32            `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid        uint32            `protobuf:"varint,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveFlowerNumMap map[uint32]uint32 `protobuf:"bytes,3,rep,name=give_flower_num_map,json=giveFlowerNumMap,proto3" json:"give_flower_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) Reset() {
	*x = ServerPlantFlowerGetFriendFlowerDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlantFlowerGetFriendFlowerDataReq) ProtoMessage() {}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlantFlowerGetFriendFlowerDataReq.ProtoReflect.Descriptor instead.
func (*ServerPlantFlowerGetFriendFlowerDataReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{48}
}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerDataReq) GetGiveFlowerNumMap() map[uint32]uint32 {
	if x != nil {
		return x.GiveFlowerNumMap
	}
	return nil
}

type ServerPlantFlowerGetFriendFlowerDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode          int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId       uint32            `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid        uint32            `protobuf:"varint,3,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveFlowerNumMap map[uint32]uint32 `protobuf:"bytes,4,rep,name=give_flower_num_map,json=giveFlowerNumMap,proto3" json:"give_flower_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	HaveFlowerNumMap map[uint32]uint32 `protobuf:"bytes,5,rep,name=have_flower_num_map,json=haveFlowerNumMap,proto3" json:"have_flower_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) Reset() {
	*x = ServerPlantFlowerGetFriendFlowerDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlantFlowerGetFriendFlowerDataRsp) ProtoMessage() {}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlantFlowerGetFriendFlowerDataRsp.ProtoReflect.Descriptor instead.
func (*ServerPlantFlowerGetFriendFlowerDataRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{49}
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) GetGiveFlowerNumMap() map[uint32]uint32 {
	if x != nil {
		return x.GiveFlowerNumMap
	}
	return nil
}

func (x *ServerPlantFlowerGetFriendFlowerDataRsp) GetHaveFlowerNumMap() map[uint32]uint32 {
	if x != nil {
		return x.HaveFlowerNumMap
	}
	return nil
}

type ServerPlantFlowerGetFriendFlowerWishListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId    uint32   `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUidList []uint32 `protobuf:"varint,2,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
}

func (x *ServerPlantFlowerGetFriendFlowerWishListReq) Reset() {
	*x = ServerPlantFlowerGetFriendFlowerWishListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlantFlowerGetFriendFlowerWishListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlantFlowerGetFriendFlowerWishListReq) ProtoMessage() {}

func (x *ServerPlantFlowerGetFriendFlowerWishListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlantFlowerGetFriendFlowerWishListReq.ProtoReflect.Descriptor instead.
func (*ServerPlantFlowerGetFriendFlowerWishListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{50}
}

func (x *ServerPlantFlowerGetFriendFlowerWishListReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerWishListReq) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

type ServerPlantFlowerGetFriendFlowerWishListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32                              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId           uint32                             `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendFlowerWishList []*PlantFlowerFriendFlowerWishData `protobuf:"bytes,3,rep,name=friend_flower_wish_list,json=friendFlowerWishList,proto3" json:"friend_flower_wish_list,omitempty"`
}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) Reset() {
	*x = ServerPlantFlowerGetFriendFlowerWishListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPlantFlowerGetFriendFlowerWishListRsp) ProtoMessage() {}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPlantFlowerGetFriendFlowerWishListRsp.ProtoReflect.Descriptor instead.
func (*ServerPlantFlowerGetFriendFlowerWishListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{51}
}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerPlantFlowerGetFriendFlowerWishListRsp) GetFriendFlowerWishList() []*PlantFlowerFriendFlowerWishData {
	if x != nil {
		return x.FriendFlowerWishList
	}
	return nil
}

type ServerWinterCampGetFriendItemDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId   uint32       `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid    uint32       `protobuf:"varint,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveItemList []*ItemParam `protobuf:"bytes,3,rep,name=give_item_list,json=giveItemList,proto3" json:"give_item_list,omitempty"`
}

func (x *ServerWinterCampGetFriendItemDataReq) Reset() {
	*x = ServerWinterCampGetFriendItemDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerWinterCampGetFriendItemDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerWinterCampGetFriendItemDataReq) ProtoMessage() {}

func (x *ServerWinterCampGetFriendItemDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerWinterCampGetFriendItemDataReq.ProtoReflect.Descriptor instead.
func (*ServerWinterCampGetFriendItemDataReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{52}
}

func (x *ServerWinterCampGetFriendItemDataReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerWinterCampGetFriendItemDataReq) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerWinterCampGetFriendItemDataReq) GetGiveItemList() []*ItemParam {
	if x != nil {
		return x.GiveItemList
	}
	return nil
}

type ServerWinterCampGetFriendItemDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32        `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId     uint32       `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid      uint32       `protobuf:"varint,3,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveItemList   []*ItemParam `protobuf:"bytes,4,rep,name=give_item_list,json=giveItemList,proto3" json:"give_item_list,omitempty"`
	FriendItemList []*ItemParam `protobuf:"bytes,5,rep,name=friend_item_list,json=friendItemList,proto3" json:"friend_item_list,omitempty"`
}

func (x *ServerWinterCampGetFriendItemDataRsp) Reset() {
	*x = ServerWinterCampGetFriendItemDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerWinterCampGetFriendItemDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerWinterCampGetFriendItemDataRsp) ProtoMessage() {}

func (x *ServerWinterCampGetFriendItemDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerWinterCampGetFriendItemDataRsp.ProtoReflect.Descriptor instead.
func (*ServerWinterCampGetFriendItemDataRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{53}
}

func (x *ServerWinterCampGetFriendItemDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerWinterCampGetFriendItemDataRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerWinterCampGetFriendItemDataRsp) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerWinterCampGetFriendItemDataRsp) GetGiveItemList() []*ItemParam {
	if x != nil {
		return x.GiveItemList
	}
	return nil
}

func (x *ServerWinterCampGetFriendItemDataRsp) GetFriendItemList() []*ItemParam {
	if x != nil {
		return x.FriendItemList
	}
	return nil
}

type ServerWinterCampGetFriendWishListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId    uint32   `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUidList []uint32 `protobuf:"varint,2,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
}

func (x *ServerWinterCampGetFriendWishListReq) Reset() {
	*x = ServerWinterCampGetFriendWishListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerWinterCampGetFriendWishListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerWinterCampGetFriendWishListReq) ProtoMessage() {}

func (x *ServerWinterCampGetFriendWishListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerWinterCampGetFriendWishListReq.ProtoReflect.Descriptor instead.
func (*ServerWinterCampGetFriendWishListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{54}
}

func (x *ServerWinterCampGetFriendWishListReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerWinterCampGetFriendWishListReq) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

type ServerWinterCampGetFriendWishListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32                       `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId   uint32                      `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	WishDataList []*WinterCampFriendWishData `protobuf:"bytes,3,rep,name=wish_data_list,json=wishDataList,proto3" json:"wish_data_list,omitempty"`
}

func (x *ServerWinterCampGetFriendWishListRsp) Reset() {
	*x = ServerWinterCampGetFriendWishListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerWinterCampGetFriendWishListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerWinterCampGetFriendWishListRsp) ProtoMessage() {}

func (x *ServerWinterCampGetFriendWishListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerWinterCampGetFriendWishListRsp.ProtoReflect.Descriptor instead.
func (*ServerWinterCampGetFriendWishListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{55}
}

func (x *ServerWinterCampGetFriendWishListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerWinterCampGetFriendWishListRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerWinterCampGetFriendWishListRsp) GetWishDataList() []*WinterCampFriendWishData {
	if x != nil {
		return x.WishDataList
	}
	return nil
}

type ServerGetCustomDungeonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid   uint64 `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	IsSelfDungeon bool   `protobuf:"varint,2,opt,name=is_self_dungeon,json=isSelfDungeon,proto3" json:"is_self_dungeon,omitempty"`
	EnterType     uint32 `protobuf:"varint,3,opt,name=enter_type,json=enterType,proto3" json:"enter_type,omitempty"`
}

func (x *ServerGetCustomDungeonReq) Reset() {
	*x = ServerGetCustomDungeonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetCustomDungeonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetCustomDungeonReq) ProtoMessage() {}

func (x *ServerGetCustomDungeonReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetCustomDungeonReq.ProtoReflect.Descriptor instead.
func (*ServerGetCustomDungeonReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{56}
}

func (x *ServerGetCustomDungeonReq) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerGetCustomDungeonReq) GetIsSelfDungeon() bool {
	if x != nil {
		return x.IsSelfDungeon
	}
	return false
}

func (x *ServerGetCustomDungeonReq) GetEnterType() uint32 {
	if x != nil {
		return x.EnterType
	}
	return 0
}

type ServerCustomDungeon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid      uint64                        `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	DungeonId        uint32                        `protobuf:"varint,2,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	RoomList         []*CustomDungeonRoomRedisData `protobuf:"bytes,3,rep,name=room_list,json=roomList,proto3" json:"room_list,omitempty"`
	Setting          *CustomDungeonSettingBin      `protobuf:"bytes,4,opt,name=setting,proto3" json:"setting,omitempty"`
	Version          uint32                        `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	IsLiked          bool                          `protobuf:"varint,6,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	FirstPublishTime uint32                        `protobuf:"varint,7,opt,name=first_publish_time,json=firstPublishTime,proto3" json:"first_publish_time,omitempty"`
}

func (x *ServerCustomDungeon) Reset() {
	*x = ServerCustomDungeon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCustomDungeon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCustomDungeon) ProtoMessage() {}

func (x *ServerCustomDungeon) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCustomDungeon.ProtoReflect.Descriptor instead.
func (*ServerCustomDungeon) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{57}
}

func (x *ServerCustomDungeon) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerCustomDungeon) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *ServerCustomDungeon) GetRoomList() []*CustomDungeonRoomRedisData {
	if x != nil {
		return x.RoomList
	}
	return nil
}

func (x *ServerCustomDungeon) GetSetting() *CustomDungeonSettingBin {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *ServerCustomDungeon) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ServerCustomDungeon) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *ServerCustomDungeon) GetFirstPublishTime() uint32 {
	if x != nil {
		return x.FirstPublishTime
	}
	return 0
}

type CustomDungeonAdventure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomDungeon *ServerCustomDungeon         `protobuf:"bytes,1,opt,name=custom_dungeon,json=customDungeon,proto3" json:"custom_dungeon,omitempty"`
	DungeonBrief  *CustomDungeonBriefRedisData `protobuf:"bytes,2,opt,name=dungeon_brief,json=dungeonBrief,proto3" json:"dungeon_brief,omitempty"`
}

func (x *CustomDungeonAdventure) Reset() {
	*x = CustomDungeonAdventure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDungeonAdventure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDungeonAdventure) ProtoMessage() {}

func (x *CustomDungeonAdventure) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDungeonAdventure.ProtoReflect.Descriptor instead.
func (*CustomDungeonAdventure) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{58}
}

func (x *CustomDungeonAdventure) GetCustomDungeon() *ServerCustomDungeon {
	if x != nil {
		return x.CustomDungeon
	}
	return nil
}

func (x *CustomDungeonAdventure) GetDungeonBrief() *CustomDungeonBriefRedisData {
	if x != nil {
		return x.DungeonBrief
	}
	return nil
}

type ServerGetCustomDungeonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode       int32                `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsExist       bool                 `protobuf:"varint,2,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
	CustomDungeon *ServerCustomDungeon `protobuf:"bytes,3,opt,name=custom_dungeon,json=customDungeon,proto3" json:"custom_dungeon,omitempty"`
	EnterType     uint32               `protobuf:"varint,4,opt,name=enter_type,json=enterType,proto3" json:"enter_type,omitempty"`
}

func (x *ServerGetCustomDungeonRsp) Reset() {
	*x = ServerGetCustomDungeonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetCustomDungeonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetCustomDungeonRsp) ProtoMessage() {}

func (x *ServerGetCustomDungeonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetCustomDungeonRsp.ProtoReflect.Descriptor instead.
func (*ServerGetCustomDungeonRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{59}
}

func (x *ServerGetCustomDungeonRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetCustomDungeonRsp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

func (x *ServerGetCustomDungeonRsp) GetCustomDungeon() *ServerCustomDungeon {
	if x != nil {
		return x.CustomDungeon
	}
	return nil
}

func (x *ServerGetCustomDungeonRsp) GetEnterType() uint32 {
	if x != nil {
		return x.EnterType
	}
	return 0
}

type ServerSaveCustomDungeonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomDungeon   *ServerCustomDungeon `protobuf:"bytes,1,opt,name=custom_dungeon,json=customDungeon,proto3" json:"custom_dungeon,omitempty"`
	RoomId          uint32               `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsEverPublished bool                 `protobuf:"varint,3,opt,name=is_ever_published,json=isEverPublished,proto3" json:"is_ever_published,omitempty"`
}

func (x *ServerSaveCustomDungeonReq) Reset() {
	*x = ServerSaveCustomDungeonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSaveCustomDungeonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSaveCustomDungeonReq) ProtoMessage() {}

func (x *ServerSaveCustomDungeonReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSaveCustomDungeonReq.ProtoReflect.Descriptor instead.
func (*ServerSaveCustomDungeonReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{60}
}

func (x *ServerSaveCustomDungeonReq) GetCustomDungeon() *ServerCustomDungeon {
	if x != nil {
		return x.CustomDungeon
	}
	return nil
}

func (x *ServerSaveCustomDungeonReq) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ServerSaveCustomDungeonReq) GetIsEverPublished() bool {
	if x != nil {
		return x.IsEverPublished
	}
	return false
}

type ServerSaveCustomDungeonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DungeonGuid uint64 `protobuf:"varint,2,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	RoomId      uint32 `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Version     uint32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ServerSaveCustomDungeonRsp) Reset() {
	*x = ServerSaveCustomDungeonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSaveCustomDungeonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSaveCustomDungeonRsp) ProtoMessage() {}

func (x *ServerSaveCustomDungeonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSaveCustomDungeonRsp.ProtoReflect.Descriptor instead.
func (*ServerSaveCustomDungeonRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{61}
}

func (x *ServerSaveCustomDungeonRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerSaveCustomDungeonRsp) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerSaveCustomDungeonRsp) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ServerSaveCustomDungeonRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ServerPublishCustomDungeonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid     uint64                    `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	Abstract        *CustomDungeonAbstractBin `protobuf:"bytes,2,opt,name=abstract,proto3" json:"abstract,omitempty"`
	DeployScore     uint32                    `protobuf:"varint,3,opt,name=deploy_score,json=deployScore,proto3" json:"deploy_score,omitempty"`
	CreatorNickname string                    `protobuf:"bytes,4,opt,name=creator_nickname,json=creatorNickname,proto3" json:"creator_nickname,omitempty"`
	GroupId         uint32                    `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Uid             uint32                    `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Lang            uint32                    `protobuf:"varint,7,opt,name=lang,proto3" json:"lang,omitempty"`
	TagList         []uint32                  `protobuf:"varint,8,rep,packed,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
	IsPsnPlatform   bool                      `protobuf:"varint,9,opt,name=is_psn_platform,json=isPsnPlatform,proto3" json:"is_psn_platform,omitempty"`
}

func (x *ServerPublishCustomDungeonReq) Reset() {
	*x = ServerPublishCustomDungeonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPublishCustomDungeonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPublishCustomDungeonReq) ProtoMessage() {}

func (x *ServerPublishCustomDungeonReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPublishCustomDungeonReq.ProtoReflect.Descriptor instead.
func (*ServerPublishCustomDungeonReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{62}
}

func (x *ServerPublishCustomDungeonReq) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerPublishCustomDungeonReq) GetAbstract() *CustomDungeonAbstractBin {
	if x != nil {
		return x.Abstract
	}
	return nil
}

func (x *ServerPublishCustomDungeonReq) GetDeployScore() uint32 {
	if x != nil {
		return x.DeployScore
	}
	return 0
}

func (x *ServerPublishCustomDungeonReq) GetCreatorNickname() string {
	if x != nil {
		return x.CreatorNickname
	}
	return ""
}

func (x *ServerPublishCustomDungeonReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ServerPublishCustomDungeonReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ServerPublishCustomDungeonReq) GetLang() uint32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

func (x *ServerPublishCustomDungeonReq) GetTagList() []uint32 {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *ServerPublishCustomDungeonReq) GetIsPsnPlatform() bool {
	if x != nil {
		return x.IsPsnPlatform
	}
	return false
}

type ServerPublishCustomDungeonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DungeonGuid uint64 `protobuf:"varint,2,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	PublishTime uint32 `protobuf:"varint,3,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
}

func (x *ServerPublishCustomDungeonRsp) Reset() {
	*x = ServerPublishCustomDungeonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPublishCustomDungeonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPublishCustomDungeonRsp) ProtoMessage() {}

func (x *ServerPublishCustomDungeonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPublishCustomDungeonRsp.ProtoReflect.Descriptor instead.
func (*ServerPublishCustomDungeonRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{63}
}

func (x *ServerPublishCustomDungeonRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerPublishCustomDungeonRsp) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerPublishCustomDungeonRsp) GetPublishTime() uint32 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

type ServerRemoveCustomDungeonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid uint64 `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	GroupId     uint32 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ServerRemoveCustomDungeonReq) Reset() {
	*x = ServerRemoveCustomDungeonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRemoveCustomDungeonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRemoveCustomDungeonReq) ProtoMessage() {}

func (x *ServerRemoveCustomDungeonReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRemoveCustomDungeonReq.ProtoReflect.Descriptor instead.
func (*ServerRemoveCustomDungeonReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{64}
}

func (x *ServerRemoveCustomDungeonReq) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerRemoveCustomDungeonReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ServerRemoveCustomDungeonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DungeonGuid uint64 `protobuf:"varint,2,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
}

func (x *ServerRemoveCustomDungeonRsp) Reset() {
	*x = ServerRemoveCustomDungeonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRemoveCustomDungeonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRemoveCustomDungeonRsp) ProtoMessage() {}

func (x *ServerRemoveCustomDungeonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRemoveCustomDungeonRsp.ProtoReflect.Descriptor instead.
func (*ServerRemoveCustomDungeonRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{65}
}

func (x *ServerRemoveCustomDungeonRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerRemoveCustomDungeonRsp) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

type ServerUpdateCustomDungeonSocialNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid   uint64                        `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	UpdateType    CustomDungeonSocialUpdateType `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3,enum=proto.CustomDungeonSocialUpdateType" json:"update_type,omitempty"`
	IsCancelStore bool                          `protobuf:"varint,3,opt,name=is_cancel_store,json=isCancelStore,proto3" json:"is_cancel_store,omitempty"`
	IsCancelLike  bool                          `protobuf:"varint,4,opt,name=is_cancel_like,json=isCancelLike,proto3" json:"is_cancel_like,omitempty"`
	IsWin         bool                          `protobuf:"varint,5,opt,name=is_win,json=isWin,proto3" json:"is_win,omitempty"`
	IsEverLiked   bool                          `protobuf:"varint,6,opt,name=is_ever_liked,json=isEverLiked,proto3" json:"is_ever_liked,omitempty"`
}

func (x *ServerUpdateCustomDungeonSocialNotify) Reset() {
	*x = ServerUpdateCustomDungeonSocialNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerUpdateCustomDungeonSocialNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUpdateCustomDungeonSocialNotify) ProtoMessage() {}

func (x *ServerUpdateCustomDungeonSocialNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUpdateCustomDungeonSocialNotify.ProtoReflect.Descriptor instead.
func (*ServerUpdateCustomDungeonSocialNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{66}
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetUpdateType() CustomDungeonSocialUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return CustomDungeonSocialUpdateType_CUSTOM_DUNGEON_SOCIAL_UPDATE_NONE
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetIsCancelStore() bool {
	if x != nil {
		return x.IsCancelStore
	}
	return false
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetIsCancelLike() bool {
	if x != nil {
		return x.IsCancelLike
	}
	return false
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetIsWin() bool {
	if x != nil {
		return x.IsWin
	}
	return false
}

func (x *ServerUpdateCustomDungeonSocialNotify) GetIsEverLiked() bool {
	if x != nil {
		return x.IsEverLiked
	}
	return false
}

type ServerGetCustomDungeonBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuidList []uint64                  `protobuf:"varint,1,rep,packed,name=dungeon_guid_list,json=dungeonGuidList,proto3" json:"dungeon_guid_list,omitempty"`
	GetType         CustomDungeonBriefGetType `protobuf:"varint,2,opt,name=get_type,json=getType,proto3,enum=proto.CustomDungeonBriefGetType" json:"get_type,omitempty"`
}

func (x *ServerGetCustomDungeonBriefReq) Reset() {
	*x = ServerGetCustomDungeonBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetCustomDungeonBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetCustomDungeonBriefReq) ProtoMessage() {}

func (x *ServerGetCustomDungeonBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetCustomDungeonBriefReq.ProtoReflect.Descriptor instead.
func (*ServerGetCustomDungeonBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{67}
}

func (x *ServerGetCustomDungeonBriefReq) GetDungeonGuidList() []uint64 {
	if x != nil {
		return x.DungeonGuidList
	}
	return nil
}

func (x *ServerGetCustomDungeonBriefReq) GetGetType() CustomDungeonBriefGetType {
	if x != nil {
		return x.GetType
	}
	return CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_NONE
}

type ServerGetCustomDungeonBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode          int32                          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DungeonGuidList  []uint64                       `protobuf:"varint,2,rep,packed,name=dungeon_guid_list,json=dungeonGuidList,proto3" json:"dungeon_guid_list,omitempty"`
	DungeonBriefList []*CustomDungeonBriefRedisData `protobuf:"bytes,3,rep,name=dungeon_brief_list,json=dungeonBriefList,proto3" json:"dungeon_brief_list,omitempty"`
	GetType          CustomDungeonBriefGetType      `protobuf:"varint,4,opt,name=get_type,json=getType,proto3,enum=proto.CustomDungeonBriefGetType" json:"get_type,omitempty"`
}

func (x *ServerGetCustomDungeonBriefRsp) Reset() {
	*x = ServerGetCustomDungeonBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetCustomDungeonBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetCustomDungeonBriefRsp) ProtoMessage() {}

func (x *ServerGetCustomDungeonBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetCustomDungeonBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerGetCustomDungeonBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{68}
}

func (x *ServerGetCustomDungeonBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetCustomDungeonBriefRsp) GetDungeonGuidList() []uint64 {
	if x != nil {
		return x.DungeonGuidList
	}
	return nil
}

func (x *ServerGetCustomDungeonBriefRsp) GetDungeonBriefList() []*CustomDungeonBriefRedisData {
	if x != nil {
		return x.DungeonBriefList
	}
	return nil
}

func (x *ServerGetCustomDungeonBriefRsp) GetGetType() CustomDungeonBriefGetType {
	if x != nil {
		return x.GetType
	}
	return CustomDungeonBriefGetType_CUSTOM_DUNGEON_BRIEF_GET_NONE
}

type ServerGetRecommendCustomDungeonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuidList   []uint64 `protobuf:"varint,1,rep,packed,name=dungeon_guid_list,json=dungeonGuidList,proto3" json:"dungeon_guid_list,omitempty"`
	GroupId           uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	RecommendInterval uint32   `protobuf:"varint,3,opt,name=recommend_interval,json=recommendInterval,proto3" json:"recommend_interval,omitempty"`
}

func (x *ServerGetRecommendCustomDungeonReq) Reset() {
	*x = ServerGetRecommendCustomDungeonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetRecommendCustomDungeonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetRecommendCustomDungeonReq) ProtoMessage() {}

func (x *ServerGetRecommendCustomDungeonReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetRecommendCustomDungeonReq.ProtoReflect.Descriptor instead.
func (*ServerGetRecommendCustomDungeonReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{69}
}

func (x *ServerGetRecommendCustomDungeonReq) GetDungeonGuidList() []uint64 {
	if x != nil {
		return x.DungeonGuidList
	}
	return nil
}

func (x *ServerGetRecommendCustomDungeonReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ServerGetRecommendCustomDungeonReq) GetRecommendInterval() uint32 {
	if x != nil {
		return x.RecommendInterval
	}
	return 0
}

type ServerGetRecommendCustomDungeonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode          int32                          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DungeonBriefList []*CustomDungeonBriefRedisData `protobuf:"bytes,2,rep,name=dungeon_brief_list,json=dungeonBriefList,proto3" json:"dungeon_brief_list,omitempty"`
}

func (x *ServerGetRecommendCustomDungeonRsp) Reset() {
	*x = ServerGetRecommendCustomDungeonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetRecommendCustomDungeonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetRecommendCustomDungeonRsp) ProtoMessage() {}

func (x *ServerGetRecommendCustomDungeonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetRecommendCustomDungeonRsp.ProtoReflect.Descriptor instead.
func (*ServerGetRecommendCustomDungeonRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{70}
}

func (x *ServerGetRecommendCustomDungeonRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetRecommendCustomDungeonRsp) GetDungeonBriefList() []*CustomDungeonBriefRedisData {
	if x != nil {
		return x.DungeonBriefList
	}
	return nil
}

type ServerAddFriendByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerAddFriendByMuipReq) Reset() {
	*x = ServerAddFriendByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddFriendByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddFriendByMuipReq) ProtoMessage() {}

func (x *ServerAddFriendByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddFriendByMuipReq.ProtoReflect.Descriptor instead.
func (*ServerAddFriendByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{71}
}

func (x *ServerAddFriendByMuipReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerAddFriendByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32        `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid         uint32       `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetFriendNum   uint32       `protobuf:"varint,3,opt,name=target_friend_num,json=targetFriendNum,proto3" json:"target_friend_num,omitempty"`
	TargetFriendBrief *FriendBrief `protobuf:"bytes,4,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
}

func (x *ServerAddFriendByMuipRsp) Reset() {
	*x = ServerAddFriendByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddFriendByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddFriendByMuipRsp) ProtoMessage() {}

func (x *ServerAddFriendByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddFriendByMuipRsp.ProtoReflect.Descriptor instead.
func (*ServerAddFriendByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{72}
}

func (x *ServerAddFriendByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAddFriendByMuipRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerAddFriendByMuipRsp) GetTargetFriendNum() uint32 {
	if x != nil {
		return x.TargetFriendNum
	}
	return 0
}

func (x *ServerAddFriendByMuipRsp) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

type ServerDelFriendByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerDelFriendByMuipReq) Reset() {
	*x = ServerDelFriendByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDelFriendByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDelFriendByMuipReq) ProtoMessage() {}

func (x *ServerDelFriendByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDelFriendByMuipReq.ProtoReflect.Descriptor instead.
func (*ServerDelFriendByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{73}
}

func (x *ServerDelFriendByMuipReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerDelFriendByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid       uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetFriendNum uint32 `protobuf:"varint,3,opt,name=target_friend_num,json=targetFriendNum,proto3" json:"target_friend_num,omitempty"`
}

func (x *ServerDelFriendByMuipRsp) Reset() {
	*x = ServerDelFriendByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDelFriendByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDelFriendByMuipRsp) ProtoMessage() {}

func (x *ServerDelFriendByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDelFriendByMuipRsp.ProtoReflect.Descriptor instead.
func (*ServerDelFriendByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{74}
}

func (x *ServerDelFriendByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerDelFriendByMuipRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *ServerDelFriendByMuipRsp) GetTargetFriendNum() uint32 {
	if x != nil {
		return x.TargetFriendNum
	}
	return 0
}

type ServerAddFriendAskByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerAddFriendAskByMuipReq) Reset() {
	*x = ServerAddFriendAskByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddFriendAskByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddFriendAskByMuipReq) ProtoMessage() {}

func (x *ServerAddFriendAskByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddFriendAskByMuipReq.ProtoReflect.Descriptor instead.
func (*ServerAddFriendAskByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{75}
}

func (x *ServerAddFriendAskByMuipReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerAddFriendAskByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerAddFriendAskByMuipRsp) Reset() {
	*x = ServerAddFriendAskByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAddFriendAskByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAddFriendAskByMuipRsp) ProtoMessage() {}

func (x *ServerAddFriendAskByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAddFriendAskByMuipRsp.ProtoReflect.Descriptor instead.
func (*ServerAddFriendAskByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{76}
}

func (x *ServerAddFriendAskByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerAddFriendAskByMuipRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerDelFriendAskByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerDelFriendAskByMuipReq) Reset() {
	*x = ServerDelFriendAskByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDelFriendAskByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDelFriendAskByMuipReq) ProtoMessage() {}

func (x *ServerDelFriendAskByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDelFriendAskByMuipReq.ProtoReflect.Descriptor instead.
func (*ServerDelFriendAskByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{77}
}

func (x *ServerDelFriendAskByMuipReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerDelFriendAskByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ServerDelFriendAskByMuipRsp) Reset() {
	*x = ServerDelFriendAskByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDelFriendAskByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDelFriendAskByMuipRsp) ProtoMessage() {}

func (x *ServerDelFriendAskByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDelFriendAskByMuipRsp.ProtoReflect.Descriptor instead.
func (*ServerDelFriendAskByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{78}
}

func (x *ServerDelFriendAskByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerDelFriendAskByMuipRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ServerCustomDungeonCacheInvalidNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid uint64 `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
}

func (x *ServerCustomDungeonCacheInvalidNotify) Reset() {
	*x = ServerCustomDungeonCacheInvalidNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCustomDungeonCacheInvalidNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCustomDungeonCacheInvalidNotify) ProtoMessage() {}

func (x *ServerCustomDungeonCacheInvalidNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCustomDungeonCacheInvalidNotify.ProtoReflect.Descriptor instead.
func (*ServerCustomDungeonCacheInvalidNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{79}
}

func (x *ServerCustomDungeonCacheInvalidNotify) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

type ServerCustomDungeonSocialGmNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DungeonGuid uint64 `protobuf:"varint,1,opt,name=dungeon_guid,json=dungeonGuid,proto3" json:"dungeon_guid,omitempty"`
	UpdateType  uint32 `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`
	Num         uint32 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *ServerCustomDungeonSocialGmNotify) Reset() {
	*x = ServerCustomDungeonSocialGmNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCustomDungeonSocialGmNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCustomDungeonSocialGmNotify) ProtoMessage() {}

func (x *ServerCustomDungeonSocialGmNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCustomDungeonSocialGmNotify.ProtoReflect.Descriptor instead.
func (*ServerCustomDungeonSocialGmNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{80}
}

func (x *ServerCustomDungeonSocialGmNotify) GetDungeonGuid() uint64 {
	if x != nil {
		return x.DungeonGuid
	}
	return 0
}

func (x *ServerCustomDungeonSocialGmNotify) GetUpdateType() uint32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

func (x *ServerCustomDungeonSocialGmNotify) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ServerCustomDungeonFirstLikeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerCustomDungeonFirstLikeNotify) Reset() {
	*x = ServerCustomDungeonFirstLikeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCustomDungeonFirstLikeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCustomDungeonFirstLikeNotify) ProtoMessage() {}

func (x *ServerCustomDungeonFirstLikeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCustomDungeonFirstLikeNotify.ProtoReflect.Descriptor instead.
func (*ServerCustomDungeonFirstLikeNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{81}
}

type ServerGetUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType        UgcType     `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid        uint64      `protobuf:"varint,2,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	IsEdit         bool        `protobuf:"varint,3,opt,name=is_edit,json=isEdit,proto3" json:"is_edit,omitempty"`
	IsRequireBrief bool        `protobuf:"varint,4,opt,name=is_require_brief,json=isRequireBrief,proto3" json:"is_require_brief,omitempty"`
	UgcRecordUsage RecordUsage `protobuf:"varint,5,opt,name=ugc_record_usage,json=ugcRecordUsage,proto3,enum=proto.RecordUsage" json:"ugc_record_usage,omitempty"`
}

func (x *ServerGetUgcReq) Reset() {
	*x = ServerGetUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetUgcReq) ProtoMessage() {}

func (x *ServerGetUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetUgcReq.ProtoReflect.Descriptor instead.
func (*ServerGetUgcReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{82}
}

func (x *ServerGetUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerGetUgcReq) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *ServerGetUgcReq) GetIsEdit() bool {
	if x != nil {
		return x.IsEdit
	}
	return false
}

func (x *ServerGetUgcReq) GetIsRequireBrief() bool {
	if x != nil {
		return x.IsRequireBrief
	}
	return false
}

func (x *ServerGetUgcReq) GetUgcRecordUsage() RecordUsage {
	if x != nil {
		return x.UgcRecordUsage
	}
	return RecordUsage_UGC_RECORD_USAGE_NONE
}

type ServerGetUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType           UgcType            `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid           uint64             `protobuf:"varint,3,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	IsEdit            bool               `protobuf:"varint,4,opt,name=is_edit,json=isEdit,proto3" json:"is_edit,omitempty"`
	IsExist           bool               `protobuf:"varint,5,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
	UgcRecordUsage    RecordUsage        `protobuf:"varint,6,opt,name=ugc_record_usage,json=ugcRecordUsage,proto3,enum=proto.RecordUsage" json:"ugc_record_usage,omitempty"`
	UgcRedisData      *UgcRedisData      `protobuf:"bytes,7,opt,name=ugc_redis_data,json=ugcRedisData,proto3" json:"ugc_redis_data,omitempty"`
	UgcBriefRedisData *UgcBriefRedisData `protobuf:"bytes,8,opt,name=ugc_brief_redis_data,json=ugcBriefRedisData,proto3" json:"ugc_brief_redis_data,omitempty"`
}

func (x *ServerGetUgcRsp) Reset() {
	*x = ServerGetUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetUgcRsp) ProtoMessage() {}

func (x *ServerGetUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetUgcRsp.ProtoReflect.Descriptor instead.
func (*ServerGetUgcRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{83}
}

func (x *ServerGetUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerGetUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *ServerGetUgcRsp) GetIsEdit() bool {
	if x != nil {
		return x.IsEdit
	}
	return false
}

func (x *ServerGetUgcRsp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

func (x *ServerGetUgcRsp) GetUgcRecordUsage() RecordUsage {
	if x != nil {
		return x.UgcRecordUsage
	}
	return RecordUsage_UGC_RECORD_USAGE_NONE
}

func (x *ServerGetUgcRsp) GetUgcRedisData() *UgcRedisData {
	if x != nil {
		return x.UgcRedisData
	}
	return nil
}

func (x *ServerGetUgcRsp) GetUgcBriefRedisData() *UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefRedisData
	}
	return nil
}

type ServerGetUgcBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType UgcType `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid uint64  `protobuf:"varint,2,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
}

func (x *ServerGetUgcBriefReq) Reset() {
	*x = ServerGetUgcBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetUgcBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetUgcBriefReq) ProtoMessage() {}

func (x *ServerGetUgcBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetUgcBriefReq.ProtoReflect.Descriptor instead.
func (*ServerGetUgcBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{84}
}

func (x *ServerGetUgcBriefReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerGetUgcBriefReq) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

type ServerGetUgcBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType           UgcType            `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	IsExist           bool               `protobuf:"varint,3,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
	UgcBriefRedisData *UgcBriefRedisData `protobuf:"bytes,4,opt,name=ugc_brief_redis_data,json=ugcBriefRedisData,proto3" json:"ugc_brief_redis_data,omitempty"`
}

func (x *ServerGetUgcBriefRsp) Reset() {
	*x = ServerGetUgcBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGetUgcBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGetUgcBriefRsp) ProtoMessage() {}

func (x *ServerGetUgcBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGetUgcBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerGetUgcBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{85}
}

func (x *ServerGetUgcBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerGetUgcBriefRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerGetUgcBriefRsp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

func (x *ServerGetUgcBriefRsp) GetUgcBriefRedisData() *UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefRedisData
	}
	return nil
}

type ServerMultiGetUgcBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType     UgcType  `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuidList []uint64 `protobuf:"varint,2,rep,packed,name=ugc_guid_list,json=ugcGuidList,proto3" json:"ugc_guid_list,omitempty"`
}

func (x *ServerMultiGetUgcBriefReq) Reset() {
	*x = ServerMultiGetUgcBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMultiGetUgcBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMultiGetUgcBriefReq) ProtoMessage() {}

func (x *ServerMultiGetUgcBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMultiGetUgcBriefReq.ProtoReflect.Descriptor instead.
func (*ServerMultiGetUgcBriefReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{86}
}

func (x *ServerMultiGetUgcBriefReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerMultiGetUgcBriefReq) GetUgcGuidList() []uint64 {
	if x != nil {
		return x.UgcGuidList
	}
	return nil
}

type ServerMultiGetUgcBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32                `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType      UgcType              `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcBriefList []*UgcBriefRedisData `protobuf:"bytes,3,rep,name=ugc_brief_list,json=ugcBriefList,proto3" json:"ugc_brief_list,omitempty"`
}

func (x *ServerMultiGetUgcBriefRsp) Reset() {
	*x = ServerMultiGetUgcBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMultiGetUgcBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMultiGetUgcBriefRsp) ProtoMessage() {}

func (x *ServerMultiGetUgcBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMultiGetUgcBriefRsp.ProtoReflect.Descriptor instead.
func (*ServerMultiGetUgcBriefRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{87}
}

func (x *ServerMultiGetUgcBriefRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerMultiGetUgcBriefRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerMultiGetUgcBriefRsp) GetUgcBriefList() []*UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefList
	}
	return nil
}

type ServerSaveUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType           UgcType            `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcRedisData      *UgcRedisData      `protobuf:"bytes,2,opt,name=ugc_redis_data,json=ugcRedisData,proto3" json:"ugc_redis_data,omitempty"`
	UgcBriefRedisData *UgcBriefRedisData `protobuf:"bytes,3,opt,name=ugc_brief_redis_data,json=ugcBriefRedisData,proto3" json:"ugc_brief_redis_data,omitempty"`
}

func (x *ServerSaveUgcReq) Reset() {
	*x = ServerSaveUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSaveUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSaveUgcReq) ProtoMessage() {}

func (x *ServerSaveUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSaveUgcReq.ProtoReflect.Descriptor instead.
func (*ServerSaveUgcReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{88}
}

func (x *ServerSaveUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerSaveUgcReq) GetUgcRedisData() *UgcRedisData {
	if x != nil {
		return x.UgcRedisData
	}
	return nil
}

func (x *ServerSaveUgcReq) GetUgcBriefRedisData() *UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefRedisData
	}
	return nil
}

type ServerSaveUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType           UgcType            `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcBriefRedisData *UgcBriefRedisData `protobuf:"bytes,3,opt,name=ugc_brief_redis_data,json=ugcBriefRedisData,proto3" json:"ugc_brief_redis_data,omitempty"`
}

func (x *ServerSaveUgcRsp) Reset() {
	*x = ServerSaveUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSaveUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSaveUgcRsp) ProtoMessage() {}

func (x *ServerSaveUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSaveUgcRsp.ProtoReflect.Descriptor instead.
func (*ServerSaveUgcRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{89}
}

func (x *ServerSaveUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerSaveUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerSaveUgcRsp) GetUgcBriefRedisData() *UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefRedisData
	}
	return nil
}

type ServerPublishUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType           UgcType            `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcBriefRedisData *UgcBriefRedisData `protobuf:"bytes,2,opt,name=ugc_brief_redis_data,json=ugcBriefRedisData,proto3" json:"ugc_brief_redis_data,omitempty"`
}

func (x *ServerPublishUgcReq) Reset() {
	*x = ServerPublishUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPublishUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPublishUgcReq) ProtoMessage() {}

func (x *ServerPublishUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPublishUgcReq.ProtoReflect.Descriptor instead.
func (*ServerPublishUgcReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{90}
}

func (x *ServerPublishUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerPublishUgcReq) GetUgcBriefRedisData() *UgcBriefRedisData {
	if x != nil {
		return x.UgcBriefRedisData
	}
	return nil
}

type ServerPublishUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32   `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType UgcType `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid uint64  `protobuf:"varint,3,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	Version uint32  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ServerPublishUgcRsp) Reset() {
	*x = ServerPublishUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPublishUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPublishUgcRsp) ProtoMessage() {}

func (x *ServerPublishUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPublishUgcRsp.ProtoReflect.Descriptor instead.
func (*ServerPublishUgcRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{91}
}

func (x *ServerPublishUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerPublishUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerPublishUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *ServerPublishUgcRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ServerCheckUgcUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType           UgcType           `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuidVersionMap map[uint64]uint32 `protobuf:"bytes,2,rep,name=ugc_guid_version_map,json=ugcGuidVersionMap,proto3" json:"ugc_guid_version_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerCheckUgcUpdateReq) Reset() {
	*x = ServerCheckUgcUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCheckUgcUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCheckUgcUpdateReq) ProtoMessage() {}

func (x *ServerCheckUgcUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCheckUgcUpdateReq.ProtoReflect.Descriptor instead.
func (*ServerCheckUgcUpdateReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{92}
}

func (x *ServerCheckUgcUpdateReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerCheckUgcUpdateReq) GetUgcGuidVersionMap() map[uint64]uint32 {
	if x != nil {
		return x.UgcGuidVersionMap
	}
	return nil
}

type ServerCheckUgcUpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType            UgcType  `protobuf:"varint,2,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UpdateUgcGuidList  []uint64 `protobuf:"varint,3,rep,packed,name=update_ugc_guid_list,json=updateUgcGuidList,proto3" json:"update_ugc_guid_list,omitempty"`
	NotFindUgcGuidList []uint64 `protobuf:"varint,4,rep,packed,name=not_find_ugc_guid_list,json=notFindUgcGuidList,proto3" json:"not_find_ugc_guid_list,omitempty"`
}

func (x *ServerCheckUgcUpdateRsp) Reset() {
	*x = ServerCheckUgcUpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCheckUgcUpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCheckUgcUpdateRsp) ProtoMessage() {}

func (x *ServerCheckUgcUpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCheckUgcUpdateRsp.ProtoReflect.Descriptor instead.
func (*ServerCheckUgcUpdateRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{93}
}

func (x *ServerCheckUgcUpdateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerCheckUgcUpdateRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *ServerCheckUgcUpdateRsp) GetUpdateUgcGuidList() []uint64 {
	if x != nil {
		return x.UpdateUgcGuidList
	}
	return nil
}

func (x *ServerCheckUgcUpdateRsp) GetNotFindUgcGuidList() []uint64 {
	if x != nil {
		return x.NotFindUgcGuidList
	}
	return nil
}

type ServerActivityGetFriendGiftDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId     uint32            `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid      uint32            `protobuf:"varint,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveGiftNumMap map[uint32]uint32 `protobuf:"bytes,3,rep,name=give_gift_num_map,json=giveGiftNumMap,proto3" json:"give_gift_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerActivityGetFriendGiftDataReq) Reset() {
	*x = ServerActivityGetFriendGiftDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivityGetFriendGiftDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivityGetFriendGiftDataReq) ProtoMessage() {}

func (x *ServerActivityGetFriendGiftDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivityGetFriendGiftDataReq.ProtoReflect.Descriptor instead.
func (*ServerActivityGetFriendGiftDataReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{94}
}

func (x *ServerActivityGetFriendGiftDataReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerActivityGetFriendGiftDataReq) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerActivityGetFriendGiftDataReq) GetGiveGiftNumMap() map[uint32]uint32 {
	if x != nil {
		return x.GiveGiftNumMap
	}
	return nil
}

type ServerActivityGetFriendGiftDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId     uint32            `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUid      uint32            `protobuf:"varint,3,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	GiveGiftNumMap map[uint32]uint32 `protobuf:"bytes,4,rep,name=give_gift_num_map,json=giveGiftNumMap,proto3" json:"give_gift_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	HaveGiftNumMap map[uint32]uint32 `protobuf:"bytes,5,rep,name=have_gift_num_map,json=haveGiftNumMap,proto3" json:"have_gift_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ServerActivityGetFriendGiftDataRsp) Reset() {
	*x = ServerActivityGetFriendGiftDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivityGetFriendGiftDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivityGetFriendGiftDataRsp) ProtoMessage() {}

func (x *ServerActivityGetFriendGiftDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivityGetFriendGiftDataRsp.ProtoReflect.Descriptor instead.
func (*ServerActivityGetFriendGiftDataRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{95}
}

func (x *ServerActivityGetFriendGiftDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerActivityGetFriendGiftDataRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerActivityGetFriendGiftDataRsp) GetFriendUid() uint32 {
	if x != nil {
		return x.FriendUid
	}
	return 0
}

func (x *ServerActivityGetFriendGiftDataRsp) GetGiveGiftNumMap() map[uint32]uint32 {
	if x != nil {
		return x.GiveGiftNumMap
	}
	return nil
}

func (x *ServerActivityGetFriendGiftDataRsp) GetHaveGiftNumMap() map[uint32]uint32 {
	if x != nil {
		return x.HaveGiftNumMap
	}
	return nil
}

type ServerActivityGetFriendGiftWishListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId    uint32                   `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendUidList []uint32                 `protobuf:"varint,2,rep,packed,name=friend_uid_list,json=friendUidList,proto3" json:"friend_uid_list,omitempty"`
	Reason        FriendBriefRequestReason `protobuf:"varint,3,opt,name=reason,proto3,enum=proto.FriendBriefRequestReason" json:"reason,omitempty"`
}

func (x *ServerActivityGetFriendGiftWishListReq) Reset() {
	*x = ServerActivityGetFriendGiftWishListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivityGetFriendGiftWishListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivityGetFriendGiftWishListReq) ProtoMessage() {}

func (x *ServerActivityGetFriendGiftWishListReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivityGetFriendGiftWishListReq.ProtoReflect.Descriptor instead.
func (*ServerActivityGetFriendGiftWishListReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{96}
}

func (x *ServerActivityGetFriendGiftWishListReq) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerActivityGetFriendGiftWishListReq) GetFriendUidList() []uint32 {
	if x != nil {
		return x.FriendUidList
	}
	return nil
}

func (x *ServerActivityGetFriendGiftWishListReq) GetReason() FriendBriefRequestReason {
	if x != nil {
		return x.Reason
	}
	return FriendBriefRequestReason_FRIEND_BRIEF_REASON_NONE
}

type ServerActivityGetFriendGiftWishListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32                         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ScheduleId         uint32                        `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	FriendGiftWishList []*ActivityFriendGiftWishData `protobuf:"bytes,3,rep,name=friend_gift_wish_list,json=friendGiftWishList,proto3" json:"friend_gift_wish_list,omitempty"`
}

func (x *ServerActivityGetFriendGiftWishListRsp) Reset() {
	*x = ServerActivityGetFriendGiftWishListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivityGetFriendGiftWishListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivityGetFriendGiftWishListRsp) ProtoMessage() {}

func (x *ServerActivityGetFriendGiftWishListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivityGetFriendGiftWishListRsp.ProtoReflect.Descriptor instead.
func (*ServerActivityGetFriendGiftWishListRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{97}
}

func (x *ServerActivityGetFriendGiftWishListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ServerActivityGetFriendGiftWishListRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ServerActivityGetFriendGiftWishListRsp) GetFriendGiftWishList() []*ActivityFriendGiftWishData {
	if x != nil {
		return x.FriendGiftWishList
	}
	return nil
}

type SyncPlayerIpRegionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SocialBriefData *PlayerSocialBriefData `protobuf:"bytes,1,opt,name=social_brief_data,json=socialBriefData,proto3" json:"social_brief_data,omitempty"`
}

func (x *SyncPlayerIpRegionNotify) Reset() {
	*x = SyncPlayerIpRegionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_social_server_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayerIpRegionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayerIpRegionNotify) ProtoMessage() {}

func (x *SyncPlayerIpRegionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_social_server_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayerIpRegionNotify.ProtoReflect.Descriptor instead.
func (*SyncPlayerIpRegionNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_social_server_proto_rawDescGZIP(), []int{98}
}

func (x *SyncPlayerIpRegionNotify) GetSocialBriefData() *PlayerSocialBriefData {
	if x != nil {
		return x.SocialBriefData
	}
	return nil
}

var File_server_only_cmd_social_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_social_server_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x62, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6d, 0x64, 0x2f,
	0x63, 0x6d, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x75, 0x67, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x73, 0x6b, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0xa8, 0x02, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x17, 0x61, 0x73, 0x6b,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x73, 0x6b, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x13, 0x70, 0x73, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x73, 0x6e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16,
	0x70, 0x73, 0x6e, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x73,
	0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x39, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x18,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x36, 0x0a, 0x15,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x73,
	0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64,
	0x12, 0x53, 0x0a, 0x16, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x13, 0x64, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x16, 0x64, 0x65, 0x61,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x64, 0x65, 0x61, 0x6c, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x42, 0x0a, 0x13, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x22, 0x36,
	0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4e, 0x75, 0x6d, 0x22, 0x35, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x47, 0x0a, 0x1d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x3e, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52,
	0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x77, 0x0a, 0x17, 0x53, 0x65, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x53, 0x34, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0b, 0x70,
	0x73, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd1, 0x01, 0x0a, 0x17, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x53, 0x34, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55,
	0x69, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x75, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x69, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x53, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x0f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x02,
	0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c,
	0x0a, 0x0d, 0x6d, 0x70, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0b, 0x6d, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x11,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x6f,
	0x6d, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x68, 0x6f, 0x6d,
	0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x15, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22,
	0x75, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x22, 0x39, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x22, 0x53, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01,
	0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x50, 0x0a, 0x1b, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x17, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x1b, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x70, 0x73, 0x34, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x73, 0x34, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x30,
	0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xb0, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x75, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x73, 0x34, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x73, 0x34, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x75, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x6b,
	0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x43, 0x0a, 0x10, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x21, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x21, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a,
	0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x0f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x48, 0x0a, 0x15, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x20, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68,
	0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x15, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x70, 0x73, 0x34, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x73, 0x34, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22,
	0x36, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52,
	0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x41, 0x73, 0x6b, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x17,
	0x61, 0x73, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x61,
	0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x19, 0x61,
	0x73, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x52, 0x15, 0x61, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x15, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x3f, 0x0a, 0x1d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x70, 0x73, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x50, 0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x1d, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x1f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x1a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x50,
	0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x55, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x50, 0x73,
	0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x1c, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x17, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x1c, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x17, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x50, 0x73, 0x6e, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x1c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x79, 0x55, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x69, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x27, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x73, 0x0a, 0x13, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x67, 0x69, 0x76, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x43, 0x0a, 0x15, 0x47,
	0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xf7, 0x03, 0x0a, 0x27, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x73, 0x0a, 0x13, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x73, 0x70, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x67, 0x69, 0x76, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x73, 0x0a, 0x13, 0x68,
	0x61, 0x76, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10,
	0x68, 0x61, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70,
	0x1a, 0x43, 0x0a, 0x15, 0x47, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x48, 0x61, 0x76, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x2b, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x69,
	0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x2b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x5d, 0x0a,
	0x17, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x77,
	0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9e, 0x01, 0x0a,
	0x24, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d,
	0x70, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0e, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x0c, 0x67, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf4, 0x01,
	0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61,
	0x6d, 0x70, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x0e, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x67, 0x69, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x57, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x77, 0x69, 0x73,
	0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x61, 0x6d, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x69, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x77, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x85, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x64, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x65,
	0x6c, 0x66, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x69, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xa4, 0x01, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x12, 0x47, 0x0a,
	0x0d, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x22, 0xb2, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x65, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x45, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xd1, 0x02, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x73, 0x6e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x7f, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69,
	0x64, 0x22, 0x9a, 0x02, 0x0a, 0x25, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x45,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x65, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65,
	0x71, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x1e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x12, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22,
	0x90, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x50, 0x0a, 0x12, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x39, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0xc3, 0x01,
	0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x42, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x22, 0x39, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x7f,
	0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x22,
	0x3c, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x73, 0x6b, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x56, 0x0a,
	0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x73, 0x6b, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x73, 0x6b, 0x42, 0x79, 0x4d, 0x75, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x73, 0x6b, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x25, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x21, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x47, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08,
	0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x3c, 0x0a, 0x10, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0e, 0x75, 0x67, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x10, 0x75,
	0x67, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x75, 0x67, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x75, 0x67, 0x63,
	0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x75, 0x67, 0x63, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x67, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x75, 0x67,
	0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x5c, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x22, 0xc1, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x67, 0x63, 0x5f, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11,
	0x75, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x6a, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x67, 0x63,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x0b, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x01,
	0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74,
	0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x0e, 0x75, 0x67, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x75, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xc3, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x55,
	0x67, 0x63, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x0e, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x67, 0x63, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x75,
	0x67, 0x63, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x14, 0x75,
	0x67, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x11, 0x75, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x61, 0x76, 0x65, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x49, 0x0a, 0x14, 0x75, 0x67, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x75, 0x67, 0x63, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x67, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49,
	0x0a, 0x14, 0x75, 0x67, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x75, 0x67, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x67, 0x63, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x75,
	0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75,
	0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x17,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x67, 0x63, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x66, 0x0a, 0x14, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x67, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x2e, 0x55, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x44, 0x0a, 0x16, 0x55, 0x67,
	0x63, 0x47, 0x75, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xc3, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x67, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x67, 0x63, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x75,
	0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x67, 0x63, 0x47, 0x75,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x68, 0x0a,
	0x11, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x67, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66,
	0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x41, 0x0a, 0x13, 0x47, 0x69, 0x76, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x03, 0x0a, 0x22, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x68, 0x0a, 0x11, 0x67,
	0x69, 0x76, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73,
	0x70, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x67, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e,
	0x75, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x68, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x48, 0x61, 0x76, 0x65,
	0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x68, 0x61, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x1a,
	0x41, 0x0a, 0x13, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x48, 0x61, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaa, 0x01, 0x0a, 0x26, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x26, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x57, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x64,
	0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x70, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x72, 0x69, 0x65, 0x66, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x44, 0x61, 0x74, 0x61, 0x2a, 0x77, 0x0a, 0x0e, 0x50, 0x53, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x53, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x53,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4d,
	0x50, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x03, 0x2a, 0x92, 0x02,
	0x0a, 0x18, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x52,
	0x49, 0x45, 0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x46, 0x52, 0x49, 0x45,
	0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x42, 0x4c, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x42, 0x52,
	0x49, 0x45, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x54,
	0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x10, 0x02, 0x12, 0x2c, 0x0a, 0x28, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49,
	0x45, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x5f, 0x43, 0x41, 0x4d, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x03,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x47, 0x41, 0x43, 0x48, 0x41, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x04, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x52, 0x49, 0x45,
	0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x56, 0x49, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x10, 0x05, 0x2a, 0x74, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x41, 0x56, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45,
	0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x41, 0x56,
	0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e,
	0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x41, 0x56, 0x45, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x53,
	0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0xbc, 0x01, 0x0a, 0x1d, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x55,
	0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47,
	0x45, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x02,
	0x12, 0x25, 0x0a, 0x21, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45,
	0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x03, 0x2a, 0xcf, 0x01, 0x0a, 0x19, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x47, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f,
	0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x59, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x49, 0x45,
	0x46, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x23, 0x0a,
	0x1f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f,
	0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48,
	0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e,
	0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47,
	0x4d, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x04, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_cmd_social_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_social_server_proto_rawDescData = file_server_only_cmd_social_server_proto_rawDesc
)

func file_server_only_cmd_social_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_social_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_social_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_social_server_proto_rawDescData)
	})
	return file_server_only_cmd_social_server_proto_rawDescData
}

var file_server_only_cmd_social_server_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_server_only_cmd_social_server_proto_msgTypes = make([]protoimpl.MessageInfo, 106)
var file_server_only_cmd_social_server_proto_goTypes = []interface{}{
	(PSRequstReason)(0),                                 // 0: proto.PSRequstReason
	(FriendBriefRequestReason)(0),                       // 1: proto.FriendBriefRequestReason
	(SaveCustomDungeonType)(0),                          // 2: proto.SaveCustomDungeonType
	(CustomDungeonSocialUpdateType)(0),                  // 3: proto.CustomDungeonSocialUpdateType
	(CustomDungeonBriefGetType)(0),                      // 4: proto.CustomDungeonBriefGetType
	(*AddAskFriendNotify)(nil),                          // 5: proto.AddAskFriendNotify
	(*ServerGetPlayerFriendListReq)(nil),                // 6: proto.ServerGetPlayerFriendListReq
	(*ServerGetPlayerFriendListRsp)(nil),                // 7: proto.ServerGetPlayerFriendListRsp
	(*ServerGetSocialDetailReq)(nil),                    // 8: proto.ServerGetSocialDetailReq
	(*ServerGetSocialDetailRsp)(nil),                    // 9: proto.ServerGetSocialDetailRsp
	(*ServerAskAddFriendReq)(nil),                       // 10: proto.ServerAskAddFriendReq
	(*ServerAskAddFriendRsp)(nil),                       // 11: proto.ServerAskAddFriendRsp
	(*ServerDealAddFriendReq)(nil),                      // 12: proto.ServerDealAddFriendReq
	(*ServerDealAddFriendRsp)(nil),                      // 13: proto.ServerDealAddFriendRsp
	(*ServerDeleteFriendReq)(nil),                       // 14: proto.ServerDeleteFriendReq
	(*ServerDeleteFriendRsp)(nil),                       // 15: proto.ServerDeleteFriendRsp
	(*ServerSetSignatureReq)(nil),                       // 16: proto.ServerSetSignatureReq
	(*ServerSetSignatureRsp)(nil),                       // 17: proto.ServerSetSignatureRsp
	(*ServerGetPlayerFriendBriefReq)(nil),               // 18: proto.ServerGetPlayerFriendBriefReq
	(*ServerGetPlayerFriendBriefRsp)(nil),               // 19: proto.ServerGetPlayerFriendBriefRsp
	(*SeverGetPS4FriendUidReq)(nil),                     // 20: proto.SeverGetPS4FriendUidReq
	(*SeverGetPS4FriendUidRsp)(nil),                     // 21: proto.SeverGetPS4FriendUidRsp
	(*SyncPlayerBriefNotify)(nil),                       // 22: proto.SyncPlayerBriefNotify
	(*ServerAddBlacklistReq)(nil),                       // 23: proto.ServerAddBlacklistReq
	(*ServerAddBlacklistRsp)(nil),                       // 24: proto.ServerAddBlacklistRsp
	(*ServerRemoveBlacklistReq)(nil),                    // 25: proto.ServerRemoveBlacklistReq
	(*ServerRemoveBlacklistRsp)(nil),                    // 26: proto.ServerRemoveBlacklistRsp
	(*ServerGetRecentMpPlayerListReq)(nil),              // 27: proto.ServerGetRecentMpPlayerListReq
	(*ServerGetRecentMpPlayerListRsp)(nil),              // 28: proto.ServerGetRecentMpPlayerListRsp
	(*ServerGetPlayerBlacklistReq)(nil),                 // 29: proto.ServerGetPlayerBlacklistReq
	(*ServerGetPlayerBlacklistRsp)(nil),                 // 30: proto.ServerGetPlayerBlacklistRsp
	(*ServerPrivateChatReq)(nil),                        // 31: proto.ServerPrivateChatReq
	(*ServerPrivateChatRsp)(nil),                        // 32: proto.ServerPrivateChatRsp
	(*ServerPullPrivateChatReq)(nil),                    // 33: proto.ServerPullPrivateChatReq
	(*ServerPullRecentChatReq)(nil),                     // 34: proto.ServerPullRecentChatReq
	(*ServerUpdateActivitySocialDataNotify)(nil),        // 35: proto.ServerUpdateActivitySocialDataNotify
	(*ServerBlessingGetFriendPicListReq)(nil),           // 36: proto.ServerBlessingGetFriendPicListReq
	(*ServerBlessingGetFriendPicListRsp)(nil),           // 37: proto.ServerBlessingGetFriendPicListRsp
	(*ServerGetFriendBriefReq)(nil),                     // 38: proto.ServerGetFriendBriefReq
	(*ServerGetFriendBriefRsp)(nil),                     // 39: proto.ServerGetFriendBriefRsp
	(*ServerUpdateShowAvatarInfoNotify)(nil),            // 40: proto.ServerUpdateShowAvatarInfoNotify
	(*ServerGetFriendShowAvatarInfoReq)(nil),            // 41: proto.ServerGetFriendShowAvatarInfoReq
	(*ServerGetFriendShowAvatarInfoRsp)(nil),            // 42: proto.ServerGetFriendShowAvatarInfoRsp
	(*ServerReadPrivateChatReq)(nil),                    // 43: proto.ServerReadPrivateChatReq
	(*ServerGetFriendShowNameCardInfoReq)(nil),          // 44: proto.ServerGetFriendShowNameCardInfoReq
	(*ServerGetFriendShowNameCardInfoRsp)(nil),          // 45: proto.ServerGetFriendShowNameCardInfoRsp
	(*ServerGetAskFriendBriefReq)(nil),                  // 46: proto.ServerGetAskFriendBriefReq
	(*ServerGetAskFriendBriefRsp)(nil),                  // 47: proto.ServerGetAskFriendBriefRsp
	(*ServerAddPsnFriendReq)(nil),                       // 48: proto.ServerAddPsnFriendReq
	(*ServerAddPsnFriendRsp)(nil),                       // 49: proto.ServerAddPsnFriendRsp
	(*ServerAddPsnBlackReq)(nil),                        // 50: proto.ServerAddPsnBlackReq
	(*ServerAddPsnBlackRsp)(nil),                        // 51: proto.ServerAddPsnBlackRsp
	(*ServerFriendInfoChangeNotify)(nil),                // 52: proto.ServerFriendInfoChangeNotify
	(*ServerPlantFlowerGetFriendFlowerDataReq)(nil),     // 53: proto.ServerPlantFlowerGetFriendFlowerDataReq
	(*ServerPlantFlowerGetFriendFlowerDataRsp)(nil),     // 54: proto.ServerPlantFlowerGetFriendFlowerDataRsp
	(*ServerPlantFlowerGetFriendFlowerWishListReq)(nil), // 55: proto.ServerPlantFlowerGetFriendFlowerWishListReq
	(*ServerPlantFlowerGetFriendFlowerWishListRsp)(nil), // 56: proto.ServerPlantFlowerGetFriendFlowerWishListRsp
	(*ServerWinterCampGetFriendItemDataReq)(nil),        // 57: proto.ServerWinterCampGetFriendItemDataReq
	(*ServerWinterCampGetFriendItemDataRsp)(nil),        // 58: proto.ServerWinterCampGetFriendItemDataRsp
	(*ServerWinterCampGetFriendWishListReq)(nil),        // 59: proto.ServerWinterCampGetFriendWishListReq
	(*ServerWinterCampGetFriendWishListRsp)(nil),        // 60: proto.ServerWinterCampGetFriendWishListRsp
	(*ServerGetCustomDungeonReq)(nil),                   // 61: proto.ServerGetCustomDungeonReq
	(*ServerCustomDungeon)(nil),                         // 62: proto.ServerCustomDungeon
	(*CustomDungeonAdventure)(nil),                      // 63: proto.CustomDungeonAdventure
	(*ServerGetCustomDungeonRsp)(nil),                   // 64: proto.ServerGetCustomDungeonRsp
	(*ServerSaveCustomDungeonReq)(nil),                  // 65: proto.ServerSaveCustomDungeonReq
	(*ServerSaveCustomDungeonRsp)(nil),                  // 66: proto.ServerSaveCustomDungeonRsp
	(*ServerPublishCustomDungeonReq)(nil),               // 67: proto.ServerPublishCustomDungeonReq
	(*ServerPublishCustomDungeonRsp)(nil),               // 68: proto.ServerPublishCustomDungeonRsp
	(*ServerRemoveCustomDungeonReq)(nil),                // 69: proto.ServerRemoveCustomDungeonReq
	(*ServerRemoveCustomDungeonRsp)(nil),                // 70: proto.ServerRemoveCustomDungeonRsp
	(*ServerUpdateCustomDungeonSocialNotify)(nil),       // 71: proto.ServerUpdateCustomDungeonSocialNotify
	(*ServerGetCustomDungeonBriefReq)(nil),              // 72: proto.ServerGetCustomDungeonBriefReq
	(*ServerGetCustomDungeonBriefRsp)(nil),              // 73: proto.ServerGetCustomDungeonBriefRsp
	(*ServerGetRecommendCustomDungeonReq)(nil),          // 74: proto.ServerGetRecommendCustomDungeonReq
	(*ServerGetRecommendCustomDungeonRsp)(nil),          // 75: proto.ServerGetRecommendCustomDungeonRsp
	(*ServerAddFriendByMuipReq)(nil),                    // 76: proto.ServerAddFriendByMuipReq
	(*ServerAddFriendByMuipRsp)(nil),                    // 77: proto.ServerAddFriendByMuipRsp
	(*ServerDelFriendByMuipReq)(nil),                    // 78: proto.ServerDelFriendByMuipReq
	(*ServerDelFriendByMuipRsp)(nil),                    // 79: proto.ServerDelFriendByMuipRsp
	(*ServerAddFriendAskByMuipReq)(nil),                 // 80: proto.ServerAddFriendAskByMuipReq
	(*ServerAddFriendAskByMuipRsp)(nil),                 // 81: proto.ServerAddFriendAskByMuipRsp
	(*ServerDelFriendAskByMuipReq)(nil),                 // 82: proto.ServerDelFriendAskByMuipReq
	(*ServerDelFriendAskByMuipRsp)(nil),                 // 83: proto.ServerDelFriendAskByMuipRsp
	(*ServerCustomDungeonCacheInvalidNotify)(nil),       // 84: proto.ServerCustomDungeonCacheInvalidNotify
	(*ServerCustomDungeonSocialGmNotify)(nil),           // 85: proto.ServerCustomDungeonSocialGmNotify
	(*ServerCustomDungeonFirstLikeNotify)(nil),          // 86: proto.ServerCustomDungeonFirstLikeNotify
	(*ServerGetUgcReq)(nil),                             // 87: proto.ServerGetUgcReq
	(*ServerGetUgcRsp)(nil),                             // 88: proto.ServerGetUgcRsp
	(*ServerGetUgcBriefReq)(nil),                        // 89: proto.ServerGetUgcBriefReq
	(*ServerGetUgcBriefRsp)(nil),                        // 90: proto.ServerGetUgcBriefRsp
	(*ServerMultiGetUgcBriefReq)(nil),                   // 91: proto.ServerMultiGetUgcBriefReq
	(*ServerMultiGetUgcBriefRsp)(nil),                   // 92: proto.ServerMultiGetUgcBriefRsp
	(*ServerSaveUgcReq)(nil),                            // 93: proto.ServerSaveUgcReq
	(*ServerSaveUgcRsp)(nil),                            // 94: proto.ServerSaveUgcRsp
	(*ServerPublishUgcReq)(nil),                         // 95: proto.ServerPublishUgcReq
	(*ServerPublishUgcRsp)(nil),                         // 96: proto.ServerPublishUgcRsp
	(*ServerCheckUgcUpdateReq)(nil),                     // 97: proto.ServerCheckUgcUpdateReq
	(*ServerCheckUgcUpdateRsp)(nil),                     // 98: proto.ServerCheckUgcUpdateRsp
	(*ServerActivityGetFriendGiftDataReq)(nil),          // 99: proto.ServerActivityGetFriendGiftDataReq
	(*ServerActivityGetFriendGiftDataRsp)(nil),          // 100: proto.ServerActivityGetFriendGiftDataRsp
	(*ServerActivityGetFriendGiftWishListReq)(nil),      // 101: proto.ServerActivityGetFriendGiftWishListReq
	(*ServerActivityGetFriendGiftWishListRsp)(nil),      // 102: proto.ServerActivityGetFriendGiftWishListRsp
	(*SyncPlayerIpRegionNotify)(nil),                    // 103: proto.SyncPlayerIpRegionNotify
	nil,                                                 // 104: proto.ServerPlantFlowerGetFriendFlowerDataReq.GiveFlowerNumMapEntry
	nil,                                                 // 105: proto.ServerPlantFlowerGetFriendFlowerDataRsp.GiveFlowerNumMapEntry
	nil,                                                 // 106: proto.ServerPlantFlowerGetFriendFlowerDataRsp.HaveFlowerNumMapEntry
	nil,                                                 // 107: proto.ServerCheckUgcUpdateReq.UgcGuidVersionMapEntry
	nil,                                                 // 108: proto.ServerActivityGetFriendGiftDataReq.GiveGiftNumMapEntry
	nil,                                                 // 109: proto.ServerActivityGetFriendGiftDataRsp.GiveGiftNumMapEntry
	nil,                                                 // 110: proto.ServerActivityGetFriendGiftDataRsp.HaveGiftNumMapEntry
	(*SocialDetail)(nil),                                // 111: proto.SocialDetail
	(DealAddFriendResultType)(0),                        // 112: proto.DealAddFriendResultType
	(*FriendBrief)(nil),                                 // 113: proto.FriendBrief
	(*PlayerBasicBriefData)(nil),                        // 114: proto.PlayerBasicBriefData
	(*PlayerMpBriefData)(nil),                           // 115: proto.PlayerMpBriefData
	(*PlayerSocialBriefData)(nil),                       // 116: proto.PlayerSocialBriefData
	(*PlayerHomeBriefData)(nil),                         // 117: proto.PlayerHomeBriefData
	(*ChatInfo)(nil),                                    // 118: proto.ChatInfo
	(*ActivitySocialData)(nil),                          // 119: proto.ActivitySocialData
	(*BlessingFriendPicData)(nil),                       // 120: proto.BlessingFriendPicData
	(*ShowAvatarInfo)(nil),                              // 121: proto.ShowAvatarInfo
	(*PlantFlowerFriendFlowerWishData)(nil),             // 122: proto.PlantFlowerFriendFlowerWishData
	(*ItemParam)(nil),                                   // 123: proto.ItemParam
	(*WinterCampFriendWishData)(nil),                    // 124: proto.WinterCampFriendWishData
	(*CustomDungeonRoomRedisData)(nil),                  // 125: proto.CustomDungeonRoomRedisData
	(*CustomDungeonSettingBin)(nil),                     // 126: proto.CustomDungeonSettingBin
	(*CustomDungeonBriefRedisData)(nil),                 // 127: proto.CustomDungeonBriefRedisData
	(*CustomDungeonAbstractBin)(nil),                    // 128: proto.CustomDungeonAbstractBin
	(UgcType)(0),                                        // 129: proto.UgcType
	(RecordUsage)(0),                                    // 130: proto.RecordUsage
	(*UgcRedisData)(nil),                                // 131: proto.UgcRedisData
	(*UgcBriefRedisData)(nil),                           // 132: proto.UgcBriefRedisData
	(*ActivityFriendGiftWishData)(nil),                  // 133: proto.ActivityFriendGiftWishData
}
var file_server_only_cmd_social_server_proto_depIdxs = []int32{
	111, // 0: proto.ServerGetSocialDetailRsp.social_detail:type_name -> proto.SocialDetail
	112, // 1: proto.ServerDealAddFriendReq.deal_add_friend_result:type_name -> proto.DealAddFriendResultType
	112, // 2: proto.ServerDealAddFriendRsp.deal_add_friend_result:type_name -> proto.DealAddFriendResultType
	113, // 3: proto.ServerDealAddFriendRsp.target_friend_brief:type_name -> proto.FriendBrief
	113, // 4: proto.ServerGetPlayerFriendBriefRsp.friend_brief_list:type_name -> proto.FriendBrief
	0,   // 5: proto.SeverGetPS4FriendUidReq.request_reason:type_name -> proto.PSRequstReason
	0,   // 6: proto.SeverGetPS4FriendUidRsp.request_reason:type_name -> proto.PSRequstReason
	113, // 7: proto.SeverGetPS4FriendUidRsp.friend_brief_list:type_name -> proto.FriendBrief
	114, // 8: proto.SyncPlayerBriefNotify.basic_brief_data:type_name -> proto.PlayerBasicBriefData
	115, // 9: proto.SyncPlayerBriefNotify.mp_brief_data:type_name -> proto.PlayerMpBriefData
	116, // 10: proto.SyncPlayerBriefNotify.social_brief_data:type_name -> proto.PlayerSocialBriefData
	117, // 11: proto.SyncPlayerBriefNotify.home_brief_data:type_name -> proto.PlayerHomeBriefData
	113, // 12: proto.ServerAddBlacklistRsp.target_friend_brief:type_name -> proto.FriendBrief
	113, // 13: proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list:type_name -> proto.FriendBrief
	113, // 14: proto.ServerGetPlayerBlacklistRsp.blacklist:type_name -> proto.FriendBrief
	118, // 15: proto.ServerPrivateChatReq.chat_info:type_name -> proto.ChatInfo
	119, // 16: proto.ServerUpdateActivitySocialDataNotify.social_data_list:type_name -> proto.ActivitySocialData
	120, // 17: proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list:type_name -> proto.BlessingFriendPicData
	1,   // 18: proto.ServerGetFriendBriefReq.reason:type_name -> proto.FriendBriefRequestReason
	113, // 19: proto.ServerGetFriendBriefRsp.friend_brief_list:type_name -> proto.FriendBrief
	1,   // 20: proto.ServerGetFriendBriefRsp.reason:type_name -> proto.FriendBriefRequestReason
	121, // 21: proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list:type_name -> proto.ShowAvatarInfo
	121, // 22: proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list:type_name -> proto.ShowAvatarInfo
	113, // 23: proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list:type_name -> proto.FriendBrief
	113, // 24: proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list:type_name -> proto.FriendBrief
	104, // 25: proto.ServerPlantFlowerGetFriendFlowerDataReq.give_flower_num_map:type_name -> proto.ServerPlantFlowerGetFriendFlowerDataReq.GiveFlowerNumMapEntry
	105, // 26: proto.ServerPlantFlowerGetFriendFlowerDataRsp.give_flower_num_map:type_name -> proto.ServerPlantFlowerGetFriendFlowerDataRsp.GiveFlowerNumMapEntry
	106, // 27: proto.ServerPlantFlowerGetFriendFlowerDataRsp.have_flower_num_map:type_name -> proto.ServerPlantFlowerGetFriendFlowerDataRsp.HaveFlowerNumMapEntry
	122, // 28: proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list:type_name -> proto.PlantFlowerFriendFlowerWishData
	123, // 29: proto.ServerWinterCampGetFriendItemDataReq.give_item_list:type_name -> proto.ItemParam
	123, // 30: proto.ServerWinterCampGetFriendItemDataRsp.give_item_list:type_name -> proto.ItemParam
	123, // 31: proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list:type_name -> proto.ItemParam
	124, // 32: proto.ServerWinterCampGetFriendWishListRsp.wish_data_list:type_name -> proto.WinterCampFriendWishData
	125, // 33: proto.ServerCustomDungeon.room_list:type_name -> proto.CustomDungeonRoomRedisData
	126, // 34: proto.ServerCustomDungeon.setting:type_name -> proto.CustomDungeonSettingBin
	62,  // 35: proto.CustomDungeonAdventure.custom_dungeon:type_name -> proto.ServerCustomDungeon
	127, // 36: proto.CustomDungeonAdventure.dungeon_brief:type_name -> proto.CustomDungeonBriefRedisData
	62,  // 37: proto.ServerGetCustomDungeonRsp.custom_dungeon:type_name -> proto.ServerCustomDungeon
	62,  // 38: proto.ServerSaveCustomDungeonReq.custom_dungeon:type_name -> proto.ServerCustomDungeon
	128, // 39: proto.ServerPublishCustomDungeonReq.abstract:type_name -> proto.CustomDungeonAbstractBin
	3,   // 40: proto.ServerUpdateCustomDungeonSocialNotify.update_type:type_name -> proto.CustomDungeonSocialUpdateType
	4,   // 41: proto.ServerGetCustomDungeonBriefReq.get_type:type_name -> proto.CustomDungeonBriefGetType
	127, // 42: proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list:type_name -> proto.CustomDungeonBriefRedisData
	4,   // 43: proto.ServerGetCustomDungeonBriefRsp.get_type:type_name -> proto.CustomDungeonBriefGetType
	127, // 44: proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list:type_name -> proto.CustomDungeonBriefRedisData
	113, // 45: proto.ServerAddFriendByMuipRsp.target_friend_brief:type_name -> proto.FriendBrief
	129, // 46: proto.ServerGetUgcReq.ugc_type:type_name -> proto.UgcType
	130, // 47: proto.ServerGetUgcReq.ugc_record_usage:type_name -> proto.RecordUsage
	129, // 48: proto.ServerGetUgcRsp.ugc_type:type_name -> proto.UgcType
	130, // 49: proto.ServerGetUgcRsp.ugc_record_usage:type_name -> proto.RecordUsage
	131, // 50: proto.ServerGetUgcRsp.ugc_redis_data:type_name -> proto.UgcRedisData
	132, // 51: proto.ServerGetUgcRsp.ugc_brief_redis_data:type_name -> proto.UgcBriefRedisData
	129, // 52: proto.ServerGetUgcBriefReq.ugc_type:type_name -> proto.UgcType
	129, // 53: proto.ServerGetUgcBriefRsp.ugc_type:type_name -> proto.UgcType
	132, // 54: proto.ServerGetUgcBriefRsp.ugc_brief_redis_data:type_name -> proto.UgcBriefRedisData
	129, // 55: proto.ServerMultiGetUgcBriefReq.ugc_type:type_name -> proto.UgcType
	129, // 56: proto.ServerMultiGetUgcBriefRsp.ugc_type:type_name -> proto.UgcType
	132, // 57: proto.ServerMultiGetUgcBriefRsp.ugc_brief_list:type_name -> proto.UgcBriefRedisData
	129, // 58: proto.ServerSaveUgcReq.ugc_type:type_name -> proto.UgcType
	131, // 59: proto.ServerSaveUgcReq.ugc_redis_data:type_name -> proto.UgcRedisData
	132, // 60: proto.ServerSaveUgcReq.ugc_brief_redis_data:type_name -> proto.UgcBriefRedisData
	129, // 61: proto.ServerSaveUgcRsp.ugc_type:type_name -> proto.UgcType
	132, // 62: proto.ServerSaveUgcRsp.ugc_brief_redis_data:type_name -> proto.UgcBriefRedisData
	129, // 63: proto.ServerPublishUgcReq.ugc_type:type_name -> proto.UgcType
	132, // 64: proto.ServerPublishUgcReq.ugc_brief_redis_data:type_name -> proto.UgcBriefRedisData
	129, // 65: proto.ServerPublishUgcRsp.ugc_type:type_name -> proto.UgcType
	129, // 66: proto.ServerCheckUgcUpdateReq.ugc_type:type_name -> proto.UgcType
	107, // 67: proto.ServerCheckUgcUpdateReq.ugc_guid_version_map:type_name -> proto.ServerCheckUgcUpdateReq.UgcGuidVersionMapEntry
	129, // 68: proto.ServerCheckUgcUpdateRsp.ugc_type:type_name -> proto.UgcType
	108, // 69: proto.ServerActivityGetFriendGiftDataReq.give_gift_num_map:type_name -> proto.ServerActivityGetFriendGiftDataReq.GiveGiftNumMapEntry
	109, // 70: proto.ServerActivityGetFriendGiftDataRsp.give_gift_num_map:type_name -> proto.ServerActivityGetFriendGiftDataRsp.GiveGiftNumMapEntry
	110, // 71: proto.ServerActivityGetFriendGiftDataRsp.have_gift_num_map:type_name -> proto.ServerActivityGetFriendGiftDataRsp.HaveGiftNumMapEntry
	1,   // 72: proto.ServerActivityGetFriendGiftWishListReq.reason:type_name -> proto.FriendBriefRequestReason
	133, // 73: proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list:type_name -> proto.ActivityFriendGiftWishData
	116, // 74: proto.SyncPlayerIpRegionNotify.social_brief_data:type_name -> proto.PlayerSocialBriefData
	75,  // [75:75] is the sub-list for method output_type
	75,  // [75:75] is the sub-list for method input_type
	75,  // [75:75] is the sub-list for extension type_name
	75,  // [75:75] is the sub-list for extension extendee
	0,   // [0:75] is the sub-list for field type_name
}

func init() { file_server_only_cmd_social_server_proto_init() }
func file_server_only_cmd_social_server_proto_init() {
	if File_server_only_cmd_social_server_proto != nil {
		return
	}
	file_server_only_redis_data_proto_init()
	file_server_only_bin_common_server_proto_init()
	file_cmd_cmd_social_proto_init()
	file_cmd_cmd_scene_proto_init()
	file_cmd_cmd_activity_proto_init()
	file_cmd_cmd_ugc_proto_init()
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_social_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAskFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerFriendListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetSocialDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetSocialDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAskAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAskAddFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDealAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDealAddFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeleteFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSetSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSetSignatureRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerFriendBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerFriendBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeverGetPS4FriendUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeverGetPS4FriendUidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayerBriefNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRemoveBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRemoveBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetRecentMpPlayerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetRecentMpPlayerListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetPlayerBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPrivateChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPrivateChatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPullPrivateChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPullRecentChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUpdateActivitySocialDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerBlessingGetFriendPicListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerBlessingGetFriendPicListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUpdateShowAvatarInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendShowAvatarInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendShowAvatarInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerReadPrivateChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendShowNameCardInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetFriendShowNameCardInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetAskFriendBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetAskFriendBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddPsnFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddPsnFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddPsnBlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddPsnBlackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFriendInfoChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlantFlowerGetFriendFlowerDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlantFlowerGetFriendFlowerDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlantFlowerGetFriendFlowerWishListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPlantFlowerGetFriendFlowerWishListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerWinterCampGetFriendItemDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerWinterCampGetFriendItemDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerWinterCampGetFriendWishListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerWinterCampGetFriendWishListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetCustomDungeonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCustomDungeon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDungeonAdventure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetCustomDungeonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSaveCustomDungeonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSaveCustomDungeonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPublishCustomDungeonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPublishCustomDungeonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRemoveCustomDungeonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRemoveCustomDungeonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerUpdateCustomDungeonSocialNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetCustomDungeonBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetCustomDungeonBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetRecommendCustomDungeonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetRecommendCustomDungeonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddFriendByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddFriendByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDelFriendByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDelFriendByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddFriendAskByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAddFriendAskByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDelFriendAskByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDelFriendAskByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCustomDungeonCacheInvalidNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCustomDungeonSocialGmNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCustomDungeonFirstLikeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetUgcBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGetUgcBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMultiGetUgcBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMultiGetUgcBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSaveUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSaveUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPublishUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPublishUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCheckUgcUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCheckUgcUpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivityGetFriendGiftDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivityGetFriendGiftDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivityGetFriendGiftWishListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivityGetFriendGiftWishListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_social_server_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayerIpRegionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_social_server_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   106,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_social_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_social_server_proto_depIdxs,
		EnumInfos:         file_server_only_cmd_social_server_proto_enumTypes,
		MessageInfos:      file_server_only_cmd_social_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_social_server_proto = out.File
	file_server_only_cmd_social_server_proto_rawDesc = nil
	file_server_only_cmd_social_server_proto_goTypes = nil
	file_server_only_cmd_social_server_proto_depIdxs = nil
}
