// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_hunting.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TakeHuntingOfferReq_CmdId int32

const (
	TakeHuntingOfferReq_NONE             TakeHuntingOfferReq_CmdId = 0
	TakeHuntingOfferReq_CMD_ID           TakeHuntingOfferReq_CmdId = 4326
	TakeHuntingOfferReq_ENET_CHANNEL_ID  TakeHuntingOfferReq_CmdId = 0
	TakeHuntingOfferReq_ENET_IS_RELIABLE TakeHuntingOfferReq_CmdId = 1
	TakeHuntingOfferReq_IS_ALLOW_CLIENT  TakeHuntingOfferReq_CmdId = 1
)

// Enum value maps for TakeHuntingOfferReq_CmdId.
var (
	TakeHuntingOfferReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4326: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	TakeHuntingOfferReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4326,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x TakeHuntingOfferReq_CmdId) Enum() *TakeHuntingOfferReq_CmdId {
	p := new(TakeHuntingOfferReq_CmdId)
	*p = x
	return p
}

func (x TakeHuntingOfferReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeHuntingOfferReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[0].Descriptor()
}

func (TakeHuntingOfferReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[0]
}

func (x TakeHuntingOfferReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeHuntingOfferReq_CmdId.Descriptor instead.
func (TakeHuntingOfferReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{1, 0}
}

type TakeHuntingOfferRsp_CmdId int32

const (
	TakeHuntingOfferRsp_NONE             TakeHuntingOfferRsp_CmdId = 0
	TakeHuntingOfferRsp_CMD_ID           TakeHuntingOfferRsp_CmdId = 4318
	TakeHuntingOfferRsp_ENET_CHANNEL_ID  TakeHuntingOfferRsp_CmdId = 0
	TakeHuntingOfferRsp_ENET_IS_RELIABLE TakeHuntingOfferRsp_CmdId = 1
)

// Enum value maps for TakeHuntingOfferRsp_CmdId.
var (
	TakeHuntingOfferRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4318: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	TakeHuntingOfferRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4318,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x TakeHuntingOfferRsp_CmdId) Enum() *TakeHuntingOfferRsp_CmdId {
	p := new(TakeHuntingOfferRsp_CmdId)
	*p = x
	return p
}

func (x TakeHuntingOfferRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeHuntingOfferRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[1].Descriptor()
}

func (TakeHuntingOfferRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[1]
}

func (x TakeHuntingOfferRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeHuntingOfferRsp_CmdId.Descriptor instead.
func (TakeHuntingOfferRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{2, 0}
}

type GetCityHuntingOfferReq_CmdId int32

const (
	GetCityHuntingOfferReq_NONE             GetCityHuntingOfferReq_CmdId = 0
	GetCityHuntingOfferReq_CMD_ID           GetCityHuntingOfferReq_CmdId = 4325
	GetCityHuntingOfferReq_ENET_CHANNEL_ID  GetCityHuntingOfferReq_CmdId = 0
	GetCityHuntingOfferReq_ENET_IS_RELIABLE GetCityHuntingOfferReq_CmdId = 1
	GetCityHuntingOfferReq_IS_ALLOW_CLIENT  GetCityHuntingOfferReq_CmdId = 1
)

// Enum value maps for GetCityHuntingOfferReq_CmdId.
var (
	GetCityHuntingOfferReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4325: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetCityHuntingOfferReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4325,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetCityHuntingOfferReq_CmdId) Enum() *GetCityHuntingOfferReq_CmdId {
	p := new(GetCityHuntingOfferReq_CmdId)
	*p = x
	return p
}

func (x GetCityHuntingOfferReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCityHuntingOfferReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[2].Descriptor()
}

func (GetCityHuntingOfferReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[2]
}

func (x GetCityHuntingOfferReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCityHuntingOfferReq_CmdId.Descriptor instead.
func (GetCityHuntingOfferReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{4, 0}
}

type GetCityHuntingOfferRsp_CmdId int32

const (
	GetCityHuntingOfferRsp_NONE             GetCityHuntingOfferRsp_CmdId = 0
	GetCityHuntingOfferRsp_CMD_ID           GetCityHuntingOfferRsp_CmdId = 4307
	GetCityHuntingOfferRsp_ENET_CHANNEL_ID  GetCityHuntingOfferRsp_CmdId = 0
	GetCityHuntingOfferRsp_ENET_IS_RELIABLE GetCityHuntingOfferRsp_CmdId = 1
)

// Enum value maps for GetCityHuntingOfferRsp_CmdId.
var (
	GetCityHuntingOfferRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4307: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetCityHuntingOfferRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4307,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetCityHuntingOfferRsp_CmdId) Enum() *GetCityHuntingOfferRsp_CmdId {
	p := new(GetCityHuntingOfferRsp_CmdId)
	*p = x
	return p
}

func (x GetCityHuntingOfferRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCityHuntingOfferRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[3].Descriptor()
}

func (GetCityHuntingOfferRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[3]
}

func (x GetCityHuntingOfferRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCityHuntingOfferRsp_CmdId.Descriptor instead.
func (GetCityHuntingOfferRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{5, 0}
}

type GetHuntingOfferRewardReq_CmdId int32

const (
	GetHuntingOfferRewardReq_NONE             GetHuntingOfferRewardReq_CmdId = 0
	GetHuntingOfferRewardReq_CMD_ID           GetHuntingOfferRewardReq_CmdId = 4302
	GetHuntingOfferRewardReq_ENET_CHANNEL_ID  GetHuntingOfferRewardReq_CmdId = 0
	GetHuntingOfferRewardReq_ENET_IS_RELIABLE GetHuntingOfferRewardReq_CmdId = 1
	GetHuntingOfferRewardReq_IS_ALLOW_CLIENT  GetHuntingOfferRewardReq_CmdId = 1
)

// Enum value maps for GetHuntingOfferRewardReq_CmdId.
var (
	GetHuntingOfferRewardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4302: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetHuntingOfferRewardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4302,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetHuntingOfferRewardReq_CmdId) Enum() *GetHuntingOfferRewardReq_CmdId {
	p := new(GetHuntingOfferRewardReq_CmdId)
	*p = x
	return p
}

func (x GetHuntingOfferRewardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetHuntingOfferRewardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[4].Descriptor()
}

func (GetHuntingOfferRewardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[4]
}

func (x GetHuntingOfferRewardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetHuntingOfferRewardReq_CmdId.Descriptor instead.
func (GetHuntingOfferRewardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{6, 0}
}

type GetHuntingOfferRewardRsp_CmdId int32

const (
	GetHuntingOfferRewardRsp_NONE             GetHuntingOfferRewardRsp_CmdId = 0
	GetHuntingOfferRewardRsp_CMD_ID           GetHuntingOfferRewardRsp_CmdId = 4331
	GetHuntingOfferRewardRsp_ENET_CHANNEL_ID  GetHuntingOfferRewardRsp_CmdId = 0
	GetHuntingOfferRewardRsp_ENET_IS_RELIABLE GetHuntingOfferRewardRsp_CmdId = 1
)

// Enum value maps for GetHuntingOfferRewardRsp_CmdId.
var (
	GetHuntingOfferRewardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4331: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetHuntingOfferRewardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4331,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetHuntingOfferRewardRsp_CmdId) Enum() *GetHuntingOfferRewardRsp_CmdId {
	p := new(GetHuntingOfferRewardRsp_CmdId)
	*p = x
	return p
}

func (x GetHuntingOfferRewardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetHuntingOfferRewardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[5].Descriptor()
}

func (GetHuntingOfferRewardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[5]
}

func (x GetHuntingOfferRewardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetHuntingOfferRewardRsp_CmdId.Descriptor instead.
func (GetHuntingOfferRewardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{7, 0}
}

type HuntingStartNotify_CmdId int32

const (
	HuntingStartNotify_NONE             HuntingStartNotify_CmdId = 0
	HuntingStartNotify_CMD_ID           HuntingStartNotify_CmdId = 4329
	HuntingStartNotify_ENET_CHANNEL_ID  HuntingStartNotify_CmdId = 0
	HuntingStartNotify_ENET_IS_RELIABLE HuntingStartNotify_CmdId = 1
)

// Enum value maps for HuntingStartNotify_CmdId.
var (
	HuntingStartNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4329: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingStartNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4329,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingStartNotify_CmdId) Enum() *HuntingStartNotify_CmdId {
	p := new(HuntingStartNotify_CmdId)
	*p = x
	return p
}

func (x HuntingStartNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingStartNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[6].Descriptor()
}

func (HuntingStartNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[6]
}

func (x HuntingStartNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingStartNotify_CmdId.Descriptor instead.
func (HuntingStartNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{8, 0}
}

type HuntingRevealClueNotify_CmdId int32

const (
	HuntingRevealClueNotify_NONE             HuntingRevealClueNotify_CmdId = 0
	HuntingRevealClueNotify_CMD_ID           HuntingRevealClueNotify_CmdId = 4322
	HuntingRevealClueNotify_ENET_CHANNEL_ID  HuntingRevealClueNotify_CmdId = 0
	HuntingRevealClueNotify_ENET_IS_RELIABLE HuntingRevealClueNotify_CmdId = 1
)

// Enum value maps for HuntingRevealClueNotify_CmdId.
var (
	HuntingRevealClueNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4322: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingRevealClueNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4322,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingRevealClueNotify_CmdId) Enum() *HuntingRevealClueNotify_CmdId {
	p := new(HuntingRevealClueNotify_CmdId)
	*p = x
	return p
}

func (x HuntingRevealClueNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingRevealClueNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[7].Descriptor()
}

func (HuntingRevealClueNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[7]
}

func (x HuntingRevealClueNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingRevealClueNotify_CmdId.Descriptor instead.
func (HuntingRevealClueNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{9, 0}
}

type HuntingRevealFinalNotify_CmdId int32

const (
	HuntingRevealFinalNotify_NONE             HuntingRevealFinalNotify_CmdId = 0
	HuntingRevealFinalNotify_CMD_ID           HuntingRevealFinalNotify_CmdId = 4344
	HuntingRevealFinalNotify_ENET_CHANNEL_ID  HuntingRevealFinalNotify_CmdId = 0
	HuntingRevealFinalNotify_ENET_IS_RELIABLE HuntingRevealFinalNotify_CmdId = 1
)

// Enum value maps for HuntingRevealFinalNotify_CmdId.
var (
	HuntingRevealFinalNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4344: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingRevealFinalNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4344,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingRevealFinalNotify_CmdId) Enum() *HuntingRevealFinalNotify_CmdId {
	p := new(HuntingRevealFinalNotify_CmdId)
	*p = x
	return p
}

func (x HuntingRevealFinalNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingRevealFinalNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[8].Descriptor()
}

func (HuntingRevealFinalNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[8]
}

func (x HuntingRevealFinalNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingRevealFinalNotify_CmdId.Descriptor instead.
func (HuntingRevealFinalNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{10, 0}
}

type HuntingSuccessNotify_CmdId int32

const (
	HuntingSuccessNotify_NONE             HuntingSuccessNotify_CmdId = 0
	HuntingSuccessNotify_CMD_ID           HuntingSuccessNotify_CmdId = 4349
	HuntingSuccessNotify_ENET_CHANNEL_ID  HuntingSuccessNotify_CmdId = 0
	HuntingSuccessNotify_ENET_IS_RELIABLE HuntingSuccessNotify_CmdId = 1
)

// Enum value maps for HuntingSuccessNotify_CmdId.
var (
	HuntingSuccessNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4349: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingSuccessNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4349,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingSuccessNotify_CmdId) Enum() *HuntingSuccessNotify_CmdId {
	p := new(HuntingSuccessNotify_CmdId)
	*p = x
	return p
}

func (x HuntingSuccessNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingSuccessNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[9].Descriptor()
}

func (HuntingSuccessNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[9]
}

func (x HuntingSuccessNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingSuccessNotify_CmdId.Descriptor instead.
func (HuntingSuccessNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{11, 0}
}

type HuntingFailNotify_CmdId int32

const (
	HuntingFailNotify_NONE             HuntingFailNotify_CmdId = 0
	HuntingFailNotify_CMD_ID           HuntingFailNotify_CmdId = 4320
	HuntingFailNotify_ENET_CHANNEL_ID  HuntingFailNotify_CmdId = 0
	HuntingFailNotify_ENET_IS_RELIABLE HuntingFailNotify_CmdId = 1
)

// Enum value maps for HuntingFailNotify_CmdId.
var (
	HuntingFailNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4320: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingFailNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4320,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingFailNotify_CmdId) Enum() *HuntingFailNotify_CmdId {
	p := new(HuntingFailNotify_CmdId)
	*p = x
	return p
}

func (x HuntingFailNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingFailNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[10].Descriptor()
}

func (HuntingFailNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[10]
}

func (x HuntingFailNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingFailNotify_CmdId.Descriptor instead.
func (HuntingFailNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{12, 0}
}

type HuntingOngoingNotify_CmdId int32

const (
	HuntingOngoingNotify_NONE             HuntingOngoingNotify_CmdId = 0
	HuntingOngoingNotify_CMD_ID           HuntingOngoingNotify_CmdId = 4345
	HuntingOngoingNotify_ENET_CHANNEL_ID  HuntingOngoingNotify_CmdId = 0
	HuntingOngoingNotify_ENET_IS_RELIABLE HuntingOngoingNotify_CmdId = 1
)

// Enum value maps for HuntingOngoingNotify_CmdId.
var (
	HuntingOngoingNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4345: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingOngoingNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4345,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingOngoingNotify_CmdId) Enum() *HuntingOngoingNotify_CmdId {
	p := new(HuntingOngoingNotify_CmdId)
	*p = x
	return p
}

func (x HuntingOngoingNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingOngoingNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[11].Descriptor()
}

func (HuntingOngoingNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[11]
}

func (x HuntingOngoingNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingOngoingNotify_CmdId.Descriptor instead.
func (HuntingOngoingNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{13, 0}
}

type HuntingGiveUpReq_CmdId int32

const (
	HuntingGiveUpReq_NONE             HuntingGiveUpReq_CmdId = 0
	HuntingGiveUpReq_CMD_ID           HuntingGiveUpReq_CmdId = 4341
	HuntingGiveUpReq_ENET_CHANNEL_ID  HuntingGiveUpReq_CmdId = 0
	HuntingGiveUpReq_ENET_IS_RELIABLE HuntingGiveUpReq_CmdId = 1
	HuntingGiveUpReq_IS_ALLOW_CLIENT  HuntingGiveUpReq_CmdId = 1
)

// Enum value maps for HuntingGiveUpReq_CmdId.
var (
	HuntingGiveUpReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4341: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	HuntingGiveUpReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4341,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x HuntingGiveUpReq_CmdId) Enum() *HuntingGiveUpReq_CmdId {
	p := new(HuntingGiveUpReq_CmdId)
	*p = x
	return p
}

func (x HuntingGiveUpReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingGiveUpReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[12].Descriptor()
}

func (HuntingGiveUpReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[12]
}

func (x HuntingGiveUpReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingGiveUpReq_CmdId.Descriptor instead.
func (HuntingGiveUpReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{14, 0}
}

type HuntingGiveUpRsp_CmdId int32

const (
	HuntingGiveUpRsp_NONE             HuntingGiveUpRsp_CmdId = 0
	HuntingGiveUpRsp_CMD_ID           HuntingGiveUpRsp_CmdId = 4342
	HuntingGiveUpRsp_ENET_CHANNEL_ID  HuntingGiveUpRsp_CmdId = 0
	HuntingGiveUpRsp_ENET_IS_RELIABLE HuntingGiveUpRsp_CmdId = 1
)

// Enum value maps for HuntingGiveUpRsp_CmdId.
var (
	HuntingGiveUpRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4342: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HuntingGiveUpRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4342,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HuntingGiveUpRsp_CmdId) Enum() *HuntingGiveUpRsp_CmdId {
	p := new(HuntingGiveUpRsp_CmdId)
	*p = x
	return p
}

func (x HuntingGiveUpRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntingGiveUpRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_hunting_proto_enumTypes[13].Descriptor()
}

func (HuntingGiveUpRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_hunting_proto_enumTypes[13]
}

func (x HuntingGiveUpRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntingGiveUpRsp_CmdId.Descriptor instead.
func (HuntingGiveUpRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{15, 0}
}

type HuntingPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshId       uint32 `protobuf:"varint,9,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
	MonsterConfigId uint32 `protobuf:"varint,4,opt,name=monster_config_id,json=monsterConfigId,proto3" json:"monster_config_id,omitempty"`
}

func (x *HuntingPair) Reset() {
	*x = HuntingPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingPair) ProtoMessage() {}

func (x *HuntingPair) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingPair.ProtoReflect.Descriptor instead.
func (*HuntingPair) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{0}
}

func (x *HuntingPair) GetRefreshId() uint32 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

func (x *HuntingPair) GetMonsterConfigId() uint32 {
	if x != nil {
		return x.MonsterConfigId
	}
	return 0
}

type TakeHuntingOfferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,14,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	CityId      uint32       `protobuf:"varint,4,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *TakeHuntingOfferReq) Reset() {
	*x = TakeHuntingOfferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeHuntingOfferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeHuntingOfferReq) ProtoMessage() {}

func (x *TakeHuntingOfferReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeHuntingOfferReq.ProtoReflect.Descriptor instead.
func (*TakeHuntingOfferReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{1}
}

func (x *TakeHuntingOfferReq) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *TakeHuntingOfferReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type TakeHuntingOfferRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,13,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	CityId      uint32       `protobuf:"varint,14,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode     int32        `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeHuntingOfferRsp) Reset() {
	*x = TakeHuntingOfferRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeHuntingOfferRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeHuntingOfferRsp) ProtoMessage() {}

func (x *TakeHuntingOfferRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeHuntingOfferRsp.ProtoReflect.Descriptor instead.
func (*TakeHuntingOfferRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{2}
}

func (x *TakeHuntingOfferRsp) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *TakeHuntingOfferRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *TakeHuntingOfferRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type HuntingOfferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair      `protobuf:"bytes,4,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	CityId      uint32            `protobuf:"varint,8,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	State       HuntingOfferState `protobuf:"varint,1,opt,name=state,proto3,enum=proto.HuntingOfferState" json:"state,omitempty"`
}

func (x *HuntingOfferData) Reset() {
	*x = HuntingOfferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingOfferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingOfferData) ProtoMessage() {}

func (x *HuntingOfferData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingOfferData.ProtoReflect.Descriptor instead.
func (*HuntingOfferData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{3}
}

func (x *HuntingOfferData) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *HuntingOfferData) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *HuntingOfferData) GetState() HuntingOfferState {
	if x != nil {
		return x.State
	}
	return HuntingOfferState_HUNTING_OFFER_STATE_NONE
}

type GetCityHuntingOfferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId uint32 `protobuf:"varint,9,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *GetCityHuntingOfferReq) Reset() {
	*x = GetCityHuntingOfferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityHuntingOfferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityHuntingOfferReq) ProtoMessage() {}

func (x *GetCityHuntingOfferReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityHuntingOfferReq.ProtoReflect.Descriptor instead.
func (*GetCityHuntingOfferReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{4}
}

func (x *GetCityHuntingOfferReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type GetCityHuntingOfferRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32               `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	HuntingOfferList     []*HuntingOfferData `protobuf:"bytes,13,rep,name=hunting_offer_list,json=huntingOfferList,proto3" json:"hunting_offer_list,omitempty"`
	CityId               uint32              `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	OngoingHuntingPair   *HuntingPair        `protobuf:"bytes,8,opt,name=ongoing_hunting_pair,json=ongoingHuntingPair,proto3" json:"ongoing_hunting_pair,omitempty"`
	CurWeekFinishedCount uint32              `protobuf:"varint,1,opt,name=cur_week_finished_count,json=curWeekFinishedCount,proto3" json:"cur_week_finished_count,omitempty"`
	NextRefreshTime      uint32              `protobuf:"varint,4,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`
}

func (x *GetCityHuntingOfferRsp) Reset() {
	*x = GetCityHuntingOfferRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityHuntingOfferRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityHuntingOfferRsp) ProtoMessage() {}

func (x *GetCityHuntingOfferRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityHuntingOfferRsp.ProtoReflect.Descriptor instead.
func (*GetCityHuntingOfferRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{5}
}

func (x *GetCityHuntingOfferRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetCityHuntingOfferRsp) GetHuntingOfferList() []*HuntingOfferData {
	if x != nil {
		return x.HuntingOfferList
	}
	return nil
}

func (x *GetCityHuntingOfferRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetCityHuntingOfferRsp) GetOngoingHuntingPair() *HuntingPair {
	if x != nil {
		return x.OngoingHuntingPair
	}
	return nil
}

func (x *GetCityHuntingOfferRsp) GetCurWeekFinishedCount() uint32 {
	if x != nil {
		return x.CurWeekFinishedCount
	}
	return 0
}

func (x *GetCityHuntingOfferRsp) GetNextRefreshTime() uint32 {
	if x != nil {
		return x.NextRefreshTime
	}
	return 0
}

type GetHuntingOfferRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId      uint32       `protobuf:"varint,6,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	HuntingPair *HuntingPair `protobuf:"bytes,4,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
}

func (x *GetHuntingOfferRewardReq) Reset() {
	*x = GetHuntingOfferRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuntingOfferRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuntingOfferRewardReq) ProtoMessage() {}

func (x *GetHuntingOfferRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuntingOfferRewardReq.ProtoReflect.Descriptor instead.
func (*GetHuntingOfferRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{6}
}

func (x *GetHuntingOfferRewardReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetHuntingOfferRewardReq) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

type GetHuntingOfferRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,14,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	CityId      uint32       `protobuf:"varint,3,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode     int32        `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *GetHuntingOfferRewardRsp) Reset() {
	*x = GetHuntingOfferRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHuntingOfferRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHuntingOfferRewardRsp) ProtoMessage() {}

func (x *GetHuntingOfferRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHuntingOfferRewardRsp.ProtoReflect.Descriptor instead.
func (*GetHuntingOfferRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{7}
}

func (x *GetHuntingOfferRewardRsp) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *GetHuntingOfferRewardRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetHuntingOfferRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type HuntingStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CluePosition *Vector      `protobuf:"bytes,4,opt,name=clue_position,json=cluePosition,proto3" json:"clue_position,omitempty"`
	FailTime     uint32       `protobuf:"varint,15,opt,name=fail_time,json=failTime,proto3" json:"fail_time,omitempty"`
	HuntingPair  *HuntingPair `protobuf:"bytes,3,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	IsFinal      bool         `protobuf:"varint,8,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
}

func (x *HuntingStartNotify) Reset() {
	*x = HuntingStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingStartNotify) ProtoMessage() {}

func (x *HuntingStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingStartNotify.ProtoReflect.Descriptor instead.
func (*HuntingStartNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{8}
}

func (x *HuntingStartNotify) GetCluePosition() *Vector {
	if x != nil {
		return x.CluePosition
	}
	return nil
}

func (x *HuntingStartNotify) GetFailTime() uint32 {
	if x != nil {
		return x.FailTime
	}
	return 0
}

func (x *HuntingStartNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *HuntingStartNotify) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type HuntingRevealClueNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishClueCount uint32       `protobuf:"varint,5,opt,name=finish_clue_count,json=finishClueCount,proto3" json:"finish_clue_count,omitempty"`
	CluePosition    *Vector      `protobuf:"bytes,4,opt,name=clue_position,json=cluePosition,proto3" json:"clue_position,omitempty"`
	HuntingPair     *HuntingPair `protobuf:"bytes,12,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	FinishedGroupId uint32       `protobuf:"varint,7,opt,name=finished_group_id,json=finishedGroupId,proto3" json:"finished_group_id,omitempty"`
}

func (x *HuntingRevealClueNotify) Reset() {
	*x = HuntingRevealClueNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingRevealClueNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingRevealClueNotify) ProtoMessage() {}

func (x *HuntingRevealClueNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingRevealClueNotify.ProtoReflect.Descriptor instead.
func (*HuntingRevealClueNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{9}
}

func (x *HuntingRevealClueNotify) GetFinishClueCount() uint32 {
	if x != nil {
		return x.FinishClueCount
	}
	return 0
}

func (x *HuntingRevealClueNotify) GetCluePosition() *Vector {
	if x != nil {
		return x.CluePosition
	}
	return nil
}

func (x *HuntingRevealClueNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *HuntingRevealClueNotify) GetFinishedGroupId() uint32 {
	if x != nil {
		return x.FinishedGroupId
	}
	return 0
}

type HuntingRevealFinalNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishedGroupId uint32       `protobuf:"varint,5,opt,name=finished_group_id,json=finishedGroupId,proto3" json:"finished_group_id,omitempty"`
	HuntingPair     *HuntingPair `protobuf:"bytes,11,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	FinalPosition   *Vector      `protobuf:"bytes,2,opt,name=final_position,json=finalPosition,proto3" json:"final_position,omitempty"`
}

func (x *HuntingRevealFinalNotify) Reset() {
	*x = HuntingRevealFinalNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingRevealFinalNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingRevealFinalNotify) ProtoMessage() {}

func (x *HuntingRevealFinalNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingRevealFinalNotify.ProtoReflect.Descriptor instead.
func (*HuntingRevealFinalNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{10}
}

func (x *HuntingRevealFinalNotify) GetFinishedGroupId() uint32 {
	if x != nil {
		return x.FinishedGroupId
	}
	return 0
}

func (x *HuntingRevealFinalNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *HuntingRevealFinalNotify) GetFinalPosition() *Vector {
	if x != nil {
		return x.FinalPosition
	}
	return nil
}

type HuntingSuccessNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,4,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
}

func (x *HuntingSuccessNotify) Reset() {
	*x = HuntingSuccessNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingSuccessNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingSuccessNotify) ProtoMessage() {}

func (x *HuntingSuccessNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingSuccessNotify.ProtoReflect.Descriptor instead.
func (*HuntingSuccessNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{11}
}

func (x *HuntingSuccessNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

type HuntingFailNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,12,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
}

func (x *HuntingFailNotify) Reset() {
	*x = HuntingFailNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingFailNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingFailNotify) ProtoMessage() {}

func (x *HuntingFailNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingFailNotify.ProtoReflect.Descriptor instead.
func (*HuntingFailNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{12}
}

func (x *HuntingFailNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

type HuntingOngoingNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair     *HuntingPair `protobuf:"bytes,15,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
	IsStarted       bool         `protobuf:"varint,8,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
	NextPosition    *Vector      `protobuf:"bytes,3,opt,name=next_position,json=nextPosition,proto3" json:"next_position,omitempty"`
	FinishClueCount uint32       `protobuf:"varint,10,opt,name=finish_clue_count,json=finishClueCount,proto3" json:"finish_clue_count,omitempty"`
	IsFinal         bool         `protobuf:"varint,14,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	FailTime        uint32       `protobuf:"varint,7,opt,name=fail_time,json=failTime,proto3" json:"fail_time,omitempty"`
}

func (x *HuntingOngoingNotify) Reset() {
	*x = HuntingOngoingNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingOngoingNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingOngoingNotify) ProtoMessage() {}

func (x *HuntingOngoingNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingOngoingNotify.ProtoReflect.Descriptor instead.
func (*HuntingOngoingNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{13}
}

func (x *HuntingOngoingNotify) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

func (x *HuntingOngoingNotify) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

func (x *HuntingOngoingNotify) GetNextPosition() *Vector {
	if x != nil {
		return x.NextPosition
	}
	return nil
}

func (x *HuntingOngoingNotify) GetFinishClueCount() uint32 {
	if x != nil {
		return x.FinishClueCount
	}
	return 0
}

func (x *HuntingOngoingNotify) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *HuntingOngoingNotify) GetFailTime() uint32 {
	if x != nil {
		return x.FailTime
	}
	return 0
}

type HuntingGiveUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HuntingPair *HuntingPair `protobuf:"bytes,1,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
}

func (x *HuntingGiveUpReq) Reset() {
	*x = HuntingGiveUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingGiveUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingGiveUpReq) ProtoMessage() {}

func (x *HuntingGiveUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingGiveUpReq.ProtoReflect.Descriptor instead.
func (*HuntingGiveUpReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{14}
}

func (x *HuntingGiveUpReq) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

type HuntingGiveUpRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32        `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	HuntingPair *HuntingPair `protobuf:"bytes,4,opt,name=hunting_pair,json=huntingPair,proto3" json:"hunting_pair,omitempty"`
}

func (x *HuntingGiveUpRsp) Reset() {
	*x = HuntingGiveUpRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_hunting_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HuntingGiveUpRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HuntingGiveUpRsp) ProtoMessage() {}

func (x *HuntingGiveUpRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_hunting_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HuntingGiveUpRsp.ProtoReflect.Descriptor instead.
func (*HuntingGiveUpRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_hunting_proto_rawDescGZIP(), []int{15}
}

func (x *HuntingGiveUpRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *HuntingGiveUpRsp) GetHuntingPair() *HuntingPair {
	if x != nil {
		return x.HuntingPair
	}
	return nil
}

var File_cmd_cmd_hunting_proto protoreflect.FileDescriptor

var file_cmd_cmd_hunting_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x0b,
	0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x6b, 0x65, 0x48,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x35,
	0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe6, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x6b, 0x65, 0x48, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xde, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x79, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe5, 0x21, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x8a, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x48, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x68, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x14, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x5f, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x12, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x63,
	0x75, 0x72, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x75,
	0x72, 0x57, 0x65, 0x65, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd3, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xce, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xce, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd3,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x68,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xeb, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x86, 0x02, 0x0a, 0x12, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x0a, 0x0d, 0x63,
	0x6c, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0c,
	0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe9, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xab, 0x02,
	0x0a, 0x17, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x43,
	0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x63, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6c, 0x75, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x63, 0x6c, 0x75,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe2, 0x21, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x82, 0x02, 0x0a, 0x18,
	0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b,
	0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x34, 0x0a, 0x0e, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf8,
	0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x9c, 0x01, 0x0a, 0x14, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfd, 0x21,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x99, 0x01, 0x0a, 0x11, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe0, 0x21, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd3, 0x02, 0x0a, 0x14,
	0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b,
	0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x43, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xf9, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x69, 0x76,
	0x65, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf5, 0x21, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x69, 0x76,
	0x65, 0x55, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x35, 0x0a, 0x0c, 0x68, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x68, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xf6, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_hunting_proto_rawDescOnce sync.Once
	file_cmd_cmd_hunting_proto_rawDescData = file_cmd_cmd_hunting_proto_rawDesc
)

func file_cmd_cmd_hunting_proto_rawDescGZIP() []byte {
	file_cmd_cmd_hunting_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_hunting_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_hunting_proto_rawDescData)
	})
	return file_cmd_cmd_hunting_proto_rawDescData
}

var file_cmd_cmd_hunting_proto_enumTypes = make([]protoimpl.EnumInfo, 14)
var file_cmd_cmd_hunting_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_cmd_cmd_hunting_proto_goTypes = []interface{}{
	(TakeHuntingOfferReq_CmdId)(0),      // 0: proto.TakeHuntingOfferReq.CmdId
	(TakeHuntingOfferRsp_CmdId)(0),      // 1: proto.TakeHuntingOfferRsp.CmdId
	(GetCityHuntingOfferReq_CmdId)(0),   // 2: proto.GetCityHuntingOfferReq.CmdId
	(GetCityHuntingOfferRsp_CmdId)(0),   // 3: proto.GetCityHuntingOfferRsp.CmdId
	(GetHuntingOfferRewardReq_CmdId)(0), // 4: proto.GetHuntingOfferRewardReq.CmdId
	(GetHuntingOfferRewardRsp_CmdId)(0), // 5: proto.GetHuntingOfferRewardRsp.CmdId
	(HuntingStartNotify_CmdId)(0),       // 6: proto.HuntingStartNotify.CmdId
	(HuntingRevealClueNotify_CmdId)(0),  // 7: proto.HuntingRevealClueNotify.CmdId
	(HuntingRevealFinalNotify_CmdId)(0), // 8: proto.HuntingRevealFinalNotify.CmdId
	(HuntingSuccessNotify_CmdId)(0),     // 9: proto.HuntingSuccessNotify.CmdId
	(HuntingFailNotify_CmdId)(0),        // 10: proto.HuntingFailNotify.CmdId
	(HuntingOngoingNotify_CmdId)(0),     // 11: proto.HuntingOngoingNotify.CmdId
	(HuntingGiveUpReq_CmdId)(0),         // 12: proto.HuntingGiveUpReq.CmdId
	(HuntingGiveUpRsp_CmdId)(0),         // 13: proto.HuntingGiveUpRsp.CmdId
	(*HuntingPair)(nil),                 // 14: proto.HuntingPair
	(*TakeHuntingOfferReq)(nil),         // 15: proto.TakeHuntingOfferReq
	(*TakeHuntingOfferRsp)(nil),         // 16: proto.TakeHuntingOfferRsp
	(*HuntingOfferData)(nil),            // 17: proto.HuntingOfferData
	(*GetCityHuntingOfferReq)(nil),      // 18: proto.GetCityHuntingOfferReq
	(*GetCityHuntingOfferRsp)(nil),      // 19: proto.GetCityHuntingOfferRsp
	(*GetHuntingOfferRewardReq)(nil),    // 20: proto.GetHuntingOfferRewardReq
	(*GetHuntingOfferRewardRsp)(nil),    // 21: proto.GetHuntingOfferRewardRsp
	(*HuntingStartNotify)(nil),          // 22: proto.HuntingStartNotify
	(*HuntingRevealClueNotify)(nil),     // 23: proto.HuntingRevealClueNotify
	(*HuntingRevealFinalNotify)(nil),    // 24: proto.HuntingRevealFinalNotify
	(*HuntingSuccessNotify)(nil),        // 25: proto.HuntingSuccessNotify
	(*HuntingFailNotify)(nil),           // 26: proto.HuntingFailNotify
	(*HuntingOngoingNotify)(nil),        // 27: proto.HuntingOngoingNotify
	(*HuntingGiveUpReq)(nil),            // 28: proto.HuntingGiveUpReq
	(*HuntingGiveUpRsp)(nil),            // 29: proto.HuntingGiveUpRsp
	(HuntingOfferState)(0),              // 30: proto.HuntingOfferState
	(*Vector)(nil),                      // 31: proto.Vector
}
var file_cmd_cmd_hunting_proto_depIdxs = []int32{
	14, // 0: proto.TakeHuntingOfferReq.hunting_pair:type_name -> proto.HuntingPair
	14, // 1: proto.TakeHuntingOfferRsp.hunting_pair:type_name -> proto.HuntingPair
	14, // 2: proto.HuntingOfferData.hunting_pair:type_name -> proto.HuntingPair
	30, // 3: proto.HuntingOfferData.state:type_name -> proto.HuntingOfferState
	17, // 4: proto.GetCityHuntingOfferRsp.hunting_offer_list:type_name -> proto.HuntingOfferData
	14, // 5: proto.GetCityHuntingOfferRsp.ongoing_hunting_pair:type_name -> proto.HuntingPair
	14, // 6: proto.GetHuntingOfferRewardReq.hunting_pair:type_name -> proto.HuntingPair
	14, // 7: proto.GetHuntingOfferRewardRsp.hunting_pair:type_name -> proto.HuntingPair
	31, // 8: proto.HuntingStartNotify.clue_position:type_name -> proto.Vector
	14, // 9: proto.HuntingStartNotify.hunting_pair:type_name -> proto.HuntingPair
	31, // 10: proto.HuntingRevealClueNotify.clue_position:type_name -> proto.Vector
	14, // 11: proto.HuntingRevealClueNotify.hunting_pair:type_name -> proto.HuntingPair
	14, // 12: proto.HuntingRevealFinalNotify.hunting_pair:type_name -> proto.HuntingPair
	31, // 13: proto.HuntingRevealFinalNotify.final_position:type_name -> proto.Vector
	14, // 14: proto.HuntingSuccessNotify.hunting_pair:type_name -> proto.HuntingPair
	14, // 15: proto.HuntingFailNotify.hunting_pair:type_name -> proto.HuntingPair
	14, // 16: proto.HuntingOngoingNotify.hunting_pair:type_name -> proto.HuntingPair
	31, // 17: proto.HuntingOngoingNotify.next_position:type_name -> proto.Vector
	14, // 18: proto.HuntingGiveUpReq.hunting_pair:type_name -> proto.HuntingPair
	14, // 19: proto.HuntingGiveUpRsp.hunting_pair:type_name -> proto.HuntingPair
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cmd_cmd_hunting_proto_init() }
func file_cmd_cmd_hunting_proto_init() {
	if File_cmd_cmd_hunting_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_hunting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeHuntingOfferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeHuntingOfferRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingOfferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityHuntingOfferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityHuntingOfferRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuntingOfferRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHuntingOfferRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingRevealClueNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingRevealFinalNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingSuccessNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingFailNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingOngoingNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingGiveUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_hunting_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HuntingGiveUpRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_hunting_proto_rawDesc,
			NumEnums:      14,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_hunting_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_hunting_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_hunting_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_hunting_proto_msgTypes,
	}.Build()
	File_cmd_cmd_hunting_proto = out.File
	file_cmd_cmd_hunting_proto_rawDesc = nil
	file_cmd_cmd_hunting_proto_goTypes = nil
	file_cmd_cmd_hunting_proto_depIdxs = nil
}
