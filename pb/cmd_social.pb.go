// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_social.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendOnlineState int32

const (
	FriendOnlineState_FREIEND_DISCONNECT FriendOnlineState = 0
	FriendOnlineState_FRIEND_ONLINE      FriendOnlineState = 1
)

// Enum value maps for FriendOnlineState.
var (
	FriendOnlineState_name = map[int32]string{
		0: "FREIEND_DISCONNECT",
		1: "FRIEND_ONLINE",
	}
	FriendOnlineState_value = map[string]int32{
		"FREIEND_DISCONNECT": 0,
		"FRIEND_ONLINE":      1,
	}
)

func (x FriendOnlineState) Enum() *FriendOnlineState {
	p := new(FriendOnlineState)
	*p = x
	return p
}

func (x FriendOnlineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendOnlineState) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[0].Descriptor()
}

func (FriendOnlineState) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[0]
}

func (x FriendOnlineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendOnlineState.Descriptor instead.
func (FriendOnlineState) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{0}
}

type DealAddFriendResultType int32

const (
	DealAddFriendResultType_DEAL_ADD_FRIEND_REJECT DealAddFriendResultType = 0
	DealAddFriendResultType_DEAL_ADD_FRIEND_ACCEPT DealAddFriendResultType = 1
)

// Enum value maps for DealAddFriendResultType.
var (
	DealAddFriendResultType_name = map[int32]string{
		0: "DEAL_ADD_FRIEND_REJECT",
		1: "DEAL_ADD_FRIEND_ACCEPT",
	}
	DealAddFriendResultType_value = map[string]int32{
		"DEAL_ADD_FRIEND_REJECT": 0,
		"DEAL_ADD_FRIEND_ACCEPT": 1,
	}
)

func (x DealAddFriendResultType) Enum() *DealAddFriendResultType {
	p := new(DealAddFriendResultType)
	*p = x
	return p
}

func (x DealAddFriendResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DealAddFriendResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[1].Descriptor()
}

func (DealAddFriendResultType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[1]
}

func (x DealAddFriendResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DealAddFriendResultType.Descriptor instead.
func (DealAddFriendResultType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{1}
}

type GetPlayerFriendListReq_CmdId int32

const (
	GetPlayerFriendListReq_NONE             GetPlayerFriendListReq_CmdId = 0
	GetPlayerFriendListReq_CMD_ID           GetPlayerFriendListReq_CmdId = 4072
	GetPlayerFriendListReq_ENET_CHANNEL_ID  GetPlayerFriendListReq_CmdId = 0
	GetPlayerFriendListReq_ENET_IS_RELIABLE GetPlayerFriendListReq_CmdId = 1
	GetPlayerFriendListReq_IS_ALLOW_CLIENT  GetPlayerFriendListReq_CmdId = 1
)

// Enum value maps for GetPlayerFriendListReq_CmdId.
var (
	GetPlayerFriendListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4072: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetPlayerFriendListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4072,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetPlayerFriendListReq_CmdId) Enum() *GetPlayerFriendListReq_CmdId {
	p := new(GetPlayerFriendListReq_CmdId)
	*p = x
	return p
}

func (x GetPlayerFriendListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerFriendListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[2].Descriptor()
}

func (GetPlayerFriendListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[2]
}

func (x GetPlayerFriendListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerFriendListReq_CmdId.Descriptor instead.
func (GetPlayerFriendListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{4, 0}
}

type GetPlayerFriendListRsp_CmdId int32

const (
	GetPlayerFriendListRsp_NONE             GetPlayerFriendListRsp_CmdId = 0
	GetPlayerFriendListRsp_CMD_ID           GetPlayerFriendListRsp_CmdId = 4098
	GetPlayerFriendListRsp_ENET_CHANNEL_ID  GetPlayerFriendListRsp_CmdId = 0
	GetPlayerFriendListRsp_ENET_IS_RELIABLE GetPlayerFriendListRsp_CmdId = 1
	GetPlayerFriendListRsp_IS_ALLOW_CLIENT  GetPlayerFriendListRsp_CmdId = 1
)

// Enum value maps for GetPlayerFriendListRsp_CmdId.
var (
	GetPlayerFriendListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4098: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetPlayerFriendListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4098,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetPlayerFriendListRsp_CmdId) Enum() *GetPlayerFriendListRsp_CmdId {
	p := new(GetPlayerFriendListRsp_CmdId)
	*p = x
	return p
}

func (x GetPlayerFriendListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerFriendListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[3].Descriptor()
}

func (GetPlayerFriendListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[3]
}

func (x GetPlayerFriendListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerFriendListRsp_CmdId.Descriptor instead.
func (GetPlayerFriendListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{5, 0}
}

type AskAddFriendReq_CmdId int32

const (
	AskAddFriendReq_NONE             AskAddFriendReq_CmdId = 0
	AskAddFriendReq_CMD_ID           AskAddFriendReq_CmdId = 4007
	AskAddFriendReq_ENET_CHANNEL_ID  AskAddFriendReq_CmdId = 0
	AskAddFriendReq_ENET_IS_RELIABLE AskAddFriendReq_CmdId = 1
	AskAddFriendReq_IS_ALLOW_CLIENT  AskAddFriendReq_CmdId = 1
)

// Enum value maps for AskAddFriendReq_CmdId.
var (
	AskAddFriendReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4007: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AskAddFriendReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4007,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AskAddFriendReq_CmdId) Enum() *AskAddFriendReq_CmdId {
	p := new(AskAddFriendReq_CmdId)
	*p = x
	return p
}

func (x AskAddFriendReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AskAddFriendReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[4].Descriptor()
}

func (AskAddFriendReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[4]
}

func (x AskAddFriendReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AskAddFriendReq_CmdId.Descriptor instead.
func (AskAddFriendReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{6, 0}
}

type AskAddFriendRsp_CmdId int32

const (
	AskAddFriendRsp_NONE             AskAddFriendRsp_CmdId = 0
	AskAddFriendRsp_CMD_ID           AskAddFriendRsp_CmdId = 4021
	AskAddFriendRsp_ENET_CHANNEL_ID  AskAddFriendRsp_CmdId = 0
	AskAddFriendRsp_ENET_IS_RELIABLE AskAddFriendRsp_CmdId = 1
	AskAddFriendRsp_IS_ALLOW_CLIENT  AskAddFriendRsp_CmdId = 1
)

// Enum value maps for AskAddFriendRsp_CmdId.
var (
	AskAddFriendRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4021: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AskAddFriendRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4021,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AskAddFriendRsp_CmdId) Enum() *AskAddFriendRsp_CmdId {
	p := new(AskAddFriendRsp_CmdId)
	*p = x
	return p
}

func (x AskAddFriendRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AskAddFriendRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[5].Descriptor()
}

func (AskAddFriendRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[5]
}

func (x AskAddFriendRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AskAddFriendRsp_CmdId.Descriptor instead.
func (AskAddFriendRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{7, 0}
}

type DealAddFriendReq_CmdId int32

const (
	DealAddFriendReq_NONE             DealAddFriendReq_CmdId = 0
	DealAddFriendReq_CMD_ID           DealAddFriendReq_CmdId = 4003
	DealAddFriendReq_ENET_CHANNEL_ID  DealAddFriendReq_CmdId = 0
	DealAddFriendReq_ENET_IS_RELIABLE DealAddFriendReq_CmdId = 1
	DealAddFriendReq_IS_ALLOW_CLIENT  DealAddFriendReq_CmdId = 1
)

// Enum value maps for DealAddFriendReq_CmdId.
var (
	DealAddFriendReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4003: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DealAddFriendReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4003,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DealAddFriendReq_CmdId) Enum() *DealAddFriendReq_CmdId {
	p := new(DealAddFriendReq_CmdId)
	*p = x
	return p
}

func (x DealAddFriendReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DealAddFriendReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[6].Descriptor()
}

func (DealAddFriendReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[6]
}

func (x DealAddFriendReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DealAddFriendReq_CmdId.Descriptor instead.
func (DealAddFriendReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{8, 0}
}

type DealAddFriendRsp_CmdId int32

const (
	DealAddFriendRsp_NONE             DealAddFriendRsp_CmdId = 0
	DealAddFriendRsp_CMD_ID           DealAddFriendRsp_CmdId = 4090
	DealAddFriendRsp_ENET_CHANNEL_ID  DealAddFriendRsp_CmdId = 0
	DealAddFriendRsp_ENET_IS_RELIABLE DealAddFriendRsp_CmdId = 1
	DealAddFriendRsp_IS_ALLOW_CLIENT  DealAddFriendRsp_CmdId = 1
)

// Enum value maps for DealAddFriendRsp_CmdId.
var (
	DealAddFriendRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4090: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DealAddFriendRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4090,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DealAddFriendRsp_CmdId) Enum() *DealAddFriendRsp_CmdId {
	p := new(DealAddFriendRsp_CmdId)
	*p = x
	return p
}

func (x DealAddFriendRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DealAddFriendRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[7].Descriptor()
}

func (DealAddFriendRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[7]
}

func (x DealAddFriendRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DealAddFriendRsp_CmdId.Descriptor instead.
func (DealAddFriendRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{9, 0}
}

type GetPlayerSocialDetailReq_CmdId int32

const (
	GetPlayerSocialDetailReq_NONE             GetPlayerSocialDetailReq_CmdId = 0
	GetPlayerSocialDetailReq_CMD_ID           GetPlayerSocialDetailReq_CmdId = 4073
	GetPlayerSocialDetailReq_ENET_CHANNEL_ID  GetPlayerSocialDetailReq_CmdId = 0
	GetPlayerSocialDetailReq_ENET_IS_RELIABLE GetPlayerSocialDetailReq_CmdId = 1
	GetPlayerSocialDetailReq_IS_ALLOW_CLIENT  GetPlayerSocialDetailReq_CmdId = 1
)

// Enum value maps for GetPlayerSocialDetailReq_CmdId.
var (
	GetPlayerSocialDetailReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4073: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetPlayerSocialDetailReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4073,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetPlayerSocialDetailReq_CmdId) Enum() *GetPlayerSocialDetailReq_CmdId {
	p := new(GetPlayerSocialDetailReq_CmdId)
	*p = x
	return p
}

func (x GetPlayerSocialDetailReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerSocialDetailReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[8].Descriptor()
}

func (GetPlayerSocialDetailReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[8]
}

func (x GetPlayerSocialDetailReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerSocialDetailReq_CmdId.Descriptor instead.
func (GetPlayerSocialDetailReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{10, 0}
}

type GetPlayerSocialDetailRsp_CmdId int32

const (
	GetPlayerSocialDetailRsp_NONE             GetPlayerSocialDetailRsp_CmdId = 0
	GetPlayerSocialDetailRsp_CMD_ID           GetPlayerSocialDetailRsp_CmdId = 4099
	GetPlayerSocialDetailRsp_ENET_CHANNEL_ID  GetPlayerSocialDetailRsp_CmdId = 0
	GetPlayerSocialDetailRsp_ENET_IS_RELIABLE GetPlayerSocialDetailRsp_CmdId = 1
)

// Enum value maps for GetPlayerSocialDetailRsp_CmdId.
var (
	GetPlayerSocialDetailRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4099: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetPlayerSocialDetailRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4099,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetPlayerSocialDetailRsp_CmdId) Enum() *GetPlayerSocialDetailRsp_CmdId {
	p := new(GetPlayerSocialDetailRsp_CmdId)
	*p = x
	return p
}

func (x GetPlayerSocialDetailRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerSocialDetailRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[9].Descriptor()
}

func (GetPlayerSocialDetailRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[9]
}

func (x GetPlayerSocialDetailRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerSocialDetailRsp_CmdId.Descriptor instead.
func (GetPlayerSocialDetailRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{11, 0}
}

type DeleteFriendReq_CmdId int32

const (
	DeleteFriendReq_NONE             DeleteFriendReq_CmdId = 0
	DeleteFriendReq_CMD_ID           DeleteFriendReq_CmdId = 4031
	DeleteFriendReq_ENET_CHANNEL_ID  DeleteFriendReq_CmdId = 0
	DeleteFriendReq_ENET_IS_RELIABLE DeleteFriendReq_CmdId = 1
	DeleteFriendReq_IS_ALLOW_CLIENT  DeleteFriendReq_CmdId = 1
)

// Enum value maps for DeleteFriendReq_CmdId.
var (
	DeleteFriendReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4031: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DeleteFriendReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4031,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DeleteFriendReq_CmdId) Enum() *DeleteFriendReq_CmdId {
	p := new(DeleteFriendReq_CmdId)
	*p = x
	return p
}

func (x DeleteFriendReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteFriendReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[10].Descriptor()
}

func (DeleteFriendReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[10]
}

func (x DeleteFriendReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteFriendReq_CmdId.Descriptor instead.
func (DeleteFriendReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{12, 0}
}

type DeleteFriendRsp_CmdId int32

const (
	DeleteFriendRsp_NONE             DeleteFriendRsp_CmdId = 0
	DeleteFriendRsp_CMD_ID           DeleteFriendRsp_CmdId = 4075
	DeleteFriendRsp_ENET_CHANNEL_ID  DeleteFriendRsp_CmdId = 0
	DeleteFriendRsp_ENET_IS_RELIABLE DeleteFriendRsp_CmdId = 1
)

// Enum value maps for DeleteFriendRsp_CmdId.
var (
	DeleteFriendRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4075: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DeleteFriendRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4075,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DeleteFriendRsp_CmdId) Enum() *DeleteFriendRsp_CmdId {
	p := new(DeleteFriendRsp_CmdId)
	*p = x
	return p
}

func (x DeleteFriendRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteFriendRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[11].Descriptor()
}

func (DeleteFriendRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[11]
}

func (x DeleteFriendRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteFriendRsp_CmdId.Descriptor instead.
func (DeleteFriendRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{13, 0}
}

type SetPlayerBirthdayReq_CmdId int32

const (
	SetPlayerBirthdayReq_NONE             SetPlayerBirthdayReq_CmdId = 0
	SetPlayerBirthdayReq_CMD_ID           SetPlayerBirthdayReq_CmdId = 4048
	SetPlayerBirthdayReq_ENET_CHANNEL_ID  SetPlayerBirthdayReq_CmdId = 0
	SetPlayerBirthdayReq_ENET_IS_RELIABLE SetPlayerBirthdayReq_CmdId = 1
	SetPlayerBirthdayReq_IS_ALLOW_CLIENT  SetPlayerBirthdayReq_CmdId = 1
)

// Enum value maps for SetPlayerBirthdayReq_CmdId.
var (
	SetPlayerBirthdayReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4048: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetPlayerBirthdayReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4048,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetPlayerBirthdayReq_CmdId) Enum() *SetPlayerBirthdayReq_CmdId {
	p := new(SetPlayerBirthdayReq_CmdId)
	*p = x
	return p
}

func (x SetPlayerBirthdayReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerBirthdayReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[12].Descriptor()
}

func (SetPlayerBirthdayReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[12]
}

func (x SetPlayerBirthdayReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerBirthdayReq_CmdId.Descriptor instead.
func (SetPlayerBirthdayReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{14, 0}
}

type SetPlayerBirthdayRsp_CmdId int32

const (
	SetPlayerBirthdayRsp_NONE             SetPlayerBirthdayRsp_CmdId = 0
	SetPlayerBirthdayRsp_CMD_ID           SetPlayerBirthdayRsp_CmdId = 4097
	SetPlayerBirthdayRsp_ENET_CHANNEL_ID  SetPlayerBirthdayRsp_CmdId = 0
	SetPlayerBirthdayRsp_ENET_IS_RELIABLE SetPlayerBirthdayRsp_CmdId = 1
)

// Enum value maps for SetPlayerBirthdayRsp_CmdId.
var (
	SetPlayerBirthdayRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4097: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetPlayerBirthdayRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4097,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetPlayerBirthdayRsp_CmdId) Enum() *SetPlayerBirthdayRsp_CmdId {
	p := new(SetPlayerBirthdayRsp_CmdId)
	*p = x
	return p
}

func (x SetPlayerBirthdayRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerBirthdayRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[13].Descriptor()
}

func (SetPlayerBirthdayRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[13]
}

func (x SetPlayerBirthdayRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerBirthdayRsp_CmdId.Descriptor instead.
func (SetPlayerBirthdayRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{15, 0}
}

type SetPlayerSignatureReq_CmdId int32

const (
	SetPlayerSignatureReq_NONE             SetPlayerSignatureReq_CmdId = 0
	SetPlayerSignatureReq_CMD_ID           SetPlayerSignatureReq_CmdId = 4081
	SetPlayerSignatureReq_ENET_CHANNEL_ID  SetPlayerSignatureReq_CmdId = 0
	SetPlayerSignatureReq_ENET_IS_RELIABLE SetPlayerSignatureReq_CmdId = 1
	SetPlayerSignatureReq_IS_ALLOW_CLIENT  SetPlayerSignatureReq_CmdId = 1
)

// Enum value maps for SetPlayerSignatureReq_CmdId.
var (
	SetPlayerSignatureReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4081: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetPlayerSignatureReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4081,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetPlayerSignatureReq_CmdId) Enum() *SetPlayerSignatureReq_CmdId {
	p := new(SetPlayerSignatureReq_CmdId)
	*p = x
	return p
}

func (x SetPlayerSignatureReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerSignatureReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[14].Descriptor()
}

func (SetPlayerSignatureReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[14]
}

func (x SetPlayerSignatureReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerSignatureReq_CmdId.Descriptor instead.
func (SetPlayerSignatureReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{16, 0}
}

type SetPlayerSignatureRsp_CmdId int32

const (
	SetPlayerSignatureRsp_NONE             SetPlayerSignatureRsp_CmdId = 0
	SetPlayerSignatureRsp_CMD_ID           SetPlayerSignatureRsp_CmdId = 4005
	SetPlayerSignatureRsp_ENET_CHANNEL_ID  SetPlayerSignatureRsp_CmdId = 0
	SetPlayerSignatureRsp_ENET_IS_RELIABLE SetPlayerSignatureRsp_CmdId = 1
)

// Enum value maps for SetPlayerSignatureRsp_CmdId.
var (
	SetPlayerSignatureRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4005: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetPlayerSignatureRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4005,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetPlayerSignatureRsp_CmdId) Enum() *SetPlayerSignatureRsp_CmdId {
	p := new(SetPlayerSignatureRsp_CmdId)
	*p = x
	return p
}

func (x SetPlayerSignatureRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerSignatureRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[15].Descriptor()
}

func (SetPlayerSignatureRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[15]
}

func (x SetPlayerSignatureRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerSignatureRsp_CmdId.Descriptor instead.
func (SetPlayerSignatureRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{17, 0}
}

type SetPlayerHeadImageReq_CmdId int32

const (
	SetPlayerHeadImageReq_NONE             SetPlayerHeadImageReq_CmdId = 0
	SetPlayerHeadImageReq_CMD_ID           SetPlayerHeadImageReq_CmdId = 4082
	SetPlayerHeadImageReq_ENET_CHANNEL_ID  SetPlayerHeadImageReq_CmdId = 0
	SetPlayerHeadImageReq_ENET_IS_RELIABLE SetPlayerHeadImageReq_CmdId = 1
	SetPlayerHeadImageReq_IS_ALLOW_CLIENT  SetPlayerHeadImageReq_CmdId = 1
)

// Enum value maps for SetPlayerHeadImageReq_CmdId.
var (
	SetPlayerHeadImageReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4082: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetPlayerHeadImageReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4082,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetPlayerHeadImageReq_CmdId) Enum() *SetPlayerHeadImageReq_CmdId {
	p := new(SetPlayerHeadImageReq_CmdId)
	*p = x
	return p
}

func (x SetPlayerHeadImageReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerHeadImageReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[16].Descriptor()
}

func (SetPlayerHeadImageReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[16]
}

func (x SetPlayerHeadImageReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerHeadImageReq_CmdId.Descriptor instead.
func (SetPlayerHeadImageReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{18, 0}
}

type SetPlayerHeadImageRsp_CmdId int32

const (
	SetPlayerHeadImageRsp_NONE             SetPlayerHeadImageRsp_CmdId = 0
	SetPlayerHeadImageRsp_CMD_ID           SetPlayerHeadImageRsp_CmdId = 4047
	SetPlayerHeadImageRsp_ENET_CHANNEL_ID  SetPlayerHeadImageRsp_CmdId = 0
	SetPlayerHeadImageRsp_ENET_IS_RELIABLE SetPlayerHeadImageRsp_CmdId = 1
)

// Enum value maps for SetPlayerHeadImageRsp_CmdId.
var (
	SetPlayerHeadImageRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4047: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetPlayerHeadImageRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4047,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetPlayerHeadImageRsp_CmdId) Enum() *SetPlayerHeadImageRsp_CmdId {
	p := new(SetPlayerHeadImageRsp_CmdId)
	*p = x
	return p
}

func (x SetPlayerHeadImageRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPlayerHeadImageRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[17].Descriptor()
}

func (SetPlayerHeadImageRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[17]
}

func (x SetPlayerHeadImageRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPlayerHeadImageRsp_CmdId.Descriptor instead.
func (SetPlayerHeadImageRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{19, 0}
}

type UpdatePS4FriendListNotify_CmdId int32

const (
	UpdatePS4FriendListNotify_NONE             UpdatePS4FriendListNotify_CmdId = 0
	UpdatePS4FriendListNotify_CMD_ID           UpdatePS4FriendListNotify_CmdId = 4039
	UpdatePS4FriendListNotify_ENET_CHANNEL_ID  UpdatePS4FriendListNotify_CmdId = 0
	UpdatePS4FriendListNotify_ENET_IS_RELIABLE UpdatePS4FriendListNotify_CmdId = 1
	UpdatePS4FriendListNotify_IS_ALLOW_CLIENT  UpdatePS4FriendListNotify_CmdId = 1
)

// Enum value maps for UpdatePS4FriendListNotify_CmdId.
var (
	UpdatePS4FriendListNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4039: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePS4FriendListNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4039,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePS4FriendListNotify_CmdId) Enum() *UpdatePS4FriendListNotify_CmdId {
	p := new(UpdatePS4FriendListNotify_CmdId)
	*p = x
	return p
}

func (x UpdatePS4FriendListNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePS4FriendListNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[18].Descriptor()
}

func (UpdatePS4FriendListNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[18]
}

func (x UpdatePS4FriendListNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePS4FriendListNotify_CmdId.Descriptor instead.
func (UpdatePS4FriendListNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{20, 0}
}

type DeleteFriendNotify_CmdId int32

const (
	DeleteFriendNotify_NONE             DeleteFriendNotify_CmdId = 0
	DeleteFriendNotify_CMD_ID           DeleteFriendNotify_CmdId = 4053
	DeleteFriendNotify_ENET_CHANNEL_ID  DeleteFriendNotify_CmdId = 0
	DeleteFriendNotify_ENET_IS_RELIABLE DeleteFriendNotify_CmdId = 1
)

// Enum value maps for DeleteFriendNotify_CmdId.
var (
	DeleteFriendNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4053: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DeleteFriendNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4053,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DeleteFriendNotify_CmdId) Enum() *DeleteFriendNotify_CmdId {
	p := new(DeleteFriendNotify_CmdId)
	*p = x
	return p
}

func (x DeleteFriendNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteFriendNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[19].Descriptor()
}

func (DeleteFriendNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[19]
}

func (x DeleteFriendNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteFriendNotify_CmdId.Descriptor instead.
func (DeleteFriendNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{21, 0}
}

type AddFriendNotify_CmdId int32

const (
	AddFriendNotify_NONE             AddFriendNotify_CmdId = 0
	AddFriendNotify_CMD_ID           AddFriendNotify_CmdId = 4022
	AddFriendNotify_ENET_CHANNEL_ID  AddFriendNotify_CmdId = 0
	AddFriendNotify_ENET_IS_RELIABLE AddFriendNotify_CmdId = 1
)

// Enum value maps for AddFriendNotify_CmdId.
var (
	AddFriendNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4022: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AddFriendNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4022,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AddFriendNotify_CmdId) Enum() *AddFriendNotify_CmdId {
	p := new(AddFriendNotify_CmdId)
	*p = x
	return p
}

func (x AddFriendNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddFriendNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[20].Descriptor()
}

func (AddFriendNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[20]
}

func (x AddFriendNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddFriendNotify_CmdId.Descriptor instead.
func (AddFriendNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{22, 0}
}

type AskAddFriendNotify_CmdId int32

const (
	AskAddFriendNotify_NONE             AskAddFriendNotify_CmdId = 0
	AskAddFriendNotify_CMD_ID           AskAddFriendNotify_CmdId = 4065
	AskAddFriendNotify_ENET_CHANNEL_ID  AskAddFriendNotify_CmdId = 0
	AskAddFriendNotify_ENET_IS_RELIABLE AskAddFriendNotify_CmdId = 1
)

// Enum value maps for AskAddFriendNotify_CmdId.
var (
	AskAddFriendNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4065: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AskAddFriendNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4065,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AskAddFriendNotify_CmdId) Enum() *AskAddFriendNotify_CmdId {
	p := new(AskAddFriendNotify_CmdId)
	*p = x
	return p
}

func (x AskAddFriendNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AskAddFriendNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[21].Descriptor()
}

func (AskAddFriendNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[21]
}

func (x AskAddFriendNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AskAddFriendNotify_CmdId.Descriptor instead.
func (AskAddFriendNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{23, 0}
}

type SetNameCardReq_CmdId int32

const (
	SetNameCardReq_NONE             SetNameCardReq_CmdId = 0
	SetNameCardReq_CMD_ID           SetNameCardReq_CmdId = 4004
	SetNameCardReq_ENET_CHANNEL_ID  SetNameCardReq_CmdId = 0
	SetNameCardReq_ENET_IS_RELIABLE SetNameCardReq_CmdId = 1
	SetNameCardReq_IS_ALLOW_CLIENT  SetNameCardReq_CmdId = 1
)

// Enum value maps for SetNameCardReq_CmdId.
var (
	SetNameCardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4004: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetNameCardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4004,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetNameCardReq_CmdId) Enum() *SetNameCardReq_CmdId {
	p := new(SetNameCardReq_CmdId)
	*p = x
	return p
}

func (x SetNameCardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetNameCardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[22].Descriptor()
}

func (SetNameCardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[22]
}

func (x SetNameCardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetNameCardReq_CmdId.Descriptor instead.
func (SetNameCardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{24, 0}
}

type SetNameCardRsp_CmdId int32

const (
	SetNameCardRsp_NONE             SetNameCardRsp_CmdId = 0
	SetNameCardRsp_CMD_ID           SetNameCardRsp_CmdId = 4093
	SetNameCardRsp_ENET_CHANNEL_ID  SetNameCardRsp_CmdId = 0
	SetNameCardRsp_ENET_IS_RELIABLE SetNameCardRsp_CmdId = 1
	SetNameCardRsp_IS_ALLOW_CLIENT  SetNameCardRsp_CmdId = 1
)

// Enum value maps for SetNameCardRsp_CmdId.
var (
	SetNameCardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4093: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetNameCardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4093,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetNameCardRsp_CmdId) Enum() *SetNameCardRsp_CmdId {
	p := new(SetNameCardRsp_CmdId)
	*p = x
	return p
}

func (x SetNameCardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetNameCardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[23].Descriptor()
}

func (SetNameCardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[23]
}

func (x SetNameCardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetNameCardRsp_CmdId.Descriptor instead.
func (SetNameCardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{25, 0}
}

type GetAllUnlockNameCardReq_CmdId int32

const (
	GetAllUnlockNameCardReq_NONE             GetAllUnlockNameCardReq_CmdId = 0
	GetAllUnlockNameCardReq_CMD_ID           GetAllUnlockNameCardReq_CmdId = 4027
	GetAllUnlockNameCardReq_ENET_CHANNEL_ID  GetAllUnlockNameCardReq_CmdId = 0
	GetAllUnlockNameCardReq_ENET_IS_RELIABLE GetAllUnlockNameCardReq_CmdId = 1
	GetAllUnlockNameCardReq_IS_ALLOW_CLIENT  GetAllUnlockNameCardReq_CmdId = 1
)

// Enum value maps for GetAllUnlockNameCardReq_CmdId.
var (
	GetAllUnlockNameCardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4027: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetAllUnlockNameCardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4027,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetAllUnlockNameCardReq_CmdId) Enum() *GetAllUnlockNameCardReq_CmdId {
	p := new(GetAllUnlockNameCardReq_CmdId)
	*p = x
	return p
}

func (x GetAllUnlockNameCardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAllUnlockNameCardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[24].Descriptor()
}

func (GetAllUnlockNameCardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[24]
}

func (x GetAllUnlockNameCardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAllUnlockNameCardReq_CmdId.Descriptor instead.
func (GetAllUnlockNameCardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{26, 0}
}

type GetAllUnlockNameCardRsp_CmdId int32

const (
	GetAllUnlockNameCardRsp_NONE             GetAllUnlockNameCardRsp_CmdId = 0
	GetAllUnlockNameCardRsp_CMD_ID           GetAllUnlockNameCardRsp_CmdId = 4094
	GetAllUnlockNameCardRsp_ENET_CHANNEL_ID  GetAllUnlockNameCardRsp_CmdId = 0
	GetAllUnlockNameCardRsp_ENET_IS_RELIABLE GetAllUnlockNameCardRsp_CmdId = 1
	GetAllUnlockNameCardRsp_IS_ALLOW_CLIENT  GetAllUnlockNameCardRsp_CmdId = 1
)

// Enum value maps for GetAllUnlockNameCardRsp_CmdId.
var (
	GetAllUnlockNameCardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4094: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetAllUnlockNameCardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4094,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetAllUnlockNameCardRsp_CmdId) Enum() *GetAllUnlockNameCardRsp_CmdId {
	p := new(GetAllUnlockNameCardRsp_CmdId)
	*p = x
	return p
}

func (x GetAllUnlockNameCardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAllUnlockNameCardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[25].Descriptor()
}

func (GetAllUnlockNameCardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[25]
}

func (x GetAllUnlockNameCardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAllUnlockNameCardRsp_CmdId.Descriptor instead.
func (GetAllUnlockNameCardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{27, 0}
}

type AddBlacklistReq_CmdId int32

const (
	AddBlacklistReq_NONE             AddBlacklistReq_CmdId = 0
	AddBlacklistReq_CMD_ID           AddBlacklistReq_CmdId = 4088
	AddBlacklistReq_ENET_CHANNEL_ID  AddBlacklistReq_CmdId = 0
	AddBlacklistReq_ENET_IS_RELIABLE AddBlacklistReq_CmdId = 1
	AddBlacklistReq_IS_ALLOW_CLIENT  AddBlacklistReq_CmdId = 1
)

// Enum value maps for AddBlacklistReq_CmdId.
var (
	AddBlacklistReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4088: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AddBlacklistReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4088,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AddBlacklistReq_CmdId) Enum() *AddBlacklistReq_CmdId {
	p := new(AddBlacklistReq_CmdId)
	*p = x
	return p
}

func (x AddBlacklistReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBlacklistReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[26].Descriptor()
}

func (AddBlacklistReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[26]
}

func (x AddBlacklistReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBlacklistReq_CmdId.Descriptor instead.
func (AddBlacklistReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{28, 0}
}

type AddBlacklistRsp_CmdId int32

const (
	AddBlacklistRsp_NONE             AddBlacklistRsp_CmdId = 0
	AddBlacklistRsp_CMD_ID           AddBlacklistRsp_CmdId = 4026
	AddBlacklistRsp_ENET_CHANNEL_ID  AddBlacklistRsp_CmdId = 0
	AddBlacklistRsp_ENET_IS_RELIABLE AddBlacklistRsp_CmdId = 1
)

// Enum value maps for AddBlacklistRsp_CmdId.
var (
	AddBlacklistRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4026: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AddBlacklistRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4026,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AddBlacklistRsp_CmdId) Enum() *AddBlacklistRsp_CmdId {
	p := new(AddBlacklistRsp_CmdId)
	*p = x
	return p
}

func (x AddBlacklistRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBlacklistRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[27].Descriptor()
}

func (AddBlacklistRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[27]
}

func (x AddBlacklistRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBlacklistRsp_CmdId.Descriptor instead.
func (AddBlacklistRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{29, 0}
}

type RemoveBlacklistReq_CmdId int32

const (
	RemoveBlacklistReq_NONE             RemoveBlacklistReq_CmdId = 0
	RemoveBlacklistReq_CMD_ID           RemoveBlacklistReq_CmdId = 4063
	RemoveBlacklistReq_ENET_CHANNEL_ID  RemoveBlacklistReq_CmdId = 0
	RemoveBlacklistReq_ENET_IS_RELIABLE RemoveBlacklistReq_CmdId = 1
	RemoveBlacklistReq_IS_ALLOW_CLIENT  RemoveBlacklistReq_CmdId = 1
)

// Enum value maps for RemoveBlacklistReq_CmdId.
var (
	RemoveBlacklistReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4063: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	RemoveBlacklistReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4063,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x RemoveBlacklistReq_CmdId) Enum() *RemoveBlacklistReq_CmdId {
	p := new(RemoveBlacklistReq_CmdId)
	*p = x
	return p
}

func (x RemoveBlacklistReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveBlacklistReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[28].Descriptor()
}

func (RemoveBlacklistReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[28]
}

func (x RemoveBlacklistReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveBlacklistReq_CmdId.Descriptor instead.
func (RemoveBlacklistReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{30, 0}
}

type RemoveBlacklistRsp_CmdId int32

const (
	RemoveBlacklistRsp_NONE             RemoveBlacklistRsp_CmdId = 0
	RemoveBlacklistRsp_CMD_ID           RemoveBlacklistRsp_CmdId = 4095
	RemoveBlacklistRsp_ENET_CHANNEL_ID  RemoveBlacklistRsp_CmdId = 0
	RemoveBlacklistRsp_ENET_IS_RELIABLE RemoveBlacklistRsp_CmdId = 1
)

// Enum value maps for RemoveBlacklistRsp_CmdId.
var (
	RemoveBlacklistRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4095: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	RemoveBlacklistRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4095,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x RemoveBlacklistRsp_CmdId) Enum() *RemoveBlacklistRsp_CmdId {
	p := new(RemoveBlacklistRsp_CmdId)
	*p = x
	return p
}

func (x RemoveBlacklistRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveBlacklistRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[29].Descriptor()
}

func (RemoveBlacklistRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[29]
}

func (x RemoveBlacklistRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveBlacklistRsp_CmdId.Descriptor instead.
func (RemoveBlacklistRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{31, 0}
}

type UnlockNameCardNotify_CmdId int32

const (
	UnlockNameCardNotify_NONE             UnlockNameCardNotify_CmdId = 0
	UnlockNameCardNotify_CMD_ID           UnlockNameCardNotify_CmdId = 4006
	UnlockNameCardNotify_ENET_CHANNEL_ID  UnlockNameCardNotify_CmdId = 0
	UnlockNameCardNotify_ENET_IS_RELIABLE UnlockNameCardNotify_CmdId = 1
)

// Enum value maps for UnlockNameCardNotify_CmdId.
var (
	UnlockNameCardNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4006: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UnlockNameCardNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4006,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UnlockNameCardNotify_CmdId) Enum() *UnlockNameCardNotify_CmdId {
	p := new(UnlockNameCardNotify_CmdId)
	*p = x
	return p
}

func (x UnlockNameCardNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnlockNameCardNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[30].Descriptor()
}

func (UnlockNameCardNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[30]
}

func (x UnlockNameCardNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnlockNameCardNotify_CmdId.Descriptor instead.
func (UnlockNameCardNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{32, 0}
}

type GetRecentMpPlayerListReq_CmdId int32

const (
	GetRecentMpPlayerListReq_NONE             GetRecentMpPlayerListReq_CmdId = 0
	GetRecentMpPlayerListReq_CMD_ID           GetRecentMpPlayerListReq_CmdId = 4034
	GetRecentMpPlayerListReq_ENET_CHANNEL_ID  GetRecentMpPlayerListReq_CmdId = 0
	GetRecentMpPlayerListReq_ENET_IS_RELIABLE GetRecentMpPlayerListReq_CmdId = 1
	GetRecentMpPlayerListReq_IS_ALLOW_CLIENT  GetRecentMpPlayerListReq_CmdId = 1
)

// Enum value maps for GetRecentMpPlayerListReq_CmdId.
var (
	GetRecentMpPlayerListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4034: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetRecentMpPlayerListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4034,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetRecentMpPlayerListReq_CmdId) Enum() *GetRecentMpPlayerListReq_CmdId {
	p := new(GetRecentMpPlayerListReq_CmdId)
	*p = x
	return p
}

func (x GetRecentMpPlayerListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetRecentMpPlayerListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[31].Descriptor()
}

func (GetRecentMpPlayerListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[31]
}

func (x GetRecentMpPlayerListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetRecentMpPlayerListReq_CmdId.Descriptor instead.
func (GetRecentMpPlayerListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{33, 0}
}

type GetRecentMpPlayerListRsp_CmdId int32

const (
	GetRecentMpPlayerListRsp_NONE             GetRecentMpPlayerListRsp_CmdId = 0
	GetRecentMpPlayerListRsp_CMD_ID           GetRecentMpPlayerListRsp_CmdId = 4050
	GetRecentMpPlayerListRsp_ENET_CHANNEL_ID  GetRecentMpPlayerListRsp_CmdId = 0
	GetRecentMpPlayerListRsp_ENET_IS_RELIABLE GetRecentMpPlayerListRsp_CmdId = 1
	GetRecentMpPlayerListRsp_IS_ALLOW_CLIENT  GetRecentMpPlayerListRsp_CmdId = 1
)

// Enum value maps for GetRecentMpPlayerListRsp_CmdId.
var (
	GetRecentMpPlayerListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4050: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetRecentMpPlayerListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4050,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetRecentMpPlayerListRsp_CmdId) Enum() *GetRecentMpPlayerListRsp_CmdId {
	p := new(GetRecentMpPlayerListRsp_CmdId)
	*p = x
	return p
}

func (x GetRecentMpPlayerListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetRecentMpPlayerListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[32].Descriptor()
}

func (GetRecentMpPlayerListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[32]
}

func (x GetRecentMpPlayerListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetRecentMpPlayerListRsp_CmdId.Descriptor instead.
func (GetRecentMpPlayerListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{34, 0}
}

type SocialDataNotify_CmdId int32

const (
	SocialDataNotify_NONE             SocialDataNotify_CmdId = 0
	SocialDataNotify_CMD_ID           SocialDataNotify_CmdId = 4043
	SocialDataNotify_ENET_CHANNEL_ID  SocialDataNotify_CmdId = 0
	SocialDataNotify_ENET_IS_RELIABLE SocialDataNotify_CmdId = 1
	SocialDataNotify_IS_ALLOW_CLIENT  SocialDataNotify_CmdId = 1
)

// Enum value maps for SocialDataNotify_CmdId.
var (
	SocialDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4043: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SocialDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4043,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SocialDataNotify_CmdId) Enum() *SocialDataNotify_CmdId {
	p := new(SocialDataNotify_CmdId)
	*p = x
	return p
}

func (x SocialDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocialDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[33].Descriptor()
}

func (SocialDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[33]
}

func (x SocialDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocialDataNotify_CmdId.Descriptor instead.
func (SocialDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{35, 0}
}

type TakeFirstShareRewardReq_CmdId int32

const (
	TakeFirstShareRewardReq_NONE             TakeFirstShareRewardReq_CmdId = 0
	TakeFirstShareRewardReq_CMD_ID           TakeFirstShareRewardReq_CmdId = 4074
	TakeFirstShareRewardReq_ENET_CHANNEL_ID  TakeFirstShareRewardReq_CmdId = 0
	TakeFirstShareRewardReq_ENET_IS_RELIABLE TakeFirstShareRewardReq_CmdId = 1
	TakeFirstShareRewardReq_IS_ALLOW_CLIENT  TakeFirstShareRewardReq_CmdId = 1
)

// Enum value maps for TakeFirstShareRewardReq_CmdId.
var (
	TakeFirstShareRewardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4074: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	TakeFirstShareRewardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4074,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x TakeFirstShareRewardReq_CmdId) Enum() *TakeFirstShareRewardReq_CmdId {
	p := new(TakeFirstShareRewardReq_CmdId)
	*p = x
	return p
}

func (x TakeFirstShareRewardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeFirstShareRewardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[34].Descriptor()
}

func (TakeFirstShareRewardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[34]
}

func (x TakeFirstShareRewardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeFirstShareRewardReq_CmdId.Descriptor instead.
func (TakeFirstShareRewardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{36, 0}
}

type TakeFirstShareRewardRsp_CmdId int32

const (
	TakeFirstShareRewardRsp_NONE             TakeFirstShareRewardRsp_CmdId = 0
	TakeFirstShareRewardRsp_CMD_ID           TakeFirstShareRewardRsp_CmdId = 4076
	TakeFirstShareRewardRsp_ENET_CHANNEL_ID  TakeFirstShareRewardRsp_CmdId = 0
	TakeFirstShareRewardRsp_ENET_IS_RELIABLE TakeFirstShareRewardRsp_CmdId = 1
	TakeFirstShareRewardRsp_IS_ALLOW_CLIENT  TakeFirstShareRewardRsp_CmdId = 1
)

// Enum value maps for TakeFirstShareRewardRsp_CmdId.
var (
	TakeFirstShareRewardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4076: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	TakeFirstShareRewardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4076,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x TakeFirstShareRewardRsp_CmdId) Enum() *TakeFirstShareRewardRsp_CmdId {
	p := new(TakeFirstShareRewardRsp_CmdId)
	*p = x
	return p
}

func (x TakeFirstShareRewardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TakeFirstShareRewardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[35].Descriptor()
}

func (TakeFirstShareRewardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[35]
}

func (x TakeFirstShareRewardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TakeFirstShareRewardRsp_CmdId.Descriptor instead.
func (TakeFirstShareRewardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{37, 0}
}

type UpdatePS4BlockListReq_CmdId int32

const (
	UpdatePS4BlockListReq_NONE             UpdatePS4BlockListReq_CmdId = 0
	UpdatePS4BlockListReq_CMD_ID           UpdatePS4BlockListReq_CmdId = 4046
	UpdatePS4BlockListReq_ENET_CHANNEL_ID  UpdatePS4BlockListReq_CmdId = 0
	UpdatePS4BlockListReq_ENET_IS_RELIABLE UpdatePS4BlockListReq_CmdId = 1
	UpdatePS4BlockListReq_IS_ALLOW_CLIENT  UpdatePS4BlockListReq_CmdId = 1
)

// Enum value maps for UpdatePS4BlockListReq_CmdId.
var (
	UpdatePS4BlockListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4046: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePS4BlockListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4046,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePS4BlockListReq_CmdId) Enum() *UpdatePS4BlockListReq_CmdId {
	p := new(UpdatePS4BlockListReq_CmdId)
	*p = x
	return p
}

func (x UpdatePS4BlockListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePS4BlockListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[36].Descriptor()
}

func (UpdatePS4BlockListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[36]
}

func (x UpdatePS4BlockListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePS4BlockListReq_CmdId.Descriptor instead.
func (UpdatePS4BlockListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{38, 0}
}

type UpdatePS4BlockListRsp_CmdId int32

const (
	UpdatePS4BlockListRsp_NONE             UpdatePS4BlockListRsp_CmdId = 0
	UpdatePS4BlockListRsp_CMD_ID           UpdatePS4BlockListRsp_CmdId = 4041
	UpdatePS4BlockListRsp_ENET_CHANNEL_ID  UpdatePS4BlockListRsp_CmdId = 0
	UpdatePS4BlockListRsp_ENET_IS_RELIABLE UpdatePS4BlockListRsp_CmdId = 1
)

// Enum value maps for UpdatePS4BlockListRsp_CmdId.
var (
	UpdatePS4BlockListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4041: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UpdatePS4BlockListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4041,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UpdatePS4BlockListRsp_CmdId) Enum() *UpdatePS4BlockListRsp_CmdId {
	p := new(UpdatePS4BlockListRsp_CmdId)
	*p = x
	return p
}

func (x UpdatePS4BlockListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePS4BlockListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[37].Descriptor()
}

func (UpdatePS4BlockListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[37]
}

func (x UpdatePS4BlockListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePS4BlockListRsp_CmdId.Descriptor instead.
func (UpdatePS4BlockListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{39, 0}
}

type GetPlayerBlacklistReq_CmdId int32

const (
	GetPlayerBlacklistReq_NONE             GetPlayerBlacklistReq_CmdId = 0
	GetPlayerBlacklistReq_CMD_ID           GetPlayerBlacklistReq_CmdId = 4049
	GetPlayerBlacklistReq_ENET_CHANNEL_ID  GetPlayerBlacklistReq_CmdId = 0
	GetPlayerBlacklistReq_ENET_IS_RELIABLE GetPlayerBlacklistReq_CmdId = 1
	GetPlayerBlacklistReq_IS_ALLOW_CLIENT  GetPlayerBlacklistReq_CmdId = 1
)

// Enum value maps for GetPlayerBlacklistReq_CmdId.
var (
	GetPlayerBlacklistReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4049: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetPlayerBlacklistReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4049,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetPlayerBlacklistReq_CmdId) Enum() *GetPlayerBlacklistReq_CmdId {
	p := new(GetPlayerBlacklistReq_CmdId)
	*p = x
	return p
}

func (x GetPlayerBlacklistReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerBlacklistReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[38].Descriptor()
}

func (GetPlayerBlacklistReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[38]
}

func (x GetPlayerBlacklistReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerBlacklistReq_CmdId.Descriptor instead.
func (GetPlayerBlacklistReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{40, 0}
}

type GetPlayerBlacklistRsp_CmdId int32

const (
	GetPlayerBlacklistRsp_NONE             GetPlayerBlacklistRsp_CmdId = 0
	GetPlayerBlacklistRsp_CMD_ID           GetPlayerBlacklistRsp_CmdId = 4091
	GetPlayerBlacklistRsp_ENET_CHANNEL_ID  GetPlayerBlacklistRsp_CmdId = 0
	GetPlayerBlacklistRsp_ENET_IS_RELIABLE GetPlayerBlacklistRsp_CmdId = 1
)

// Enum value maps for GetPlayerBlacklistRsp_CmdId.
var (
	GetPlayerBlacklistRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4091: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetPlayerBlacklistRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4091,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetPlayerBlacklistRsp_CmdId) Enum() *GetPlayerBlacklistRsp_CmdId {
	p := new(GetPlayerBlacklistRsp_CmdId)
	*p = x
	return p
}

func (x GetPlayerBlacklistRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerBlacklistRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[39].Descriptor()
}

func (GetPlayerBlacklistRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[39]
}

func (x GetPlayerBlacklistRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerBlacklistRsp_CmdId.Descriptor instead.
func (GetPlayerBlacklistRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{41, 0}
}

type PlayerReportReq_CmdId int32

const (
	PlayerReportReq_NONE             PlayerReportReq_CmdId = 0
	PlayerReportReq_CMD_ID           PlayerReportReq_CmdId = 4024
	PlayerReportReq_ENET_CHANNEL_ID  PlayerReportReq_CmdId = 0
	PlayerReportReq_ENET_IS_RELIABLE PlayerReportReq_CmdId = 1
	PlayerReportReq_IS_ALLOW_CLIENT  PlayerReportReq_CmdId = 1
)

// Enum value maps for PlayerReportReq_CmdId.
var (
	PlayerReportReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4024: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	PlayerReportReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4024,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x PlayerReportReq_CmdId) Enum() *PlayerReportReq_CmdId {
	p := new(PlayerReportReq_CmdId)
	*p = x
	return p
}

func (x PlayerReportReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerReportReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[40].Descriptor()
}

func (PlayerReportReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[40]
}

func (x PlayerReportReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerReportReq_CmdId.Descriptor instead.
func (PlayerReportReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{42, 0}
}

type PlayerReportRsp_CmdId int32

const (
	PlayerReportRsp_NONE             PlayerReportRsp_CmdId = 0
	PlayerReportRsp_CMD_ID           PlayerReportRsp_CmdId = 4056
	PlayerReportRsp_ENET_CHANNEL_ID  PlayerReportRsp_CmdId = 0
	PlayerReportRsp_ENET_IS_RELIABLE PlayerReportRsp_CmdId = 1
)

// Enum value maps for PlayerReportRsp_CmdId.
var (
	PlayerReportRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4056: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PlayerReportRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4056,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PlayerReportRsp_CmdId) Enum() *PlayerReportRsp_CmdId {
	p := new(PlayerReportRsp_CmdId)
	*p = x
	return p
}

func (x PlayerReportRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerReportRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[41].Descriptor()
}

func (PlayerReportRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[41]
}

func (x PlayerReportRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerReportRsp_CmdId.Descriptor instead.
func (PlayerReportRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{43, 0}
}

type SetFriendRemarkNameReq_CmdId int32

const (
	SetFriendRemarkNameReq_NONE             SetFriendRemarkNameReq_CmdId = 0
	SetFriendRemarkNameReq_CMD_ID           SetFriendRemarkNameReq_CmdId = 4042
	SetFriendRemarkNameReq_ENET_CHANNEL_ID  SetFriendRemarkNameReq_CmdId = 0
	SetFriendRemarkNameReq_ENET_IS_RELIABLE SetFriendRemarkNameReq_CmdId = 1
	SetFriendRemarkNameReq_IS_ALLOW_CLIENT  SetFriendRemarkNameReq_CmdId = 1
)

// Enum value maps for SetFriendRemarkNameReq_CmdId.
var (
	SetFriendRemarkNameReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4042: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetFriendRemarkNameReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4042,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetFriendRemarkNameReq_CmdId) Enum() *SetFriendRemarkNameReq_CmdId {
	p := new(SetFriendRemarkNameReq_CmdId)
	*p = x
	return p
}

func (x SetFriendRemarkNameReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetFriendRemarkNameReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[42].Descriptor()
}

func (SetFriendRemarkNameReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[42]
}

func (x SetFriendRemarkNameReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetFriendRemarkNameReq_CmdId.Descriptor instead.
func (SetFriendRemarkNameReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{44, 0}
}

type SetFriendRemarkNameRsp_CmdId int32

const (
	SetFriendRemarkNameRsp_NONE             SetFriendRemarkNameRsp_CmdId = 0
	SetFriendRemarkNameRsp_CMD_ID           SetFriendRemarkNameRsp_CmdId = 4030
	SetFriendRemarkNameRsp_ENET_CHANNEL_ID  SetFriendRemarkNameRsp_CmdId = 0
	SetFriendRemarkNameRsp_ENET_IS_RELIABLE SetFriendRemarkNameRsp_CmdId = 1
)

// Enum value maps for SetFriendRemarkNameRsp_CmdId.
var (
	SetFriendRemarkNameRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4030: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetFriendRemarkNameRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4030,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetFriendRemarkNameRsp_CmdId) Enum() *SetFriendRemarkNameRsp_CmdId {
	p := new(SetFriendRemarkNameRsp_CmdId)
	*p = x
	return p
}

func (x SetFriendRemarkNameRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetFriendRemarkNameRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[43].Descriptor()
}

func (SetFriendRemarkNameRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[43]
}

func (x SetFriendRemarkNameRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetFriendRemarkNameRsp_CmdId.Descriptor instead.
func (SetFriendRemarkNameRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{45, 0}
}

type UpdatePlayerShowAvatarListReq_CmdId int32

const (
	UpdatePlayerShowAvatarListReq_NONE             UpdatePlayerShowAvatarListReq_CmdId = 0
	UpdatePlayerShowAvatarListReq_CMD_ID           UpdatePlayerShowAvatarListReq_CmdId = 4067
	UpdatePlayerShowAvatarListReq_ENET_CHANNEL_ID  UpdatePlayerShowAvatarListReq_CmdId = 0
	UpdatePlayerShowAvatarListReq_ENET_IS_RELIABLE UpdatePlayerShowAvatarListReq_CmdId = 1
	UpdatePlayerShowAvatarListReq_IS_ALLOW_CLIENT  UpdatePlayerShowAvatarListReq_CmdId = 1
)

// Enum value maps for UpdatePlayerShowAvatarListReq_CmdId.
var (
	UpdatePlayerShowAvatarListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4067: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePlayerShowAvatarListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4067,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePlayerShowAvatarListReq_CmdId) Enum() *UpdatePlayerShowAvatarListReq_CmdId {
	p := new(UpdatePlayerShowAvatarListReq_CmdId)
	*p = x
	return p
}

func (x UpdatePlayerShowAvatarListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePlayerShowAvatarListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[44].Descriptor()
}

func (UpdatePlayerShowAvatarListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[44]
}

func (x UpdatePlayerShowAvatarListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePlayerShowAvatarListReq_CmdId.Descriptor instead.
func (UpdatePlayerShowAvatarListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{46, 0}
}

type UpdatePlayerShowAvatarListRsp_CmdId int32

const (
	UpdatePlayerShowAvatarListRsp_NONE             UpdatePlayerShowAvatarListRsp_CmdId = 0
	UpdatePlayerShowAvatarListRsp_CMD_ID           UpdatePlayerShowAvatarListRsp_CmdId = 4058
	UpdatePlayerShowAvatarListRsp_ENET_CHANNEL_ID  UpdatePlayerShowAvatarListRsp_CmdId = 0
	UpdatePlayerShowAvatarListRsp_ENET_IS_RELIABLE UpdatePlayerShowAvatarListRsp_CmdId = 1
)

// Enum value maps for UpdatePlayerShowAvatarListRsp_CmdId.
var (
	UpdatePlayerShowAvatarListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4058: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UpdatePlayerShowAvatarListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4058,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UpdatePlayerShowAvatarListRsp_CmdId) Enum() *UpdatePlayerShowAvatarListRsp_CmdId {
	p := new(UpdatePlayerShowAvatarListRsp_CmdId)
	*p = x
	return p
}

func (x UpdatePlayerShowAvatarListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePlayerShowAvatarListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[45].Descriptor()
}

func (UpdatePlayerShowAvatarListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[45]
}

func (x UpdatePlayerShowAvatarListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePlayerShowAvatarListRsp_CmdId.Descriptor instead.
func (UpdatePlayerShowAvatarListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{47, 0}
}

type GetFriendShowAvatarInfoReq_CmdId int32

const (
	GetFriendShowAvatarInfoReq_NONE             GetFriendShowAvatarInfoReq_CmdId = 0
	GetFriendShowAvatarInfoReq_CMD_ID           GetFriendShowAvatarInfoReq_CmdId = 4070
	GetFriendShowAvatarInfoReq_ENET_CHANNEL_ID  GetFriendShowAvatarInfoReq_CmdId = 0
	GetFriendShowAvatarInfoReq_ENET_IS_RELIABLE GetFriendShowAvatarInfoReq_CmdId = 1
	GetFriendShowAvatarInfoReq_IS_ALLOW_CLIENT  GetFriendShowAvatarInfoReq_CmdId = 1
)

// Enum value maps for GetFriendShowAvatarInfoReq_CmdId.
var (
	GetFriendShowAvatarInfoReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4070: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetFriendShowAvatarInfoReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4070,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetFriendShowAvatarInfoReq_CmdId) Enum() *GetFriendShowAvatarInfoReq_CmdId {
	p := new(GetFriendShowAvatarInfoReq_CmdId)
	*p = x
	return p
}

func (x GetFriendShowAvatarInfoReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFriendShowAvatarInfoReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[46].Descriptor()
}

func (GetFriendShowAvatarInfoReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[46]
}

func (x GetFriendShowAvatarInfoReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFriendShowAvatarInfoReq_CmdId.Descriptor instead.
func (GetFriendShowAvatarInfoReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{48, 0}
}

type GetFriendShowAvatarInfoRsp_CmdId int32

const (
	GetFriendShowAvatarInfoRsp_NONE             GetFriendShowAvatarInfoRsp_CmdId = 0
	GetFriendShowAvatarInfoRsp_CMD_ID           GetFriendShowAvatarInfoRsp_CmdId = 4017
	GetFriendShowAvatarInfoRsp_ENET_CHANNEL_ID  GetFriendShowAvatarInfoRsp_CmdId = 0
	GetFriendShowAvatarInfoRsp_ENET_IS_RELIABLE GetFriendShowAvatarInfoRsp_CmdId = 1
)

// Enum value maps for GetFriendShowAvatarInfoRsp_CmdId.
var (
	GetFriendShowAvatarInfoRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4017: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetFriendShowAvatarInfoRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4017,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetFriendShowAvatarInfoRsp_CmdId) Enum() *GetFriendShowAvatarInfoRsp_CmdId {
	p := new(GetFriendShowAvatarInfoRsp_CmdId)
	*p = x
	return p
}

func (x GetFriendShowAvatarInfoRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFriendShowAvatarInfoRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[47].Descriptor()
}

func (GetFriendShowAvatarInfoRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[47]
}

func (x GetFriendShowAvatarInfoRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFriendShowAvatarInfoRsp_CmdId.Descriptor instead.
func (GetFriendShowAvatarInfoRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{49, 0}
}

type UpdatePlayerShowNameCardListReq_CmdId int32

const (
	UpdatePlayerShowNameCardListReq_NONE             UpdatePlayerShowNameCardListReq_CmdId = 0
	UpdatePlayerShowNameCardListReq_CMD_ID           UpdatePlayerShowNameCardListReq_CmdId = 4002
	UpdatePlayerShowNameCardListReq_ENET_CHANNEL_ID  UpdatePlayerShowNameCardListReq_CmdId = 0
	UpdatePlayerShowNameCardListReq_ENET_IS_RELIABLE UpdatePlayerShowNameCardListReq_CmdId = 1
	UpdatePlayerShowNameCardListReq_IS_ALLOW_CLIENT  UpdatePlayerShowNameCardListReq_CmdId = 1
)

// Enum value maps for UpdatePlayerShowNameCardListReq_CmdId.
var (
	UpdatePlayerShowNameCardListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4002: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePlayerShowNameCardListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4002,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePlayerShowNameCardListReq_CmdId) Enum() *UpdatePlayerShowNameCardListReq_CmdId {
	p := new(UpdatePlayerShowNameCardListReq_CmdId)
	*p = x
	return p
}

func (x UpdatePlayerShowNameCardListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePlayerShowNameCardListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[48].Descriptor()
}

func (UpdatePlayerShowNameCardListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[48]
}

func (x UpdatePlayerShowNameCardListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePlayerShowNameCardListReq_CmdId.Descriptor instead.
func (UpdatePlayerShowNameCardListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{50, 0}
}

type UpdatePlayerShowNameCardListRsp_CmdId int32

const (
	UpdatePlayerShowNameCardListRsp_NONE             UpdatePlayerShowNameCardListRsp_CmdId = 0
	UpdatePlayerShowNameCardListRsp_CMD_ID           UpdatePlayerShowNameCardListRsp_CmdId = 4019
	UpdatePlayerShowNameCardListRsp_ENET_CHANNEL_ID  UpdatePlayerShowNameCardListRsp_CmdId = 0
	UpdatePlayerShowNameCardListRsp_ENET_IS_RELIABLE UpdatePlayerShowNameCardListRsp_CmdId = 1
)

// Enum value maps for UpdatePlayerShowNameCardListRsp_CmdId.
var (
	UpdatePlayerShowNameCardListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4019: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UpdatePlayerShowNameCardListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4019,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UpdatePlayerShowNameCardListRsp_CmdId) Enum() *UpdatePlayerShowNameCardListRsp_CmdId {
	p := new(UpdatePlayerShowNameCardListRsp_CmdId)
	*p = x
	return p
}

func (x UpdatePlayerShowNameCardListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePlayerShowNameCardListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[49].Descriptor()
}

func (UpdatePlayerShowNameCardListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[49]
}

func (x UpdatePlayerShowNameCardListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePlayerShowNameCardListRsp_CmdId.Descriptor instead.
func (UpdatePlayerShowNameCardListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{51, 0}
}

type GetFriendShowNameCardInfoReq_CmdId int32

const (
	GetFriendShowNameCardInfoReq_NONE             GetFriendShowNameCardInfoReq_CmdId = 0
	GetFriendShowNameCardInfoReq_CMD_ID           GetFriendShowNameCardInfoReq_CmdId = 4061
	GetFriendShowNameCardInfoReq_ENET_CHANNEL_ID  GetFriendShowNameCardInfoReq_CmdId = 0
	GetFriendShowNameCardInfoReq_ENET_IS_RELIABLE GetFriendShowNameCardInfoReq_CmdId = 1
	GetFriendShowNameCardInfoReq_IS_ALLOW_CLIENT  GetFriendShowNameCardInfoReq_CmdId = 1
)

// Enum value maps for GetFriendShowNameCardInfoReq_CmdId.
var (
	GetFriendShowNameCardInfoReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4061: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetFriendShowNameCardInfoReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4061,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetFriendShowNameCardInfoReq_CmdId) Enum() *GetFriendShowNameCardInfoReq_CmdId {
	p := new(GetFriendShowNameCardInfoReq_CmdId)
	*p = x
	return p
}

func (x GetFriendShowNameCardInfoReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFriendShowNameCardInfoReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[50].Descriptor()
}

func (GetFriendShowNameCardInfoReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[50]
}

func (x GetFriendShowNameCardInfoReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFriendShowNameCardInfoReq_CmdId.Descriptor instead.
func (GetFriendShowNameCardInfoReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{52, 0}
}

type GetFriendShowNameCardInfoRsp_CmdId int32

const (
	GetFriendShowNameCardInfoRsp_NONE             GetFriendShowNameCardInfoRsp_CmdId = 0
	GetFriendShowNameCardInfoRsp_CMD_ID           GetFriendShowNameCardInfoRsp_CmdId = 4029
	GetFriendShowNameCardInfoRsp_ENET_CHANNEL_ID  GetFriendShowNameCardInfoRsp_CmdId = 0
	GetFriendShowNameCardInfoRsp_ENET_IS_RELIABLE GetFriendShowNameCardInfoRsp_CmdId = 1
)

// Enum value maps for GetFriendShowNameCardInfoRsp_CmdId.
var (
	GetFriendShowNameCardInfoRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4029: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetFriendShowNameCardInfoRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4029,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetFriendShowNameCardInfoRsp_CmdId) Enum() *GetFriendShowNameCardInfoRsp_CmdId {
	p := new(GetFriendShowNameCardInfoRsp_CmdId)
	*p = x
	return p
}

func (x GetFriendShowNameCardInfoRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFriendShowNameCardInfoRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[51].Descriptor()
}

func (GetFriendShowNameCardInfoRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[51]
}

func (x GetFriendShowNameCardInfoRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFriendShowNameCardInfoRsp_CmdId.Descriptor instead.
func (GetFriendShowNameCardInfoRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{53, 0}
}

type ForceAddPlayerFriendReq_CmdId int32

const (
	ForceAddPlayerFriendReq_NONE             ForceAddPlayerFriendReq_CmdId = 0
	ForceAddPlayerFriendReq_CMD_ID           ForceAddPlayerFriendReq_CmdId = 4057
	ForceAddPlayerFriendReq_ENET_CHANNEL_ID  ForceAddPlayerFriendReq_CmdId = 0
	ForceAddPlayerFriendReq_ENET_IS_RELIABLE ForceAddPlayerFriendReq_CmdId = 1
)

// Enum value maps for ForceAddPlayerFriendReq_CmdId.
var (
	ForceAddPlayerFriendReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4057: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForceAddPlayerFriendReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4057,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForceAddPlayerFriendReq_CmdId) Enum() *ForceAddPlayerFriendReq_CmdId {
	p := new(ForceAddPlayerFriendReq_CmdId)
	*p = x
	return p
}

func (x ForceAddPlayerFriendReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForceAddPlayerFriendReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[52].Descriptor()
}

func (ForceAddPlayerFriendReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[52]
}

func (x ForceAddPlayerFriendReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForceAddPlayerFriendReq_CmdId.Descriptor instead.
func (ForceAddPlayerFriendReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{54, 0}
}

type ForceAddPlayerFriendRsp_CmdId int32

const (
	ForceAddPlayerFriendRsp_NONE             ForceAddPlayerFriendRsp_CmdId = 0
	ForceAddPlayerFriendRsp_CMD_ID           ForceAddPlayerFriendRsp_CmdId = 4100
	ForceAddPlayerFriendRsp_ENET_CHANNEL_ID  ForceAddPlayerFriendRsp_CmdId = 0
	ForceAddPlayerFriendRsp_ENET_IS_RELIABLE ForceAddPlayerFriendRsp_CmdId = 1
)

// Enum value maps for ForceAddPlayerFriendRsp_CmdId.
var (
	ForceAddPlayerFriendRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4100: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ForceAddPlayerFriendRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4100,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ForceAddPlayerFriendRsp_CmdId) Enum() *ForceAddPlayerFriendRsp_CmdId {
	p := new(ForceAddPlayerFriendRsp_CmdId)
	*p = x
	return p
}

func (x ForceAddPlayerFriendRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForceAddPlayerFriendRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[53].Descriptor()
}

func (ForceAddPlayerFriendRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[53]
}

func (x ForceAddPlayerFriendRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForceAddPlayerFriendRsp_CmdId.Descriptor instead.
func (ForceAddPlayerFriendRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{55, 0}
}

type ProfilePictureChangeNotify_CmdId int32

const (
	ProfilePictureChangeNotify_NONE             ProfilePictureChangeNotify_CmdId = 0
	ProfilePictureChangeNotify_CMD_ID           ProfilePictureChangeNotify_CmdId = 4016
	ProfilePictureChangeNotify_ENET_CHANNEL_ID  ProfilePictureChangeNotify_CmdId = 0
	ProfilePictureChangeNotify_ENET_IS_RELIABLE ProfilePictureChangeNotify_CmdId = 1
	ProfilePictureChangeNotify_IS_ALLOW_CLIENT  ProfilePictureChangeNotify_CmdId = 1
)

// Enum value maps for ProfilePictureChangeNotify_CmdId.
var (
	ProfilePictureChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4016: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ProfilePictureChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4016,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ProfilePictureChangeNotify_CmdId) Enum() *ProfilePictureChangeNotify_CmdId {
	p := new(ProfilePictureChangeNotify_CmdId)
	*p = x
	return p
}

func (x ProfilePictureChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfilePictureChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[54].Descriptor()
}

func (ProfilePictureChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[54]
}

func (x ProfilePictureChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfilePictureChangeNotify_CmdId.Descriptor instead.
func (ProfilePictureChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{56, 0}
}

type PSNFriendListNotify_CmdId int32

const (
	PSNFriendListNotify_NONE             PSNFriendListNotify_CmdId = 0
	PSNFriendListNotify_CMD_ID           PSNFriendListNotify_CmdId = 4087
	PSNFriendListNotify_ENET_CHANNEL_ID  PSNFriendListNotify_CmdId = 0
	PSNFriendListNotify_ENET_IS_RELIABLE PSNFriendListNotify_CmdId = 1
)

// Enum value maps for PSNFriendListNotify_CmdId.
var (
	PSNFriendListNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4087: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PSNFriendListNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4087,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PSNFriendListNotify_CmdId) Enum() *PSNFriendListNotify_CmdId {
	p := new(PSNFriendListNotify_CmdId)
	*p = x
	return p
}

func (x PSNFriendListNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PSNFriendListNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[55].Descriptor()
}

func (PSNFriendListNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[55]
}

func (x PSNFriendListNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PSNFriendListNotify_CmdId.Descriptor instead.
func (PSNFriendListNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{57, 0}
}

type PSNBlackListNotify_CmdId int32

const (
	PSNBlackListNotify_NONE             PSNBlackListNotify_CmdId = 0
	PSNBlackListNotify_CMD_ID           PSNBlackListNotify_CmdId = 4040
	PSNBlackListNotify_ENET_CHANNEL_ID  PSNBlackListNotify_CmdId = 0
	PSNBlackListNotify_ENET_IS_RELIABLE PSNBlackListNotify_CmdId = 1
)

// Enum value maps for PSNBlackListNotify_CmdId.
var (
	PSNBlackListNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4040: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PSNBlackListNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4040,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PSNBlackListNotify_CmdId) Enum() *PSNBlackListNotify_CmdId {
	p := new(PSNBlackListNotify_CmdId)
	*p = x
	return p
}

func (x PSNBlackListNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PSNBlackListNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[56].Descriptor()
}

func (PSNBlackListNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[56]
}

func (x PSNBlackListNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PSNBlackListNotify_CmdId.Descriptor instead.
func (PSNBlackListNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{58, 0}
}

type GetPlayerAskFriendListReq_CmdId int32

const (
	GetPlayerAskFriendListReq_NONE             GetPlayerAskFriendListReq_CmdId = 0
	GetPlayerAskFriendListReq_CMD_ID           GetPlayerAskFriendListReq_CmdId = 4018
	GetPlayerAskFriendListReq_ENET_CHANNEL_ID  GetPlayerAskFriendListReq_CmdId = 0
	GetPlayerAskFriendListReq_ENET_IS_RELIABLE GetPlayerAskFriendListReq_CmdId = 1
	GetPlayerAskFriendListReq_IS_ALLOW_CLIENT  GetPlayerAskFriendListReq_CmdId = 1
)

// Enum value maps for GetPlayerAskFriendListReq_CmdId.
var (
	GetPlayerAskFriendListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4018: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetPlayerAskFriendListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4018,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetPlayerAskFriendListReq_CmdId) Enum() *GetPlayerAskFriendListReq_CmdId {
	p := new(GetPlayerAskFriendListReq_CmdId)
	*p = x
	return p
}

func (x GetPlayerAskFriendListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerAskFriendListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[57].Descriptor()
}

func (GetPlayerAskFriendListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[57]
}

func (x GetPlayerAskFriendListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerAskFriendListReq_CmdId.Descriptor instead.
func (GetPlayerAskFriendListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{59, 0}
}

type GetPlayerAskFriendListRsp_CmdId int32

const (
	GetPlayerAskFriendListRsp_NONE             GetPlayerAskFriendListRsp_CmdId = 0
	GetPlayerAskFriendListRsp_CMD_ID           GetPlayerAskFriendListRsp_CmdId = 4066
	GetPlayerAskFriendListRsp_ENET_CHANNEL_ID  GetPlayerAskFriendListRsp_CmdId = 0
	GetPlayerAskFriendListRsp_ENET_IS_RELIABLE GetPlayerAskFriendListRsp_CmdId = 1
)

// Enum value maps for GetPlayerAskFriendListRsp_CmdId.
var (
	GetPlayerAskFriendListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4066: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetPlayerAskFriendListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4066,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetPlayerAskFriendListRsp_CmdId) Enum() *GetPlayerAskFriendListRsp_CmdId {
	p := new(GetPlayerAskFriendListRsp_CmdId)
	*p = x
	return p
}

func (x GetPlayerAskFriendListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlayerAskFriendListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[58].Descriptor()
}

func (GetPlayerAskFriendListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[58]
}

func (x GetPlayerAskFriendListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlayerAskFriendListRsp_CmdId.Descriptor instead.
func (GetPlayerAskFriendListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{60, 0}
}

type GetChatEmojiCollectionReq_CmdId int32

const (
	GetChatEmojiCollectionReq_NONE             GetChatEmojiCollectionReq_CmdId = 0
	GetChatEmojiCollectionReq_CMD_ID           GetChatEmojiCollectionReq_CmdId = 4068
	GetChatEmojiCollectionReq_ENET_CHANNEL_ID  GetChatEmojiCollectionReq_CmdId = 0
	GetChatEmojiCollectionReq_ENET_IS_RELIABLE GetChatEmojiCollectionReq_CmdId = 1
	GetChatEmojiCollectionReq_IS_ALLOW_CLIENT  GetChatEmojiCollectionReq_CmdId = 1
)

// Enum value maps for GetChatEmojiCollectionReq_CmdId.
var (
	GetChatEmojiCollectionReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4068: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetChatEmojiCollectionReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4068,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetChatEmojiCollectionReq_CmdId) Enum() *GetChatEmojiCollectionReq_CmdId {
	p := new(GetChatEmojiCollectionReq_CmdId)
	*p = x
	return p
}

func (x GetChatEmojiCollectionReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetChatEmojiCollectionReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[59].Descriptor()
}

func (GetChatEmojiCollectionReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[59]
}

func (x GetChatEmojiCollectionReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetChatEmojiCollectionReq_CmdId.Descriptor instead.
func (GetChatEmojiCollectionReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{61, 0}
}

type GetChatEmojiCollectionRsp_CmdId int32

const (
	GetChatEmojiCollectionRsp_NONE             GetChatEmojiCollectionRsp_CmdId = 0
	GetChatEmojiCollectionRsp_CMD_ID           GetChatEmojiCollectionRsp_CmdId = 4033
	GetChatEmojiCollectionRsp_ENET_CHANNEL_ID  GetChatEmojiCollectionRsp_CmdId = 0
	GetChatEmojiCollectionRsp_ENET_IS_RELIABLE GetChatEmojiCollectionRsp_CmdId = 1
)

// Enum value maps for GetChatEmojiCollectionRsp_CmdId.
var (
	GetChatEmojiCollectionRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4033: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetChatEmojiCollectionRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4033,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetChatEmojiCollectionRsp_CmdId) Enum() *GetChatEmojiCollectionRsp_CmdId {
	p := new(GetChatEmojiCollectionRsp_CmdId)
	*p = x
	return p
}

func (x GetChatEmojiCollectionRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetChatEmojiCollectionRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[60].Descriptor()
}

func (GetChatEmojiCollectionRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[60]
}

func (x GetChatEmojiCollectionRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetChatEmojiCollectionRsp_CmdId.Descriptor instead.
func (GetChatEmojiCollectionRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{62, 0}
}

type SetChatEmojiCollectionReq_CmdId int32

const (
	SetChatEmojiCollectionReq_NONE             SetChatEmojiCollectionReq_CmdId = 0
	SetChatEmojiCollectionReq_CMD_ID           SetChatEmojiCollectionReq_CmdId = 4084
	SetChatEmojiCollectionReq_ENET_CHANNEL_ID  SetChatEmojiCollectionReq_CmdId = 0
	SetChatEmojiCollectionReq_ENET_IS_RELIABLE SetChatEmojiCollectionReq_CmdId = 1
	SetChatEmojiCollectionReq_IS_ALLOW_CLIENT  SetChatEmojiCollectionReq_CmdId = 1
)

// Enum value maps for SetChatEmojiCollectionReq_CmdId.
var (
	SetChatEmojiCollectionReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4084: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetChatEmojiCollectionReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4084,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetChatEmojiCollectionReq_CmdId) Enum() *SetChatEmojiCollectionReq_CmdId {
	p := new(SetChatEmojiCollectionReq_CmdId)
	*p = x
	return p
}

func (x SetChatEmojiCollectionReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetChatEmojiCollectionReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[61].Descriptor()
}

func (SetChatEmojiCollectionReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[61]
}

func (x SetChatEmojiCollectionReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetChatEmojiCollectionReq_CmdId.Descriptor instead.
func (SetChatEmojiCollectionReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{63, 0}
}

type SetChatEmojiCollectionRsp_CmdId int32

const (
	SetChatEmojiCollectionRsp_NONE             SetChatEmojiCollectionRsp_CmdId = 0
	SetChatEmojiCollectionRsp_CMD_ID           SetChatEmojiCollectionRsp_CmdId = 4080
	SetChatEmojiCollectionRsp_ENET_CHANNEL_ID  SetChatEmojiCollectionRsp_CmdId = 0
	SetChatEmojiCollectionRsp_ENET_IS_RELIABLE SetChatEmojiCollectionRsp_CmdId = 1
)

// Enum value maps for SetChatEmojiCollectionRsp_CmdId.
var (
	SetChatEmojiCollectionRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4080: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetChatEmojiCollectionRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4080,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetChatEmojiCollectionRsp_CmdId) Enum() *SetChatEmojiCollectionRsp_CmdId {
	p := new(SetChatEmojiCollectionRsp_CmdId)
	*p = x
	return p
}

func (x SetChatEmojiCollectionRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetChatEmojiCollectionRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[62].Descriptor()
}

func (SetChatEmojiCollectionRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[62]
}

func (x SetChatEmojiCollectionRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetChatEmojiCollectionRsp_CmdId.Descriptor instead.
func (SetChatEmojiCollectionRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{64, 0}
}

type UpdatePS4FriendListReq_CmdId int32

const (
	UpdatePS4FriendListReq_NONE             UpdatePS4FriendListReq_CmdId = 0
	UpdatePS4FriendListReq_CMD_ID           UpdatePS4FriendListReq_CmdId = 4089
	UpdatePS4FriendListReq_ENET_CHANNEL_ID  UpdatePS4FriendListReq_CmdId = 0
	UpdatePS4FriendListReq_ENET_IS_RELIABLE UpdatePS4FriendListReq_CmdId = 1
	UpdatePS4FriendListReq_IS_ALLOW_CLIENT  UpdatePS4FriendListReq_CmdId = 1
)

// Enum value maps for UpdatePS4FriendListReq_CmdId.
var (
	UpdatePS4FriendListReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4089: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePS4FriendListReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4089,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePS4FriendListReq_CmdId) Enum() *UpdatePS4FriendListReq_CmdId {
	p := new(UpdatePS4FriendListReq_CmdId)
	*p = x
	return p
}

func (x UpdatePS4FriendListReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePS4FriendListReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[63].Descriptor()
}

func (UpdatePS4FriendListReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[63]
}

func (x UpdatePS4FriendListReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePS4FriendListReq_CmdId.Descriptor instead.
func (UpdatePS4FriendListReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{65, 0}
}

type UpdatePS4FriendListRsp_CmdId int32

const (
	UpdatePS4FriendListRsp_NONE             UpdatePS4FriendListRsp_CmdId = 0
	UpdatePS4FriendListRsp_CMD_ID           UpdatePS4FriendListRsp_CmdId = 4059
	UpdatePS4FriendListRsp_ENET_CHANNEL_ID  UpdatePS4FriendListRsp_CmdId = 0
	UpdatePS4FriendListRsp_ENET_IS_RELIABLE UpdatePS4FriendListRsp_CmdId = 1
	UpdatePS4FriendListRsp_IS_ALLOW_CLIENT  UpdatePS4FriendListRsp_CmdId = 1
)

// Enum value maps for UpdatePS4FriendListRsp_CmdId.
var (
	UpdatePS4FriendListRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4059: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UpdatePS4FriendListRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4059,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UpdatePS4FriendListRsp_CmdId) Enum() *UpdatePS4FriendListRsp_CmdId {
	p := new(UpdatePS4FriendListRsp_CmdId)
	*p = x
	return p
}

func (x UpdatePS4FriendListRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePS4FriendListRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[64].Descriptor()
}

func (UpdatePS4FriendListRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[64]
}

func (x UpdatePS4FriendListRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePS4FriendListRsp_CmdId.Descriptor instead.
func (UpdatePS4FriendListRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{66, 0}
}

type FriendInfoChangeNotify_CmdId int32

const (
	FriendInfoChangeNotify_NONE             FriendInfoChangeNotify_CmdId = 0
	FriendInfoChangeNotify_CMD_ID           FriendInfoChangeNotify_CmdId = 4032
	FriendInfoChangeNotify_ENET_CHANNEL_ID  FriendInfoChangeNotify_CmdId = 0
	FriendInfoChangeNotify_ENET_IS_RELIABLE FriendInfoChangeNotify_CmdId = 1
)

// Enum value maps for FriendInfoChangeNotify_CmdId.
var (
	FriendInfoChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4032: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FriendInfoChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4032,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FriendInfoChangeNotify_CmdId) Enum() *FriendInfoChangeNotify_CmdId {
	p := new(FriendInfoChangeNotify_CmdId)
	*p = x
	return p
}

func (x FriendInfoChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendInfoChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[65].Descriptor()
}

func (FriendInfoChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[65]
}

func (x FriendInfoChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendInfoChangeNotify_CmdId.Descriptor instead.
func (FriendInfoChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{67, 0}
}

type PlayerSignatureAuditDataNotify_CmdId int32

const (
	PlayerSignatureAuditDataNotify_NONE             PlayerSignatureAuditDataNotify_CmdId = 0
	PlayerSignatureAuditDataNotify_CMD_ID           PlayerSignatureAuditDataNotify_CmdId = 4060
	PlayerSignatureAuditDataNotify_ENET_CHANNEL_ID  PlayerSignatureAuditDataNotify_CmdId = 0
	PlayerSignatureAuditDataNotify_ENET_IS_RELIABLE PlayerSignatureAuditDataNotify_CmdId = 1
)

// Enum value maps for PlayerSignatureAuditDataNotify_CmdId.
var (
	PlayerSignatureAuditDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4060: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PlayerSignatureAuditDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4060,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PlayerSignatureAuditDataNotify_CmdId) Enum() *PlayerSignatureAuditDataNotify_CmdId {
	p := new(PlayerSignatureAuditDataNotify_CmdId)
	*p = x
	return p
}

func (x PlayerSignatureAuditDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerSignatureAuditDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[66].Descriptor()
}

func (PlayerSignatureAuditDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[66]
}

func (x PlayerSignatureAuditDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerSignatureAuditDataNotify_CmdId.Descriptor instead.
func (PlayerSignatureAuditDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{68, 0}
}

type PlayerSignatureNotify_CmdId int32

const (
	PlayerSignatureNotify_NONE             PlayerSignatureNotify_CmdId = 0
	PlayerSignatureNotify_CMD_ID           PlayerSignatureNotify_CmdId = 4014
	PlayerSignatureNotify_ENET_CHANNEL_ID  PlayerSignatureNotify_CmdId = 0
	PlayerSignatureNotify_ENET_IS_RELIABLE PlayerSignatureNotify_CmdId = 1
)

// Enum value maps for PlayerSignatureNotify_CmdId.
var (
	PlayerSignatureNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4014: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PlayerSignatureNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4014,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PlayerSignatureNotify_CmdId) Enum() *PlayerSignatureNotify_CmdId {
	p := new(PlayerSignatureNotify_CmdId)
	*p = x
	return p
}

func (x PlayerSignatureNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerSignatureNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[67].Descriptor()
}

func (PlayerSignatureNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[67]
}

func (x PlayerSignatureNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerSignatureNotify_CmdId.Descriptor instead.
func (PlayerSignatureNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{69, 0}
}

type SignatureAuditConfigNotify_CmdId int32

const (
	SignatureAuditConfigNotify_NONE             SignatureAuditConfigNotify_CmdId = 0
	SignatureAuditConfigNotify_CMD_ID           SignatureAuditConfigNotify_CmdId = 4092
	SignatureAuditConfigNotify_ENET_CHANNEL_ID  SignatureAuditConfigNotify_CmdId = 0
	SignatureAuditConfigNotify_ENET_IS_RELIABLE SignatureAuditConfigNotify_CmdId = 1
)

// Enum value maps for SignatureAuditConfigNotify_CmdId.
var (
	SignatureAuditConfigNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4092: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SignatureAuditConfigNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4092,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SignatureAuditConfigNotify_CmdId) Enum() *SignatureAuditConfigNotify_CmdId {
	p := new(SignatureAuditConfigNotify_CmdId)
	*p = x
	return p
}

func (x SignatureAuditConfigNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureAuditConfigNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[68].Descriptor()
}

func (SignatureAuditConfigNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[68]
}

func (x SignatureAuditConfigNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureAuditConfigNotify_CmdId.Descriptor instead.
func (SignatureAuditConfigNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{70, 0}
}

type ReadSignatureAuditReq_CmdId int32

const (
	ReadSignatureAuditReq_NONE             ReadSignatureAuditReq_CmdId = 0
	ReadSignatureAuditReq_CMD_ID           ReadSignatureAuditReq_CmdId = 4020
	ReadSignatureAuditReq_ENET_CHANNEL_ID  ReadSignatureAuditReq_CmdId = 0
	ReadSignatureAuditReq_ENET_IS_RELIABLE ReadSignatureAuditReq_CmdId = 1
	ReadSignatureAuditReq_IS_ALLOW_CLIENT  ReadSignatureAuditReq_CmdId = 1
)

// Enum value maps for ReadSignatureAuditReq_CmdId.
var (
	ReadSignatureAuditReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4020: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReadSignatureAuditReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4020,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReadSignatureAuditReq_CmdId) Enum() *ReadSignatureAuditReq_CmdId {
	p := new(ReadSignatureAuditReq_CmdId)
	*p = x
	return p
}

func (x ReadSignatureAuditReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadSignatureAuditReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[69].Descriptor()
}

func (ReadSignatureAuditReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[69]
}

func (x ReadSignatureAuditReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadSignatureAuditReq_CmdId.Descriptor instead.
func (ReadSignatureAuditReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{71, 0}
}

type ReadSignatureAuditRsp_CmdId int32

const (
	ReadSignatureAuditRsp_NONE             ReadSignatureAuditRsp_CmdId = 0
	ReadSignatureAuditRsp_CMD_ID           ReadSignatureAuditRsp_CmdId = 4064
	ReadSignatureAuditRsp_ENET_CHANNEL_ID  ReadSignatureAuditRsp_CmdId = 0
	ReadSignatureAuditRsp_ENET_IS_RELIABLE ReadSignatureAuditRsp_CmdId = 1
)

// Enum value maps for ReadSignatureAuditRsp_CmdId.
var (
	ReadSignatureAuditRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4064: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ReadSignatureAuditRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4064,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ReadSignatureAuditRsp_CmdId) Enum() *ReadSignatureAuditRsp_CmdId {
	p := new(ReadSignatureAuditRsp_CmdId)
	*p = x
	return p
}

func (x ReadSignatureAuditRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadSignatureAuditRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_social_proto_enumTypes[70].Descriptor()
}

func (ReadSignatureAuditRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_social_proto_enumTypes[70]
}

func (x ReadSignatureAuditRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadSignatureAuditRsp_CmdId.Descriptor instead.
func (ReadSignatureAuditRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{72, 0}
}

type SocialShowAvatarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId  uint32 `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Level     uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	CostumeId uint32 `protobuf:"varint,3,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *SocialShowAvatarInfo) Reset() {
	*x = SocialShowAvatarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialShowAvatarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialShowAvatarInfo) ProtoMessage() {}

func (x *SocialShowAvatarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialShowAvatarInfo.ProtoReflect.Descriptor instead.
func (*SocialShowAvatarInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{0}
}

func (x *SocialShowAvatarInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *SocialShowAvatarInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SocialShowAvatarInfo) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type SocialDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                   uint32                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname              string                  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level                 uint32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	AvatarId              uint32                  `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Signature             string                  `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Birthday              *Birthday               `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	WorldLevel            uint32                  `protobuf:"varint,7,opt,name=world_level,json=worldLevel,proto3" json:"world_level,omitempty"`
	ReservedList          []uint32                `protobuf:"varint,8,rep,packed,name=reserved_list,json=reservedList,proto3" json:"reserved_list,omitempty"`
	OnlineState           FriendOnlineState       `protobuf:"varint,9,opt,name=online_state,json=onlineState,proto3,enum=proto.FriendOnlineState" json:"online_state,omitempty"`
	Param                 uint32                  `protobuf:"varint,10,opt,name=param,proto3" json:"param,omitempty"`
	IsFriend              bool                    `protobuf:"varint,11,opt,name=is_friend,json=isFriend,proto3" json:"is_friend,omitempty"`
	IsMpModeAvailable     bool                    `protobuf:"varint,12,opt,name=is_mp_mode_available,json=isMpModeAvailable,proto3" json:"is_mp_mode_available,omitempty"`
	OnlineId              string                  `protobuf:"bytes,13,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	NameCardId            uint32                  `protobuf:"varint,14,opt,name=name_card_id,json=nameCardId,proto3" json:"name_card_id,omitempty"`
	IsInBlacklist         bool                    `protobuf:"varint,15,opt,name=is_in_blacklist,json=isInBlacklist,proto3" json:"is_in_blacklist,omitempty"`
	IsChatNoDisturb       bool                    `protobuf:"varint,16,opt,name=is_chat_no_disturb,json=isChatNoDisturb,proto3" json:"is_chat_no_disturb,omitempty"`
	RemarkName            string                  `protobuf:"bytes,17,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	FinishAchievementNum  uint32                  `protobuf:"varint,18,opt,name=finish_achievement_num,json=finishAchievementNum,proto3" json:"finish_achievement_num,omitempty"`
	TowerFloorIndex       uint32                  `protobuf:"varint,19,opt,name=tower_floor_index,json=towerFloorIndex,proto3" json:"tower_floor_index,omitempty"`
	TowerLevelIndex       uint32                  `protobuf:"varint,20,opt,name=tower_level_index,json=towerLevelIndex,proto3" json:"tower_level_index,omitempty"`
	IsShowAvatar          bool                    `protobuf:"varint,21,opt,name=is_show_avatar,json=isShowAvatar,proto3" json:"is_show_avatar,omitempty"`
	ShowAvatarInfoList    []*SocialShowAvatarInfo `protobuf:"bytes,22,rep,name=show_avatar_info_list,json=showAvatarInfoList,proto3" json:"show_avatar_info_list,omitempty"`
	ShowNameCardIdList    []uint32                `protobuf:"varint,23,rep,packed,name=show_name_card_id_list,json=showNameCardIdList,proto3" json:"show_name_card_id_list,omitempty"`
	FriendEnterHomeOption FriendEnterHomeOption   `protobuf:"varint,24,opt,name=friend_enter_home_option,json=friendEnterHomeOption,proto3,enum=proto.FriendEnterHomeOption" json:"friend_enter_home_option,omitempty"`
	ProfilePicture        *ProfilePicture         `protobuf:"bytes,25,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	IpCode                string                  `protobuf:"bytes,26,opt,name=ip_code,json=ipCode,proto3" json:"ip_code,omitempty"`
}

func (x *SocialDetail) Reset() {
	*x = SocialDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialDetail) ProtoMessage() {}

func (x *SocialDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialDetail.ProtoReflect.Descriptor instead.
func (*SocialDetail) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{1}
}

func (x *SocialDetail) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SocialDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SocialDetail) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SocialDetail) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *SocialDetail) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialDetail) GetBirthday() *Birthday {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialDetail) GetWorldLevel() uint32 {
	if x != nil {
		return x.WorldLevel
	}
	return 0
}

func (x *SocialDetail) GetReservedList() []uint32 {
	if x != nil {
		return x.ReservedList
	}
	return nil
}

func (x *SocialDetail) GetOnlineState() FriendOnlineState {
	if x != nil {
		return x.OnlineState
	}
	return FriendOnlineState_FREIEND_DISCONNECT
}

func (x *SocialDetail) GetParam() uint32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *SocialDetail) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *SocialDetail) GetIsMpModeAvailable() bool {
	if x != nil {
		return x.IsMpModeAvailable
	}
	return false
}

func (x *SocialDetail) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *SocialDetail) GetNameCardId() uint32 {
	if x != nil {
		return x.NameCardId
	}
	return 0
}

func (x *SocialDetail) GetIsInBlacklist() bool {
	if x != nil {
		return x.IsInBlacklist
	}
	return false
}

func (x *SocialDetail) GetIsChatNoDisturb() bool {
	if x != nil {
		return x.IsChatNoDisturb
	}
	return false
}

func (x *SocialDetail) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *SocialDetail) GetFinishAchievementNum() uint32 {
	if x != nil {
		return x.FinishAchievementNum
	}
	return 0
}

func (x *SocialDetail) GetTowerFloorIndex() uint32 {
	if x != nil {
		return x.TowerFloorIndex
	}
	return 0
}

func (x *SocialDetail) GetTowerLevelIndex() uint32 {
	if x != nil {
		return x.TowerLevelIndex
	}
	return 0
}

func (x *SocialDetail) GetIsShowAvatar() bool {
	if x != nil {
		return x.IsShowAvatar
	}
	return false
}

func (x *SocialDetail) GetShowAvatarInfoList() []*SocialShowAvatarInfo {
	if x != nil {
		return x.ShowAvatarInfoList
	}
	return nil
}

func (x *SocialDetail) GetShowNameCardIdList() []uint32 {
	if x != nil {
		return x.ShowNameCardIdList
	}
	return nil
}

func (x *SocialDetail) GetFriendEnterHomeOption() FriendEnterHomeOption {
	if x != nil {
		return x.FriendEnterHomeOption
	}
	return FriendEnterHomeOption_FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM
}

func (x *SocialDetail) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *SocialDetail) GetIpCode() string {
	if x != nil {
		return x.IpCode
	}
	return ""
}

type FriendBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                   uint32                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname              string                  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level                 uint32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	AvatarId              uint32                  `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	WorldLevel            uint32                  `protobuf:"varint,5,opt,name=world_level,json=worldLevel,proto3" json:"world_level,omitempty"`
	Signature             string                  `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	OnlineState           FriendOnlineState       `protobuf:"varint,7,opt,name=online_state,json=onlineState,proto3,enum=proto.FriendOnlineState" json:"online_state,omitempty"`
	Param                 uint32                  `protobuf:"varint,8,opt,name=param,proto3" json:"param,omitempty"`
	IsMpModeAvailable     bool                    `protobuf:"varint,10,opt,name=is_mp_mode_available,json=isMpModeAvailable,proto3" json:"is_mp_mode_available,omitempty"`
	OnlineId              string                  `protobuf:"bytes,11,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	LastActiveTime        uint32                  `protobuf:"varint,12,opt,name=last_active_time,json=lastActiveTime,proto3" json:"last_active_time,omitempty"`
	NameCardId            uint32                  `protobuf:"varint,13,opt,name=name_card_id,json=nameCardId,proto3" json:"name_card_id,omitempty"`
	MpPlayerNum           uint32                  `protobuf:"varint,14,opt,name=mp_player_num,json=mpPlayerNum,proto3" json:"mp_player_num,omitempty"`
	IsChatNoDisturb       bool                    `protobuf:"varint,15,opt,name=is_chat_no_disturb,json=isChatNoDisturb,proto3" json:"is_chat_no_disturb,omitempty"`
	ChatSequence          uint32                  `protobuf:"varint,16,opt,name=chat_sequence,json=chatSequence,proto3" json:"chat_sequence,omitempty"`
	RemarkName            string                  `protobuf:"bytes,17,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	ShowAvatarInfoList    []*SocialShowAvatarInfo `protobuf:"bytes,22,rep,name=show_avatar_info_list,json=showAvatarInfoList,proto3" json:"show_avatar_info_list,omitempty"`
	FriendEnterHomeOption FriendEnterHomeOption   `protobuf:"varint,23,opt,name=friend_enter_home_option,json=friendEnterHomeOption,proto3,enum=proto.FriendEnterHomeOption" json:"friend_enter_home_option,omitempty"`
	ProfilePicture        *ProfilePicture         `protobuf:"bytes,24,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	IsGameSource          bool                    `protobuf:"varint,25,opt,name=is_game_source,json=isGameSource,proto3" json:"is_game_source,omitempty"`
	IsPsnSource           bool                    `protobuf:"varint,26,opt,name=is_psn_source,json=isPsnSource,proto3" json:"is_psn_source,omitempty"`
	PlatformType          PlatformType            `protobuf:"varint,27,opt,name=platform_type,json=platformType,proto3,enum=proto.PlatformType" json:"platform_type,omitempty"`
}

func (x *FriendBrief) Reset() {
	*x = FriendBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBrief) ProtoMessage() {}

func (x *FriendBrief) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBrief.ProtoReflect.Descriptor instead.
func (*FriendBrief) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{2}
}

func (x *FriendBrief) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FriendBrief) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FriendBrief) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *FriendBrief) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *FriendBrief) GetWorldLevel() uint32 {
	if x != nil {
		return x.WorldLevel
	}
	return 0
}

func (x *FriendBrief) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FriendBrief) GetOnlineState() FriendOnlineState {
	if x != nil {
		return x.OnlineState
	}
	return FriendOnlineState_FREIEND_DISCONNECT
}

func (x *FriendBrief) GetParam() uint32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *FriendBrief) GetIsMpModeAvailable() bool {
	if x != nil {
		return x.IsMpModeAvailable
	}
	return false
}

func (x *FriendBrief) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *FriendBrief) GetLastActiveTime() uint32 {
	if x != nil {
		return x.LastActiveTime
	}
	return 0
}

func (x *FriendBrief) GetNameCardId() uint32 {
	if x != nil {
		return x.NameCardId
	}
	return 0
}

func (x *FriendBrief) GetMpPlayerNum() uint32 {
	if x != nil {
		return x.MpPlayerNum
	}
	return 0
}

func (x *FriendBrief) GetIsChatNoDisturb() bool {
	if x != nil {
		return x.IsChatNoDisturb
	}
	return false
}

func (x *FriendBrief) GetChatSequence() uint32 {
	if x != nil {
		return x.ChatSequence
	}
	return 0
}

func (x *FriendBrief) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *FriendBrief) GetShowAvatarInfoList() []*SocialShowAvatarInfo {
	if x != nil {
		return x.ShowAvatarInfoList
	}
	return nil
}

func (x *FriendBrief) GetFriendEnterHomeOption() FriendEnterHomeOption {
	if x != nil {
		return x.FriendEnterHomeOption
	}
	return FriendEnterHomeOption_FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM
}

func (x *FriendBrief) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *FriendBrief) GetIsGameSource() bool {
	if x != nil {
		return x.IsGameSource
	}
	return false
}

func (x *FriendBrief) GetIsPsnSource() bool {
	if x != nil {
		return x.IsPsnSource
	}
	return false
}

func (x *FriendBrief) GetPlatformType() PlatformType {
	if x != nil {
		return x.PlatformType
	}
	return PlatformType_EDITOR
}

type ChatEmojiCollectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiIdList []uint32 `protobuf:"varint,1,rep,packed,name=emoji_id_list,json=emojiIdList,proto3" json:"emoji_id_list,omitempty"`
}

func (x *ChatEmojiCollectionData) Reset() {
	*x = ChatEmojiCollectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEmojiCollectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEmojiCollectionData) ProtoMessage() {}

func (x *ChatEmojiCollectionData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEmojiCollectionData.ProtoReflect.Descriptor instead.
func (*ChatEmojiCollectionData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{3}
}

func (x *ChatEmojiCollectionData) GetEmojiIdList() []uint32 {
	if x != nil {
		return x.EmojiIdList
	}
	return nil
}

type GetPlayerFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerFriendListReq) Reset() {
	*x = GetPlayerFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerFriendListReq) ProtoMessage() {}

func (x *GetPlayerFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerFriendListReq.ProtoReflect.Descriptor instead.
func (*GetPlayerFriendListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{4}
}

type GetPlayerFriendListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode       int32          `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AskFriendList []*FriendBrief `protobuf:"bytes,8,rep,name=ask_friend_list,json=askFriendList,proto3" json:"ask_friend_list,omitempty"`
	FriendList    []*FriendBrief `protobuf:"bytes,14,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
}

func (x *GetPlayerFriendListRsp) Reset() {
	*x = GetPlayerFriendListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerFriendListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerFriendListRsp) ProtoMessage() {}

func (x *GetPlayerFriendListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerFriendListRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerFriendListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlayerFriendListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetPlayerFriendListRsp) GetAskFriendList() []*FriendBrief {
	if x != nil {
		return x.AskFriendList
	}
	return nil
}

func (x *GetPlayerFriendListRsp) GetFriendList() []*FriendBrief {
	if x != nil {
		return x.FriendList
	}
	return nil
}

type AskAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,7,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *AskAddFriendReq) Reset() {
	*x = AskAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskAddFriendReq) ProtoMessage() {}

func (x *AskAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskAddFriendReq.ProtoReflect.Descriptor instead.
func (*AskAddFriendReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{6}
}

func (x *AskAddFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type AskAddFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param     uint32 `protobuf:"varint,8,opt,name=param,proto3" json:"param,omitempty"`
	Retcode   int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,4,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *AskAddFriendRsp) Reset() {
	*x = AskAddFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskAddFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskAddFriendRsp) ProtoMessage() {}

func (x *AskAddFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskAddFriendRsp.ProtoReflect.Descriptor instead.
func (*AskAddFriendRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{7}
}

func (x *AskAddFriendRsp) GetParam() uint32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *AskAddFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AskAddFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type DealAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealAddFriendResult DealAddFriendResultType `protobuf:"varint,12,opt,name=deal_add_friend_result,json=dealAddFriendResult,proto3,enum=proto.DealAddFriendResultType" json:"deal_add_friend_result,omitempty"`
	TargetUid           uint32                  `protobuf:"varint,10,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *DealAddFriendReq) Reset() {
	*x = DealAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealAddFriendReq) ProtoMessage() {}

func (x *DealAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealAddFriendReq.ProtoReflect.Descriptor instead.
func (*DealAddFriendReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{8}
}

func (x *DealAddFriendReq) GetDealAddFriendResult() DealAddFriendResultType {
	if x != nil {
		return x.DealAddFriendResult
	}
	return DealAddFriendResultType_DEAL_ADD_FRIEND_REJECT
}

func (x *DealAddFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type DealAddFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode             int32                   `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid           uint32                  `protobuf:"varint,5,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	DealAddFriendResult DealAddFriendResultType `protobuf:"varint,6,opt,name=deal_add_friend_result,json=dealAddFriendResult,proto3,enum=proto.DealAddFriendResultType" json:"deal_add_friend_result,omitempty"`
}

func (x *DealAddFriendRsp) Reset() {
	*x = DealAddFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealAddFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealAddFriendRsp) ProtoMessage() {}

func (x *DealAddFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealAddFriendRsp.ProtoReflect.Descriptor instead.
func (*DealAddFriendRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{9}
}

func (x *DealAddFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *DealAddFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *DealAddFriendRsp) GetDealAddFriendResult() DealAddFriendResultType {
	if x != nil {
		return x.DealAddFriendResult
	}
	return DealAddFriendResultType_DEAL_ADD_FRIEND_REJECT
}

type GetPlayerSocialDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,9,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetPlayerSocialDetailReq) Reset() {
	*x = GetPlayerSocialDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerSocialDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerSocialDetailReq) ProtoMessage() {}

func (x *GetPlayerSocialDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerSocialDetailReq.ProtoReflect.Descriptor instead.
func (*GetPlayerSocialDetailReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlayerSocialDetailReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetPlayerSocialDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailData *SocialDetail `protobuf:"bytes,12,opt,name=detail_data,json=detailData,proto3" json:"detail_data,omitempty"`
	Retcode    int32         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *GetPlayerSocialDetailRsp) Reset() {
	*x = GetPlayerSocialDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerSocialDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerSocialDetailRsp) ProtoMessage() {}

func (x *GetPlayerSocialDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerSocialDetailRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerSocialDetailRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayerSocialDetailRsp) GetDetailData() *SocialDetail {
	if x != nil {
		return x.DetailData
	}
	return nil
}

func (x *GetPlayerSocialDetailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,13,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type DeleteFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,14,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	Retcode   int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *DeleteFriendRsp) Reset() {
	*x = DeleteFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRsp) ProtoMessage() {}

func (x *DeleteFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRsp.ProtoReflect.Descriptor instead.
func (*DeleteFriendRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *DeleteFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetPlayerBirthdayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday *Birthday `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *SetPlayerBirthdayReq) Reset() {
	*x = SetPlayerBirthdayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerBirthdayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerBirthdayReq) ProtoMessage() {}

func (x *SetPlayerBirthdayReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerBirthdayReq.ProtoReflect.Descriptor instead.
func (*SetPlayerBirthdayReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{14}
}

func (x *SetPlayerBirthdayReq) GetBirthday() *Birthday {
	if x != nil {
		return x.Birthday
	}
	return nil
}

type SetPlayerBirthdayRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday *Birthday `protobuf:"bytes,2,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Retcode  int32     `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetPlayerBirthdayRsp) Reset() {
	*x = SetPlayerBirthdayRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerBirthdayRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerBirthdayRsp) ProtoMessage() {}

func (x *SetPlayerBirthdayRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerBirthdayRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerBirthdayRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{15}
}

func (x *SetPlayerBirthdayRsp) GetBirthday() *Birthday {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SetPlayerBirthdayRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetPlayerSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SetPlayerSignatureReq) Reset() {
	*x = SetPlayerSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerSignatureReq) ProtoMessage() {}

func (x *SetPlayerSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerSignatureReq.ProtoReflect.Descriptor instead.
func (*SetPlayerSignatureReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{16}
}

func (x *SetPlayerSignatureReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SetPlayerSignatureRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Retcode   int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetPlayerSignatureRsp) Reset() {
	*x = SetPlayerSignatureRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerSignatureRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerSignatureRsp) ProtoMessage() {}

func (x *SetPlayerSignatureRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerSignatureRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerSignatureRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{17}
}

func (x *SetPlayerSignatureRsp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SetPlayerSignatureRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetPlayerHeadImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId uint32 `protobuf:"varint,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
}

func (x *SetPlayerHeadImageReq) Reset() {
	*x = SetPlayerHeadImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerHeadImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerHeadImageReq) ProtoMessage() {}

func (x *SetPlayerHeadImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerHeadImageReq.ProtoReflect.Descriptor instead.
func (*SetPlayerHeadImageReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{18}
}

func (x *SetPlayerHeadImageReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type SetPlayerHeadImageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilePicture *ProfilePicture `protobuf:"bytes,6,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	AvatarId       uint32          `protobuf:"varint,5,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Retcode        int32           `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetPlayerHeadImageRsp) Reset() {
	*x = SetPlayerHeadImageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerHeadImageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerHeadImageRsp) ProtoMessage() {}

func (x *SetPlayerHeadImageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerHeadImageRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerHeadImageRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{19}
}

func (x *SetPlayerHeadImageRsp) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *SetPlayerHeadImageRsp) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *SetPlayerHeadImageRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type UpdatePS4FriendListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnIdList []string `protobuf:"bytes,15,rep,name=psn_id_list,json=psnIdList,proto3" json:"psn_id_list,omitempty"`
}

func (x *UpdatePS4FriendListNotify) Reset() {
	*x = UpdatePS4FriendListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePS4FriendListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePS4FriendListNotify) ProtoMessage() {}

func (x *UpdatePS4FriendListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePS4FriendListNotify.ProtoReflect.Descriptor instead.
func (*UpdatePS4FriendListNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{20}
}

func (x *UpdatePS4FriendListNotify) GetPsnIdList() []string {
	if x != nil {
		return x.PsnIdList
	}
	return nil
}

type DeleteFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,12,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *DeleteFriendNotify) Reset() {
	*x = DeleteFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendNotify) ProtoMessage() {}

func (x *DeleteFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendNotify.ProtoReflect.Descriptor instead.
func (*DeleteFriendNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteFriendNotify) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type AddFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid         uint32       `protobuf:"varint,11,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetFriendBrief *FriendBrief `protobuf:"bytes,10,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
}

func (x *AddFriendNotify) Reset() {
	*x = AddFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendNotify) ProtoMessage() {}

func (x *AddFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendNotify.ProtoReflect.Descriptor instead.
func (*AddFriendNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{22}
}

func (x *AddFriendNotify) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *AddFriendNotify) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

type AskAddFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetFriendBrief *FriendBrief `protobuf:"bytes,15,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
	TargetUid         uint32       `protobuf:"varint,9,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *AskAddFriendNotify) Reset() {
	*x = AskAddFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskAddFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskAddFriendNotify) ProtoMessage() {}

func (x *AskAddFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskAddFriendNotify.ProtoReflect.Descriptor instead.
func (*AskAddFriendNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{23}
}

func (x *AskAddFriendNotify) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

func (x *AskAddFriendNotify) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type SetNameCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameCardId uint32 `protobuf:"varint,10,opt,name=name_card_id,json=nameCardId,proto3" json:"name_card_id,omitempty"`
}

func (x *SetNameCardReq) Reset() {
	*x = SetNameCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNameCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNameCardReq) ProtoMessage() {}

func (x *SetNameCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNameCardReq.ProtoReflect.Descriptor instead.
func (*SetNameCardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{24}
}

func (x *SetNameCardReq) GetNameCardId() uint32 {
	if x != nil {
		return x.NameCardId
	}
	return 0
}

type SetNameCardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameCardId uint32 `protobuf:"varint,11,opt,name=name_card_id,json=nameCardId,proto3" json:"name_card_id,omitempty"`
	Retcode    int32  `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetNameCardRsp) Reset() {
	*x = SetNameCardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNameCardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNameCardRsp) ProtoMessage() {}

func (x *SetNameCardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNameCardRsp.ProtoReflect.Descriptor instead.
func (*SetNameCardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{25}
}

func (x *SetNameCardRsp) GetNameCardId() uint32 {
	if x != nil {
		return x.NameCardId
	}
	return 0
}

func (x *SetNameCardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GetAllUnlockNameCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllUnlockNameCardReq) Reset() {
	*x = GetAllUnlockNameCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUnlockNameCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUnlockNameCardReq) ProtoMessage() {}

func (x *GetAllUnlockNameCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUnlockNameCardReq.ProtoReflect.Descriptor instead.
func (*GetAllUnlockNameCardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{26}
}

type GetAllUnlockNameCardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32    `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	NameCardList []uint32 `protobuf:"varint,14,rep,packed,name=name_card_list,json=nameCardList,proto3" json:"name_card_list,omitempty"`
}

func (x *GetAllUnlockNameCardRsp) Reset() {
	*x = GetAllUnlockNameCardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUnlockNameCardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUnlockNameCardRsp) ProtoMessage() {}

func (x *GetAllUnlockNameCardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUnlockNameCardRsp.ProtoReflect.Descriptor instead.
func (*GetAllUnlockNameCardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{27}
}

func (x *GetAllUnlockNameCardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetAllUnlockNameCardRsp) GetNameCardList() []uint32 {
	if x != nil {
		return x.NameCardList
	}
	return nil
}

type AddBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *AddBlacklistReq) Reset() {
	*x = AddBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistReq) ProtoMessage() {}

func (x *AddBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistReq.ProtoReflect.Descriptor instead.
func (*AddBlacklistReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{28}
}

func (x *AddBlacklistReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type AddBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetFriendBrief *FriendBrief `protobuf:"bytes,13,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
	Retcode           int32        `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AddBlacklistRsp) Reset() {
	*x = AddBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistRsp) ProtoMessage() {}

func (x *AddBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistRsp.ProtoReflect.Descriptor instead.
func (*AddBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{29}
}

func (x *AddBlacklistRsp) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

func (x *AddBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type RemoveBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,13,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *RemoveBlacklistReq) Reset() {
	*x = RemoveBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlacklistReq) ProtoMessage() {}

func (x *RemoveBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlacklistReq.ProtoReflect.Descriptor instead.
func (*RemoveBlacklistReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveBlacklistReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type RemoveBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32  `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetUid uint32 `protobuf:"varint,7,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *RemoveBlacklistRsp) Reset() {
	*x = RemoveBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlacklistRsp) ProtoMessage() {}

func (x *RemoveBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlacklistRsp.ProtoReflect.Descriptor instead.
func (*RemoveBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{31}
}

func (x *RemoveBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *RemoveBlacklistRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type UnlockNameCardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameCardId uint32 `protobuf:"varint,8,opt,name=name_card_id,json=nameCardId,proto3" json:"name_card_id,omitempty"`
}

func (x *UnlockNameCardNotify) Reset() {
	*x = UnlockNameCardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockNameCardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockNameCardNotify) ProtoMessage() {}

func (x *UnlockNameCardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockNameCardNotify.ProtoReflect.Descriptor instead.
func (*UnlockNameCardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{32}
}

func (x *UnlockNameCardNotify) GetNameCardId() uint32 {
	if x != nil {
		return x.NameCardId
	}
	return 0
}

type GetRecentMpPlayerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecentMpPlayerListReq) Reset() {
	*x = GetRecentMpPlayerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentMpPlayerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentMpPlayerListReq) ProtoMessage() {}

func (x *GetRecentMpPlayerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentMpPlayerListReq.ProtoReflect.Descriptor instead.
func (*GetRecentMpPlayerListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{33}
}

type GetRecentMpPlayerListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32          `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RecentMpPlayerBriefList []*FriendBrief `protobuf:"bytes,14,rep,name=recent_mp_player_brief_list,json=recentMpPlayerBriefList,proto3" json:"recent_mp_player_brief_list,omitempty"`
}

func (x *GetRecentMpPlayerListRsp) Reset() {
	*x = GetRecentMpPlayerListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentMpPlayerListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentMpPlayerListRsp) ProtoMessage() {}

func (x *GetRecentMpPlayerListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentMpPlayerListRsp.ProtoReflect.Descriptor instead.
func (*GetRecentMpPlayerListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{34}
}

func (x *GetRecentMpPlayerListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetRecentMpPlayerListRsp) GetRecentMpPlayerBriefList() []*FriendBrief {
	if x != nil {
		return x.RecentMpPlayerBriefList
	}
	return nil
}

type SocialDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsHaveFirstShare bool `protobuf:"varint,11,opt,name=is_have_first_share,json=isHaveFirstShare,proto3" json:"is_have_first_share,omitempty"`
}

func (x *SocialDataNotify) Reset() {
	*x = SocialDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialDataNotify) ProtoMessage() {}

func (x *SocialDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialDataNotify.ProtoReflect.Descriptor instead.
func (*SocialDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{35}
}

func (x *SocialDataNotify) GetIsHaveFirstShare() bool {
	if x != nil {
		return x.IsHaveFirstShare
	}
	return false
}

type TakeFirstShareRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TakeFirstShareRewardReq) Reset() {
	*x = TakeFirstShareRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeFirstShareRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeFirstShareRewardReq) ProtoMessage() {}

func (x *TakeFirstShareRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeFirstShareRewardReq.ProtoReflect.Descriptor instead.
func (*TakeFirstShareRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{36}
}

type TakeFirstShareRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeFirstShareRewardRsp) Reset() {
	*x = TakeFirstShareRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeFirstShareRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeFirstShareRewardRsp) ProtoMessage() {}

func (x *TakeFirstShareRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeFirstShareRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeFirstShareRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{37}
}

func (x *TakeFirstShareRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type UpdatePS4BlockListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnIdList []string `protobuf:"bytes,10,rep,name=psn_id_list,json=psnIdList,proto3" json:"psn_id_list,omitempty"`
}

func (x *UpdatePS4BlockListReq) Reset() {
	*x = UpdatePS4BlockListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePS4BlockListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePS4BlockListReq) ProtoMessage() {}

func (x *UpdatePS4BlockListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePS4BlockListReq.ProtoReflect.Descriptor instead.
func (*UpdatePS4BlockListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{38}
}

func (x *UpdatePS4BlockListReq) GetPsnIdList() []string {
	if x != nil {
		return x.PsnIdList
	}
	return nil
}

type UpdatePS4BlockListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *UpdatePS4BlockListRsp) Reset() {
	*x = UpdatePS4BlockListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePS4BlockListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePS4BlockListRsp) ProtoMessage() {}

func (x *UpdatePS4BlockListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePS4BlockListRsp.ProtoReflect.Descriptor instead.
func (*UpdatePS4BlockListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{39}
}

func (x *UpdatePS4BlockListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GetPlayerBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerBlacklistReq) Reset() {
	*x = GetPlayerBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerBlacklistReq) ProtoMessage() {}

func (x *GetPlayerBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerBlacklistReq.ProtoReflect.Descriptor instead.
func (*GetPlayerBlacklistReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{40}
}

type GetPlayerBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32          `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Blacklist []*FriendBrief `protobuf:"bytes,3,rep,name=blacklist,proto3" json:"blacklist,omitempty"`
}

func (x *GetPlayerBlacklistRsp) Reset() {
	*x = GetPlayerBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerBlacklistRsp) ProtoMessage() {}

func (x *GetPlayerBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerBlacklistRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{41}
}

func (x *GetPlayerBlacklistRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetPlayerBlacklistRsp) GetBlacklist() []*FriendBrief {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

type PlayerReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason               ReportReasonType `protobuf:"varint,12,opt,name=reason,proto3,enum=proto.ReportReasonType" json:"reason,omitempty"`
	Content              string           `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	TargetHomeModuleId   uint32           `protobuf:"varint,5,opt,name=target_home_module_id,json=targetHomeModuleId,proto3" json:"target_home_module_id,omitempty"`
	TargetHomeModuleName string           `protobuf:"bytes,6,opt,name=target_home_module_name,json=targetHomeModuleName,proto3" json:"target_home_module_name,omitempty"`
	TargetUid            uint32           `protobuf:"varint,14,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *PlayerReportReq) Reset() {
	*x = PlayerReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerReportReq) ProtoMessage() {}

func (x *PlayerReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerReportReq.ProtoReflect.Descriptor instead.
func (*PlayerReportReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{42}
}

func (x *PlayerReportReq) GetReason() ReportReasonType {
	if x != nil {
		return x.Reason
	}
	return ReportReasonType_REPORT_REASON_NONE
}

func (x *PlayerReportReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PlayerReportReq) GetTargetHomeModuleId() uint32 {
	if x != nil {
		return x.TargetHomeModuleId
	}
	return 0
}

func (x *PlayerReportReq) GetTargetHomeModuleName() string {
	if x != nil {
		return x.TargetHomeModuleName
	}
	return ""
}

func (x *PlayerReportReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type PlayerReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdTime    uint32 `protobuf:"varint,11,opt,name=cd_time,json=cdTime,proto3" json:"cd_time,omitempty"`
	TargetUid uint32 `protobuf:"varint,6,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	Retcode   int32  `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerReportRsp) Reset() {
	*x = PlayerReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerReportRsp) ProtoMessage() {}

func (x *PlayerReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerReportRsp.ProtoReflect.Descriptor instead.
func (*PlayerReportRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{43}
}

func (x *PlayerReportRsp) GetCdTime() uint32 {
	if x != nil {
		return x.CdTime
	}
	return 0
}

func (x *PlayerReportRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *PlayerReportRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetFriendRemarkNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        uint32 `protobuf:"varint,10,opt,name=uid,proto3" json:"uid,omitempty"`
	RemarkName string `protobuf:"bytes,8,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
}

func (x *SetFriendRemarkNameReq) Reset() {
	*x = SetFriendRemarkNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkNameReq) ProtoMessage() {}

func (x *SetFriendRemarkNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkNameReq.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkNameReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{44}
}

func (x *SetFriendRemarkNameReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetFriendRemarkNameReq) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

type SetFriendRemarkNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemarkName    string `protobuf:"bytes,13,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	IsClearRemark bool   `protobuf:"varint,3,opt,name=is_clear_remark,json=isClearRemark,proto3" json:"is_clear_remark,omitempty"`
	Uid           uint32 `protobuf:"varint,10,opt,name=uid,proto3" json:"uid,omitempty"`
	Retcode       int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetFriendRemarkNameRsp) Reset() {
	*x = SetFriendRemarkNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkNameRsp) ProtoMessage() {}

func (x *SetFriendRemarkNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkNameRsp.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkNameRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{45}
}

func (x *SetFriendRemarkNameRsp) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *SetFriendRemarkNameRsp) GetIsClearRemark() bool {
	if x != nil {
		return x.IsClearRemark
	}
	return false
}

func (x *SetFriendRemarkNameRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetFriendRemarkNameRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type UpdatePlayerShowAvatarListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsShowAvatar     bool     `protobuf:"varint,15,opt,name=is_show_avatar,json=isShowAvatar,proto3" json:"is_show_avatar,omitempty"`
	ShowAvatarIdList []uint32 `protobuf:"varint,13,rep,packed,name=show_avatar_id_list,json=showAvatarIdList,proto3" json:"show_avatar_id_list,omitempty"`
}

func (x *UpdatePlayerShowAvatarListReq) Reset() {
	*x = UpdatePlayerShowAvatarListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerShowAvatarListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerShowAvatarListReq) ProtoMessage() {}

func (x *UpdatePlayerShowAvatarListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerShowAvatarListReq.ProtoReflect.Descriptor instead.
func (*UpdatePlayerShowAvatarListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{46}
}

func (x *UpdatePlayerShowAvatarListReq) GetIsShowAvatar() bool {
	if x != nil {
		return x.IsShowAvatar
	}
	return false
}

func (x *UpdatePlayerShowAvatarListReq) GetShowAvatarIdList() []uint32 {
	if x != nil {
		return x.ShowAvatarIdList
	}
	return nil
}

type UpdatePlayerShowAvatarListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowAvatarIdList []uint32 `protobuf:"varint,1,rep,packed,name=show_avatar_id_list,json=showAvatarIdList,proto3" json:"show_avatar_id_list,omitempty"`
	IsShowAvatar     bool     `protobuf:"varint,3,opt,name=is_show_avatar,json=isShowAvatar,proto3" json:"is_show_avatar,omitempty"`
	Retcode          int32    `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *UpdatePlayerShowAvatarListRsp) Reset() {
	*x = UpdatePlayerShowAvatarListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerShowAvatarListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerShowAvatarListRsp) ProtoMessage() {}

func (x *UpdatePlayerShowAvatarListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerShowAvatarListRsp.ProtoReflect.Descriptor instead.
func (*UpdatePlayerShowAvatarListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{47}
}

func (x *UpdatePlayerShowAvatarListRsp) GetShowAvatarIdList() []uint32 {
	if x != nil {
		return x.ShowAvatarIdList
	}
	return nil
}

func (x *UpdatePlayerShowAvatarListRsp) GetIsShowAvatar() bool {
	if x != nil {
		return x.IsShowAvatar
	}
	return false
}

func (x *UpdatePlayerShowAvatarListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type GetFriendShowAvatarInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,15,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetFriendShowAvatarInfoReq) Reset() {
	*x = GetFriendShowAvatarInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendShowAvatarInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendShowAvatarInfoReq) ProtoMessage() {}

func (x *GetFriendShowAvatarInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendShowAvatarInfoReq.ProtoReflect.Descriptor instead.
func (*GetFriendShowAvatarInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{48}
}

func (x *GetFriendShowAvatarInfoReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetFriendShowAvatarInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                uint32            `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Retcode            int32             `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ShowAvatarInfoList []*ShowAvatarInfo `protobuf:"bytes,9,rep,name=show_avatar_info_list,json=showAvatarInfoList,proto3" json:"show_avatar_info_list,omitempty"`
}

func (x *GetFriendShowAvatarInfoRsp) Reset() {
	*x = GetFriendShowAvatarInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendShowAvatarInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendShowAvatarInfoRsp) ProtoMessage() {}

func (x *GetFriendShowAvatarInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendShowAvatarInfoRsp.ProtoReflect.Descriptor instead.
func (*GetFriendShowAvatarInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{49}
}

func (x *GetFriendShowAvatarInfoRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetFriendShowAvatarInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetFriendShowAvatarInfoRsp) GetShowAvatarInfoList() []*ShowAvatarInfo {
	if x != nil {
		return x.ShowAvatarInfoList
	}
	return nil
}

type UpdatePlayerShowNameCardListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowNameCardIdList []uint32 `protobuf:"varint,15,rep,packed,name=show_name_card_id_list,json=showNameCardIdList,proto3" json:"show_name_card_id_list,omitempty"`
}

func (x *UpdatePlayerShowNameCardListReq) Reset() {
	*x = UpdatePlayerShowNameCardListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerShowNameCardListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerShowNameCardListReq) ProtoMessage() {}

func (x *UpdatePlayerShowNameCardListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerShowNameCardListReq.ProtoReflect.Descriptor instead.
func (*UpdatePlayerShowNameCardListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{50}
}

func (x *UpdatePlayerShowNameCardListReq) GetShowNameCardIdList() []uint32 {
	if x != nil {
		return x.ShowNameCardIdList
	}
	return nil
}

type UpdatePlayerShowNameCardListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32    `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ShowNameCardIdList []uint32 `protobuf:"varint,12,rep,packed,name=show_name_card_id_list,json=showNameCardIdList,proto3" json:"show_name_card_id_list,omitempty"`
}

func (x *UpdatePlayerShowNameCardListRsp) Reset() {
	*x = UpdatePlayerShowNameCardListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerShowNameCardListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerShowNameCardListRsp) ProtoMessage() {}

func (x *UpdatePlayerShowNameCardListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerShowNameCardListRsp.ProtoReflect.Descriptor instead.
func (*UpdatePlayerShowNameCardListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{51}
}

func (x *UpdatePlayerShowNameCardListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UpdatePlayerShowNameCardListRsp) GetShowNameCardIdList() []uint32 {
	if x != nil {
		return x.ShowNameCardIdList
	}
	return nil
}

type GetFriendShowNameCardInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetFriendShowNameCardInfoReq) Reset() {
	*x = GetFriendShowNameCardInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendShowNameCardInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendShowNameCardInfoReq) ProtoMessage() {}

func (x *GetFriendShowNameCardInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendShowNameCardInfoReq.ProtoReflect.Descriptor instead.
func (*GetFriendShowNameCardInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{52}
}

func (x *GetFriendShowNameCardInfoReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetFriendShowNameCardInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode            int32    `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Uid                uint32   `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	ShowNameCardIdList []uint32 `protobuf:"varint,10,rep,packed,name=show_name_card_id_list,json=showNameCardIdList,proto3" json:"show_name_card_id_list,omitempty"`
}

func (x *GetFriendShowNameCardInfoRsp) Reset() {
	*x = GetFriendShowNameCardInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendShowNameCardInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendShowNameCardInfoRsp) ProtoMessage() {}

func (x *GetFriendShowNameCardInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendShowNameCardInfoRsp.ProtoReflect.Descriptor instead.
func (*GetFriendShowNameCardInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{53}
}

func (x *GetFriendShowNameCardInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetFriendShowNameCardInfoRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetFriendShowNameCardInfoRsp) GetShowNameCardIdList() []uint32 {
	if x != nil {
		return x.ShowNameCardIdList
	}
	return nil
}

type ForceAddPlayerFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint32 `protobuf:"varint,15,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ForceAddPlayerFriendReq) Reset() {
	*x = ForceAddPlayerFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAddPlayerFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAddPlayerFriendReq) ProtoMessage() {}

func (x *ForceAddPlayerFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAddPlayerFriendReq.ProtoReflect.Descriptor instead.
func (*ForceAddPlayerFriendReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{54}
}

func (x *ForceAddPlayerFriendReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ForceAddPlayerFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32        `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TargetFriendBrief *FriendBrief `protobuf:"bytes,2,opt,name=target_friend_brief,json=targetFriendBrief,proto3" json:"target_friend_brief,omitempty"`
	TargetUid         uint32       `protobuf:"varint,9,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
}

func (x *ForceAddPlayerFriendRsp) Reset() {
	*x = ForceAddPlayerFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceAddPlayerFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceAddPlayerFriendRsp) ProtoMessage() {}

func (x *ForceAddPlayerFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceAddPlayerFriendRsp.ProtoReflect.Descriptor instead.
func (*ForceAddPlayerFriendRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{55}
}

func (x *ForceAddPlayerFriendRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ForceAddPlayerFriendRsp) GetTargetFriendBrief() *FriendBrief {
	if x != nil {
		return x.TargetFriendBrief
	}
	return nil
}

func (x *ForceAddPlayerFriendRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

type ProfilePictureChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilePicture *ProfilePicture `protobuf:"bytes,12,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
}

func (x *ProfilePictureChangeNotify) Reset() {
	*x = ProfilePictureChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilePictureChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilePictureChangeNotify) ProtoMessage() {}

func (x *ProfilePictureChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilePictureChangeNotify.ProtoReflect.Descriptor instead.
func (*ProfilePictureChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{56}
}

func (x *ProfilePictureChangeNotify) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

type PSNFriendListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnFriendList []*FriendBrief `protobuf:"bytes,8,rep,name=psn_friend_list,json=psnFriendList,proto3" json:"psn_friend_list,omitempty"`
}

func (x *PSNFriendListNotify) Reset() {
	*x = PSNFriendListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PSNFriendListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSNFriendListNotify) ProtoMessage() {}

func (x *PSNFriendListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSNFriendListNotify.ProtoReflect.Descriptor instead.
func (*PSNFriendListNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{57}
}

func (x *PSNFriendListNotify) GetPsnFriendList() []*FriendBrief {
	if x != nil {
		return x.PsnFriendList
	}
	return nil
}

type PSNBlackListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnBlacklist []*FriendBrief `protobuf:"bytes,11,rep,name=psn_blacklist,json=psnBlacklist,proto3" json:"psn_blacklist,omitempty"`
}

func (x *PSNBlackListNotify) Reset() {
	*x = PSNBlackListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PSNBlackListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSNBlackListNotify) ProtoMessage() {}

func (x *PSNBlackListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSNBlackListNotify.ProtoReflect.Descriptor instead.
func (*PSNBlackListNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{58}
}

func (x *PSNBlackListNotify) GetPsnBlacklist() []*FriendBrief {
	if x != nil {
		return x.PsnBlacklist
	}
	return nil
}

type GetPlayerAskFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerAskFriendListReq) Reset() {
	*x = GetPlayerAskFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerAskFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerAskFriendListReq) ProtoMessage() {}

func (x *GetPlayerAskFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerAskFriendListReq.ProtoReflect.Descriptor instead.
func (*GetPlayerAskFriendListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{59}
}

type GetPlayerAskFriendListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode       int32          `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AskFriendList []*FriendBrief `protobuf:"bytes,15,rep,name=ask_friend_list,json=askFriendList,proto3" json:"ask_friend_list,omitempty"`
}

func (x *GetPlayerAskFriendListRsp) Reset() {
	*x = GetPlayerAskFriendListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerAskFriendListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerAskFriendListRsp) ProtoMessage() {}

func (x *GetPlayerAskFriendListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerAskFriendListRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerAskFriendListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{60}
}

func (x *GetPlayerAskFriendListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetPlayerAskFriendListRsp) GetAskFriendList() []*FriendBrief {
	if x != nil {
		return x.AskFriendList
	}
	return nil
}

type GetChatEmojiCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChatEmojiCollectionReq) Reset() {
	*x = GetChatEmojiCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatEmojiCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatEmojiCollectionReq) ProtoMessage() {}

func (x *GetChatEmojiCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatEmojiCollectionReq.ProtoReflect.Descriptor instead.
func (*GetChatEmojiCollectionReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{61}
}

type GetChatEmojiCollectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32                    `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ChatEmojiCollectionData *ChatEmojiCollectionData `protobuf:"bytes,8,opt,name=chat_emoji_collection_data,json=chatEmojiCollectionData,proto3" json:"chat_emoji_collection_data,omitempty"`
}

func (x *GetChatEmojiCollectionRsp) Reset() {
	*x = GetChatEmojiCollectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatEmojiCollectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatEmojiCollectionRsp) ProtoMessage() {}

func (x *GetChatEmojiCollectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatEmojiCollectionRsp.ProtoReflect.Descriptor instead.
func (*GetChatEmojiCollectionRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{62}
}

func (x *GetChatEmojiCollectionRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetChatEmojiCollectionRsp) GetChatEmojiCollectionData() *ChatEmojiCollectionData {
	if x != nil {
		return x.ChatEmojiCollectionData
	}
	return nil
}

type SetChatEmojiCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatEmojiCollectionData *ChatEmojiCollectionData `protobuf:"bytes,12,opt,name=chat_emoji_collection_data,json=chatEmojiCollectionData,proto3" json:"chat_emoji_collection_data,omitempty"`
}

func (x *SetChatEmojiCollectionReq) Reset() {
	*x = SetChatEmojiCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatEmojiCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatEmojiCollectionReq) ProtoMessage() {}

func (x *SetChatEmojiCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatEmojiCollectionReq.ProtoReflect.Descriptor instead.
func (*SetChatEmojiCollectionReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{63}
}

func (x *SetChatEmojiCollectionReq) GetChatEmojiCollectionData() *ChatEmojiCollectionData {
	if x != nil {
		return x.ChatEmojiCollectionData
	}
	return nil
}

type SetChatEmojiCollectionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetChatEmojiCollectionRsp) Reset() {
	*x = SetChatEmojiCollectionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatEmojiCollectionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatEmojiCollectionRsp) ProtoMessage() {}

func (x *SetChatEmojiCollectionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatEmojiCollectionRsp.ProtoReflect.Descriptor instead.
func (*SetChatEmojiCollectionRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{64}
}

func (x *SetChatEmojiCollectionRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type UpdatePS4FriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PsnIdList []string `protobuf:"bytes,4,rep,name=psn_id_list,json=psnIdList,proto3" json:"psn_id_list,omitempty"`
}

func (x *UpdatePS4FriendListReq) Reset() {
	*x = UpdatePS4FriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePS4FriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePS4FriendListReq) ProtoMessage() {}

func (x *UpdatePS4FriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePS4FriendListReq.ProtoReflect.Descriptor instead.
func (*UpdatePS4FriendListReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{65}
}

func (x *UpdatePS4FriendListReq) GetPsnIdList() []string {
	if x != nil {
		return x.PsnIdList
	}
	return nil
}

type UpdatePS4FriendListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32    `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	PsnIdList []string `protobuf:"bytes,2,rep,name=psn_id_list,json=psnIdList,proto3" json:"psn_id_list,omitempty"`
}

func (x *UpdatePS4FriendListRsp) Reset() {
	*x = UpdatePS4FriendListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePS4FriendListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePS4FriendListRsp) ProtoMessage() {}

func (x *UpdatePS4FriendListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePS4FriendListRsp.ProtoReflect.Descriptor instead.
func (*UpdatePS4FriendListRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{66}
}

func (x *UpdatePS4FriendListRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UpdatePS4FriendListRsp) GetPsnIdList() []string {
	if x != nil {
		return x.PsnIdList
	}
	return nil
}

type FriendInfoChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OnlineId string `protobuf:"bytes,9,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
}

func (x *FriendInfoChangeNotify) Reset() {
	*x = FriendInfoChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoChangeNotify) ProtoMessage() {}

func (x *FriendInfoChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoChangeNotify.ProtoReflect.Descriptor instead.
func (*FriendInfoChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{67}
}

func (x *FriendInfoChangeNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FriendInfoChangeNotify) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

type PlayerSignatureAuditDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ContentAuditInfo `protobuf:"bytes,14,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PlayerSignatureAuditDataNotify) Reset() {
	*x = PlayerSignatureAuditDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSignatureAuditDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSignatureAuditDataNotify) ProtoMessage() {}

func (x *PlayerSignatureAuditDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSignatureAuditDataNotify.ProtoReflect.Descriptor instead.
func (*PlayerSignatureAuditDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{68}
}

func (x *PlayerSignatureAuditDataNotify) GetInfo() *ContentAuditInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PlayerSignatureNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *PlayerSignatureNotify) Reset() {
	*x = PlayerSignatureNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSignatureNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSignatureNotify) ProtoMessage() {}

func (x *PlayerSignatureNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSignatureNotify.ProtoReflect.Descriptor instead.
func (*PlayerSignatureNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{69}
}

func (x *PlayerSignatureNotify) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SignatureAuditConfigNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen      bool   `protobuf:"varint,9,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	SubmitLimit uint32 `protobuf:"varint,10,opt,name=submit_limit,json=submitLimit,proto3" json:"submit_limit,omitempty"`
}

func (x *SignatureAuditConfigNotify) Reset() {
	*x = SignatureAuditConfigNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureAuditConfigNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureAuditConfigNotify) ProtoMessage() {}

func (x *SignatureAuditConfigNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureAuditConfigNotify.ProtoReflect.Descriptor instead.
func (*SignatureAuditConfigNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{70}
}

func (x *SignatureAuditConfigNotify) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *SignatureAuditConfigNotify) GetSubmitLimit() uint32 {
	if x != nil {
		return x.SubmitLimit
	}
	return 0
}

type ReadSignatureAuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadSignatureAuditReq) Reset() {
	*x = ReadSignatureAuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSignatureAuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSignatureAuditReq) ProtoMessage() {}

func (x *ReadSignatureAuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSignatureAuditReq.ProtoReflect.Descriptor instead.
func (*ReadSignatureAuditReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{71}
}

type ReadSignatureAuditRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ReadSignatureAuditRsp) Reset() {
	*x = ReadSignatureAuditRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_social_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSignatureAuditRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSignatureAuditRsp) ProtoMessage() {}

func (x *ReadSignatureAuditRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_social_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSignatureAuditRsp.ProtoReflect.Descriptor instead.
func (*ReadSignatureAuditRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_social_proto_rawDescGZIP(), []int{72}
}

func (x *ReadSignatureAuditRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

var File_cmd_cmd_social_proto protoreflect.FileDescriptor

var file_cmd_cmd_social_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x14, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74,
	0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xbe, 0x08, 0x0a, 0x0c, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x6d,
	0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x4d, 0x70, 0x4d, 0x6f, 0x64, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73,
	0x43, 0x68, 0x61, 0x74, 0x4e, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x18, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9c, 0x07, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f,
	0x6d, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x4d, 0x70, 0x4d, 0x6f, 0x64,
	0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x70, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x68, 0x61, 0x74, 0x4e, 0x6f, 0x44, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x18, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x73,
	0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x50, 0x73, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe8, 0x1f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x87, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x61, 0x73, 0x6b, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x52, 0x0d, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x0a, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x82, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x94, 0x01, 0x0a,
	0x0f, 0x41, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa7, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x41, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xb5, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xea, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x53, 0x0a, 0x16, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x13, 0x64, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xa3, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x84, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x16, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x64, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfa, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x90,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe9, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x83, 0x20, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x94, 0x01,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbf, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xeb,
	0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xa7, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xd0, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x52, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x81, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf1,
	0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xa5, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf2, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xcf, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x53, 0x34, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1e, 0x0a, 0x0b, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc7, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd5, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x13, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69,
	0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb6, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc6,
	0x01, 0x0a, 0x12, 0x41, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x42, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe1, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa4, 0x1f, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfd, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbb, 0x1f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfe, 0x1f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xf8, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbe, 0x01, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x11,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xba, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdf, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xff, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0c,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa6, 0x1f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7e, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc2, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xea, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x50, 0x0a, 0x1b, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x17, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xd2, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73,
	0x48, 0x61, 0x76, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcb, 0x1f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x7d, 0x0a, 0x17, 0x54, 0x61, 0x6b, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xea, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x54, 0x61, 0x6b, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xec, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x53, 0x34, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x73, 0x6e, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xce, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x53, 0x34, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc9, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xd1, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfb, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc9,
	0x02, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x17, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xb8, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd8, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xaf, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xca, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbe,
	0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xd8, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68,
	0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xe3, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xda, 0x1f, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe6, 0x1f, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xe1, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68,
	0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x15, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xb1, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa2, 0x1f, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xbe, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x32,
	0x0a, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xb3, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x94, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53,
	0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xdd, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbd, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xd9, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xe5, 0x01, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x84, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa0, 0x01,
	0x0a, 0x13, 0x50, 0x53, 0x4e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x73, 0x6e, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x52, 0x0d, 0x70, 0x73, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf7,
	0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x9c, 0x01, 0x0a, 0x12, 0x50, 0x53, 0x4e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x73, 0x6e, 0x5f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x52, 0x0c, 0x70, 0x73, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc8, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x7f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73, 0x6b, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb2, 0x1f, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xc0, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73,
	0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x61, 0x73, 0x6b, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x0d, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xe2, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x7f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe4, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x5b, 0x0a, 0x1a,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x17, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc1, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x5b, 0x0a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x63, 0x68, 0x61, 0x74,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xf4, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf0, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9c,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x53, 0x34, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x73, 0x6e,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x73, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf9, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb6, 0x01,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x53, 0x34, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xdb, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc0, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x9c, 0x01, 0x0a, 0x1e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdc, 0x1f, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x84,
	0x01, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xae, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfc, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x7b, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb4, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x80, 0x01, 0x0a,
	0x15, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe0, 0x1f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x2a,
	0x3e, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x52, 0x45, 0x49, 0x45, 0x4e, 0x44, 0x5f,
	0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x2a,
	0x51, 0x0a, 0x17, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45,
	0x41, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x41, 0x4c, 0x5f, 0x41,
	0x44, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54,
	0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68,
	0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_social_proto_rawDescOnce sync.Once
	file_cmd_cmd_social_proto_rawDescData = file_cmd_cmd_social_proto_rawDesc
)

func file_cmd_cmd_social_proto_rawDescGZIP() []byte {
	file_cmd_cmd_social_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_social_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_social_proto_rawDescData)
	})
	return file_cmd_cmd_social_proto_rawDescData
}

var file_cmd_cmd_social_proto_enumTypes = make([]protoimpl.EnumInfo, 71)
var file_cmd_cmd_social_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_cmd_cmd_social_proto_goTypes = []interface{}{
	(FriendOnlineState)(0),                     // 0: proto.FriendOnlineState
	(DealAddFriendResultType)(0),               // 1: proto.DealAddFriendResultType
	(GetPlayerFriendListReq_CmdId)(0),          // 2: proto.GetPlayerFriendListReq.CmdId
	(GetPlayerFriendListRsp_CmdId)(0),          // 3: proto.GetPlayerFriendListRsp.CmdId
	(AskAddFriendReq_CmdId)(0),                 // 4: proto.AskAddFriendReq.CmdId
	(AskAddFriendRsp_CmdId)(0),                 // 5: proto.AskAddFriendRsp.CmdId
	(DealAddFriendReq_CmdId)(0),                // 6: proto.DealAddFriendReq.CmdId
	(DealAddFriendRsp_CmdId)(0),                // 7: proto.DealAddFriendRsp.CmdId
	(GetPlayerSocialDetailReq_CmdId)(0),        // 8: proto.GetPlayerSocialDetailReq.CmdId
	(GetPlayerSocialDetailRsp_CmdId)(0),        // 9: proto.GetPlayerSocialDetailRsp.CmdId
	(DeleteFriendReq_CmdId)(0),                 // 10: proto.DeleteFriendReq.CmdId
	(DeleteFriendRsp_CmdId)(0),                 // 11: proto.DeleteFriendRsp.CmdId
	(SetPlayerBirthdayReq_CmdId)(0),            // 12: proto.SetPlayerBirthdayReq.CmdId
	(SetPlayerBirthdayRsp_CmdId)(0),            // 13: proto.SetPlayerBirthdayRsp.CmdId
	(SetPlayerSignatureReq_CmdId)(0),           // 14: proto.SetPlayerSignatureReq.CmdId
	(SetPlayerSignatureRsp_CmdId)(0),           // 15: proto.SetPlayerSignatureRsp.CmdId
	(SetPlayerHeadImageReq_CmdId)(0),           // 16: proto.SetPlayerHeadImageReq.CmdId
	(SetPlayerHeadImageRsp_CmdId)(0),           // 17: proto.SetPlayerHeadImageRsp.CmdId
	(UpdatePS4FriendListNotify_CmdId)(0),       // 18: proto.UpdatePS4FriendListNotify.CmdId
	(DeleteFriendNotify_CmdId)(0),              // 19: proto.DeleteFriendNotify.CmdId
	(AddFriendNotify_CmdId)(0),                 // 20: proto.AddFriendNotify.CmdId
	(AskAddFriendNotify_CmdId)(0),              // 21: proto.AskAddFriendNotify.CmdId
	(SetNameCardReq_CmdId)(0),                  // 22: proto.SetNameCardReq.CmdId
	(SetNameCardRsp_CmdId)(0),                  // 23: proto.SetNameCardRsp.CmdId
	(GetAllUnlockNameCardReq_CmdId)(0),         // 24: proto.GetAllUnlockNameCardReq.CmdId
	(GetAllUnlockNameCardRsp_CmdId)(0),         // 25: proto.GetAllUnlockNameCardRsp.CmdId
	(AddBlacklistReq_CmdId)(0),                 // 26: proto.AddBlacklistReq.CmdId
	(AddBlacklistRsp_CmdId)(0),                 // 27: proto.AddBlacklistRsp.CmdId
	(RemoveBlacklistReq_CmdId)(0),              // 28: proto.RemoveBlacklistReq.CmdId
	(RemoveBlacklistRsp_CmdId)(0),              // 29: proto.RemoveBlacklistRsp.CmdId
	(UnlockNameCardNotify_CmdId)(0),            // 30: proto.UnlockNameCardNotify.CmdId
	(GetRecentMpPlayerListReq_CmdId)(0),        // 31: proto.GetRecentMpPlayerListReq.CmdId
	(GetRecentMpPlayerListRsp_CmdId)(0),        // 32: proto.GetRecentMpPlayerListRsp.CmdId
	(SocialDataNotify_CmdId)(0),                // 33: proto.SocialDataNotify.CmdId
	(TakeFirstShareRewardReq_CmdId)(0),         // 34: proto.TakeFirstShareRewardReq.CmdId
	(TakeFirstShareRewardRsp_CmdId)(0),         // 35: proto.TakeFirstShareRewardRsp.CmdId
	(UpdatePS4BlockListReq_CmdId)(0),           // 36: proto.UpdatePS4BlockListReq.CmdId
	(UpdatePS4BlockListRsp_CmdId)(0),           // 37: proto.UpdatePS4BlockListRsp.CmdId
	(GetPlayerBlacklistReq_CmdId)(0),           // 38: proto.GetPlayerBlacklistReq.CmdId
	(GetPlayerBlacklistRsp_CmdId)(0),           // 39: proto.GetPlayerBlacklistRsp.CmdId
	(PlayerReportReq_CmdId)(0),                 // 40: proto.PlayerReportReq.CmdId
	(PlayerReportRsp_CmdId)(0),                 // 41: proto.PlayerReportRsp.CmdId
	(SetFriendRemarkNameReq_CmdId)(0),          // 42: proto.SetFriendRemarkNameReq.CmdId
	(SetFriendRemarkNameRsp_CmdId)(0),          // 43: proto.SetFriendRemarkNameRsp.CmdId
	(UpdatePlayerShowAvatarListReq_CmdId)(0),   // 44: proto.UpdatePlayerShowAvatarListReq.CmdId
	(UpdatePlayerShowAvatarListRsp_CmdId)(0),   // 45: proto.UpdatePlayerShowAvatarListRsp.CmdId
	(GetFriendShowAvatarInfoReq_CmdId)(0),      // 46: proto.GetFriendShowAvatarInfoReq.CmdId
	(GetFriendShowAvatarInfoRsp_CmdId)(0),      // 47: proto.GetFriendShowAvatarInfoRsp.CmdId
	(UpdatePlayerShowNameCardListReq_CmdId)(0), // 48: proto.UpdatePlayerShowNameCardListReq.CmdId
	(UpdatePlayerShowNameCardListRsp_CmdId)(0), // 49: proto.UpdatePlayerShowNameCardListRsp.CmdId
	(GetFriendShowNameCardInfoReq_CmdId)(0),    // 50: proto.GetFriendShowNameCardInfoReq.CmdId
	(GetFriendShowNameCardInfoRsp_CmdId)(0),    // 51: proto.GetFriendShowNameCardInfoRsp.CmdId
	(ForceAddPlayerFriendReq_CmdId)(0),         // 52: proto.ForceAddPlayerFriendReq.CmdId
	(ForceAddPlayerFriendRsp_CmdId)(0),         // 53: proto.ForceAddPlayerFriendRsp.CmdId
	(ProfilePictureChangeNotify_CmdId)(0),      // 54: proto.ProfilePictureChangeNotify.CmdId
	(PSNFriendListNotify_CmdId)(0),             // 55: proto.PSNFriendListNotify.CmdId
	(PSNBlackListNotify_CmdId)(0),              // 56: proto.PSNBlackListNotify.CmdId
	(GetPlayerAskFriendListReq_CmdId)(0),       // 57: proto.GetPlayerAskFriendListReq.CmdId
	(GetPlayerAskFriendListRsp_CmdId)(0),       // 58: proto.GetPlayerAskFriendListRsp.CmdId
	(GetChatEmojiCollectionReq_CmdId)(0),       // 59: proto.GetChatEmojiCollectionReq.CmdId
	(GetChatEmojiCollectionRsp_CmdId)(0),       // 60: proto.GetChatEmojiCollectionRsp.CmdId
	(SetChatEmojiCollectionReq_CmdId)(0),       // 61: proto.SetChatEmojiCollectionReq.CmdId
	(SetChatEmojiCollectionRsp_CmdId)(0),       // 62: proto.SetChatEmojiCollectionRsp.CmdId
	(UpdatePS4FriendListReq_CmdId)(0),          // 63: proto.UpdatePS4FriendListReq.CmdId
	(UpdatePS4FriendListRsp_CmdId)(0),          // 64: proto.UpdatePS4FriendListRsp.CmdId
	(FriendInfoChangeNotify_CmdId)(0),          // 65: proto.FriendInfoChangeNotify.CmdId
	(PlayerSignatureAuditDataNotify_CmdId)(0),  // 66: proto.PlayerSignatureAuditDataNotify.CmdId
	(PlayerSignatureNotify_CmdId)(0),           // 67: proto.PlayerSignatureNotify.CmdId
	(SignatureAuditConfigNotify_CmdId)(0),      // 68: proto.SignatureAuditConfigNotify.CmdId
	(ReadSignatureAuditReq_CmdId)(0),           // 69: proto.ReadSignatureAuditReq.CmdId
	(ReadSignatureAuditRsp_CmdId)(0),           // 70: proto.ReadSignatureAuditRsp.CmdId
	(*SocialShowAvatarInfo)(nil),               // 71: proto.SocialShowAvatarInfo
	(*SocialDetail)(nil),                       // 72: proto.SocialDetail
	(*FriendBrief)(nil),                        // 73: proto.FriendBrief
	(*ChatEmojiCollectionData)(nil),            // 74: proto.ChatEmojiCollectionData
	(*GetPlayerFriendListReq)(nil),             // 75: proto.GetPlayerFriendListReq
	(*GetPlayerFriendListRsp)(nil),             // 76: proto.GetPlayerFriendListRsp
	(*AskAddFriendReq)(nil),                    // 77: proto.AskAddFriendReq
	(*AskAddFriendRsp)(nil),                    // 78: proto.AskAddFriendRsp
	(*DealAddFriendReq)(nil),                   // 79: proto.DealAddFriendReq
	(*DealAddFriendRsp)(nil),                   // 80: proto.DealAddFriendRsp
	(*GetPlayerSocialDetailReq)(nil),           // 81: proto.GetPlayerSocialDetailReq
	(*GetPlayerSocialDetailRsp)(nil),           // 82: proto.GetPlayerSocialDetailRsp
	(*DeleteFriendReq)(nil),                    // 83: proto.DeleteFriendReq
	(*DeleteFriendRsp)(nil),                    // 84: proto.DeleteFriendRsp
	(*SetPlayerBirthdayReq)(nil),               // 85: proto.SetPlayerBirthdayReq
	(*SetPlayerBirthdayRsp)(nil),               // 86: proto.SetPlayerBirthdayRsp
	(*SetPlayerSignatureReq)(nil),              // 87: proto.SetPlayerSignatureReq
	(*SetPlayerSignatureRsp)(nil),              // 88: proto.SetPlayerSignatureRsp
	(*SetPlayerHeadImageReq)(nil),              // 89: proto.SetPlayerHeadImageReq
	(*SetPlayerHeadImageRsp)(nil),              // 90: proto.SetPlayerHeadImageRsp
	(*UpdatePS4FriendListNotify)(nil),          // 91: proto.UpdatePS4FriendListNotify
	(*DeleteFriendNotify)(nil),                 // 92: proto.DeleteFriendNotify
	(*AddFriendNotify)(nil),                    // 93: proto.AddFriendNotify
	(*AskAddFriendNotify)(nil),                 // 94: proto.AskAddFriendNotify
	(*SetNameCardReq)(nil),                     // 95: proto.SetNameCardReq
	(*SetNameCardRsp)(nil),                     // 96: proto.SetNameCardRsp
	(*GetAllUnlockNameCardReq)(nil),            // 97: proto.GetAllUnlockNameCardReq
	(*GetAllUnlockNameCardRsp)(nil),            // 98: proto.GetAllUnlockNameCardRsp
	(*AddBlacklistReq)(nil),                    // 99: proto.AddBlacklistReq
	(*AddBlacklistRsp)(nil),                    // 100: proto.AddBlacklistRsp
	(*RemoveBlacklistReq)(nil),                 // 101: proto.RemoveBlacklistReq
	(*RemoveBlacklistRsp)(nil),                 // 102: proto.RemoveBlacklistRsp
	(*UnlockNameCardNotify)(nil),               // 103: proto.UnlockNameCardNotify
	(*GetRecentMpPlayerListReq)(nil),           // 104: proto.GetRecentMpPlayerListReq
	(*GetRecentMpPlayerListRsp)(nil),           // 105: proto.GetRecentMpPlayerListRsp
	(*SocialDataNotify)(nil),                   // 106: proto.SocialDataNotify
	(*TakeFirstShareRewardReq)(nil),            // 107: proto.TakeFirstShareRewardReq
	(*TakeFirstShareRewardRsp)(nil),            // 108: proto.TakeFirstShareRewardRsp
	(*UpdatePS4BlockListReq)(nil),              // 109: proto.UpdatePS4BlockListReq
	(*UpdatePS4BlockListRsp)(nil),              // 110: proto.UpdatePS4BlockListRsp
	(*GetPlayerBlacklistReq)(nil),              // 111: proto.GetPlayerBlacklistReq
	(*GetPlayerBlacklistRsp)(nil),              // 112: proto.GetPlayerBlacklistRsp
	(*PlayerReportReq)(nil),                    // 113: proto.PlayerReportReq
	(*PlayerReportRsp)(nil),                    // 114: proto.PlayerReportRsp
	(*SetFriendRemarkNameReq)(nil),             // 115: proto.SetFriendRemarkNameReq
	(*SetFriendRemarkNameRsp)(nil),             // 116: proto.SetFriendRemarkNameRsp
	(*UpdatePlayerShowAvatarListReq)(nil),      // 117: proto.UpdatePlayerShowAvatarListReq
	(*UpdatePlayerShowAvatarListRsp)(nil),      // 118: proto.UpdatePlayerShowAvatarListRsp
	(*GetFriendShowAvatarInfoReq)(nil),         // 119: proto.GetFriendShowAvatarInfoReq
	(*GetFriendShowAvatarInfoRsp)(nil),         // 120: proto.GetFriendShowAvatarInfoRsp
	(*UpdatePlayerShowNameCardListReq)(nil),    // 121: proto.UpdatePlayerShowNameCardListReq
	(*UpdatePlayerShowNameCardListRsp)(nil),    // 122: proto.UpdatePlayerShowNameCardListRsp
	(*GetFriendShowNameCardInfoReq)(nil),       // 123: proto.GetFriendShowNameCardInfoReq
	(*GetFriendShowNameCardInfoRsp)(nil),       // 124: proto.GetFriendShowNameCardInfoRsp
	(*ForceAddPlayerFriendReq)(nil),            // 125: proto.ForceAddPlayerFriendReq
	(*ForceAddPlayerFriendRsp)(nil),            // 126: proto.ForceAddPlayerFriendRsp
	(*ProfilePictureChangeNotify)(nil),         // 127: proto.ProfilePictureChangeNotify
	(*PSNFriendListNotify)(nil),                // 128: proto.PSNFriendListNotify
	(*PSNBlackListNotify)(nil),                 // 129: proto.PSNBlackListNotify
	(*GetPlayerAskFriendListReq)(nil),          // 130: proto.GetPlayerAskFriendListReq
	(*GetPlayerAskFriendListRsp)(nil),          // 131: proto.GetPlayerAskFriendListRsp
	(*GetChatEmojiCollectionReq)(nil),          // 132: proto.GetChatEmojiCollectionReq
	(*GetChatEmojiCollectionRsp)(nil),          // 133: proto.GetChatEmojiCollectionRsp
	(*SetChatEmojiCollectionReq)(nil),          // 134: proto.SetChatEmojiCollectionReq
	(*SetChatEmojiCollectionRsp)(nil),          // 135: proto.SetChatEmojiCollectionRsp
	(*UpdatePS4FriendListReq)(nil),             // 136: proto.UpdatePS4FriendListReq
	(*UpdatePS4FriendListRsp)(nil),             // 137: proto.UpdatePS4FriendListRsp
	(*FriendInfoChangeNotify)(nil),             // 138: proto.FriendInfoChangeNotify
	(*PlayerSignatureAuditDataNotify)(nil),     // 139: proto.PlayerSignatureAuditDataNotify
	(*PlayerSignatureNotify)(nil),              // 140: proto.PlayerSignatureNotify
	(*SignatureAuditConfigNotify)(nil),         // 141: proto.SignatureAuditConfigNotify
	(*ReadSignatureAuditReq)(nil),              // 142: proto.ReadSignatureAuditReq
	(*ReadSignatureAuditRsp)(nil),              // 143: proto.ReadSignatureAuditRsp
	(*Birthday)(nil),                           // 144: proto.Birthday
	(FriendEnterHomeOption)(0),                 // 145: proto.FriendEnterHomeOption
	(*ProfilePicture)(nil),                     // 146: proto.ProfilePicture
	(PlatformType)(0),                          // 147: proto.PlatformType
	(ReportReasonType)(0),                      // 148: proto.ReportReasonType
	(*ShowAvatarInfo)(nil),                     // 149: proto.ShowAvatarInfo
	(*ContentAuditInfo)(nil),                   // 150: proto.ContentAuditInfo
}
var file_cmd_cmd_social_proto_depIdxs = []int32{
	144, // 0: proto.SocialDetail.birthday:type_name -> proto.Birthday
	0,   // 1: proto.SocialDetail.online_state:type_name -> proto.FriendOnlineState
	71,  // 2: proto.SocialDetail.show_avatar_info_list:type_name -> proto.SocialShowAvatarInfo
	145, // 3: proto.SocialDetail.friend_enter_home_option:type_name -> proto.FriendEnterHomeOption
	146, // 4: proto.SocialDetail.profile_picture:type_name -> proto.ProfilePicture
	0,   // 5: proto.FriendBrief.online_state:type_name -> proto.FriendOnlineState
	71,  // 6: proto.FriendBrief.show_avatar_info_list:type_name -> proto.SocialShowAvatarInfo
	145, // 7: proto.FriendBrief.friend_enter_home_option:type_name -> proto.FriendEnterHomeOption
	146, // 8: proto.FriendBrief.profile_picture:type_name -> proto.ProfilePicture
	147, // 9: proto.FriendBrief.platform_type:type_name -> proto.PlatformType
	73,  // 10: proto.GetPlayerFriendListRsp.ask_friend_list:type_name -> proto.FriendBrief
	73,  // 11: proto.GetPlayerFriendListRsp.friend_list:type_name -> proto.FriendBrief
	1,   // 12: proto.DealAddFriendReq.deal_add_friend_result:type_name -> proto.DealAddFriendResultType
	1,   // 13: proto.DealAddFriendRsp.deal_add_friend_result:type_name -> proto.DealAddFriendResultType
	72,  // 14: proto.GetPlayerSocialDetailRsp.detail_data:type_name -> proto.SocialDetail
	144, // 15: proto.SetPlayerBirthdayReq.birthday:type_name -> proto.Birthday
	144, // 16: proto.SetPlayerBirthdayRsp.birthday:type_name -> proto.Birthday
	146, // 17: proto.SetPlayerHeadImageRsp.profile_picture:type_name -> proto.ProfilePicture
	73,  // 18: proto.AddFriendNotify.target_friend_brief:type_name -> proto.FriendBrief
	73,  // 19: proto.AskAddFriendNotify.target_friend_brief:type_name -> proto.FriendBrief
	73,  // 20: proto.AddBlacklistRsp.target_friend_brief:type_name -> proto.FriendBrief
	73,  // 21: proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list:type_name -> proto.FriendBrief
	73,  // 22: proto.GetPlayerBlacklistRsp.blacklist:type_name -> proto.FriendBrief
	148, // 23: proto.PlayerReportReq.reason:type_name -> proto.ReportReasonType
	149, // 24: proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list:type_name -> proto.ShowAvatarInfo
	73,  // 25: proto.ForceAddPlayerFriendRsp.target_friend_brief:type_name -> proto.FriendBrief
	146, // 26: proto.ProfilePictureChangeNotify.profile_picture:type_name -> proto.ProfilePicture
	73,  // 27: proto.PSNFriendListNotify.psn_friend_list:type_name -> proto.FriendBrief
	73,  // 28: proto.PSNBlackListNotify.psn_blacklist:type_name -> proto.FriendBrief
	73,  // 29: proto.GetPlayerAskFriendListRsp.ask_friend_list:type_name -> proto.FriendBrief
	74,  // 30: proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data:type_name -> proto.ChatEmojiCollectionData
	74,  // 31: proto.SetChatEmojiCollectionReq.chat_emoji_collection_data:type_name -> proto.ChatEmojiCollectionData
	150, // 32: proto.PlayerSignatureAuditDataNotify.info:type_name -> proto.ContentAuditInfo
	33,  // [33:33] is the sub-list for method output_type
	33,  // [33:33] is the sub-list for method input_type
	33,  // [33:33] is the sub-list for extension type_name
	33,  // [33:33] is the sub-list for extension extendee
	0,   // [0:33] is the sub-list for field type_name
}

func init() { file_cmd_cmd_social_proto_init() }
func file_cmd_cmd_social_proto_init() {
	if File_cmd_cmd_social_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_social_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialShowAvatarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatEmojiCollectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerFriendListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskAddFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealAddFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerSocialDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerSocialDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerBirthdayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerBirthdayRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerSignatureRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerHeadImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerHeadImageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePS4FriendListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskAddFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNameCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNameCardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUnlockNameCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUnlockNameCardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockNameCardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentMpPlayerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentMpPlayerListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeFirstShareRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeFirstShareRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePS4BlockListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePS4BlockListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerShowAvatarListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerShowAvatarListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendShowAvatarInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendShowAvatarInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerShowNameCardListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerShowNameCardListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendShowNameCardInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendShowNameCardInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceAddPlayerFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceAddPlayerFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilePictureChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PSNFriendListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PSNBlackListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerAskFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerAskFriendListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatEmojiCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatEmojiCollectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatEmojiCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatEmojiCollectionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePS4FriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePS4FriendListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSignatureAuditDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSignatureNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureAuditConfigNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSignatureAuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_social_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSignatureAuditRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_social_proto_rawDesc,
			NumEnums:      71,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_social_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_social_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_social_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_social_proto_msgTypes,
	}.Build()
	File_cmd_cmd_social_proto = out.File
	file_cmd_cmd_social_proto_rawDesc = nil
	file_cmd_cmd_social_proto_goTypes = nil
	file_cmd_cmd_social_proto_depIdxs = nil
}
