// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_fight.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForwardType int32

const (
	ForwardType_FORWARD_LOCAL                   ForwardType = 0
	ForwardType_FORWARD_TO_ALL                  ForwardType = 1
	ForwardType_FORWARD_TO_ALL_EXCEPT_CUR       ForwardType = 2
	ForwardType_FORWARD_TO_HOST                 ForwardType = 3
	ForwardType_FORWARD_TO_ALL_GUEST            ForwardType = 4
	ForwardType_FORWARD_TO_PEER                 ForwardType = 5
	ForwardType_FORWARD_TO_PEERS                ForwardType = 6
	ForwardType_FORWARD_ONLY_SERVER             ForwardType = 7
	ForwardType_FORWARD_TO_ALL_EXIST_EXCEPT_CUR ForwardType = 8
)

// Enum value maps for ForwardType.
var (
	ForwardType_name = map[int32]string{
		0: "FORWARD_LOCAL",
		1: "FORWARD_TO_ALL",
		2: "FORWARD_TO_ALL_EXCEPT_CUR",
		3: "FORWARD_TO_HOST",
		4: "FORWARD_TO_ALL_GUEST",
		5: "FORWARD_TO_PEER",
		6: "FORWARD_TO_PEERS",
		7: "FORWARD_ONLY_SERVER",
		8: "FORWARD_TO_ALL_EXIST_EXCEPT_CUR",
	}
	ForwardType_value = map[string]int32{
		"FORWARD_LOCAL":                   0,
		"FORWARD_TO_ALL":                  1,
		"FORWARD_TO_ALL_EXCEPT_CUR":       2,
		"FORWARD_TO_HOST":                 3,
		"FORWARD_TO_ALL_GUEST":            4,
		"FORWARD_TO_PEER":                 5,
		"FORWARD_TO_PEERS":                6,
		"FORWARD_ONLY_SERVER":             7,
		"FORWARD_TO_ALL_EXIST_EXCEPT_CUR": 8,
	}
)

func (x ForwardType) Enum() *ForwardType {
	p := new(ForwardType)
	*p = x
	return p
}

func (x ForwardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForwardType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[0].Descriptor()
}

func (ForwardType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[0]
}

func (x ForwardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForwardType.Descriptor instead.
func (ForwardType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{0}
}

type HitColliderType int32

const (
	HitColliderType_HIT_COLLIDER_INVALID     HitColliderType = 0
	HitColliderType_HIT_COLLIDER_HIT_BOX     HitColliderType = 1
	HitColliderType_HIT_COLLIDER_WET_HIT_BOX HitColliderType = 2
	HitColliderType_HIT_COLLIDER_HEAD_BOX    HitColliderType = 3
)

// Enum value maps for HitColliderType.
var (
	HitColliderType_name = map[int32]string{
		0: "HIT_COLLIDER_INVALID",
		1: "HIT_COLLIDER_HIT_BOX",
		2: "HIT_COLLIDER_WET_HIT_BOX",
		3: "HIT_COLLIDER_HEAD_BOX",
	}
	HitColliderType_value = map[string]int32{
		"HIT_COLLIDER_INVALID":     0,
		"HIT_COLLIDER_HIT_BOX":     1,
		"HIT_COLLIDER_WET_HIT_BOX": 2,
		"HIT_COLLIDER_HEAD_BOX":    3,
	}
)

func (x HitColliderType) Enum() *HitColliderType {
	p := new(HitColliderType)
	*p = x
	return p
}

func (x HitColliderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HitColliderType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[1].Descriptor()
}

func (HitColliderType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[1]
}

func (x HitColliderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HitColliderType.Descriptor instead.
func (HitColliderType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{1}
}

type CombatTypeArgument int32

const (
	CombatTypeArgument_COMBAT_NONE                       CombatTypeArgument = 0
	CombatTypeArgument_COMBAT_EVT_BEING_HIT              CombatTypeArgument = 1
	CombatTypeArgument_COMBAT_ANIMATOR_STATE_CHANGED     CombatTypeArgument = 2
	CombatTypeArgument_COMBAT_FACE_TO_DIR                CombatTypeArgument = 3
	CombatTypeArgument_COMBAT_SET_ATTACK_TARGET          CombatTypeArgument = 4
	CombatTypeArgument_COMBAT_RUSH_MOVE                  CombatTypeArgument = 5
	CombatTypeArgument_COMBAT_ANIMATOR_PARAMETER_CHANGED CombatTypeArgument = 6
	CombatTypeArgument_ENTITY_MOVE                       CombatTypeArgument = 7
	CombatTypeArgument_SYNC_ENTITY_POSITION              CombatTypeArgument = 8
	CombatTypeArgument_COMBAT_STEER_MOTION_INFO          CombatTypeArgument = 9
	CombatTypeArgument_COMBAT_FORCE_SET_POS_INFO         CombatTypeArgument = 10
	CombatTypeArgument_COMBAT_COMPENSATE_POS_DIFF        CombatTypeArgument = 11
	CombatTypeArgument_COMBAT_MONSTER_DO_BLINK           CombatTypeArgument = 12
	CombatTypeArgument_COMBAT_FIXED_RUSH_MOVE            CombatTypeArgument = 13
	CombatTypeArgument_COMBAT_SYNC_TRANSFORM             CombatTypeArgument = 14
	CombatTypeArgument_COMBAT_LIGHT_CORE_MOVE            CombatTypeArgument = 15
	CombatTypeArgument_COMBAT_BEING_HEALED_NTF           CombatTypeArgument = 16
	CombatTypeArgument_COMBAT_SKILL_ANCHOR_POSITION_NTF  CombatTypeArgument = 17
	CombatTypeArgument_COMBAT_GRAPPLING_HOOK_MOVE        CombatTypeArgument = 18
)

// Enum value maps for CombatTypeArgument.
var (
	CombatTypeArgument_name = map[int32]string{
		0:  "COMBAT_NONE",
		1:  "COMBAT_EVT_BEING_HIT",
		2:  "COMBAT_ANIMATOR_STATE_CHANGED",
		3:  "COMBAT_FACE_TO_DIR",
		4:  "COMBAT_SET_ATTACK_TARGET",
		5:  "COMBAT_RUSH_MOVE",
		6:  "COMBAT_ANIMATOR_PARAMETER_CHANGED",
		7:  "ENTITY_MOVE",
		8:  "SYNC_ENTITY_POSITION",
		9:  "COMBAT_STEER_MOTION_INFO",
		10: "COMBAT_FORCE_SET_POS_INFO",
		11: "COMBAT_COMPENSATE_POS_DIFF",
		12: "COMBAT_MONSTER_DO_BLINK",
		13: "COMBAT_FIXED_RUSH_MOVE",
		14: "COMBAT_SYNC_TRANSFORM",
		15: "COMBAT_LIGHT_CORE_MOVE",
		16: "COMBAT_BEING_HEALED_NTF",
		17: "COMBAT_SKILL_ANCHOR_POSITION_NTF",
		18: "COMBAT_GRAPPLING_HOOK_MOVE",
	}
	CombatTypeArgument_value = map[string]int32{
		"COMBAT_NONE":                       0,
		"COMBAT_EVT_BEING_HIT":              1,
		"COMBAT_ANIMATOR_STATE_CHANGED":     2,
		"COMBAT_FACE_TO_DIR":                3,
		"COMBAT_SET_ATTACK_TARGET":          4,
		"COMBAT_RUSH_MOVE":                  5,
		"COMBAT_ANIMATOR_PARAMETER_CHANGED": 6,
		"ENTITY_MOVE":                       7,
		"SYNC_ENTITY_POSITION":              8,
		"COMBAT_STEER_MOTION_INFO":          9,
		"COMBAT_FORCE_SET_POS_INFO":         10,
		"COMBAT_COMPENSATE_POS_DIFF":        11,
		"COMBAT_MONSTER_DO_BLINK":           12,
		"COMBAT_FIXED_RUSH_MOVE":            13,
		"COMBAT_SYNC_TRANSFORM":             14,
		"COMBAT_LIGHT_CORE_MOVE":            15,
		"COMBAT_BEING_HEALED_NTF":           16,
		"COMBAT_SKILL_ANCHOR_POSITION_NTF":  17,
		"COMBAT_GRAPPLING_HOOK_MOVE":        18,
	}
)

func (x CombatTypeArgument) Enum() *CombatTypeArgument {
	p := new(CombatTypeArgument)
	*p = x
	return p
}

func (x CombatTypeArgument) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombatTypeArgument) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[2].Descriptor()
}

func (CombatTypeArgument) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[2]
}

func (x CombatTypeArgument) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombatTypeArgument.Descriptor instead.
func (CombatTypeArgument) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{2}
}

type EvtBeingHitNotify_CmdId int32

const (
	EvtBeingHitNotify_NONE             EvtBeingHitNotify_CmdId = 0
	EvtBeingHitNotify_CMD_ID           EvtBeingHitNotify_CmdId = 372
	EvtBeingHitNotify_ENET_CHANNEL_ID  EvtBeingHitNotify_CmdId = 0
	EvtBeingHitNotify_ENET_IS_RELIABLE EvtBeingHitNotify_CmdId = 1
	EvtBeingHitNotify_IS_ALLOW_CLIENT  EvtBeingHitNotify_CmdId = 1
)

// Enum value maps for EvtBeingHitNotify_CmdId.
var (
	EvtBeingHitNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		372: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtBeingHitNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           372,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtBeingHitNotify_CmdId) Enum() *EvtBeingHitNotify_CmdId {
	p := new(EvtBeingHitNotify_CmdId)
	*p = x
	return p
}

func (x EvtBeingHitNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBeingHitNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[3].Descriptor()
}

func (EvtBeingHitNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[3]
}

func (x EvtBeingHitNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBeingHitNotify_CmdId.Descriptor instead.
func (EvtBeingHitNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{6, 0}
}

type EvtAnimatorParameterNotify_CmdId int32

const (
	EvtAnimatorParameterNotify_NONE             EvtAnimatorParameterNotify_CmdId = 0
	EvtAnimatorParameterNotify_CMD_ID           EvtAnimatorParameterNotify_CmdId = 398
	EvtAnimatorParameterNotify_ENET_CHANNEL_ID  EvtAnimatorParameterNotify_CmdId = 0
	EvtAnimatorParameterNotify_ENET_IS_RELIABLE EvtAnimatorParameterNotify_CmdId = 1
	EvtAnimatorParameterNotify_IS_ALLOW_CLIENT  EvtAnimatorParameterNotify_CmdId = 1
)

// Enum value maps for EvtAnimatorParameterNotify_CmdId.
var (
	EvtAnimatorParameterNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		398: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAnimatorParameterNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           398,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAnimatorParameterNotify_CmdId) Enum() *EvtAnimatorParameterNotify_CmdId {
	p := new(EvtAnimatorParameterNotify_CmdId)
	*p = x
	return p
}

func (x EvtAnimatorParameterNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAnimatorParameterNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[4].Descriptor()
}

func (EvtAnimatorParameterNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[4]
}

func (x EvtAnimatorParameterNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAnimatorParameterNotify_CmdId.Descriptor instead.
func (EvtAnimatorParameterNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{8, 0}
}

type HostPlayerNotify_CmdId int32

const (
	HostPlayerNotify_NONE             HostPlayerNotify_CmdId = 0
	HostPlayerNotify_CMD_ID           HostPlayerNotify_CmdId = 312
	HostPlayerNotify_ENET_CHANNEL_ID  HostPlayerNotify_CmdId = 0
	HostPlayerNotify_ENET_IS_RELIABLE HostPlayerNotify_CmdId = 1
)

// Enum value maps for HostPlayerNotify_CmdId.
var (
	HostPlayerNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		312: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	HostPlayerNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           312,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x HostPlayerNotify_CmdId) Enum() *HostPlayerNotify_CmdId {
	p := new(HostPlayerNotify_CmdId)
	*p = x
	return p
}

func (x HostPlayerNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostPlayerNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[5].Descriptor()
}

func (HostPlayerNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[5]
}

func (x HostPlayerNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostPlayerNotify_CmdId.Descriptor instead.
func (HostPlayerNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{10, 0}
}

type EvtDoSkillSuccNotify_CmdId int32

const (
	EvtDoSkillSuccNotify_NONE             EvtDoSkillSuccNotify_CmdId = 0
	EvtDoSkillSuccNotify_CMD_ID           EvtDoSkillSuccNotify_CmdId = 335
	EvtDoSkillSuccNotify_ENET_CHANNEL_ID  EvtDoSkillSuccNotify_CmdId = 0
	EvtDoSkillSuccNotify_ENET_IS_RELIABLE EvtDoSkillSuccNotify_CmdId = 1
	EvtDoSkillSuccNotify_IS_ALLOW_CLIENT  EvtDoSkillSuccNotify_CmdId = 1
)

// Enum value maps for EvtDoSkillSuccNotify_CmdId.
var (
	EvtDoSkillSuccNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		335: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtDoSkillSuccNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           335,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtDoSkillSuccNotify_CmdId) Enum() *EvtDoSkillSuccNotify_CmdId {
	p := new(EvtDoSkillSuccNotify_CmdId)
	*p = x
	return p
}

func (x EvtDoSkillSuccNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtDoSkillSuccNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[6].Descriptor()
}

func (EvtDoSkillSuccNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[6]
}

func (x EvtDoSkillSuccNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtDoSkillSuccNotify_CmdId.Descriptor instead.
func (EvtDoSkillSuccNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{11, 0}
}

type EvtCreateGadgetNotify_CmdId int32

const (
	EvtCreateGadgetNotify_NONE             EvtCreateGadgetNotify_CmdId = 0
	EvtCreateGadgetNotify_CMD_ID           EvtCreateGadgetNotify_CmdId = 307
	EvtCreateGadgetNotify_ENET_CHANNEL_ID  EvtCreateGadgetNotify_CmdId = 0
	EvtCreateGadgetNotify_ENET_IS_RELIABLE EvtCreateGadgetNotify_CmdId = 1
	EvtCreateGadgetNotify_IS_ALLOW_CLIENT  EvtCreateGadgetNotify_CmdId = 1
)

// Enum value maps for EvtCreateGadgetNotify_CmdId.
var (
	EvtCreateGadgetNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		307: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtCreateGadgetNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           307,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtCreateGadgetNotify_CmdId) Enum() *EvtCreateGadgetNotify_CmdId {
	p := new(EvtCreateGadgetNotify_CmdId)
	*p = x
	return p
}

func (x EvtCreateGadgetNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtCreateGadgetNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[7].Descriptor()
}

func (EvtCreateGadgetNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[7]
}

func (x EvtCreateGadgetNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtCreateGadgetNotify_CmdId.Descriptor instead.
func (EvtCreateGadgetNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{12, 0}
}

type EvtDestroyGadgetNotify_CmdId int32

const (
	EvtDestroyGadgetNotify_NONE             EvtDestroyGadgetNotify_CmdId = 0
	EvtDestroyGadgetNotify_CMD_ID           EvtDestroyGadgetNotify_CmdId = 321
	EvtDestroyGadgetNotify_ENET_CHANNEL_ID  EvtDestroyGadgetNotify_CmdId = 0
	EvtDestroyGadgetNotify_ENET_IS_RELIABLE EvtDestroyGadgetNotify_CmdId = 1
	EvtDestroyGadgetNotify_IS_ALLOW_CLIENT  EvtDestroyGadgetNotify_CmdId = 1
)

// Enum value maps for EvtDestroyGadgetNotify_CmdId.
var (
	EvtDestroyGadgetNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		321: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtDestroyGadgetNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           321,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtDestroyGadgetNotify_CmdId) Enum() *EvtDestroyGadgetNotify_CmdId {
	p := new(EvtDestroyGadgetNotify_CmdId)
	*p = x
	return p
}

func (x EvtDestroyGadgetNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtDestroyGadgetNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[8].Descriptor()
}

func (EvtDestroyGadgetNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[8]
}

func (x EvtDestroyGadgetNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtDestroyGadgetNotify_CmdId.Descriptor instead.
func (EvtDestroyGadgetNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{13, 0}
}

type EvtFaceToEntityNotify_CmdId int32

const (
	EvtFaceToEntityNotify_NONE             EvtFaceToEntityNotify_CmdId = 0
	EvtFaceToEntityNotify_CMD_ID           EvtFaceToEntityNotify_CmdId = 303
	EvtFaceToEntityNotify_ENET_CHANNEL_ID  EvtFaceToEntityNotify_CmdId = 0
	EvtFaceToEntityNotify_ENET_IS_RELIABLE EvtFaceToEntityNotify_CmdId = 1
	EvtFaceToEntityNotify_IS_ALLOW_CLIENT  EvtFaceToEntityNotify_CmdId = 1
)

// Enum value maps for EvtFaceToEntityNotify_CmdId.
var (
	EvtFaceToEntityNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		303: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtFaceToEntityNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           303,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtFaceToEntityNotify_CmdId) Enum() *EvtFaceToEntityNotify_CmdId {
	p := new(EvtFaceToEntityNotify_CmdId)
	*p = x
	return p
}

func (x EvtFaceToEntityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtFaceToEntityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[9].Descriptor()
}

func (EvtFaceToEntityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[9]
}

func (x EvtFaceToEntityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtFaceToEntityNotify_CmdId.Descriptor instead.
func (EvtFaceToEntityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{14, 0}
}

type EvtFaceToDirNotify_CmdId int32

const (
	EvtFaceToDirNotify_NONE             EvtFaceToDirNotify_CmdId = 0
	EvtFaceToDirNotify_CMD_ID           EvtFaceToDirNotify_CmdId = 390
	EvtFaceToDirNotify_ENET_CHANNEL_ID  EvtFaceToDirNotify_CmdId = 0
	EvtFaceToDirNotify_ENET_IS_RELIABLE EvtFaceToDirNotify_CmdId = 1
	EvtFaceToDirNotify_IS_ALLOW_CLIENT  EvtFaceToDirNotify_CmdId = 1
)

// Enum value maps for EvtFaceToDirNotify_CmdId.
var (
	EvtFaceToDirNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		390: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtFaceToDirNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           390,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtFaceToDirNotify_CmdId) Enum() *EvtFaceToDirNotify_CmdId {
	p := new(EvtFaceToDirNotify_CmdId)
	*p = x
	return p
}

func (x EvtFaceToDirNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtFaceToDirNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[10].Descriptor()
}

func (EvtFaceToDirNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[10]
}

func (x EvtFaceToDirNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtFaceToDirNotify_CmdId.Descriptor instead.
func (EvtFaceToDirNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{16, 0}
}

type EvtCostStaminaNotify_CmdId int32

const (
	EvtCostStaminaNotify_NONE             EvtCostStaminaNotify_CmdId = 0
	EvtCostStaminaNotify_CMD_ID           EvtCostStaminaNotify_CmdId = 373
	EvtCostStaminaNotify_ENET_CHANNEL_ID  EvtCostStaminaNotify_CmdId = 0
	EvtCostStaminaNotify_ENET_IS_RELIABLE EvtCostStaminaNotify_CmdId = 1
	EvtCostStaminaNotify_IS_ALLOW_CLIENT  EvtCostStaminaNotify_CmdId = 1
)

// Enum value maps for EvtCostStaminaNotify_CmdId.
var (
	EvtCostStaminaNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		373: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtCostStaminaNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           373,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtCostStaminaNotify_CmdId) Enum() *EvtCostStaminaNotify_CmdId {
	p := new(EvtCostStaminaNotify_CmdId)
	*p = x
	return p
}

func (x EvtCostStaminaNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtCostStaminaNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[11].Descriptor()
}

func (EvtCostStaminaNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[11]
}

func (x EvtCostStaminaNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtCostStaminaNotify_CmdId.Descriptor instead.
func (EvtCostStaminaNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{17, 0}
}

type EvtSetAttackTargetNotify_CmdId int32

const (
	EvtSetAttackTargetNotify_NONE             EvtSetAttackTargetNotify_CmdId = 0
	EvtSetAttackTargetNotify_CMD_ID           EvtSetAttackTargetNotify_CmdId = 399
	EvtSetAttackTargetNotify_ENET_CHANNEL_ID  EvtSetAttackTargetNotify_CmdId = 0
	EvtSetAttackTargetNotify_ENET_IS_RELIABLE EvtSetAttackTargetNotify_CmdId = 1
	EvtSetAttackTargetNotify_IS_ALLOW_CLIENT  EvtSetAttackTargetNotify_CmdId = 1
)

// Enum value maps for EvtSetAttackTargetNotify_CmdId.
var (
	EvtSetAttackTargetNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		399: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtSetAttackTargetNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           399,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtSetAttackTargetNotify_CmdId) Enum() *EvtSetAttackTargetNotify_CmdId {
	p := new(EvtSetAttackTargetNotify_CmdId)
	*p = x
	return p
}

func (x EvtSetAttackTargetNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtSetAttackTargetNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[12].Descriptor()
}

func (EvtSetAttackTargetNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[12]
}

func (x EvtSetAttackTargetNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtSetAttackTargetNotify_CmdId.Descriptor instead.
func (EvtSetAttackTargetNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{19, 0}
}

type EvtAnimatorStateChangedNotify_CmdId int32

const (
	EvtAnimatorStateChangedNotify_NONE             EvtAnimatorStateChangedNotify_CmdId = 0
	EvtAnimatorStateChangedNotify_CMD_ID           EvtAnimatorStateChangedNotify_CmdId = 331
	EvtAnimatorStateChangedNotify_ENET_CHANNEL_ID  EvtAnimatorStateChangedNotify_CmdId = 0
	EvtAnimatorStateChangedNotify_ENET_IS_RELIABLE EvtAnimatorStateChangedNotify_CmdId = 1
	EvtAnimatorStateChangedNotify_IS_ALLOW_CLIENT  EvtAnimatorStateChangedNotify_CmdId = 1
)

// Enum value maps for EvtAnimatorStateChangedNotify_CmdId.
var (
	EvtAnimatorStateChangedNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		331: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAnimatorStateChangedNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           331,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAnimatorStateChangedNotify_CmdId) Enum() *EvtAnimatorStateChangedNotify_CmdId {
	p := new(EvtAnimatorStateChangedNotify_CmdId)
	*p = x
	return p
}

func (x EvtAnimatorStateChangedNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAnimatorStateChangedNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[13].Descriptor()
}

func (EvtAnimatorStateChangedNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[13]
}

func (x EvtAnimatorStateChangedNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAnimatorStateChangedNotify_CmdId.Descriptor instead.
func (EvtAnimatorStateChangedNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{27, 0}
}

type EvtRushMoveNotify_CmdId int32

const (
	EvtRushMoveNotify_NONE             EvtRushMoveNotify_CmdId = 0
	EvtRushMoveNotify_CMD_ID           EvtRushMoveNotify_CmdId = 375
	EvtRushMoveNotify_ENET_CHANNEL_ID  EvtRushMoveNotify_CmdId = 0
	EvtRushMoveNotify_ENET_IS_RELIABLE EvtRushMoveNotify_CmdId = 1
	EvtRushMoveNotify_IS_ALLOW_CLIENT  EvtRushMoveNotify_CmdId = 1
)

// Enum value maps for EvtRushMoveNotify_CmdId.
var (
	EvtRushMoveNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		375: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtRushMoveNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           375,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtRushMoveNotify_CmdId) Enum() *EvtRushMoveNotify_CmdId {
	p := new(EvtRushMoveNotify_CmdId)
	*p = x
	return p
}

func (x EvtRushMoveNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtRushMoveNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[14].Descriptor()
}

func (EvtRushMoveNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[14]
}

func (x EvtRushMoveNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtRushMoveNotify_CmdId.Descriptor instead.
func (EvtRushMoveNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{33, 0}
}

type EvtBulletHitNotify_CmdId int32

const (
	EvtBulletHitNotify_NONE             EvtBulletHitNotify_CmdId = 0
	EvtBulletHitNotify_CMD_ID           EvtBulletHitNotify_CmdId = 348
	EvtBulletHitNotify_ENET_CHANNEL_ID  EvtBulletHitNotify_CmdId = 0
	EvtBulletHitNotify_ENET_IS_RELIABLE EvtBulletHitNotify_CmdId = 1
	EvtBulletHitNotify_IS_ALLOW_CLIENT  EvtBulletHitNotify_CmdId = 1
)

// Enum value maps for EvtBulletHitNotify_CmdId.
var (
	EvtBulletHitNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		348: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtBulletHitNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           348,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtBulletHitNotify_CmdId) Enum() *EvtBulletHitNotify_CmdId {
	p := new(EvtBulletHitNotify_CmdId)
	*p = x
	return p
}

func (x EvtBulletHitNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBulletHitNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[15].Descriptor()
}

func (EvtBulletHitNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[15]
}

func (x EvtBulletHitNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBulletHitNotify_CmdId.Descriptor instead.
func (EvtBulletHitNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{34, 0}
}

type EvtBulletDeactiveNotify_CmdId int32

const (
	EvtBulletDeactiveNotify_NONE             EvtBulletDeactiveNotify_CmdId = 0
	EvtBulletDeactiveNotify_CMD_ID           EvtBulletDeactiveNotify_CmdId = 397
	EvtBulletDeactiveNotify_ENET_CHANNEL_ID  EvtBulletDeactiveNotify_CmdId = 0
	EvtBulletDeactiveNotify_ENET_IS_RELIABLE EvtBulletDeactiveNotify_CmdId = 1
	EvtBulletDeactiveNotify_IS_ALLOW_CLIENT  EvtBulletDeactiveNotify_CmdId = 1
)

// Enum value maps for EvtBulletDeactiveNotify_CmdId.
var (
	EvtBulletDeactiveNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		397: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtBulletDeactiveNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           397,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtBulletDeactiveNotify_CmdId) Enum() *EvtBulletDeactiveNotify_CmdId {
	p := new(EvtBulletDeactiveNotify_CmdId)
	*p = x
	return p
}

func (x EvtBulletDeactiveNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBulletDeactiveNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[16].Descriptor()
}

func (EvtBulletDeactiveNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[16]
}

func (x EvtBulletDeactiveNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBulletDeactiveNotify_CmdId.Descriptor instead.
func (EvtBulletDeactiveNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{35, 0}
}

type EvtEntityStartDieEndNotify_CmdId int32

const (
	EvtEntityStartDieEndNotify_NONE             EvtEntityStartDieEndNotify_CmdId = 0
	EvtEntityStartDieEndNotify_CMD_ID           EvtEntityStartDieEndNotify_CmdId = 381
	EvtEntityStartDieEndNotify_ENET_CHANNEL_ID  EvtEntityStartDieEndNotify_CmdId = 0
	EvtEntityStartDieEndNotify_ENET_IS_RELIABLE EvtEntityStartDieEndNotify_CmdId = 1
	EvtEntityStartDieEndNotify_IS_ALLOW_CLIENT  EvtEntityStartDieEndNotify_CmdId = 1
)

// Enum value maps for EvtEntityStartDieEndNotify_CmdId.
var (
	EvtEntityStartDieEndNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		381: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtEntityStartDieEndNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           381,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtEntityStartDieEndNotify_CmdId) Enum() *EvtEntityStartDieEndNotify_CmdId {
	p := new(EvtEntityStartDieEndNotify_CmdId)
	*p = x
	return p
}

func (x EvtEntityStartDieEndNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtEntityStartDieEndNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[17].Descriptor()
}

func (EvtEntityStartDieEndNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[17]
}

func (x EvtEntityStartDieEndNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtEntityStartDieEndNotify_CmdId.Descriptor instead.
func (EvtEntityStartDieEndNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{36, 0}
}

type EvtBulletMoveNotify_CmdId int32

const (
	EvtBulletMoveNotify_NONE             EvtBulletMoveNotify_CmdId = 0
	EvtBulletMoveNotify_CMD_ID           EvtBulletMoveNotify_CmdId = 365
	EvtBulletMoveNotify_ENET_CHANNEL_ID  EvtBulletMoveNotify_CmdId = 0
	EvtBulletMoveNotify_ENET_IS_RELIABLE EvtBulletMoveNotify_CmdId = 1
	EvtBulletMoveNotify_IS_ALLOW_CLIENT  EvtBulletMoveNotify_CmdId = 1
)

// Enum value maps for EvtBulletMoveNotify_CmdId.
var (
	EvtBulletMoveNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		365: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtBulletMoveNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           365,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtBulletMoveNotify_CmdId) Enum() *EvtBulletMoveNotify_CmdId {
	p := new(EvtBulletMoveNotify_CmdId)
	*p = x
	return p
}

func (x EvtBulletMoveNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBulletMoveNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[18].Descriptor()
}

func (EvtBulletMoveNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[18]
}

func (x EvtBulletMoveNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBulletMoveNotify_CmdId.Descriptor instead.
func (EvtBulletMoveNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{37, 0}
}

type EvtAvatarEnterFocusNotify_CmdId int32

const (
	EvtAvatarEnterFocusNotify_NONE             EvtAvatarEnterFocusNotify_CmdId = 0
	EvtAvatarEnterFocusNotify_CMD_ID           EvtAvatarEnterFocusNotify_CmdId = 304
	EvtAvatarEnterFocusNotify_ENET_CHANNEL_ID  EvtAvatarEnterFocusNotify_CmdId = 0
	EvtAvatarEnterFocusNotify_ENET_IS_RELIABLE EvtAvatarEnterFocusNotify_CmdId = 1
	EvtAvatarEnterFocusNotify_IS_ALLOW_CLIENT  EvtAvatarEnterFocusNotify_CmdId = 1
)

// Enum value maps for EvtAvatarEnterFocusNotify_CmdId.
var (
	EvtAvatarEnterFocusNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		304: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarEnterFocusNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           304,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarEnterFocusNotify_CmdId) Enum() *EvtAvatarEnterFocusNotify_CmdId {
	p := new(EvtAvatarEnterFocusNotify_CmdId)
	*p = x
	return p
}

func (x EvtAvatarEnterFocusNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarEnterFocusNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[19].Descriptor()
}

func (EvtAvatarEnterFocusNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[19]
}

func (x EvtAvatarEnterFocusNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarEnterFocusNotify_CmdId.Descriptor instead.
func (EvtAvatarEnterFocusNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{38, 0}
}

type EvtAvatarExitFocusNotify_CmdId int32

const (
	EvtAvatarExitFocusNotify_NONE             EvtAvatarExitFocusNotify_CmdId = 0
	EvtAvatarExitFocusNotify_CMD_ID           EvtAvatarExitFocusNotify_CmdId = 393
	EvtAvatarExitFocusNotify_ENET_CHANNEL_ID  EvtAvatarExitFocusNotify_CmdId = 0
	EvtAvatarExitFocusNotify_ENET_IS_RELIABLE EvtAvatarExitFocusNotify_CmdId = 1
	EvtAvatarExitFocusNotify_IS_ALLOW_CLIENT  EvtAvatarExitFocusNotify_CmdId = 1
)

// Enum value maps for EvtAvatarExitFocusNotify_CmdId.
var (
	EvtAvatarExitFocusNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		393: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarExitFocusNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           393,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarExitFocusNotify_CmdId) Enum() *EvtAvatarExitFocusNotify_CmdId {
	p := new(EvtAvatarExitFocusNotify_CmdId)
	*p = x
	return p
}

func (x EvtAvatarExitFocusNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarExitFocusNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[20].Descriptor()
}

func (EvtAvatarExitFocusNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[20]
}

func (x EvtAvatarExitFocusNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarExitFocusNotify_CmdId.Descriptor instead.
func (EvtAvatarExitFocusNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{39, 0}
}

type EvtAvatarUpdateFocusNotify_CmdId int32

const (
	EvtAvatarUpdateFocusNotify_NONE             EvtAvatarUpdateFocusNotify_CmdId = 0
	EvtAvatarUpdateFocusNotify_CMD_ID           EvtAvatarUpdateFocusNotify_CmdId = 327
	EvtAvatarUpdateFocusNotify_ENET_CHANNEL_ID  EvtAvatarUpdateFocusNotify_CmdId = 0
	EvtAvatarUpdateFocusNotify_ENET_IS_RELIABLE EvtAvatarUpdateFocusNotify_CmdId = 1
	EvtAvatarUpdateFocusNotify_IS_ALLOW_CLIENT  EvtAvatarUpdateFocusNotify_CmdId = 1
)

// Enum value maps for EvtAvatarUpdateFocusNotify_CmdId.
var (
	EvtAvatarUpdateFocusNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		327: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarUpdateFocusNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           327,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarUpdateFocusNotify_CmdId) Enum() *EvtAvatarUpdateFocusNotify_CmdId {
	p := new(EvtAvatarUpdateFocusNotify_CmdId)
	*p = x
	return p
}

func (x EvtAvatarUpdateFocusNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarUpdateFocusNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[21].Descriptor()
}

func (EvtAvatarUpdateFocusNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[21]
}

func (x EvtAvatarUpdateFocusNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarUpdateFocusNotify_CmdId.Descriptor instead.
func (EvtAvatarUpdateFocusNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{40, 0}
}

type EntityAuthorityChangeNotify_CmdId int32

const (
	EntityAuthorityChangeNotify_NONE             EntityAuthorityChangeNotify_CmdId = 0
	EntityAuthorityChangeNotify_CMD_ID           EntityAuthorityChangeNotify_CmdId = 394
	EntityAuthorityChangeNotify_ENET_CHANNEL_ID  EntityAuthorityChangeNotify_CmdId = 0
	EntityAuthorityChangeNotify_ENET_IS_RELIABLE EntityAuthorityChangeNotify_CmdId = 1
)

// Enum value maps for EntityAuthorityChangeNotify_CmdId.
var (
	EntityAuthorityChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		394: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	EntityAuthorityChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           394,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x EntityAuthorityChangeNotify_CmdId) Enum() *EntityAuthorityChangeNotify_CmdId {
	p := new(EntityAuthorityChangeNotify_CmdId)
	*p = x
	return p
}

func (x EntityAuthorityChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityAuthorityChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[22].Descriptor()
}

func (EntityAuthorityChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[22]
}

func (x EntityAuthorityChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityAuthorityChangeNotify_CmdId.Descriptor instead.
func (EntityAuthorityChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{42, 0}
}

type AvatarBuffAddNotify_CmdId int32

const (
	AvatarBuffAddNotify_NONE             AvatarBuffAddNotify_CmdId = 0
	AvatarBuffAddNotify_CMD_ID           AvatarBuffAddNotify_CmdId = 388
	AvatarBuffAddNotify_ENET_CHANNEL_ID  AvatarBuffAddNotify_CmdId = 0
	AvatarBuffAddNotify_ENET_IS_RELIABLE AvatarBuffAddNotify_CmdId = 1
	AvatarBuffAddNotify_IS_ALLOW_CLIENT  AvatarBuffAddNotify_CmdId = 1
)

// Enum value maps for AvatarBuffAddNotify_CmdId.
var (
	AvatarBuffAddNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		388: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarBuffAddNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           388,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarBuffAddNotify_CmdId) Enum() *AvatarBuffAddNotify_CmdId {
	p := new(AvatarBuffAddNotify_CmdId)
	*p = x
	return p
}

func (x AvatarBuffAddNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarBuffAddNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[23].Descriptor()
}

func (AvatarBuffAddNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[23]
}

func (x AvatarBuffAddNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarBuffAddNotify_CmdId.Descriptor instead.
func (AvatarBuffAddNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{43, 0}
}

type AvatarBuffDelNotify_CmdId int32

const (
	AvatarBuffDelNotify_NONE             AvatarBuffDelNotify_CmdId = 0
	AvatarBuffDelNotify_CMD_ID           AvatarBuffDelNotify_CmdId = 326
	AvatarBuffDelNotify_ENET_CHANNEL_ID  AvatarBuffDelNotify_CmdId = 0
	AvatarBuffDelNotify_ENET_IS_RELIABLE AvatarBuffDelNotify_CmdId = 1
	AvatarBuffDelNotify_IS_ALLOW_CLIENT  AvatarBuffDelNotify_CmdId = 1
)

// Enum value maps for AvatarBuffDelNotify_CmdId.
var (
	AvatarBuffDelNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		326: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarBuffDelNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           326,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarBuffDelNotify_CmdId) Enum() *AvatarBuffDelNotify_CmdId {
	p := new(AvatarBuffDelNotify_CmdId)
	*p = x
	return p
}

func (x AvatarBuffDelNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarBuffDelNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[24].Descriptor()
}

func (AvatarBuffDelNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[24]
}

func (x AvatarBuffDelNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarBuffDelNotify_CmdId.Descriptor instead.
func (AvatarBuffDelNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{44, 0}
}

type MonsterAlertChangeNotify_CmdId int32

const (
	MonsterAlertChangeNotify_NONE             MonsterAlertChangeNotify_CmdId = 0
	MonsterAlertChangeNotify_CMD_ID           MonsterAlertChangeNotify_CmdId = 363
	MonsterAlertChangeNotify_ENET_CHANNEL_ID  MonsterAlertChangeNotify_CmdId = 0
	MonsterAlertChangeNotify_ENET_IS_RELIABLE MonsterAlertChangeNotify_CmdId = 1
	MonsterAlertChangeNotify_IS_ALLOW_CLIENT  MonsterAlertChangeNotify_CmdId = 1
)

// Enum value maps for MonsterAlertChangeNotify_CmdId.
var (
	MonsterAlertChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		363: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	MonsterAlertChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           363,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x MonsterAlertChangeNotify_CmdId) Enum() *MonsterAlertChangeNotify_CmdId {
	p := new(MonsterAlertChangeNotify_CmdId)
	*p = x
	return p
}

func (x MonsterAlertChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonsterAlertChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[25].Descriptor()
}

func (MonsterAlertChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[25]
}

func (x MonsterAlertChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonsterAlertChangeNotify_CmdId.Descriptor instead.
func (MonsterAlertChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{45, 0}
}

type MonsterForceAlertNotify_CmdId int32

const (
	MonsterForceAlertNotify_NONE             MonsterForceAlertNotify_CmdId = 0
	MonsterForceAlertNotify_CMD_ID           MonsterForceAlertNotify_CmdId = 395
	MonsterForceAlertNotify_ENET_CHANNEL_ID  MonsterForceAlertNotify_CmdId = 0
	MonsterForceAlertNotify_ENET_IS_RELIABLE MonsterForceAlertNotify_CmdId = 1
)

// Enum value maps for MonsterForceAlertNotify_CmdId.
var (
	MonsterForceAlertNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		395: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	MonsterForceAlertNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           395,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x MonsterForceAlertNotify_CmdId) Enum() *MonsterForceAlertNotify_CmdId {
	p := new(MonsterForceAlertNotify_CmdId)
	*p = x
	return p
}

func (x MonsterForceAlertNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonsterForceAlertNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[26].Descriptor()
}

func (MonsterForceAlertNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[26]
}

func (x MonsterForceAlertNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonsterForceAlertNotify_CmdId.Descriptor instead.
func (MonsterForceAlertNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{46, 0}
}

type AvatarEnterElementViewNotify_CmdId int32

const (
	AvatarEnterElementViewNotify_NONE             AvatarEnterElementViewNotify_CmdId = 0
	AvatarEnterElementViewNotify_CMD_ID           AvatarEnterElementViewNotify_CmdId = 334
	AvatarEnterElementViewNotify_ENET_CHANNEL_ID  AvatarEnterElementViewNotify_CmdId = 0
	AvatarEnterElementViewNotify_ENET_IS_RELIABLE AvatarEnterElementViewNotify_CmdId = 1
	AvatarEnterElementViewNotify_IS_ALLOW_CLIENT  AvatarEnterElementViewNotify_CmdId = 1
)

// Enum value maps for AvatarEnterElementViewNotify_CmdId.
var (
	AvatarEnterElementViewNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		334: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarEnterElementViewNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           334,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarEnterElementViewNotify_CmdId) Enum() *AvatarEnterElementViewNotify_CmdId {
	p := new(AvatarEnterElementViewNotify_CmdId)
	*p = x
	return p
}

func (x AvatarEnterElementViewNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarEnterElementViewNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[27].Descriptor()
}

func (AvatarEnterElementViewNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[27]
}

func (x AvatarEnterElementViewNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarEnterElementViewNotify_CmdId.Descriptor instead.
func (AvatarEnterElementViewNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{47, 0}
}

type TriggerCreateGadgetToEquipPartNotify_CmdId int32

const (
	TriggerCreateGadgetToEquipPartNotify_NONE             TriggerCreateGadgetToEquipPartNotify_CmdId = 0
	TriggerCreateGadgetToEquipPartNotify_CMD_ID           TriggerCreateGadgetToEquipPartNotify_CmdId = 350
	TriggerCreateGadgetToEquipPartNotify_ENET_CHANNEL_ID  TriggerCreateGadgetToEquipPartNotify_CmdId = 0
	TriggerCreateGadgetToEquipPartNotify_ENET_IS_RELIABLE TriggerCreateGadgetToEquipPartNotify_CmdId = 1
)

// Enum value maps for TriggerCreateGadgetToEquipPartNotify_CmdId.
var (
	TriggerCreateGadgetToEquipPartNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		350: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	TriggerCreateGadgetToEquipPartNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           350,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x TriggerCreateGadgetToEquipPartNotify_CmdId) Enum() *TriggerCreateGadgetToEquipPartNotify_CmdId {
	p := new(TriggerCreateGadgetToEquipPartNotify_CmdId)
	*p = x
	return p
}

func (x TriggerCreateGadgetToEquipPartNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerCreateGadgetToEquipPartNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[28].Descriptor()
}

func (TriggerCreateGadgetToEquipPartNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[28]
}

func (x TriggerCreateGadgetToEquipPartNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerCreateGadgetToEquipPartNotify_CmdId.Descriptor instead.
func (TriggerCreateGadgetToEquipPartNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{48, 0}
}

type EvtEntityRenderersChangedNotify_CmdId int32

const (
	EvtEntityRenderersChangedNotify_NONE             EvtEntityRenderersChangedNotify_CmdId = 0
	EvtEntityRenderersChangedNotify_CMD_ID           EvtEntityRenderersChangedNotify_CmdId = 343
	EvtEntityRenderersChangedNotify_ENET_CHANNEL_ID  EvtEntityRenderersChangedNotify_CmdId = 0
	EvtEntityRenderersChangedNotify_ENET_IS_RELIABLE EvtEntityRenderersChangedNotify_CmdId = 1
	EvtEntityRenderersChangedNotify_IS_ALLOW_CLIENT  EvtEntityRenderersChangedNotify_CmdId = 1
)

// Enum value maps for EvtEntityRenderersChangedNotify_CmdId.
var (
	EvtEntityRenderersChangedNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		343: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtEntityRenderersChangedNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           343,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtEntityRenderersChangedNotify_CmdId) Enum() *EvtEntityRenderersChangedNotify_CmdId {
	p := new(EvtEntityRenderersChangedNotify_CmdId)
	*p = x
	return p
}

func (x EvtEntityRenderersChangedNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtEntityRenderersChangedNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[29].Descriptor()
}

func (EvtEntityRenderersChangedNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[29]
}

func (x EvtEntityRenderersChangedNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtEntityRenderersChangedNotify_CmdId.Descriptor instead.
func (EvtEntityRenderersChangedNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{49, 0}
}

type AnimatorForceSetAirMoveNotify_CmdId int32

const (
	AnimatorForceSetAirMoveNotify_NONE             AnimatorForceSetAirMoveNotify_CmdId = 0
	AnimatorForceSetAirMoveNotify_CMD_ID           AnimatorForceSetAirMoveNotify_CmdId = 374
	AnimatorForceSetAirMoveNotify_ENET_CHANNEL_ID  AnimatorForceSetAirMoveNotify_CmdId = 0
	AnimatorForceSetAirMoveNotify_ENET_IS_RELIABLE AnimatorForceSetAirMoveNotify_CmdId = 1
	AnimatorForceSetAirMoveNotify_IS_ALLOW_CLIENT  AnimatorForceSetAirMoveNotify_CmdId = 1
)

// Enum value maps for AnimatorForceSetAirMoveNotify_CmdId.
var (
	AnimatorForceSetAirMoveNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		374: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AnimatorForceSetAirMoveNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           374,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AnimatorForceSetAirMoveNotify_CmdId) Enum() *AnimatorForceSetAirMoveNotify_CmdId {
	p := new(AnimatorForceSetAirMoveNotify_CmdId)
	*p = x
	return p
}

func (x AnimatorForceSetAirMoveNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnimatorForceSetAirMoveNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[30].Descriptor()
}

func (AnimatorForceSetAirMoveNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[30]
}

func (x AnimatorForceSetAirMoveNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnimatorForceSetAirMoveNotify_CmdId.Descriptor instead.
func (AnimatorForceSetAirMoveNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{50, 0}
}

type EvtAiSyncSkillCdNotify_CmdId int32

const (
	EvtAiSyncSkillCdNotify_NONE             EvtAiSyncSkillCdNotify_CmdId = 0
	EvtAiSyncSkillCdNotify_CMD_ID           EvtAiSyncSkillCdNotify_CmdId = 376
	EvtAiSyncSkillCdNotify_ENET_CHANNEL_ID  EvtAiSyncSkillCdNotify_CmdId = 0
	EvtAiSyncSkillCdNotify_ENET_IS_RELIABLE EvtAiSyncSkillCdNotify_CmdId = 1
	EvtAiSyncSkillCdNotify_IS_ALLOW_CLIENT  EvtAiSyncSkillCdNotify_CmdId = 1
)

// Enum value maps for EvtAiSyncSkillCdNotify_CmdId.
var (
	EvtAiSyncSkillCdNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		376: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAiSyncSkillCdNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           376,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAiSyncSkillCdNotify_CmdId) Enum() *EvtAiSyncSkillCdNotify_CmdId {
	p := new(EvtAiSyncSkillCdNotify_CmdId)
	*p = x
	return p
}

func (x EvtAiSyncSkillCdNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAiSyncSkillCdNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[31].Descriptor()
}

func (EvtAiSyncSkillCdNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[31]
}

func (x EvtAiSyncSkillCdNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAiSyncSkillCdNotify_CmdId.Descriptor instead.
func (EvtAiSyncSkillCdNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{52, 0}
}

type EvtBeingHitsCombineNotify_CmdId int32

const (
	EvtBeingHitsCombineNotify_NONE             EvtBeingHitsCombineNotify_CmdId = 0
	EvtBeingHitsCombineNotify_CMD_ID           EvtBeingHitsCombineNotify_CmdId = 346
	EvtBeingHitsCombineNotify_ENET_CHANNEL_ID  EvtBeingHitsCombineNotify_CmdId = 0
	EvtBeingHitsCombineNotify_ENET_IS_RELIABLE EvtBeingHitsCombineNotify_CmdId = 1
	EvtBeingHitsCombineNotify_IS_ALLOW_CLIENT  EvtBeingHitsCombineNotify_CmdId = 1
)

// Enum value maps for EvtBeingHitsCombineNotify_CmdId.
var (
	EvtBeingHitsCombineNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		346: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtBeingHitsCombineNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           346,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtBeingHitsCombineNotify_CmdId) Enum() *EvtBeingHitsCombineNotify_CmdId {
	p := new(EvtBeingHitsCombineNotify_CmdId)
	*p = x
	return p
}

func (x EvtBeingHitsCombineNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBeingHitsCombineNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[32].Descriptor()
}

func (EvtBeingHitsCombineNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[32]
}

func (x EvtBeingHitsCombineNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBeingHitsCombineNotify_CmdId.Descriptor instead.
func (EvtBeingHitsCombineNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{53, 0}
}

type EvtAvatarSitDownNotify_CmdId int32

const (
	EvtAvatarSitDownNotify_NONE             EvtAvatarSitDownNotify_CmdId = 0
	EvtAvatarSitDownNotify_CMD_ID           EvtAvatarSitDownNotify_CmdId = 324
	EvtAvatarSitDownNotify_ENET_CHANNEL_ID  EvtAvatarSitDownNotify_CmdId = 0
	EvtAvatarSitDownNotify_ENET_IS_RELIABLE EvtAvatarSitDownNotify_CmdId = 1
	EvtAvatarSitDownNotify_IS_ALLOW_CLIENT  EvtAvatarSitDownNotify_CmdId = 1
)

// Enum value maps for EvtAvatarSitDownNotify_CmdId.
var (
	EvtAvatarSitDownNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		324: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarSitDownNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           324,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarSitDownNotify_CmdId) Enum() *EvtAvatarSitDownNotify_CmdId {
	p := new(EvtAvatarSitDownNotify_CmdId)
	*p = x
	return p
}

func (x EvtAvatarSitDownNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarSitDownNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[33].Descriptor()
}

func (EvtAvatarSitDownNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[33]
}

func (x EvtAvatarSitDownNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarSitDownNotify_CmdId.Descriptor instead.
func (EvtAvatarSitDownNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{54, 0}
}

type EvtAvatarStandUpNotify_CmdId int32

const (
	EvtAvatarStandUpNotify_NONE             EvtAvatarStandUpNotify_CmdId = 0
	EvtAvatarStandUpNotify_CMD_ID           EvtAvatarStandUpNotify_CmdId = 356
	EvtAvatarStandUpNotify_ENET_CHANNEL_ID  EvtAvatarStandUpNotify_CmdId = 0
	EvtAvatarStandUpNotify_ENET_IS_RELIABLE EvtAvatarStandUpNotify_CmdId = 1
	EvtAvatarStandUpNotify_IS_ALLOW_CLIENT  EvtAvatarStandUpNotify_CmdId = 1
)

// Enum value maps for EvtAvatarStandUpNotify_CmdId.
var (
	EvtAvatarStandUpNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		356: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarStandUpNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           356,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarStandUpNotify_CmdId) Enum() *EvtAvatarStandUpNotify_CmdId {
	p := new(EvtAvatarStandUpNotify_CmdId)
	*p = x
	return p
}

func (x EvtAvatarStandUpNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarStandUpNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[34].Descriptor()
}

func (EvtAvatarStandUpNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[34]
}

func (x EvtAvatarStandUpNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarStandUpNotify_CmdId.Descriptor instead.
func (EvtAvatarStandUpNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{55, 0}
}

type CreateMassiveEntityReq_CmdId int32

const (
	CreateMassiveEntityReq_NONE             CreateMassiveEntityReq_CmdId = 0
	CreateMassiveEntityReq_CMD_ID           CreateMassiveEntityReq_CmdId = 342
	CreateMassiveEntityReq_ENET_CHANNEL_ID  CreateMassiveEntityReq_CmdId = 0
	CreateMassiveEntityReq_ENET_IS_RELIABLE CreateMassiveEntityReq_CmdId = 1
	CreateMassiveEntityReq_IS_ALLOW_CLIENT  CreateMassiveEntityReq_CmdId = 1
)

// Enum value maps for CreateMassiveEntityReq_CmdId.
var (
	CreateMassiveEntityReq_CmdId_name = map[int32]string{
		0:   "NONE",
		342: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CreateMassiveEntityReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           342,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CreateMassiveEntityReq_CmdId) Enum() *CreateMassiveEntityReq_CmdId {
	p := new(CreateMassiveEntityReq_CmdId)
	*p = x
	return p
}

func (x CreateMassiveEntityReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateMassiveEntityReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[35].Descriptor()
}

func (CreateMassiveEntityReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[35]
}

func (x CreateMassiveEntityReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateMassiveEntityReq_CmdId.Descriptor instead.
func (CreateMassiveEntityReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{56, 0}
}

type CreateMassiveEntityRsp_CmdId int32

const (
	CreateMassiveEntityRsp_NONE             CreateMassiveEntityRsp_CmdId = 0
	CreateMassiveEntityRsp_CMD_ID           CreateMassiveEntityRsp_CmdId = 330
	CreateMassiveEntityRsp_ENET_CHANNEL_ID  CreateMassiveEntityRsp_CmdId = 0
	CreateMassiveEntityRsp_ENET_IS_RELIABLE CreateMassiveEntityRsp_CmdId = 1
)

// Enum value maps for CreateMassiveEntityRsp_CmdId.
var (
	CreateMassiveEntityRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		330: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CreateMassiveEntityRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           330,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CreateMassiveEntityRsp_CmdId) Enum() *CreateMassiveEntityRsp_CmdId {
	p := new(CreateMassiveEntityRsp_CmdId)
	*p = x
	return p
}

func (x CreateMassiveEntityRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateMassiveEntityRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[36].Descriptor()
}

func (CreateMassiveEntityRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[36]
}

func (x CreateMassiveEntityRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateMassiveEntityRsp_CmdId.Descriptor instead.
func (CreateMassiveEntityRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{57, 0}
}

type CreateMassiveEntityNotify_CmdId int32

const (
	CreateMassiveEntityNotify_NONE             CreateMassiveEntityNotify_CmdId = 0
	CreateMassiveEntityNotify_CMD_ID           CreateMassiveEntityNotify_CmdId = 367
	CreateMassiveEntityNotify_ENET_CHANNEL_ID  CreateMassiveEntityNotify_CmdId = 0
	CreateMassiveEntityNotify_ENET_IS_RELIABLE CreateMassiveEntityNotify_CmdId = 1
)

// Enum value maps for CreateMassiveEntityNotify_CmdId.
var (
	CreateMassiveEntityNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		367: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CreateMassiveEntityNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           367,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CreateMassiveEntityNotify_CmdId) Enum() *CreateMassiveEntityNotify_CmdId {
	p := new(CreateMassiveEntityNotify_CmdId)
	*p = x
	return p
}

func (x CreateMassiveEntityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateMassiveEntityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[37].Descriptor()
}

func (CreateMassiveEntityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[37]
}

func (x CreateMassiveEntityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateMassiveEntityNotify_CmdId.Descriptor instead.
func (CreateMassiveEntityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{58, 0}
}

type DestroyMassiveEntityNotify_CmdId int32

const (
	DestroyMassiveEntityNotify_NONE             DestroyMassiveEntityNotify_CmdId = 0
	DestroyMassiveEntityNotify_CMD_ID           DestroyMassiveEntityNotify_CmdId = 358
	DestroyMassiveEntityNotify_ENET_CHANNEL_ID  DestroyMassiveEntityNotify_CmdId = 0
	DestroyMassiveEntityNotify_ENET_IS_RELIABLE DestroyMassiveEntityNotify_CmdId = 1
	DestroyMassiveEntityNotify_IS_ALLOW_CLIENT  DestroyMassiveEntityNotify_CmdId = 1
)

// Enum value maps for DestroyMassiveEntityNotify_CmdId.
var (
	DestroyMassiveEntityNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		358: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DestroyMassiveEntityNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           358,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DestroyMassiveEntityNotify_CmdId) Enum() *DestroyMassiveEntityNotify_CmdId {
	p := new(DestroyMassiveEntityNotify_CmdId)
	*p = x
	return p
}

func (x DestroyMassiveEntityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DestroyMassiveEntityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[38].Descriptor()
}

func (DestroyMassiveEntityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[38]
}

func (x DestroyMassiveEntityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DestroyMassiveEntityNotify_CmdId.Descriptor instead.
func (DestroyMassiveEntityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{59, 0}
}

type MassiveEntityStateChangedNotify_CmdId int32

const (
	MassiveEntityStateChangedNotify_NONE             MassiveEntityStateChangedNotify_CmdId = 0
	MassiveEntityStateChangedNotify_CMD_ID           MassiveEntityStateChangedNotify_CmdId = 370
	MassiveEntityStateChangedNotify_ENET_CHANNEL_ID  MassiveEntityStateChangedNotify_CmdId = 0
	MassiveEntityStateChangedNotify_ENET_IS_RELIABLE MassiveEntityStateChangedNotify_CmdId = 1
	MassiveEntityStateChangedNotify_IS_ALLOW_CLIENT  MassiveEntityStateChangedNotify_CmdId = 1
)

// Enum value maps for MassiveEntityStateChangedNotify_CmdId.
var (
	MassiveEntityStateChangedNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		370: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	MassiveEntityStateChangedNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           370,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x MassiveEntityStateChangedNotify_CmdId) Enum() *MassiveEntityStateChangedNotify_CmdId {
	p := new(MassiveEntityStateChangedNotify_CmdId)
	*p = x
	return p
}

func (x MassiveEntityStateChangedNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MassiveEntityStateChangedNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[39].Descriptor()
}

func (MassiveEntityStateChangedNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[39]
}

func (x MassiveEntityStateChangedNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MassiveEntityStateChangedNotify_CmdId.Descriptor instead.
func (MassiveEntityStateChangedNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{60, 0}
}

type SyncTeamEntityNotify_CmdId int32

const (
	SyncTeamEntityNotify_NONE             SyncTeamEntityNotify_CmdId = 0
	SyncTeamEntityNotify_CMD_ID           SyncTeamEntityNotify_CmdId = 317
	SyncTeamEntityNotify_ENET_CHANNEL_ID  SyncTeamEntityNotify_CmdId = 0
	SyncTeamEntityNotify_ENET_IS_RELIABLE SyncTeamEntityNotify_CmdId = 1
)

// Enum value maps for SyncTeamEntityNotify_CmdId.
var (
	SyncTeamEntityNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		317: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SyncTeamEntityNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           317,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SyncTeamEntityNotify_CmdId) Enum() *SyncTeamEntityNotify_CmdId {
	p := new(SyncTeamEntityNotify_CmdId)
	*p = x
	return p
}

func (x SyncTeamEntityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncTeamEntityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[40].Descriptor()
}

func (SyncTeamEntityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[40]
}

func (x SyncTeamEntityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncTeamEntityNotify_CmdId.Descriptor instead.
func (SyncTeamEntityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{62, 0}
}

type DelTeamEntityNotify_CmdId int32

const (
	DelTeamEntityNotify_NONE             DelTeamEntityNotify_CmdId = 0
	DelTeamEntityNotify_CMD_ID           DelTeamEntityNotify_CmdId = 302
	DelTeamEntityNotify_ENET_CHANNEL_ID  DelTeamEntityNotify_CmdId = 0
	DelTeamEntityNotify_ENET_IS_RELIABLE DelTeamEntityNotify_CmdId = 1
)

// Enum value maps for DelTeamEntityNotify_CmdId.
var (
	DelTeamEntityNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		302: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DelTeamEntityNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           302,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DelTeamEntityNotify_CmdId) Enum() *DelTeamEntityNotify_CmdId {
	p := new(DelTeamEntityNotify_CmdId)
	*p = x
	return p
}

func (x DelTeamEntityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelTeamEntityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[41].Descriptor()
}

func (DelTeamEntityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[41]
}

func (x DelTeamEntityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelTeamEntityNotify_CmdId.Descriptor instead.
func (DelTeamEntityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{63, 0}
}

type CombatInvocationsNotify_CmdId int32

const (
	CombatInvocationsNotify_NONE             CombatInvocationsNotify_CmdId = 0
	CombatInvocationsNotify_CMD_ID           CombatInvocationsNotify_CmdId = 319
	CombatInvocationsNotify_ENET_CHANNEL_ID  CombatInvocationsNotify_CmdId = 0
	CombatInvocationsNotify_ENET_IS_RELIABLE CombatInvocationsNotify_CmdId = 1
	CombatInvocationsNotify_IS_ALLOW_CLIENT  CombatInvocationsNotify_CmdId = 1
)

// Enum value maps for CombatInvocationsNotify_CmdId.
var (
	CombatInvocationsNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		319: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CombatInvocationsNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           319,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CombatInvocationsNotify_CmdId) Enum() *CombatInvocationsNotify_CmdId {
	p := new(CombatInvocationsNotify_CmdId)
	*p = x
	return p
}

func (x CombatInvocationsNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombatInvocationsNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[42].Descriptor()
}

func (CombatInvocationsNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[42]
}

func (x CombatInvocationsNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombatInvocationsNotify_CmdId.Descriptor instead.
func (CombatInvocationsNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{66, 0}
}

type ServerBuffChangeNotify_CmdId int32

const (
	ServerBuffChangeNotify_NONE             ServerBuffChangeNotify_CmdId = 0
	ServerBuffChangeNotify_CMD_ID           ServerBuffChangeNotify_CmdId = 361
	ServerBuffChangeNotify_ENET_CHANNEL_ID  ServerBuffChangeNotify_CmdId = 0
	ServerBuffChangeNotify_ENET_IS_RELIABLE ServerBuffChangeNotify_CmdId = 1
)

// Enum value maps for ServerBuffChangeNotify_CmdId.
var (
	ServerBuffChangeNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		361: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ServerBuffChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           361,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ServerBuffChangeNotify_CmdId) Enum() *ServerBuffChangeNotify_CmdId {
	p := new(ServerBuffChangeNotify_CmdId)
	*p = x
	return p
}

func (x ServerBuffChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerBuffChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[43].Descriptor()
}

func (ServerBuffChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[43]
}

func (x ServerBuffChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerBuffChangeNotify_CmdId.Descriptor instead.
func (ServerBuffChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{67, 0}
}

type ServerBuffChangeNotify_ServerBuffChangeType int32

const (
	ServerBuffChangeNotify_ADD_SERVER_BUFF ServerBuffChangeNotify_ServerBuffChangeType = 0
	ServerBuffChangeNotify_DEL_SERVER_BUFF ServerBuffChangeNotify_ServerBuffChangeType = 1
)

// Enum value maps for ServerBuffChangeNotify_ServerBuffChangeType.
var (
	ServerBuffChangeNotify_ServerBuffChangeType_name = map[int32]string{
		0: "ADD_SERVER_BUFF",
		1: "DEL_SERVER_BUFF",
	}
	ServerBuffChangeNotify_ServerBuffChangeType_value = map[string]int32{
		"ADD_SERVER_BUFF": 0,
		"DEL_SERVER_BUFF": 1,
	}
)

func (x ServerBuffChangeNotify_ServerBuffChangeType) Enum() *ServerBuffChangeNotify_ServerBuffChangeType {
	p := new(ServerBuffChangeNotify_ServerBuffChangeType)
	*p = x
	return p
}

func (x ServerBuffChangeNotify_ServerBuffChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerBuffChangeNotify_ServerBuffChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[44].Descriptor()
}

func (ServerBuffChangeNotify_ServerBuffChangeType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[44]
}

func (x ServerBuffChangeNotify_ServerBuffChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerBuffChangeNotify_ServerBuffChangeType.Descriptor instead.
func (ServerBuffChangeNotify_ServerBuffChangeType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{67, 1}
}

type EvtAiSyncCombatThreatInfoNotify_CmdId int32

const (
	EvtAiSyncCombatThreatInfoNotify_NONE             EvtAiSyncCombatThreatInfoNotify_CmdId = 0
	EvtAiSyncCombatThreatInfoNotify_CMD_ID           EvtAiSyncCombatThreatInfoNotify_CmdId = 329
	EvtAiSyncCombatThreatInfoNotify_ENET_CHANNEL_ID  EvtAiSyncCombatThreatInfoNotify_CmdId = 0
	EvtAiSyncCombatThreatInfoNotify_ENET_IS_RELIABLE EvtAiSyncCombatThreatInfoNotify_CmdId = 1
	EvtAiSyncCombatThreatInfoNotify_IS_ALLOW_CLIENT  EvtAiSyncCombatThreatInfoNotify_CmdId = 1
)

// Enum value maps for EvtAiSyncCombatThreatInfoNotify_CmdId.
var (
	EvtAiSyncCombatThreatInfoNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		329: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAiSyncCombatThreatInfoNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           329,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAiSyncCombatThreatInfoNotify_CmdId) Enum() *EvtAiSyncCombatThreatInfoNotify_CmdId {
	p := new(EvtAiSyncCombatThreatInfoNotify_CmdId)
	*p = x
	return p
}

func (x EvtAiSyncCombatThreatInfoNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAiSyncCombatThreatInfoNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[45].Descriptor()
}

func (EvtAiSyncCombatThreatInfoNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[45]
}

func (x EvtAiSyncCombatThreatInfoNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAiSyncCombatThreatInfoNotify_CmdId.Descriptor instead.
func (EvtAiSyncCombatThreatInfoNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{69, 0}
}

type MassiveEntityElementOpBatchNotify_CmdId int32

const (
	MassiveEntityElementOpBatchNotify_NONE             MassiveEntityElementOpBatchNotify_CmdId = 0
	MassiveEntityElementOpBatchNotify_CMD_ID           MassiveEntityElementOpBatchNotify_CmdId = 357
	MassiveEntityElementOpBatchNotify_ENET_CHANNEL_ID  MassiveEntityElementOpBatchNotify_CmdId = 0
	MassiveEntityElementOpBatchNotify_ENET_IS_RELIABLE MassiveEntityElementOpBatchNotify_CmdId = 1
	MassiveEntityElementOpBatchNotify_IS_ALLOW_CLIENT  MassiveEntityElementOpBatchNotify_CmdId = 1
)

// Enum value maps for MassiveEntityElementOpBatchNotify_CmdId.
var (
	MassiveEntityElementOpBatchNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		357: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	MassiveEntityElementOpBatchNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           357,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x MassiveEntityElementOpBatchNotify_CmdId) Enum() *MassiveEntityElementOpBatchNotify_CmdId {
	p := new(MassiveEntityElementOpBatchNotify_CmdId)
	*p = x
	return p
}

func (x MassiveEntityElementOpBatchNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MassiveEntityElementOpBatchNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[46].Descriptor()
}

func (MassiveEntityElementOpBatchNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[46]
}

func (x MassiveEntityElementOpBatchNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MassiveEntityElementOpBatchNotify_CmdId.Descriptor instead.
func (MassiveEntityElementOpBatchNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{70, 0}
}

type EntityAiSyncNotify_CmdId int32

const (
	EntityAiSyncNotify_NONE             EntityAiSyncNotify_CmdId = 0
	EntityAiSyncNotify_CMD_ID           EntityAiSyncNotify_CmdId = 400
	EntityAiSyncNotify_ENET_CHANNEL_ID  EntityAiSyncNotify_CmdId = 0
	EntityAiSyncNotify_ENET_IS_RELIABLE EntityAiSyncNotify_CmdId = 1
	EntityAiSyncNotify_IS_ALLOW_CLIENT  EntityAiSyncNotify_CmdId = 1
)

// Enum value maps for EntityAiSyncNotify_CmdId.
var (
	EntityAiSyncNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		400: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EntityAiSyncNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           400,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EntityAiSyncNotify_CmdId) Enum() *EntityAiSyncNotify_CmdId {
	p := new(EntityAiSyncNotify_CmdId)
	*p = x
	return p
}

func (x EntityAiSyncNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityAiSyncNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[47].Descriptor()
}

func (EntityAiSyncNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[47]
}

func (x EntityAiSyncNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityAiSyncNotify_CmdId.Descriptor instead.
func (EntityAiSyncNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{72, 0}
}

type LuaSetOptionNotify_CmdId int32

const (
	LuaSetOptionNotify_NONE             LuaSetOptionNotify_CmdId = 0
	LuaSetOptionNotify_CMD_ID           LuaSetOptionNotify_CmdId = 316
	LuaSetOptionNotify_ENET_CHANNEL_ID  LuaSetOptionNotify_CmdId = 0
	LuaSetOptionNotify_ENET_IS_RELIABLE LuaSetOptionNotify_CmdId = 1
)

// Enum value maps for LuaSetOptionNotify_CmdId.
var (
	LuaSetOptionNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		316: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	LuaSetOptionNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           316,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x LuaSetOptionNotify_CmdId) Enum() *LuaSetOptionNotify_CmdId {
	p := new(LuaSetOptionNotify_CmdId)
	*p = x
	return p
}

func (x LuaSetOptionNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LuaSetOptionNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[48].Descriptor()
}

func (LuaSetOptionNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[48]
}

func (x LuaSetOptionNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LuaSetOptionNotify_CmdId.Descriptor instead.
func (LuaSetOptionNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{73, 0}
}

type LuaSetOptionNotify_LuaOptionType int32

const (
	LuaSetOptionNotify_LUA_OPTION_NONE         LuaSetOptionNotify_LuaOptionType = 0
	LuaSetOptionNotify_LUA_OPTION_PLAYER_INPUT LuaSetOptionNotify_LuaOptionType = 1
)

// Enum value maps for LuaSetOptionNotify_LuaOptionType.
var (
	LuaSetOptionNotify_LuaOptionType_name = map[int32]string{
		0: "LUA_OPTION_NONE",
		1: "LUA_OPTION_PLAYER_INPUT",
	}
	LuaSetOptionNotify_LuaOptionType_value = map[string]int32{
		"LUA_OPTION_NONE":         0,
		"LUA_OPTION_PLAYER_INPUT": 1,
	}
)

func (x LuaSetOptionNotify_LuaOptionType) Enum() *LuaSetOptionNotify_LuaOptionType {
	p := new(LuaSetOptionNotify_LuaOptionType)
	*p = x
	return p
}

func (x LuaSetOptionNotify_LuaOptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LuaSetOptionNotify_LuaOptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[49].Descriptor()
}

func (LuaSetOptionNotify_LuaOptionType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[49]
}

func (x LuaSetOptionNotify_LuaOptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LuaSetOptionNotify_LuaOptionType.Descriptor instead.
func (LuaSetOptionNotify_LuaOptionType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{73, 1}
}

type EvtDestroyServerGadgetNotify_CmdId int32

const (
	EvtDestroyServerGadgetNotify_NONE             EvtDestroyServerGadgetNotify_CmdId = 0
	EvtDestroyServerGadgetNotify_CMD_ID           EvtDestroyServerGadgetNotify_CmdId = 387
	EvtDestroyServerGadgetNotify_ENET_CHANNEL_ID  EvtDestroyServerGadgetNotify_CmdId = 0
	EvtDestroyServerGadgetNotify_ENET_IS_RELIABLE EvtDestroyServerGadgetNotify_CmdId = 1
	EvtDestroyServerGadgetNotify_IS_ALLOW_CLIENT  EvtDestroyServerGadgetNotify_CmdId = 1
)

// Enum value maps for EvtDestroyServerGadgetNotify_CmdId.
var (
	EvtDestroyServerGadgetNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		387: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtDestroyServerGadgetNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           387,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtDestroyServerGadgetNotify_CmdId) Enum() *EvtDestroyServerGadgetNotify_CmdId {
	p := new(EvtDestroyServerGadgetNotify_CmdId)
	*p = x
	return p
}

func (x EvtDestroyServerGadgetNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtDestroyServerGadgetNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[50].Descriptor()
}

func (EvtDestroyServerGadgetNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[50]
}

func (x EvtDestroyServerGadgetNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtDestroyServerGadgetNotify_CmdId.Descriptor instead.
func (EvtDestroyServerGadgetNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{74, 0}
}

type EntityAiKillSelfNotify_CmdId int32

const (
	EntityAiKillSelfNotify_NONE             EntityAiKillSelfNotify_CmdId = 0
	EntityAiKillSelfNotify_CMD_ID           EntityAiKillSelfNotify_CmdId = 340
	EntityAiKillSelfNotify_ENET_CHANNEL_ID  EntityAiKillSelfNotify_CmdId = 0
	EntityAiKillSelfNotify_ENET_IS_RELIABLE EntityAiKillSelfNotify_CmdId = 1
	EntityAiKillSelfNotify_IS_ALLOW_CLIENT  EntityAiKillSelfNotify_CmdId = 1
)

// Enum value maps for EntityAiKillSelfNotify_CmdId.
var (
	EntityAiKillSelfNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		340: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EntityAiKillSelfNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           340,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EntityAiKillSelfNotify_CmdId) Enum() *EntityAiKillSelfNotify_CmdId {
	p := new(EntityAiKillSelfNotify_CmdId)
	*p = x
	return p
}

func (x EntityAiKillSelfNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityAiKillSelfNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[51].Descriptor()
}

func (EntityAiKillSelfNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[51]
}

func (x EntityAiKillSelfNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityAiKillSelfNotify_CmdId.Descriptor instead.
func (EntityAiKillSelfNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{75, 0}
}

type EvtAvatarLockChairReq_CmdId int32

const (
	EvtAvatarLockChairReq_NONE             EvtAvatarLockChairReq_CmdId = 0
	EvtAvatarLockChairReq_CMD_ID           EvtAvatarLockChairReq_CmdId = 318
	EvtAvatarLockChairReq_ENET_CHANNEL_ID  EvtAvatarLockChairReq_CmdId = 0
	EvtAvatarLockChairReq_ENET_IS_RELIABLE EvtAvatarLockChairReq_CmdId = 1
	EvtAvatarLockChairReq_IS_ALLOW_CLIENT  EvtAvatarLockChairReq_CmdId = 1
)

// Enum value maps for EvtAvatarLockChairReq_CmdId.
var (
	EvtAvatarLockChairReq_CmdId_name = map[int32]string{
		0:   "NONE",
		318: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EvtAvatarLockChairReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           318,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EvtAvatarLockChairReq_CmdId) Enum() *EvtAvatarLockChairReq_CmdId {
	p := new(EvtAvatarLockChairReq_CmdId)
	*p = x
	return p
}

func (x EvtAvatarLockChairReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarLockChairReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[52].Descriptor()
}

func (EvtAvatarLockChairReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[52]
}

func (x EvtAvatarLockChairReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarLockChairReq_CmdId.Descriptor instead.
func (EvtAvatarLockChairReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{76, 0}
}

type EvtAvatarLockChairRsp_CmdId int32

const (
	EvtAvatarLockChairRsp_NONE             EvtAvatarLockChairRsp_CmdId = 0
	EvtAvatarLockChairRsp_CMD_ID           EvtAvatarLockChairRsp_CmdId = 366
	EvtAvatarLockChairRsp_ENET_CHANNEL_ID  EvtAvatarLockChairRsp_CmdId = 0
	EvtAvatarLockChairRsp_ENET_IS_RELIABLE EvtAvatarLockChairRsp_CmdId = 1
)

// Enum value maps for EvtAvatarLockChairRsp_CmdId.
var (
	EvtAvatarLockChairRsp_CmdId_name = map[int32]string{
		0:   "NONE",
		366: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	EvtAvatarLockChairRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           366,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x EvtAvatarLockChairRsp_CmdId) Enum() *EvtAvatarLockChairRsp_CmdId {
	p := new(EvtAvatarLockChairRsp_CmdId)
	*p = x
	return p
}

func (x EvtAvatarLockChairRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtAvatarLockChairRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[53].Descriptor()
}

func (EvtAvatarLockChairRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[53]
}

func (x EvtAvatarLockChairRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtAvatarLockChairRsp_CmdId.Descriptor instead.
func (EvtAvatarLockChairRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{77, 0}
}

type ReportFightAntiCheatNotify_CmdId int32

const (
	ReportFightAntiCheatNotify_NONE             ReportFightAntiCheatNotify_CmdId = 0
	ReportFightAntiCheatNotify_CMD_ID           ReportFightAntiCheatNotify_CmdId = 368
	ReportFightAntiCheatNotify_ENET_CHANNEL_ID  ReportFightAntiCheatNotify_CmdId = 0
	ReportFightAntiCheatNotify_ENET_IS_RELIABLE ReportFightAntiCheatNotify_CmdId = 1
	ReportFightAntiCheatNotify_IS_ALLOW_CLIENT  ReportFightAntiCheatNotify_CmdId = 1
)

// Enum value maps for ReportFightAntiCheatNotify_CmdId.
var (
	ReportFightAntiCheatNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		368: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReportFightAntiCheatNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           368,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReportFightAntiCheatNotify_CmdId) Enum() *ReportFightAntiCheatNotify_CmdId {
	p := new(ReportFightAntiCheatNotify_CmdId)
	*p = x
	return p
}

func (x ReportFightAntiCheatNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportFightAntiCheatNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[54].Descriptor()
}

func (ReportFightAntiCheatNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[54]
}

func (x ReportFightAntiCheatNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportFightAntiCheatNotify_CmdId.Descriptor instead.
func (ReportFightAntiCheatNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{78, 0}
}

type EvtBeingHealedNotify_CmdId int32

const (
	EvtBeingHealedNotify_NONE             EvtBeingHealedNotify_CmdId = 0
	EvtBeingHealedNotify_CMD_ID           EvtBeingHealedNotify_CmdId = 333
	EvtBeingHealedNotify_ENET_CHANNEL_ID  EvtBeingHealedNotify_CmdId = 0
	EvtBeingHealedNotify_ENET_IS_RELIABLE EvtBeingHealedNotify_CmdId = 1
)

// Enum value maps for EvtBeingHealedNotify_CmdId.
var (
	EvtBeingHealedNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		333: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	EvtBeingHealedNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           333,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x EvtBeingHealedNotify_CmdId) Enum() *EvtBeingHealedNotify_CmdId {
	p := new(EvtBeingHealedNotify_CmdId)
	*p = x
	return p
}

func (x EvtBeingHealedNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtBeingHealedNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[55].Descriptor()
}

func (EvtBeingHealedNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[55]
}

func (x EvtBeingHealedNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtBeingHealedNotify_CmdId.Descriptor instead.
func (EvtBeingHealedNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{79, 0}
}

type EvtLocalGadgetOwnerLeaveSceneNotify_CmdId int32

const (
	EvtLocalGadgetOwnerLeaveSceneNotify_NONE             EvtLocalGadgetOwnerLeaveSceneNotify_CmdId = 0
	EvtLocalGadgetOwnerLeaveSceneNotify_CMD_ID           EvtLocalGadgetOwnerLeaveSceneNotify_CmdId = 384
	EvtLocalGadgetOwnerLeaveSceneNotify_ENET_CHANNEL_ID  EvtLocalGadgetOwnerLeaveSceneNotify_CmdId = 0
	EvtLocalGadgetOwnerLeaveSceneNotify_ENET_IS_RELIABLE EvtLocalGadgetOwnerLeaveSceneNotify_CmdId = 1
)

// Enum value maps for EvtLocalGadgetOwnerLeaveSceneNotify_CmdId.
var (
	EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_name = map[int32]string{
		0:   "NONE",
		384: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	EvtLocalGadgetOwnerLeaveSceneNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           384,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) Enum() *EvtLocalGadgetOwnerLeaveSceneNotify_CmdId {
	p := new(EvtLocalGadgetOwnerLeaveSceneNotify_CmdId)
	*p = x
	return p
}

func (x EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fight_proto_enumTypes[56].Descriptor()
}

func (EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fight_proto_enumTypes[56]
}

func (x EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvtLocalGadgetOwnerLeaveSceneNotify_CmdId.Descriptor instead.
func (EvtLocalGadgetOwnerLeaveSceneNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{80, 0}
}

type HitCollision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitColliderType        HitColliderType `protobuf:"varint,8,opt,name=hit_collider_type,json=hitColliderType,proto3,enum=proto.HitColliderType" json:"hit_collider_type,omitempty"`
	HitPoint               *Vector         `protobuf:"bytes,7,opt,name=hit_point,json=hitPoint,proto3" json:"hit_point,omitempty"`
	AttackeeHitForceAngle  float32         `protobuf:"fixed32,2,opt,name=attackee_hit_force_angle,json=attackeeHitForceAngle,proto3" json:"attackee_hit_force_angle,omitempty"`
	HitDir                 *Vector         `protobuf:"bytes,13,opt,name=hit_dir,json=hitDir,proto3" json:"hit_dir,omitempty"`
	AttackeeHitEntityAngle float32         `protobuf:"fixed32,15,opt,name=attackee_hit_entity_angle,json=attackeeHitEntityAngle,proto3" json:"attackee_hit_entity_angle,omitempty"`
	HitBoxIndex            int32           `protobuf:"varint,4,opt,name=hit_box_index,json=hitBoxIndex,proto3" json:"hit_box_index,omitempty"`
}

func (x *HitCollision) Reset() {
	*x = HitCollision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitCollision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitCollision) ProtoMessage() {}

func (x *HitCollision) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitCollision.ProtoReflect.Descriptor instead.
func (*HitCollision) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{0}
}

func (x *HitCollision) GetHitColliderType() HitColliderType {
	if x != nil {
		return x.HitColliderType
	}
	return HitColliderType_HIT_COLLIDER_INVALID
}

func (x *HitCollision) GetHitPoint() *Vector {
	if x != nil {
		return x.HitPoint
	}
	return nil
}

func (x *HitCollision) GetAttackeeHitForceAngle() float32 {
	if x != nil {
		return x.AttackeeHitForceAngle
	}
	return 0
}

func (x *HitCollision) GetHitDir() *Vector {
	if x != nil {
		return x.HitDir
	}
	return nil
}

func (x *HitCollision) GetAttackeeHitEntityAngle() float32 {
	if x != nil {
		return x.AttackeeHitEntityAngle
	}
	return 0
}

func (x *HitCollision) GetHitBoxIndex() int32 {
	if x != nil {
		return x.HitBoxIndex
	}
	return 0
}

type AttackHitEffectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitHaltTimeScale    float32 `protobuf:"fixed32,8,opt,name=hit_halt_time_scale,json=hitHaltTimeScale,proto3" json:"hit_halt_time_scale,omitempty"`
	OriginalHitEffLevel uint32  `protobuf:"varint,12,opt,name=original_hit_eff_level,json=originalHitEffLevel,proto3" json:"original_hit_eff_level,omitempty"`
	AirStrength         float32 `protobuf:"fixed32,15,opt,name=air_strength,json=airStrength,proto3" json:"air_strength,omitempty"`
	HitEffLevel         uint32  `protobuf:"varint,2,opt,name=hit_eff_level,json=hitEffLevel,proto3" json:"hit_eff_level,omitempty"`
	HitHaltTime         float32 `protobuf:"fixed32,13,opt,name=hit_halt_time,json=hitHaltTime,proto3" json:"hit_halt_time,omitempty"`
	RetreatStrength     float32 `protobuf:"fixed32,7,opt,name=retreat_strength,json=retreatStrength,proto3" json:"retreat_strength,omitempty"`
}

func (x *AttackHitEffectResult) Reset() {
	*x = AttackHitEffectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackHitEffectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackHitEffectResult) ProtoMessage() {}

func (x *AttackHitEffectResult) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackHitEffectResult.ProtoReflect.Descriptor instead.
func (*AttackHitEffectResult) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{1}
}

func (x *AttackHitEffectResult) GetHitHaltTimeScale() float32 {
	if x != nil {
		return x.HitHaltTimeScale
	}
	return 0
}

func (x *AttackHitEffectResult) GetOriginalHitEffLevel() uint32 {
	if x != nil {
		return x.OriginalHitEffLevel
	}
	return 0
}

func (x *AttackHitEffectResult) GetAirStrength() float32 {
	if x != nil {
		return x.AirStrength
	}
	return 0
}

func (x *AttackHitEffectResult) GetHitEffLevel() uint32 {
	if x != nil {
		return x.HitEffLevel
	}
	return 0
}

func (x *AttackHitEffectResult) GetHitHaltTime() float32 {
	if x != nil {
		return x.HitHaltTime
	}
	return 0
}

func (x *AttackHitEffectResult) GetRetreatStrength() float32 {
	if x != nil {
		return x.RetreatStrength
	}
	return 0
}

type AbilityIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModifierOwnerId      uint32 `protobuf:"varint,2,opt,name=modifier_owner_id,json=modifierOwnerId,proto3" json:"modifier_owner_id,omitempty"`
	InstancedModifierId  uint32 `protobuf:"varint,9,opt,name=instanced_modifier_id,json=instancedModifierId,proto3" json:"instanced_modifier_id,omitempty"`
	InstancedAbilityId   uint32 `protobuf:"varint,10,opt,name=instanced_ability_id,json=instancedAbilityId,proto3" json:"instanced_ability_id,omitempty"`
	IsServerbuffModifier bool   `protobuf:"varint,6,opt,name=is_serverbuff_modifier,json=isServerbuffModifier,proto3" json:"is_serverbuff_modifier,omitempty"`
	AbilityCasterId      uint32 `protobuf:"varint,15,opt,name=ability_caster_id,json=abilityCasterId,proto3" json:"ability_caster_id,omitempty"`
	LocalId              int32  `protobuf:"varint,3,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"`
}

func (x *AbilityIdentifier) Reset() {
	*x = AbilityIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbilityIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityIdentifier) ProtoMessage() {}

func (x *AbilityIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityIdentifier.ProtoReflect.Descriptor instead.
func (*AbilityIdentifier) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{2}
}

func (x *AbilityIdentifier) GetModifierOwnerId() uint32 {
	if x != nil {
		return x.ModifierOwnerId
	}
	return 0
}

func (x *AbilityIdentifier) GetInstancedModifierId() uint32 {
	if x != nil {
		return x.InstancedModifierId
	}
	return 0
}

func (x *AbilityIdentifier) GetInstancedAbilityId() uint32 {
	if x != nil {
		return x.InstancedAbilityId
	}
	return 0
}

func (x *AbilityIdentifier) GetIsServerbuffModifier() bool {
	if x != nil {
		return x.IsServerbuffModifier
	}
	return false
}

func (x *AbilityIdentifier) GetAbilityCasterId() uint32 {
	if x != nil {
		return x.AbilityCasterId
	}
	return 0
}

func (x *AbilityIdentifier) GetLocalId() int32 {
	if x != nil {
		return x.LocalId
	}
	return 0
}

type AttackResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsResistText                 bool                   `protobuf:"varint,1858,opt,name=is_resist_text,json=isResistText,proto3" json:"is_resist_text,omitempty"`
	CreateCountSyncToServer      uint32                 `protobuf:"varint,1011,opt,name=create_count_sync_to_server,json=createCountSyncToServer,proto3" json:"create_count_sync_to_server,omitempty"`
	AmplifyReactionType          uint32                 `protobuf:"varint,2005,opt,name=amplify_reaction_type,json=amplifyReactionType,proto3" json:"amplify_reaction_type,omitempty"`
	EndureBreak                  uint32                 `protobuf:"varint,7,opt,name=endure_break,json=endureBreak,proto3" json:"endure_break,omitempty"`
	ElementType                  uint32                 `protobuf:"varint,5,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
	ElementDurabilityAttenuation float32                `protobuf:"fixed32,425,opt,name=element_durability_attenuation,json=elementDurabilityAttenuation,proto3" json:"element_durability_attenuation,omitempty"`
	DefenseId                    uint32                 `protobuf:"varint,15,opt,name=defense_id,json=defenseId,proto3" json:"defense_id,omitempty"`
	AttackTimestampMs            uint32                 `protobuf:"varint,1188,opt,name=attack_timestamp_ms,json=attackTimestampMs,proto3" json:"attack_timestamp_ms,omitempty"`
	BulletFlyTimeMs              uint32                 `protobuf:"varint,91,opt,name=bullet_fly_time_ms,json=bulletFlyTimeMs,proto3" json:"bullet_fly_time_ms,omitempty"`
	IsCrit                       bool                   `protobuf:"varint,13,opt,name=is_crit,json=isCrit,proto3" json:"is_crit,omitempty"`
	ElementAmplifyRate           float32                `protobuf:"fixed32,900,opt,name=element_amplify_rate,json=elementAmplifyRate,proto3" json:"element_amplify_rate,omitempty"`
	AttackCount                  uint32                 `protobuf:"varint,1564,opt,name=attack_count,json=attackCount,proto3" json:"attack_count,omitempty"`
	CriticalRand                 uint32                 `protobuf:"varint,1664,opt,name=critical_rand,json=criticalRand,proto3" json:"critical_rand,omitempty"`
	HitPosType                   uint32                 `protobuf:"varint,2,opt,name=hit_pos_type,json=hitPosType,proto3" json:"hit_pos_type,omitempty"`
	AnimEventId                  string                 `protobuf:"bytes,4,opt,name=anim_event_id,json=animEventId,proto3" json:"anim_event_id,omitempty"`
	HitEffResult                 *AttackHitEffectResult `protobuf:"bytes,8,opt,name=hit_eff_result,json=hitEffResult,proto3" json:"hit_eff_result,omitempty"`
	DamageShield                 float32                `protobuf:"fixed32,1202,opt,name=damage_shield,json=damageShield,proto3" json:"damage_shield,omitempty"`
	EndureDelta                  float32                `protobuf:"fixed32,430,opt,name=endure_delta,json=endureDelta,proto3" json:"endure_delta,omitempty"`
	ResolvedDir                  *Vector                `protobuf:"bytes,1,opt,name=resolved_dir,json=resolvedDir,proto3" json:"resolved_dir,omitempty"`
	Damage                       float32                `protobuf:"fixed32,6,opt,name=damage,proto3" json:"damage,omitempty"`
	AddhurtReactionType          uint32                 `protobuf:"varint,1887,opt,name=addhurt_reaction_type,json=addhurtReactionType,proto3" json:"addhurt_reaction_type,omitempty"`
	HashedAnimEventId            uint32                 `protobuf:"varint,278,opt,name=hashed_anim_event_id,json=hashedAnimEventId,proto3" json:"hashed_anim_event_id,omitempty"`
	UseGadgetDamageAction        bool                   `protobuf:"varint,1418,opt,name=use_gadget_damage_action,json=useGadgetDamageAction,proto3" json:"use_gadget_damage_action,omitempty"`
	HitRetreatAngleCompat        int32                  `protobuf:"varint,9,opt,name=hit_retreat_angle_compat,json=hitRetreatAngleCompat,proto3" json:"hit_retreat_angle_compat,omitempty"`
	AbilityIdentifier            *AbilityIdentifier     `protobuf:"bytes,14,opt,name=ability_identifier,json=abilityIdentifier,proto3" json:"ability_identifier,omitempty"`
	AttackerId                   uint32                 `protobuf:"varint,11,opt,name=attacker_id,json=attackerId,proto3" json:"attacker_id,omitempty"`
	MuteElementHurt              bool                   `protobuf:"varint,1530,opt,name=mute_element_hurt,json=muteElementHurt,proto3" json:"mute_element_hurt,omitempty"`
	TargetType                   uint32                 `protobuf:"varint,1366,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	HitCollision                 *HitCollision          `protobuf:"bytes,10,opt,name=hit_collision,json=hitCollision,proto3" json:"hit_collision,omitempty"`
	GadgetDamageActionIdx        uint32                 `protobuf:"varint,1110,opt,name=gadget_damage_action_idx,json=gadgetDamageActionIdx,proto3" json:"gadget_damage_action_idx,omitempty"`
}

func (x *AttackResult) Reset() {
	*x = AttackResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackResult) ProtoMessage() {}

func (x *AttackResult) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackResult.ProtoReflect.Descriptor instead.
func (*AttackResult) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{3}
}

func (x *AttackResult) GetIsResistText() bool {
	if x != nil {
		return x.IsResistText
	}
	return false
}

func (x *AttackResult) GetCreateCountSyncToServer() uint32 {
	if x != nil {
		return x.CreateCountSyncToServer
	}
	return 0
}

func (x *AttackResult) GetAmplifyReactionType() uint32 {
	if x != nil {
		return x.AmplifyReactionType
	}
	return 0
}

func (x *AttackResult) GetEndureBreak() uint32 {
	if x != nil {
		return x.EndureBreak
	}
	return 0
}

func (x *AttackResult) GetElementType() uint32 {
	if x != nil {
		return x.ElementType
	}
	return 0
}

func (x *AttackResult) GetElementDurabilityAttenuation() float32 {
	if x != nil {
		return x.ElementDurabilityAttenuation
	}
	return 0
}

func (x *AttackResult) GetDefenseId() uint32 {
	if x != nil {
		return x.DefenseId
	}
	return 0
}

func (x *AttackResult) GetAttackTimestampMs() uint32 {
	if x != nil {
		return x.AttackTimestampMs
	}
	return 0
}

func (x *AttackResult) GetBulletFlyTimeMs() uint32 {
	if x != nil {
		return x.BulletFlyTimeMs
	}
	return 0
}

func (x *AttackResult) GetIsCrit() bool {
	if x != nil {
		return x.IsCrit
	}
	return false
}

func (x *AttackResult) GetElementAmplifyRate() float32 {
	if x != nil {
		return x.ElementAmplifyRate
	}
	return 0
}

func (x *AttackResult) GetAttackCount() uint32 {
	if x != nil {
		return x.AttackCount
	}
	return 0
}

func (x *AttackResult) GetCriticalRand() uint32 {
	if x != nil {
		return x.CriticalRand
	}
	return 0
}

func (x *AttackResult) GetHitPosType() uint32 {
	if x != nil {
		return x.HitPosType
	}
	return 0
}

func (x *AttackResult) GetAnimEventId() string {
	if x != nil {
		return x.AnimEventId
	}
	return ""
}

func (x *AttackResult) GetHitEffResult() *AttackHitEffectResult {
	if x != nil {
		return x.HitEffResult
	}
	return nil
}

func (x *AttackResult) GetDamageShield() float32 {
	if x != nil {
		return x.DamageShield
	}
	return 0
}

func (x *AttackResult) GetEndureDelta() float32 {
	if x != nil {
		return x.EndureDelta
	}
	return 0
}

func (x *AttackResult) GetResolvedDir() *Vector {
	if x != nil {
		return x.ResolvedDir
	}
	return nil
}

func (x *AttackResult) GetDamage() float32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *AttackResult) GetAddhurtReactionType() uint32 {
	if x != nil {
		return x.AddhurtReactionType
	}
	return 0
}

func (x *AttackResult) GetHashedAnimEventId() uint32 {
	if x != nil {
		return x.HashedAnimEventId
	}
	return 0
}

func (x *AttackResult) GetUseGadgetDamageAction() bool {
	if x != nil {
		return x.UseGadgetDamageAction
	}
	return false
}

func (x *AttackResult) GetHitRetreatAngleCompat() int32 {
	if x != nil {
		return x.HitRetreatAngleCompat
	}
	return 0
}

func (x *AttackResult) GetAbilityIdentifier() *AbilityIdentifier {
	if x != nil {
		return x.AbilityIdentifier
	}
	return nil
}

func (x *AttackResult) GetAttackerId() uint32 {
	if x != nil {
		return x.AttackerId
	}
	return 0
}

func (x *AttackResult) GetMuteElementHurt() bool {
	if x != nil {
		return x.MuteElementHurt
	}
	return false
}

func (x *AttackResult) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *AttackResult) GetHitCollision() *HitCollision {
	if x != nil {
		return x.HitCollision
	}
	return nil
}

func (x *AttackResult) GetGadgetDamageActionIdx() uint32 {
	if x != nil {
		return x.GadgetDamageActionIdx
	}
	return 0
}

type EvtBeingHitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId       uint32        `protobuf:"varint,6,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	AttackResult *AttackResult `protobuf:"bytes,7,opt,name=attack_result,json=attackResult,proto3" json:"attack_result,omitempty"`
	FrameNum     uint32        `protobuf:"varint,4,opt,name=frame_num,json=frameNum,proto3" json:"frame_num,omitempty"`
}

func (x *EvtBeingHitInfo) Reset() {
	*x = EvtBeingHitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBeingHitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBeingHitInfo) ProtoMessage() {}

func (x *EvtBeingHitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBeingHitInfo.ProtoReflect.Descriptor instead.
func (*EvtBeingHitInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{4}
}

func (x *EvtBeingHitInfo) GetPeerId() uint32 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *EvtBeingHitInfo) GetAttackResult() *AttackResult {
	if x != nil {
		return x.AttackResult
	}
	return nil
}

func (x *EvtBeingHitInfo) GetFrameNum() uint32 {
	if x != nil {
		return x.FrameNum
	}
	return 0
}

type EvtHittingOtherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackResult *AttackResult `protobuf:"bytes,2,opt,name=attack_result,json=attackResult,proto3" json:"attack_result,omitempty"`
	PeerId       uint32        `protobuf:"varint,8,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *EvtHittingOtherInfo) Reset() {
	*x = EvtHittingOtherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtHittingOtherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtHittingOtherInfo) ProtoMessage() {}

func (x *EvtHittingOtherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtHittingOtherInfo.ProtoReflect.Descriptor instead.
func (*EvtHittingOtherInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{5}
}

func (x *EvtHittingOtherInfo) GetAttackResult() *AttackResult {
	if x != nil {
		return x.AttackResult
	}
	return nil
}

func (x *EvtHittingOtherInfo) GetPeerId() uint32 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

type EvtBeingHitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType  ForwardType      `protobuf:"varint,6,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	BeingHitInfo *EvtBeingHitInfo `protobuf:"bytes,3,opt,name=being_hit_info,json=beingHitInfo,proto3" json:"being_hit_info,omitempty"`
}

func (x *EvtBeingHitNotify) Reset() {
	*x = EvtBeingHitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBeingHitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBeingHitNotify) ProtoMessage() {}

func (x *EvtBeingHitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBeingHitNotify.ProtoReflect.Descriptor instead.
func (*EvtBeingHitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{6}
}

func (x *EvtBeingHitNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtBeingHitNotify) GetBeingHitInfo() *EvtBeingHitInfo {
	if x != nil {
		return x.BeingHitInfo
	}
	return nil
}

type EvtAnimatorParameterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId      uint32                      `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	IsServerCache bool                        `protobuf:"varint,5,opt,name=is_server_cache,json=isServerCache,proto3" json:"is_server_cache,omitempty"`
	Value         *AnimatorParameterValueInfo `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	NameId        int32                       `protobuf:"varint,15,opt,name=name_id,json=nameId,proto3" json:"name_id,omitempty"`
}

func (x *EvtAnimatorParameterInfo) Reset() {
	*x = EvtAnimatorParameterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAnimatorParameterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAnimatorParameterInfo) ProtoMessage() {}

func (x *EvtAnimatorParameterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAnimatorParameterInfo.ProtoReflect.Descriptor instead.
func (*EvtAnimatorParameterInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{7}
}

func (x *EvtAnimatorParameterInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtAnimatorParameterInfo) GetIsServerCache() bool {
	if x != nil {
		return x.IsServerCache
	}
	return false
}

func (x *EvtAnimatorParameterInfo) GetValue() *AnimatorParameterValueInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *EvtAnimatorParameterInfo) GetNameId() int32 {
	if x != nil {
		return x.NameId
	}
	return 0
}

type EvtAnimatorParameterNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimatorParamInfo *EvtAnimatorParameterInfo `protobuf:"bytes,12,opt,name=animator_param_info,json=animatorParamInfo,proto3" json:"animator_param_info,omitempty"`
	ForwardType       ForwardType               `protobuf:"varint,14,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
}

func (x *EvtAnimatorParameterNotify) Reset() {
	*x = EvtAnimatorParameterNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAnimatorParameterNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAnimatorParameterNotify) ProtoMessage() {}

func (x *EvtAnimatorParameterNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAnimatorParameterNotify.ProtoReflect.Descriptor instead.
func (*EvtAnimatorParameterNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{8}
}

func (x *EvtAnimatorParameterNotify) GetAnimatorParamInfo() *EvtAnimatorParameterInfo {
	if x != nil {
		return x.AnimatorParamInfo
	}
	return nil
}

func (x *EvtAnimatorParameterNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

type AbilityArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Arg:
	//
	//	*AbilityArgument_IntArg
	//	*AbilityArgument_FloatArg
	//	*AbilityArgument_StrArg
	Arg isAbilityArgument_Arg `protobuf_oneof:"arg"`
}

func (x *AbilityArgument) Reset() {
	*x = AbilityArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbilityArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityArgument) ProtoMessage() {}

func (x *AbilityArgument) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityArgument.ProtoReflect.Descriptor instead.
func (*AbilityArgument) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{9}
}

func (m *AbilityArgument) GetArg() isAbilityArgument_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (x *AbilityArgument) GetIntArg() uint32 {
	if x, ok := x.GetArg().(*AbilityArgument_IntArg); ok {
		return x.IntArg
	}
	return 0
}

func (x *AbilityArgument) GetFloatArg() float32 {
	if x, ok := x.GetArg().(*AbilityArgument_FloatArg); ok {
		return x.FloatArg
	}
	return 0
}

func (x *AbilityArgument) GetStrArg() string {
	if x, ok := x.GetArg().(*AbilityArgument_StrArg); ok {
		return x.StrArg
	}
	return ""
}

type isAbilityArgument_Arg interface {
	isAbilityArgument_Arg()
}

type AbilityArgument_IntArg struct {
	IntArg uint32 `protobuf:"varint,5,opt,name=int_arg,json=intArg,proto3,oneof"`
}

type AbilityArgument_FloatArg struct {
	FloatArg float32 `protobuf:"fixed32,15,opt,name=float_arg,json=floatArg,proto3,oneof"`
}

type AbilityArgument_StrArg struct {
	StrArg string `protobuf:"bytes,11,opt,name=str_arg,json=strArg,proto3,oneof"`
}

func (*AbilityArgument_IntArg) isAbilityArgument_Arg() {}

func (*AbilityArgument_FloatArg) isAbilityArgument_Arg() {}

func (*AbilityArgument_StrArg) isAbilityArgument_Arg() {}

type HostPlayerNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostPeerId uint32 `protobuf:"varint,13,opt,name=host_peer_id,json=hostPeerId,proto3" json:"host_peer_id,omitempty"`
	HostUid    uint32 `protobuf:"varint,10,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
}

func (x *HostPlayerNotify) Reset() {
	*x = HostPlayerNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPlayerNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPlayerNotify) ProtoMessage() {}

func (x *HostPlayerNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPlayerNotify.ProtoReflect.Descriptor instead.
func (*HostPlayerNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{10}
}

func (x *HostPlayerNotify) GetHostPeerId() uint32 {
	if x != nil {
		return x.HostPeerId
	}
	return 0
}

func (x *HostPlayerNotify) GetHostUid() uint32 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

type EvtDoSkillSuccNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CasterId    uint32      `protobuf:"varint,13,opt,name=caster_id,json=casterId,proto3" json:"caster_id,omitempty"`
	ForwardType ForwardType `protobuf:"varint,10,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	Forward     *Vector     `protobuf:"bytes,15,opt,name=forward,proto3" json:"forward,omitempty"`
	SkillId     uint32      `protobuf:"varint,7,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
}

func (x *EvtDoSkillSuccNotify) Reset() {
	*x = EvtDoSkillSuccNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtDoSkillSuccNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtDoSkillSuccNotify) ProtoMessage() {}

func (x *EvtDoSkillSuccNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtDoSkillSuccNotify.ProtoReflect.Descriptor instead.
func (*EvtDoSkillSuccNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{11}
}

func (x *EvtDoSkillSuccNotify) GetCasterId() uint32 {
	if x != nil {
		return x.CasterId
	}
	return 0
}

func (x *EvtDoSkillSuccNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtDoSkillSuccNotify) GetForward() *Vector {
	if x != nil {
		return x.Forward
	}
	return nil
}

func (x *EvtDoSkillSuccNotify) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

type EvtCreateGadgetNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAsyncLoad              bool        `protobuf:"varint,8,opt,name=is_async_load,json=isAsyncLoad,proto3" json:"is_async_load,omitempty"`
	CampType                 uint32      `protobuf:"varint,5,opt,name=camp_type,json=campType,proto3" json:"camp_type,omitempty"`
	SightGroupWithOwner      bool        `protobuf:"varint,10,opt,name=sight_group_with_owner,json=sightGroupWithOwner,proto3" json:"sight_group_with_owner,omitempty"`
	TargetEntityIdList       []uint32    `protobuf:"varint,889,rep,packed,name=target_entity_id_list,json=targetEntityIdList,proto3" json:"target_entity_id_list,omitempty"`
	ForwardType              ForwardType `protobuf:"varint,12,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EntityId                 uint32      `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TargetEntityId           uint32      `protobuf:"varint,3,opt,name=target_entity_id,json=targetEntityId,proto3" json:"target_entity_id,omitempty"`
	CampId                   uint32      `protobuf:"varint,15,opt,name=camp_id,json=campId,proto3" json:"camp_id,omitempty"`
	Guid                     uint64      `protobuf:"varint,6,opt,name=guid,proto3" json:"guid,omitempty"`
	InitEulerAngles          *Vector     `protobuf:"bytes,13,opt,name=init_euler_angles,json=initEulerAngles,proto3" json:"init_euler_angles,omitempty"`
	TargetLockPointIndex     uint32      `protobuf:"varint,11,opt,name=target_lock_point_index,json=targetLockPointIndex,proto3" json:"target_lock_point_index,omitempty"`
	TargetLockPointIndexList []uint32    `protobuf:"varint,1920,rep,packed,name=target_lock_point_index_list,json=targetLockPointIndexList,proto3" json:"target_lock_point_index_list,omitempty"`
	InitPos                  *Vector     `protobuf:"bytes,4,opt,name=init_pos,json=initPos,proto3" json:"init_pos,omitempty"`
	OwnerEntityId            uint32      `protobuf:"varint,9,opt,name=owner_entity_id,json=ownerEntityId,proto3" json:"owner_entity_id,omitempty"`
	RoomId                   uint32      `protobuf:"varint,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsPeerIdFromPlayer       bool        `protobuf:"varint,25,opt,name=is_peer_id_from_player,json=isPeerIdFromPlayer,proto3" json:"is_peer_id_from_player,omitempty"`
	PropOwnerEntityId        uint32      `protobuf:"varint,1,opt,name=prop_owner_entity_id,json=propOwnerEntityId,proto3" json:"prop_owner_entity_id,omitempty"`
	IsTrueLifeTimeByOwner    bool        `protobuf:"varint,379,opt,name=is_true_life_time_by_owner,json=isTrueLifeTimeByOwner,proto3" json:"is_true_life_time_by_owner,omitempty"`
	ConfigId                 uint32      `protobuf:"varint,14,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *EvtCreateGadgetNotify) Reset() {
	*x = EvtCreateGadgetNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtCreateGadgetNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtCreateGadgetNotify) ProtoMessage() {}

func (x *EvtCreateGadgetNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtCreateGadgetNotify.ProtoReflect.Descriptor instead.
func (*EvtCreateGadgetNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{12}
}

func (x *EvtCreateGadgetNotify) GetIsAsyncLoad() bool {
	if x != nil {
		return x.IsAsyncLoad
	}
	return false
}

func (x *EvtCreateGadgetNotify) GetCampType() uint32 {
	if x != nil {
		return x.CampType
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetSightGroupWithOwner() bool {
	if x != nil {
		return x.SightGroupWithOwner
	}
	return false
}

func (x *EvtCreateGadgetNotify) GetTargetEntityIdList() []uint32 {
	if x != nil {
		return x.TargetEntityIdList
	}
	return nil
}

func (x *EvtCreateGadgetNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtCreateGadgetNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetTargetEntityId() uint32 {
	if x != nil {
		return x.TargetEntityId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetCampId() uint32 {
	if x != nil {
		return x.CampId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetInitEulerAngles() *Vector {
	if x != nil {
		return x.InitEulerAngles
	}
	return nil
}

func (x *EvtCreateGadgetNotify) GetTargetLockPointIndex() uint32 {
	if x != nil {
		return x.TargetLockPointIndex
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetTargetLockPointIndexList() []uint32 {
	if x != nil {
		return x.TargetLockPointIndexList
	}
	return nil
}

func (x *EvtCreateGadgetNotify) GetInitPos() *Vector {
	if x != nil {
		return x.InitPos
	}
	return nil
}

func (x *EvtCreateGadgetNotify) GetOwnerEntityId() uint32 {
	if x != nil {
		return x.OwnerEntityId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetIsPeerIdFromPlayer() bool {
	if x != nil {
		return x.IsPeerIdFromPlayer
	}
	return false
}

func (x *EvtCreateGadgetNotify) GetPropOwnerEntityId() uint32 {
	if x != nil {
		return x.PropOwnerEntityId
	}
	return 0
}

func (x *EvtCreateGadgetNotify) GetIsTrueLifeTimeByOwner() bool {
	if x != nil {
		return x.IsTrueLifeTimeByOwner
	}
	return false
}

func (x *EvtCreateGadgetNotify) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type EvtDestroyGadgetNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType ForwardType `protobuf:"varint,5,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EntityId    uint32      `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtDestroyGadgetNotify) Reset() {
	*x = EvtDestroyGadgetNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtDestroyGadgetNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtDestroyGadgetNotify) ProtoMessage() {}

func (x *EvtDestroyGadgetNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtDestroyGadgetNotify.ProtoReflect.Descriptor instead.
func (*EvtDestroyGadgetNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{13}
}

func (x *EvtDestroyGadgetNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtDestroyGadgetNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtFaceToEntityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceEntityId uint32      `protobuf:"varint,5,opt,name=face_entity_id,json=faceEntityId,proto3" json:"face_entity_id,omitempty"`
	ForwardType  ForwardType `protobuf:"varint,9,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EntityId     uint32      `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtFaceToEntityNotify) Reset() {
	*x = EvtFaceToEntityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtFaceToEntityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtFaceToEntityNotify) ProtoMessage() {}

func (x *EvtFaceToEntityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtFaceToEntityNotify.ProtoReflect.Descriptor instead.
func (*EvtFaceToEntityNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{14}
}

func (x *EvtFaceToEntityNotify) GetFaceEntityId() uint32 {
	if x != nil {
		return x.FaceEntityId
	}
	return 0
}

func (x *EvtFaceToEntityNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtFaceToEntityNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtFaceToDirInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32  `protobuf:"varint,12,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FaceDir  *Vector `protobuf:"bytes,14,opt,name=face_dir,json=faceDir,proto3" json:"face_dir,omitempty"`
}

func (x *EvtFaceToDirInfo) Reset() {
	*x = EvtFaceToDirInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtFaceToDirInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtFaceToDirInfo) ProtoMessage() {}

func (x *EvtFaceToDirInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtFaceToDirInfo.ProtoReflect.Descriptor instead.
func (*EvtFaceToDirInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{15}
}

func (x *EvtFaceToDirInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtFaceToDirInfo) GetFaceDir() *Vector {
	if x != nil {
		return x.FaceDir
	}
	return nil
}

type EvtFaceToDirNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType      ForwardType       `protobuf:"varint,13,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EvtFaceToDirInfo *EvtFaceToDirInfo `protobuf:"bytes,5,opt,name=evt_face_to_dir_info,json=evtFaceToDirInfo,proto3" json:"evt_face_to_dir_info,omitempty"`
}

func (x *EvtFaceToDirNotify) Reset() {
	*x = EvtFaceToDirNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtFaceToDirNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtFaceToDirNotify) ProtoMessage() {}

func (x *EvtFaceToDirNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtFaceToDirNotify.ProtoReflect.Descriptor instead.
func (*EvtFaceToDirNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{16}
}

func (x *EvtFaceToDirNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtFaceToDirNotify) GetEvtFaceToDirInfo() *EvtFaceToDirInfo {
	if x != nil {
		return x.EvtFaceToDirInfo
	}
	return nil
}

type EvtCostStaminaNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId     uint32  `protobuf:"varint,6,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	CostStamina float32 `protobuf:"fixed32,11,opt,name=cost_stamina,json=costStamina,proto3" json:"cost_stamina,omitempty"`
}

func (x *EvtCostStaminaNotify) Reset() {
	*x = EvtCostStaminaNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtCostStaminaNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtCostStaminaNotify) ProtoMessage() {}

func (x *EvtCostStaminaNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtCostStaminaNotify.ProtoReflect.Descriptor instead.
func (*EvtCostStaminaNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{17}
}

func (x *EvtCostStaminaNotify) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *EvtCostStaminaNotify) GetCostStamina() float32 {
	if x != nil {
		return x.CostStamina
	}
	return 0
}

type EvtSetAttackTargetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId         uint32 `protobuf:"varint,11,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	SelectPointIndex uint32 `protobuf:"varint,6,opt,name=select_point_index,json=selectPointIndex,proto3" json:"select_point_index,omitempty"`
	AttackTargetId   uint32 `protobuf:"varint,7,opt,name=attack_target_id,json=attackTargetId,proto3" json:"attack_target_id,omitempty"`
}

func (x *EvtSetAttackTargetInfo) Reset() {
	*x = EvtSetAttackTargetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtSetAttackTargetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtSetAttackTargetInfo) ProtoMessage() {}

func (x *EvtSetAttackTargetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtSetAttackTargetInfo.ProtoReflect.Descriptor instead.
func (*EvtSetAttackTargetInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{18}
}

func (x *EvtSetAttackTargetInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtSetAttackTargetInfo) GetSelectPointIndex() uint32 {
	if x != nil {
		return x.SelectPointIndex
	}
	return 0
}

func (x *EvtSetAttackTargetInfo) GetAttackTargetId() uint32 {
	if x != nil {
		return x.AttackTargetId
	}
	return 0
}

type EvtSetAttackTargetNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType            ForwardType             `protobuf:"varint,1,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EvtSetAttackTargetInfo *EvtSetAttackTargetInfo `protobuf:"bytes,11,opt,name=evt_set_attack_target_info,json=evtSetAttackTargetInfo,proto3" json:"evt_set_attack_target_info,omitempty"`
}

func (x *EvtSetAttackTargetNotify) Reset() {
	*x = EvtSetAttackTargetNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtSetAttackTargetNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtSetAttackTargetNotify) ProtoMessage() {}

func (x *EvtSetAttackTargetNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtSetAttackTargetNotify.ProtoReflect.Descriptor instead.
func (*EvtSetAttackTargetNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{19}
}

func (x *EvtSetAttackTargetNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtSetAttackTargetNotify) GetEvtSetAttackTargetInfo() *EvtSetAttackTargetInfo {
	if x != nil {
		return x.EvtSetAttackTargetInfo
	}
	return nil
}

type EvtAnimatorStateChangedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceAngleCompact               int32   `protobuf:"varint,14,opt,name=face_angle_compact,json=faceAngleCompact,proto3" json:"face_angle_compact,omitempty"`
	ToStateHash                    uint32  `protobuf:"varint,5,opt,name=to_state_hash,json=toStateHash,proto3" json:"to_state_hash,omitempty"`
	NormalizedTimeCompact          uint32  `protobuf:"varint,9,opt,name=normalized_time_compact,json=normalizedTimeCompact,proto3" json:"normalized_time_compact,omitempty"`
	Layer                          uint32  `protobuf:"varint,2,opt,name=layer,proto3" json:"layer,omitempty"`
	Pos                            *Vector `protobuf:"bytes,13,opt,name=pos,proto3" json:"pos,omitempty"`
	FadeDuration                   float32 `protobuf:"fixed32,3,opt,name=fade_duration,json=fadeDuration,proto3" json:"fade_duration,omitempty"`
	ForceSync                      bool    `protobuf:"varint,1,opt,name=forceSync,proto3" json:"forceSync,omitempty"`
	EntityId                       uint32  `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	HandleAnimatorStateImmediately bool    `protobuf:"varint,7,opt,name=handle_animator_state_immediately,json=handleAnimatorStateImmediately,proto3" json:"handle_animator_state_immediately,omitempty"`
}

func (x *EvtAnimatorStateChangedInfo) Reset() {
	*x = EvtAnimatorStateChangedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAnimatorStateChangedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAnimatorStateChangedInfo) ProtoMessage() {}

func (x *EvtAnimatorStateChangedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAnimatorStateChangedInfo.ProtoReflect.Descriptor instead.
func (*EvtAnimatorStateChangedInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{20}
}

func (x *EvtAnimatorStateChangedInfo) GetFaceAngleCompact() int32 {
	if x != nil {
		return x.FaceAngleCompact
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetToStateHash() uint32 {
	if x != nil {
		return x.ToStateHash
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetNormalizedTimeCompact() uint32 {
	if x != nil {
		return x.NormalizedTimeCompact
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *EvtAnimatorStateChangedInfo) GetFadeDuration() float32 {
	if x != nil {
		return x.FadeDuration
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetForceSync() bool {
	if x != nil {
		return x.ForceSync
	}
	return false
}

func (x *EvtAnimatorStateChangedInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtAnimatorStateChangedInfo) GetHandleAnimatorStateImmediately() bool {
	if x != nil {
		return x.HandleAnimatorStateImmediately
	}
	return false
}

type EvtCompensatePosDiffInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurPos                *Vector `protobuf:"bytes,14,opt,name=cur_pos,json=curPos,proto3" json:"cur_pos,omitempty"`
	EntityId              uint32  `protobuf:"varint,11,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FaceAngleCompact      int32   `protobuf:"varint,10,opt,name=face_angle_compact,json=faceAngleCompact,proto3" json:"face_angle_compact,omitempty"`
	CurHash               uint32  `protobuf:"varint,4,opt,name=cur_hash,json=curHash,proto3" json:"cur_hash,omitempty"`
	NormalizedTimeCompact uint32  `protobuf:"varint,3,opt,name=normalized_time_compact,json=normalizedTimeCompact,proto3" json:"normalized_time_compact,omitempty"`
}

func (x *EvtCompensatePosDiffInfo) Reset() {
	*x = EvtCompensatePosDiffInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtCompensatePosDiffInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtCompensatePosDiffInfo) ProtoMessage() {}

func (x *EvtCompensatePosDiffInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtCompensatePosDiffInfo.ProtoReflect.Descriptor instead.
func (*EvtCompensatePosDiffInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{21}
}

func (x *EvtCompensatePosDiffInfo) GetCurPos() *Vector {
	if x != nil {
		return x.CurPos
	}
	return nil
}

func (x *EvtCompensatePosDiffInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtCompensatePosDiffInfo) GetFaceAngleCompact() int32 {
	if x != nil {
		return x.FaceAngleCompact
	}
	return 0
}

func (x *EvtCompensatePosDiffInfo) GetCurHash() uint32 {
	if x != nil {
		return x.CurHash
	}
	return 0
}

func (x *EvtCompensatePosDiffInfo) GetNormalizedTimeCompact() uint32 {
	if x != nil {
		return x.NormalizedTimeCompact
	}
	return 0
}

type EvtMonsterDoBlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetRot *Vector `protobuf:"bytes,3,opt,name=target_rot,json=targetRot,proto3" json:"target_rot,omitempty"`
	TargetPos *Vector `protobuf:"bytes,7,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`
	EntityId  uint32  `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtMonsterDoBlink) Reset() {
	*x = EvtMonsterDoBlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtMonsterDoBlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtMonsterDoBlink) ProtoMessage() {}

func (x *EvtMonsterDoBlink) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtMonsterDoBlink.ProtoReflect.Descriptor instead.
func (*EvtMonsterDoBlink) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{22}
}

func (x *EvtMonsterDoBlink) GetTargetRot() *Vector {
	if x != nil {
		return x.TargetRot
	}
	return nil
}

func (x *EvtMonsterDoBlink) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *EvtMonsterDoBlink) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtFixedRushMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId                     uint32   `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Speed                        float32  `protobuf:"fixed32,3,opt,name=speed,proto3" json:"speed,omitempty"`
	NeedSetIsInAir               bool     `protobuf:"varint,7,opt,name=need_set_is_in_air,json=needSetIsInAir,proto3" json:"need_set_is_in_air,omitempty"`
	AnimatorStateIdList          []uint32 `protobuf:"varint,2,rep,packed,name=animator_state_id_list,json=animatorStateIdList,proto3" json:"animator_state_id_list,omitempty"`
	TargetPos                    *Vector  `protobuf:"bytes,9,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`
	CheckAnimatorStateOnExitOnly bool     `protobuf:"varint,6,opt,name=check_animator_state_on_exit_only,json=checkAnimatorStateOnExitOnly,proto3" json:"check_animator_state_on_exit_only,omitempty"`
	OverrideCollider             string   `protobuf:"bytes,13,opt,name=override_collider,json=overrideCollider,proto3" json:"override_collider,omitempty"`
}

func (x *EvtFixedRushMove) Reset() {
	*x = EvtFixedRushMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtFixedRushMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtFixedRushMove) ProtoMessage() {}

func (x *EvtFixedRushMove) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtFixedRushMove.ProtoReflect.Descriptor instead.
func (*EvtFixedRushMove) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{23}
}

func (x *EvtFixedRushMove) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtFixedRushMove) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *EvtFixedRushMove) GetNeedSetIsInAir() bool {
	if x != nil {
		return x.NeedSetIsInAir
	}
	return false
}

func (x *EvtFixedRushMove) GetAnimatorStateIdList() []uint32 {
	if x != nil {
		return x.AnimatorStateIdList
	}
	return nil
}

func (x *EvtFixedRushMove) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *EvtFixedRushMove) GetCheckAnimatorStateOnExitOnly() bool {
	if x != nil {
		return x.CheckAnimatorStateOnExitOnly
	}
	return false
}

func (x *EvtFixedRushMove) GetOverrideCollider() string {
	if x != nil {
		return x.OverrideCollider
	}
	return ""
}

type EvtSyncTransform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId  uint32  `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityPos *Vector `protobuf:"bytes,6,opt,name=entity_pos,json=entityPos,proto3" json:"entity_pos,omitempty"`
	EntityRot *Vector `protobuf:"bytes,1,opt,name=entity_rot,json=entityRot,proto3" json:"entity_rot,omitempty"`
}

func (x *EvtSyncTransform) Reset() {
	*x = EvtSyncTransform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtSyncTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtSyncTransform) ProtoMessage() {}

func (x *EvtSyncTransform) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtSyncTransform.ProtoReflect.Descriptor instead.
func (*EvtSyncTransform) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{24}
}

func (x *EvtSyncTransform) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtSyncTransform) GetEntityPos() *Vector {
	if x != nil {
		return x.EntityPos
	}
	return nil
}

func (x *EvtSyncTransform) GetEntityRot() *Vector {
	if x != nil {
		return x.EntityRot
	}
	return nil
}

type EvtLightCoreMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPos     *Vector `protobuf:"bytes,15,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`
	Acelerate     float32 `protobuf:"fixed32,11,opt,name=acelerate,proto3" json:"acelerate,omitempty"`
	EntityId      uint32  `protobuf:"varint,5,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	MaxAbsorbTime float32 `protobuf:"fixed32,10,opt,name=max_absorb_time,json=maxAbsorbTime,proto3" json:"max_absorb_time,omitempty"`
	Speed         float32 `protobuf:"fixed32,14,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *EvtLightCoreMove) Reset() {
	*x = EvtLightCoreMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtLightCoreMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtLightCoreMove) ProtoMessage() {}

func (x *EvtLightCoreMove) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtLightCoreMove.ProtoReflect.Descriptor instead.
func (*EvtLightCoreMove) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{25}
}

func (x *EvtLightCoreMove) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *EvtLightCoreMove) GetAcelerate() float32 {
	if x != nil {
		return x.Acelerate
	}
	return 0
}

func (x *EvtLightCoreMove) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtLightCoreMove) GetMaxAbsorbTime() float32 {
	if x != nil {
		return x.MaxAbsorbTime
	}
	return 0
}

func (x *EvtLightCoreMove) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type EvtGrapplingHookMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceleration                 float32  `protobuf:"fixed32,1,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	AnimatorStateIdList          []uint32 `protobuf:"varint,2,rep,packed,name=animator_state_id_list,json=animatorStateIdList,proto3" json:"animator_state_id_list,omitempty"`
	EntityId                     uint32   `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	NeedSetIsInAir               bool     `protobuf:"varint,13,opt,name=need_set_is_in_air,json=needSetIsInAir,proto3" json:"need_set_is_in_air,omitempty"`
	Speed                        float32  `protobuf:"fixed32,12,opt,name=speed,proto3" json:"speed,omitempty"`
	MaxSpeed                     float32  `protobuf:"fixed32,8,opt,name=max_speed,json=maxSpeed,proto3" json:"max_speed,omitempty"`
	CheckAnimatorStateOnExitOnly bool     `protobuf:"varint,11,opt,name=check_animator_state_on_exit_only,json=checkAnimatorStateOnExitOnly,proto3" json:"check_animator_state_on_exit_only,omitempty"`
	OverrideCollider             string   `protobuf:"bytes,14,opt,name=override_collider,json=overrideCollider,proto3" json:"override_collider,omitempty"`
	TargetPos                    *Vector  `protobuf:"bytes,10,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`
}

func (x *EvtGrapplingHookMove) Reset() {
	*x = EvtGrapplingHookMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtGrapplingHookMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtGrapplingHookMove) ProtoMessage() {}

func (x *EvtGrapplingHookMove) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtGrapplingHookMove.ProtoReflect.Descriptor instead.
func (*EvtGrapplingHookMove) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{26}
}

func (x *EvtGrapplingHookMove) GetAcceleration() float32 {
	if x != nil {
		return x.Acceleration
	}
	return 0
}

func (x *EvtGrapplingHookMove) GetAnimatorStateIdList() []uint32 {
	if x != nil {
		return x.AnimatorStateIdList
	}
	return nil
}

func (x *EvtGrapplingHookMove) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtGrapplingHookMove) GetNeedSetIsInAir() bool {
	if x != nil {
		return x.NeedSetIsInAir
	}
	return false
}

func (x *EvtGrapplingHookMove) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *EvtGrapplingHookMove) GetMaxSpeed() float32 {
	if x != nil {
		return x.MaxSpeed
	}
	return 0
}

func (x *EvtGrapplingHookMove) GetCheckAnimatorStateOnExitOnly() bool {
	if x != nil {
		return x.CheckAnimatorStateOnExitOnly
	}
	return false
}

func (x *EvtGrapplingHookMove) GetOverrideCollider() string {
	if x != nil {
		return x.OverrideCollider
	}
	return ""
}

func (x *EvtGrapplingHookMove) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

type EvtAnimatorStateChangedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType                 ForwardType                  `protobuf:"varint,3,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EvtAnimatorStateChangedInfo *EvtAnimatorStateChangedInfo `protobuf:"bytes,10,opt,name=evt_animator_state_changed_info,json=evtAnimatorStateChangedInfo,proto3" json:"evt_animator_state_changed_info,omitempty"`
}

func (x *EvtAnimatorStateChangedNotify) Reset() {
	*x = EvtAnimatorStateChangedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAnimatorStateChangedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAnimatorStateChangedNotify) ProtoMessage() {}

func (x *EvtAnimatorStateChangedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAnimatorStateChangedNotify.ProtoReflect.Descriptor instead.
func (*EvtAnimatorStateChangedNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{27}
}

func (x *EvtAnimatorStateChangedNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtAnimatorStateChangedNotify) GetEvtAnimatorStateChangedInfo() *EvtAnimatorStateChangedInfo {
	if x != nil {
		return x.EvtAnimatorStateChangedInfo
	}
	return nil
}

type EvtRushMoveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateNameHash       int32   `protobuf:"varint,11,opt,name=state_name_hash,json=stateNameHash,proto3" json:"state_name_hash,omitempty"`
	RushToPos           *Vector `protobuf:"bytes,9,opt,name=rush_to_pos,json=rushToPos,proto3" json:"rush_to_pos,omitempty"`
	RushAttackTargetPos *Vector `protobuf:"bytes,8,opt,name=rush_attack_target_pos,json=rushAttackTargetPos,proto3" json:"rush_attack_target_pos,omitempty"`
	EntityId            uint32  `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TimeRange           float32 `protobuf:"fixed32,15,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	Velocity            *Vector `protobuf:"bytes,6,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Pos                 *Vector `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	FaceAngleCompact    int32   `protobuf:"varint,10,opt,name=face_angle_compact,json=faceAngleCompact,proto3" json:"face_angle_compact,omitempty"`
}

func (x *EvtRushMoveInfo) Reset() {
	*x = EvtRushMoveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtRushMoveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtRushMoveInfo) ProtoMessage() {}

func (x *EvtRushMoveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtRushMoveInfo.ProtoReflect.Descriptor instead.
func (*EvtRushMoveInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{28}
}

func (x *EvtRushMoveInfo) GetStateNameHash() int32 {
	if x != nil {
		return x.StateNameHash
	}
	return 0
}

func (x *EvtRushMoveInfo) GetRushToPos() *Vector {
	if x != nil {
		return x.RushToPos
	}
	return nil
}

func (x *EvtRushMoveInfo) GetRushAttackTargetPos() *Vector {
	if x != nil {
		return x.RushAttackTargetPos
	}
	return nil
}

func (x *EvtRushMoveInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtRushMoveInfo) GetTimeRange() float32 {
	if x != nil {
		return x.TimeRange
	}
	return 0
}

func (x *EvtRushMoveInfo) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *EvtRushMoveInfo) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *EvtRushMoveInfo) GetFaceAngleCompact() int32 {
	if x != nil {
		return x.FaceAngleCompact
	}
	return 0
}

type EvtMotionInfoDuringSteerAttack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceDir  *Vector `protobuf:"bytes,4,opt,name=face_dir,json=faceDir,proto3" json:"face_dir,omitempty"`
	Velocity *Vector `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Pos      *Vector `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	EntityId uint32  `protobuf:"varint,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtMotionInfoDuringSteerAttack) Reset() {
	*x = EvtMotionInfoDuringSteerAttack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtMotionInfoDuringSteerAttack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtMotionInfoDuringSteerAttack) ProtoMessage() {}

func (x *EvtMotionInfoDuringSteerAttack) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtMotionInfoDuringSteerAttack.ProtoReflect.Descriptor instead.
func (*EvtMotionInfoDuringSteerAttack) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{29}
}

func (x *EvtMotionInfoDuringSteerAttack) GetFaceDir() *Vector {
	if x != nil {
		return x.FaceDir
	}
	return nil
}

func (x *EvtMotionInfoDuringSteerAttack) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *EvtMotionInfoDuringSteerAttack) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *EvtMotionInfoDuringSteerAttack) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtCombatSteerMotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos      *Vector `protobuf:"bytes,12,opt,name=pos,proto3" json:"pos,omitempty"`
	Velocity *Vector `protobuf:"bytes,10,opt,name=velocity,proto3" json:"velocity,omitempty"`
	EntityId uint32  `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FaceDir  *Vector `protobuf:"bytes,1,opt,name=face_dir,json=faceDir,proto3" json:"face_dir,omitempty"`
}

func (x *EvtCombatSteerMotionInfo) Reset() {
	*x = EvtCombatSteerMotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtCombatSteerMotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtCombatSteerMotionInfo) ProtoMessage() {}

func (x *EvtCombatSteerMotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtCombatSteerMotionInfo.ProtoReflect.Descriptor instead.
func (*EvtCombatSteerMotionInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{30}
}

func (x *EvtCombatSteerMotionInfo) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *EvtCombatSteerMotionInfo) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *EvtCombatSteerMotionInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtCombatSteerMotionInfo) GetFaceDir() *Vector {
	if x != nil {
		return x.FaceDir
	}
	return nil
}

type EvtCombatForceSetPosInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IceId            uint32  `protobuf:"varint,9,opt,name=ice_id,json=iceId,proto3" json:"ice_id,omitempty"`
	ColliderEntityId uint32  `protobuf:"varint,10,opt,name=collider_entity_id,json=colliderEntityId,proto3" json:"collider_entity_id,omitempty"`
	EntityId         uint32  `protobuf:"varint,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TargetPos        *Vector `protobuf:"bytes,1,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`
}

func (x *EvtCombatForceSetPosInfo) Reset() {
	*x = EvtCombatForceSetPosInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtCombatForceSetPosInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtCombatForceSetPosInfo) ProtoMessage() {}

func (x *EvtCombatForceSetPosInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtCombatForceSetPosInfo.ProtoReflect.Descriptor instead.
func (*EvtCombatForceSetPosInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{31}
}

func (x *EvtCombatForceSetPosInfo) GetIceId() uint32 {
	if x != nil {
		return x.IceId
	}
	return 0
}

func (x *EvtCombatForceSetPosInfo) GetColliderEntityId() uint32 {
	if x != nil {
		return x.ColliderEntityId
	}
	return 0
}

func (x *EvtCombatForceSetPosInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtCombatForceSetPosInfo) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

type EvtSyncEntityPositionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId              uint32  `protobuf:"varint,10,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	NormalizedTimeCompact uint32  `protobuf:"varint,13,opt,name=normalized_time_compact,json=normalizedTimeCompact,proto3" json:"normalized_time_compact,omitempty"`
	StateHash             uint32  `protobuf:"varint,8,opt,name=state_hash,json=stateHash,proto3" json:"state_hash,omitempty"`
	FaceAngleCompact      int32   `protobuf:"varint,7,opt,name=face_angle_compact,json=faceAngleCompact,proto3" json:"face_angle_compact,omitempty"`
	Pos                   *Vector `protobuf:"bytes,15,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *EvtSyncEntityPositionInfo) Reset() {
	*x = EvtSyncEntityPositionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtSyncEntityPositionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtSyncEntityPositionInfo) ProtoMessage() {}

func (x *EvtSyncEntityPositionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtSyncEntityPositionInfo.ProtoReflect.Descriptor instead.
func (*EvtSyncEntityPositionInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{32}
}

func (x *EvtSyncEntityPositionInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtSyncEntityPositionInfo) GetNormalizedTimeCompact() uint32 {
	if x != nil {
		return x.NormalizedTimeCompact
	}
	return 0
}

func (x *EvtSyncEntityPositionInfo) GetStateHash() uint32 {
	if x != nil {
		return x.StateHash
	}
	return 0
}

func (x *EvtSyncEntityPositionInfo) GetFaceAngleCompact() int32 {
	if x != nil {
		return x.FaceAngleCompact
	}
	return 0
}

func (x *EvtSyncEntityPositionInfo) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type EvtRushMoveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType     ForwardType      `protobuf:"varint,1,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EvtRushMoveInfo *EvtRushMoveInfo `protobuf:"bytes,15,opt,name=evt_rush_move_info,json=evtRushMoveInfo,proto3" json:"evt_rush_move_info,omitempty"`
}

func (x *EvtRushMoveNotify) Reset() {
	*x = EvtRushMoveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtRushMoveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtRushMoveNotify) ProtoMessage() {}

func (x *EvtRushMoveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtRushMoveNotify.ProtoReflect.Descriptor instead.
func (*EvtRushMoveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{33}
}

func (x *EvtRushMoveNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtRushMoveNotify) GetEvtRushMoveInfo() *EvtRushMoveInfo {
	if x != nil {
		return x.EvtRushMoveInfo
	}
	return nil
}

type EvtBulletHitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleBulletId  uint32          `protobuf:"varint,8,opt,name=single_bullet_id,json=singleBulletId,proto3" json:"single_bullet_id,omitempty"`
	HitPoint        *Vector         `protobuf:"bytes,15,opt,name=hit_point,json=hitPoint,proto3" json:"hit_point,omitempty"`
	HitNormal       *Vector         `protobuf:"bytes,11,opt,name=hit_normal,json=hitNormal,proto3" json:"hit_normal,omitempty"`
	HitBoxIndex     int32           `protobuf:"varint,9,opt,name=hit_box_index,json=hitBoxIndex,proto3" json:"hit_box_index,omitempty"`
	HitEntityId     uint32          `protobuf:"varint,3,opt,name=hit_entity_id,json=hitEntityId,proto3" json:"hit_entity_id,omitempty"`
	EntityId        uint32          `protobuf:"varint,5,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	ForwardPeer     uint32          `protobuf:"varint,7,opt,name=forward_peer,json=forwardPeer,proto3" json:"forward_peer,omitempty"`
	ForwardType     ForwardType     `protobuf:"varint,2,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	HitColliderType HitColliderType `protobuf:"varint,6,opt,name=hit_collider_type,json=hitColliderType,proto3,enum=proto.HitColliderType" json:"hit_collider_type,omitempty"`
}

func (x *EvtBulletHitNotify) Reset() {
	*x = EvtBulletHitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBulletHitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBulletHitNotify) ProtoMessage() {}

func (x *EvtBulletHitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBulletHitNotify.ProtoReflect.Descriptor instead.
func (*EvtBulletHitNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{34}
}

func (x *EvtBulletHitNotify) GetSingleBulletId() uint32 {
	if x != nil {
		return x.SingleBulletId
	}
	return 0
}

func (x *EvtBulletHitNotify) GetHitPoint() *Vector {
	if x != nil {
		return x.HitPoint
	}
	return nil
}

func (x *EvtBulletHitNotify) GetHitNormal() *Vector {
	if x != nil {
		return x.HitNormal
	}
	return nil
}

func (x *EvtBulletHitNotify) GetHitBoxIndex() int32 {
	if x != nil {
		return x.HitBoxIndex
	}
	return 0
}

func (x *EvtBulletHitNotify) GetHitEntityId() uint32 {
	if x != nil {
		return x.HitEntityId
	}
	return 0
}

func (x *EvtBulletHitNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtBulletHitNotify) GetForwardPeer() uint32 {
	if x != nil {
		return x.ForwardPeer
	}
	return 0
}

func (x *EvtBulletHitNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtBulletHitNotify) GetHitColliderType() HitColliderType {
	if x != nil {
		return x.HitColliderType
	}
	return HitColliderType_HIT_COLLIDER_INVALID
}

type EvtBulletDeactiveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType  ForwardType `protobuf:"varint,6,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EntityId     uint32      `protobuf:"varint,9,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	DisappearPos *Vector     `protobuf:"bytes,4,opt,name=disappear_pos,json=disappearPos,proto3" json:"disappear_pos,omitempty"`
}

func (x *EvtBulletDeactiveNotify) Reset() {
	*x = EvtBulletDeactiveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBulletDeactiveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBulletDeactiveNotify) ProtoMessage() {}

func (x *EvtBulletDeactiveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBulletDeactiveNotify.ProtoReflect.Descriptor instead.
func (*EvtBulletDeactiveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{35}
}

func (x *EvtBulletDeactiveNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtBulletDeactiveNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtBulletDeactiveNotify) GetDisappearPos() *Vector {
	if x != nil {
		return x.DisappearPos
	}
	return nil
}

type EvtEntityStartDieEndNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Immediately  bool        `protobuf:"varint,15,opt,name=immediately,proto3" json:"immediately,omitempty"`
	DieStateFlag uint32      `protobuf:"varint,12,opt,name=die_state_flag,json=dieStateFlag,proto3" json:"die_state_flag,omitempty"`
	EntityId     uint32      `protobuf:"varint,8,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	ForwardType  ForwardType `protobuf:"varint,11,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
}

func (x *EvtEntityStartDieEndNotify) Reset() {
	*x = EvtEntityStartDieEndNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtEntityStartDieEndNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtEntityStartDieEndNotify) ProtoMessage() {}

func (x *EvtEntityStartDieEndNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtEntityStartDieEndNotify.ProtoReflect.Descriptor instead.
func (*EvtEntityStartDieEndNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{36}
}

func (x *EvtEntityStartDieEndNotify) GetImmediately() bool {
	if x != nil {
		return x.Immediately
	}
	return false
}

func (x *EvtEntityStartDieEndNotify) GetDieStateFlag() uint32 {
	if x != nil {
		return x.DieStateFlag
	}
	return 0
}

func (x *EvtEntityStartDieEndNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtEntityStartDieEndNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

type EvtBulletMoveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType ForwardType `protobuf:"varint,14,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	CurPos      *Vector     `protobuf:"bytes,1,opt,name=cur_pos,json=curPos,proto3" json:"cur_pos,omitempty"`
	EntityId    uint32      `protobuf:"varint,11,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtBulletMoveNotify) Reset() {
	*x = EvtBulletMoveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBulletMoveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBulletMoveNotify) ProtoMessage() {}

func (x *EvtBulletMoveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBulletMoveNotify.ProtoReflect.Descriptor instead.
func (*EvtBulletMoveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{37}
}

func (x *EvtBulletMoveNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtBulletMoveNotify) GetCurPos() *Vector {
	if x != nil {
		return x.CurPos
	}
	return nil
}

func (x *EvtBulletMoveNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtAvatarEnterFocusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId               uint32      `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	CanMove                bool        `protobuf:"varint,10,opt,name=can_move,json=canMove,proto3" json:"can_move,omitempty"`
	EnterHoldingFocusShoot bool        `protobuf:"varint,13,opt,name=enter_holding_focus_shoot,json=enterHoldingFocusShoot,proto3" json:"enter_holding_focus_shoot,omitempty"`
	DisableAimLayer        bool        `protobuf:"varint,6,opt,name=disable_aim_layer,json=disableAimLayer,proto3" json:"disable_aim_layer,omitempty"`
	UseAutoFocus           bool        `protobuf:"varint,5,opt,name=use_auto_focus,json=useAutoFocus,proto3" json:"use_auto_focus,omitempty"`
	FastFocus              bool        `protobuf:"varint,3,opt,name=fast_focus,json=fastFocus,proto3" json:"fast_focus,omitempty"`
	ShowCrossHair          bool        `protobuf:"varint,12,opt,name=show_cross_hair,json=showCrossHair,proto3" json:"show_cross_hair,omitempty"`
	EnterNormalFocusShoot  bool        `protobuf:"varint,14,opt,name=enter_normal_focus_shoot,json=enterNormalFocusShoot,proto3" json:"enter_normal_focus_shoot,omitempty"`
	ForwardType            ForwardType `protobuf:"varint,8,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	FocusForward           *Vector     `protobuf:"bytes,7,opt,name=focus_forward,json=focusForward,proto3" json:"focus_forward,omitempty"`
	DisableAnim            bool        `protobuf:"varint,9,opt,name=disable_anim,json=disableAnim,proto3" json:"disable_anim,omitempty"`
	UseFocusSticky         bool        `protobuf:"varint,15,opt,name=use_focus_sticky,json=useFocusSticky,proto3" json:"use_focus_sticky,omitempty"`
	UseGyro                bool        `protobuf:"varint,11,opt,name=use_gyro,json=useGyro,proto3" json:"use_gyro,omitempty"`
}

func (x *EvtAvatarEnterFocusNotify) Reset() {
	*x = EvtAvatarEnterFocusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarEnterFocusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarEnterFocusNotify) ProtoMessage() {}

func (x *EvtAvatarEnterFocusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarEnterFocusNotify.ProtoReflect.Descriptor instead.
func (*EvtAvatarEnterFocusNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{38}
}

func (x *EvtAvatarEnterFocusNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtAvatarEnterFocusNotify) GetCanMove() bool {
	if x != nil {
		return x.CanMove
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetEnterHoldingFocusShoot() bool {
	if x != nil {
		return x.EnterHoldingFocusShoot
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetDisableAimLayer() bool {
	if x != nil {
		return x.DisableAimLayer
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetUseAutoFocus() bool {
	if x != nil {
		return x.UseAutoFocus
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetFastFocus() bool {
	if x != nil {
		return x.FastFocus
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetShowCrossHair() bool {
	if x != nil {
		return x.ShowCrossHair
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetEnterNormalFocusShoot() bool {
	if x != nil {
		return x.EnterNormalFocusShoot
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtAvatarEnterFocusNotify) GetFocusForward() *Vector {
	if x != nil {
		return x.FocusForward
	}
	return nil
}

func (x *EvtAvatarEnterFocusNotify) GetDisableAnim() bool {
	if x != nil {
		return x.DisableAnim
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetUseFocusSticky() bool {
	if x != nil {
		return x.UseFocusSticky
	}
	return false
}

func (x *EvtAvatarEnterFocusNotify) GetUseGyro() bool {
	if x != nil {
		return x.UseGyro
	}
	return false
}

type EvtAvatarExitFocusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishForward *Vector     `protobuf:"bytes,12,opt,name=finish_forward,json=finishForward,proto3" json:"finish_forward,omitempty"`
	ForwardType   ForwardType `protobuf:"varint,11,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EntityId      uint32      `protobuf:"varint,14,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtAvatarExitFocusNotify) Reset() {
	*x = EvtAvatarExitFocusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarExitFocusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarExitFocusNotify) ProtoMessage() {}

func (x *EvtAvatarExitFocusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarExitFocusNotify.ProtoReflect.Descriptor instead.
func (*EvtAvatarExitFocusNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{39}
}

func (x *EvtAvatarExitFocusNotify) GetFinishForward() *Vector {
	if x != nil {
		return x.FinishForward
	}
	return nil
}

func (x *EvtAvatarExitFocusNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtAvatarExitFocusNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtAvatarUpdateFocusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType  ForwardType `protobuf:"varint,7,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	FocusForward *Vector     `protobuf:"bytes,11,opt,name=focus_forward,json=focusForward,proto3" json:"focus_forward,omitempty"`
	EntityId     uint32      `protobuf:"varint,10,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtAvatarUpdateFocusNotify) Reset() {
	*x = EvtAvatarUpdateFocusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarUpdateFocusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarUpdateFocusNotify) ProtoMessage() {}

func (x *EvtAvatarUpdateFocusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarUpdateFocusNotify.ProtoReflect.Descriptor instead.
func (*EvtAvatarUpdateFocusNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{40}
}

func (x *EvtAvatarUpdateFocusNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtAvatarUpdateFocusNotify) GetFocusForward() *Vector {
	if x != nil {
		return x.FocusForward
	}
	return nil
}

func (x *EvtAvatarUpdateFocusNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type AuthorityChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityAuthorityInfo *EntityAuthorityInfo `protobuf:"bytes,5,opt,name=entity_authority_info,json=entityAuthorityInfo,proto3" json:"entity_authority_info,omitempty"`
	AuthorityPeerId     uint32               `protobuf:"varint,3,opt,name=authority_peer_id,json=authorityPeerId,proto3" json:"authority_peer_id,omitempty"`
	EntityId            uint32               `protobuf:"varint,13,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *AuthorityChange) Reset() {
	*x = AuthorityChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityChange) ProtoMessage() {}

func (x *AuthorityChange) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityChange.ProtoReflect.Descriptor instead.
func (*AuthorityChange) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{41}
}

func (x *AuthorityChange) GetEntityAuthorityInfo() *EntityAuthorityInfo {
	if x != nil {
		return x.EntityAuthorityInfo
	}
	return nil
}

func (x *AuthorityChange) GetAuthorityPeerId() uint32 {
	if x != nil {
		return x.AuthorityPeerId
	}
	return 0
}

func (x *AuthorityChange) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EntityAuthorityChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorityChangeList []*AuthorityChange `protobuf:"bytes,15,rep,name=authority_change_list,json=authorityChangeList,proto3" json:"authority_change_list,omitempty"`
}

func (x *EntityAuthorityChangeNotify) Reset() {
	*x = EntityAuthorityChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAuthorityChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAuthorityChangeNotify) ProtoMessage() {}

func (x *EntityAuthorityChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAuthorityChangeNotify.ProtoReflect.Descriptor instead.
func (*EntityAuthorityChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{42}
}

func (x *EntityAuthorityChangeNotify) GetAuthorityChangeList() []*AuthorityChange {
	if x != nil {
		return x.AuthorityChangeList
	}
	return nil
}

type AvatarBuffAddNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	BuffId     uint32 `protobuf:"varint,6,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`
}

func (x *AvatarBuffAddNotify) Reset() {
	*x = AvatarBuffAddNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarBuffAddNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarBuffAddNotify) ProtoMessage() {}

func (x *AvatarBuffAddNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarBuffAddNotify.ProtoReflect.Descriptor instead.
func (*AvatarBuffAddNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{43}
}

func (x *AvatarBuffAddNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarBuffAddNotify) GetBuffId() uint32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

type AvatarBuffDelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	BuffId     uint32 `protobuf:"varint,12,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`
}

func (x *AvatarBuffDelNotify) Reset() {
	*x = AvatarBuffDelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarBuffDelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarBuffDelNotify) ProtoMessage() {}

func (x *AvatarBuffDelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarBuffDelNotify.ProtoReflect.Descriptor instead.
func (*AvatarBuffDelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{44}
}

func (x *AvatarBuffDelNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarBuffDelNotify) GetBuffId() uint32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

type MonsterAlertChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarEntityId    uint32   `protobuf:"varint,15,opt,name=avatar_entity_id,json=avatarEntityId,proto3" json:"avatar_entity_id,omitempty"`
	MonsterEntityList []uint32 `protobuf:"varint,5,rep,packed,name=monster_entity_list,json=monsterEntityList,proto3" json:"monster_entity_list,omitempty"`
	IsAlert           uint32   `protobuf:"varint,13,opt,name=is_alert,json=isAlert,proto3" json:"is_alert,omitempty"`
}

func (x *MonsterAlertChangeNotify) Reset() {
	*x = MonsterAlertChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterAlertChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterAlertChangeNotify) ProtoMessage() {}

func (x *MonsterAlertChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterAlertChangeNotify.ProtoReflect.Descriptor instead.
func (*MonsterAlertChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{45}
}

func (x *MonsterAlertChangeNotify) GetAvatarEntityId() uint32 {
	if x != nil {
		return x.AvatarEntityId
	}
	return 0
}

func (x *MonsterAlertChangeNotify) GetMonsterEntityList() []uint32 {
	if x != nil {
		return x.MonsterEntityList
	}
	return nil
}

func (x *MonsterAlertChangeNotify) GetIsAlert() uint32 {
	if x != nil {
		return x.IsAlert
	}
	return 0
}

type MonsterForceAlertNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterEntityId uint32 `protobuf:"varint,13,opt,name=monster_entity_id,json=monsterEntityId,proto3" json:"monster_entity_id,omitempty"`
}

func (x *MonsterForceAlertNotify) Reset() {
	*x = MonsterForceAlertNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterForceAlertNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterForceAlertNotify) ProtoMessage() {}

func (x *MonsterForceAlertNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterForceAlertNotify.ProtoReflect.Descriptor instead.
func (*MonsterForceAlertNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{46}
}

func (x *MonsterForceAlertNotify) GetMonsterEntityId() uint32 {
	if x != nil {
		return x.MonsterEntityId
	}
	return 0
}

type AvatarEnterElementViewNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTriggerd     bool   `protobuf:"varint,3,opt,name=is_triggerd,json=isTriggerd,proto3" json:"is_triggerd,omitempty"`
	AvatarEntityId uint32 `protobuf:"varint,12,opt,name=avatar_entity_id,json=avatarEntityId,proto3" json:"avatar_entity_id,omitempty"`
}

func (x *AvatarEnterElementViewNotify) Reset() {
	*x = AvatarEnterElementViewNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarEnterElementViewNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarEnterElementViewNotify) ProtoMessage() {}

func (x *AvatarEnterElementViewNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarEnterElementViewNotify.ProtoReflect.Descriptor instead.
func (*AvatarEnterElementViewNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{47}
}

func (x *AvatarEnterElementViewNotify) GetIsTriggerd() bool {
	if x != nil {
		return x.IsTriggerd
	}
	return false
}

func (x *AvatarEnterElementViewNotify) GetAvatarEntityId() uint32 {
	if x != nil {
		return x.AvatarEntityId
	}
	return 0
}

type TriggerCreateGadgetToEquipPartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GadgetId       uint32 `protobuf:"varint,1,opt,name=gadget_id,json=gadgetId,proto3" json:"gadget_id,omitempty"`
	EntityId       uint32 `protobuf:"varint,13,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EquipPart      string `protobuf:"bytes,14,opt,name=equip_part,json=equipPart,proto3" json:"equip_part,omitempty"`
	GadgetEntityId uint32 `protobuf:"varint,10,opt,name=gadget_entity_id,json=gadgetEntityId,proto3" json:"gadget_entity_id,omitempty"`
}

func (x *TriggerCreateGadgetToEquipPartNotify) Reset() {
	*x = TriggerCreateGadgetToEquipPartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerCreateGadgetToEquipPartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerCreateGadgetToEquipPartNotify) ProtoMessage() {}

func (x *TriggerCreateGadgetToEquipPartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerCreateGadgetToEquipPartNotify.ProtoReflect.Descriptor instead.
func (*TriggerCreateGadgetToEquipPartNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{48}
}

func (x *TriggerCreateGadgetToEquipPartNotify) GetGadgetId() uint32 {
	if x != nil {
		return x.GadgetId
	}
	return 0
}

func (x *TriggerCreateGadgetToEquipPartNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *TriggerCreateGadgetToEquipPartNotify) GetEquipPart() string {
	if x != nil {
		return x.EquipPart
	}
	return ""
}

func (x *TriggerCreateGadgetToEquipPartNotify) GetGadgetEntityId() uint32 {
	if x != nil {
		return x.GadgetEntityId
	}
	return 0
}

type EvtEntityRenderersChangedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType         ForwardType                `protobuf:"varint,8,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	IsServerCache       bool                       `protobuf:"varint,3,opt,name=is_server_cache,json=isServerCache,proto3" json:"is_server_cache,omitempty"`
	RendererChangedInfo *EntityRendererChangedInfo `protobuf:"bytes,5,opt,name=renderer_changed_info,json=rendererChangedInfo,proto3" json:"renderer_changed_info,omitempty"`
	EntityId            uint32                     `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtEntityRenderersChangedNotify) Reset() {
	*x = EvtEntityRenderersChangedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtEntityRenderersChangedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtEntityRenderersChangedNotify) ProtoMessage() {}

func (x *EvtEntityRenderersChangedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtEntityRenderersChangedNotify.ProtoReflect.Descriptor instead.
func (*EvtEntityRenderersChangedNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{49}
}

func (x *EvtEntityRenderersChangedNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtEntityRenderersChangedNotify) GetIsServerCache() bool {
	if x != nil {
		return x.IsServerCache
	}
	return false
}

func (x *EvtEntityRenderersChangedNotify) GetRendererChangedInfo() *EntityRendererChangedInfo {
	if x != nil {
		return x.RendererChangedInfo
	}
	return nil
}

func (x *EvtEntityRenderersChangedNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type AnimatorForceSetAirMoveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId    uint32      `protobuf:"varint,14,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	InAirMove   bool        `protobuf:"varint,13,opt,name=in_air_move,json=inAirMove,proto3" json:"in_air_move,omitempty"`
	ForwardType ForwardType `protobuf:"varint,9,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
}

func (x *AnimatorForceSetAirMoveNotify) Reset() {
	*x = AnimatorForceSetAirMoveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimatorForceSetAirMoveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimatorForceSetAirMoveNotify) ProtoMessage() {}

func (x *AnimatorForceSetAirMoveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimatorForceSetAirMoveNotify.ProtoReflect.Descriptor instead.
func (*AnimatorForceSetAirMoveNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{50}
}

func (x *AnimatorForceSetAirMoveNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AnimatorForceSetAirMoveNotify) GetInAirMove() bool {
	if x != nil {
		return x.InAirMove
	}
	return false
}

func (x *AnimatorForceSetAirMoveNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

type AiSkillCdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillCdMap      map[uint32]uint32 `protobuf:"bytes,11,rep,name=skill_cd_map,json=skillCdMap,proto3" json:"skill_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SkillGroupCdMap map[uint32]uint32 `protobuf:"bytes,6,rep,name=skill_group_cd_map,json=skillGroupCdMap,proto3" json:"skill_group_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AiSkillCdInfo) Reset() {
	*x = AiSkillCdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiSkillCdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiSkillCdInfo) ProtoMessage() {}

func (x *AiSkillCdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiSkillCdInfo.ProtoReflect.Descriptor instead.
func (*AiSkillCdInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{51}
}

func (x *AiSkillCdInfo) GetSkillCdMap() map[uint32]uint32 {
	if x != nil {
		return x.SkillCdMap
	}
	return nil
}

func (x *AiSkillCdInfo) GetSkillGroupCdMap() map[uint32]uint32 {
	if x != nil {
		return x.SkillGroupCdMap
	}
	return nil
}

type EvtAiSyncSkillCdNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiCdMap map[uint32]*AiSkillCdInfo `protobuf:"bytes,7,rep,name=ai_cd_map,json=aiCdMap,proto3" json:"ai_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EvtAiSyncSkillCdNotify) Reset() {
	*x = EvtAiSyncSkillCdNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAiSyncSkillCdNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAiSyncSkillCdNotify) ProtoMessage() {}

func (x *EvtAiSyncSkillCdNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAiSyncSkillCdNotify.ProtoReflect.Descriptor instead.
func (*EvtAiSyncSkillCdNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{52}
}

func (x *EvtAiSyncSkillCdNotify) GetAiCdMap() map[uint32]*AiSkillCdInfo {
	if x != nil {
		return x.AiCdMap
	}
	return nil
}

type EvtBeingHitsCombineNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardType         ForwardType        `protobuf:"varint,11,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	EvtBeingHitInfoList []*EvtBeingHitInfo `protobuf:"bytes,7,rep,name=evt_being_hit_info_list,json=evtBeingHitInfoList,proto3" json:"evt_being_hit_info_list,omitempty"`
}

func (x *EvtBeingHitsCombineNotify) Reset() {
	*x = EvtBeingHitsCombineNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBeingHitsCombineNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBeingHitsCombineNotify) ProtoMessage() {}

func (x *EvtBeingHitsCombineNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBeingHitsCombineNotify.ProtoReflect.Descriptor instead.
func (*EvtBeingHitsCombineNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{53}
}

func (x *EvtBeingHitsCombineNotify) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *EvtBeingHitsCombineNotify) GetEvtBeingHitInfoList() []*EvtBeingHitInfo {
	if x != nil {
		return x.EvtBeingHitInfoList
	}
	return nil
}

type EvtAvatarSitDownNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector `protobuf:"bytes,9,opt,name=position,proto3" json:"position,omitempty"`
	EntityId uint32  `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	ChairId  uint64  `protobuf:"varint,6,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
}

func (x *EvtAvatarSitDownNotify) Reset() {
	*x = EvtAvatarSitDownNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarSitDownNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarSitDownNotify) ProtoMessage() {}

func (x *EvtAvatarSitDownNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarSitDownNotify.ProtoReflect.Descriptor instead.
func (*EvtAvatarSitDownNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{54}
}

func (x *EvtAvatarSitDownNotify) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EvtAvatarSitDownNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtAvatarSitDownNotify) GetChairId() uint64 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

type EvtAvatarStandUpNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChairId   uint64 `protobuf:"varint,11,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
	PerformID int32  `protobuf:"varint,6,opt,name=performID,proto3" json:"performID,omitempty"`
	Direction int32  `protobuf:"varint,1,opt,name=direction,proto3" json:"direction,omitempty"`
	EntityId  uint32 `protobuf:"varint,9,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtAvatarStandUpNotify) Reset() {
	*x = EvtAvatarStandUpNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarStandUpNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarStandUpNotify) ProtoMessage() {}

func (x *EvtAvatarStandUpNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarStandUpNotify.ProtoReflect.Descriptor instead.
func (*EvtAvatarStandUpNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{55}
}

func (x *EvtAvatarStandUpNotify) GetChairId() uint64 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *EvtAvatarStandUpNotify) GetPerformID() int32 {
	if x != nil {
		return x.PerformID
	}
	return 0
}

func (x *EvtAvatarStandUpNotify) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *EvtAvatarStandUpNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type CreateMassiveEntityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MassiveEntityList []*ClientMassiveEntity `protobuf:"bytes,1,rep,name=massive_entity_list,json=massiveEntityList,proto3" json:"massive_entity_list,omitempty"`
}

func (x *CreateMassiveEntityReq) Reset() {
	*x = CreateMassiveEntityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMassiveEntityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMassiveEntityReq) ProtoMessage() {}

func (x *CreateMassiveEntityReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMassiveEntityReq.ProtoReflect.Descriptor instead.
func (*CreateMassiveEntityReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{56}
}

func (x *CreateMassiveEntityReq) GetMassiveEntityList() []*ClientMassiveEntity {
	if x != nil {
		return x.MassiveEntityList
	}
	return nil
}

type CreateMassiveEntityRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *CreateMassiveEntityRsp) Reset() {
	*x = CreateMassiveEntityRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMassiveEntityRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMassiveEntityRsp) ProtoMessage() {}

func (x *CreateMassiveEntityRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMassiveEntityRsp.ProtoReflect.Descriptor instead.
func (*CreateMassiveEntityRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{57}
}

func (x *CreateMassiveEntityRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CreateMassiveEntityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MassiveEntityList []*ServerMassiveEntity `protobuf:"bytes,15,rep,name=massive_entity_list,json=massiveEntityList,proto3" json:"massive_entity_list,omitempty"`
}

func (x *CreateMassiveEntityNotify) Reset() {
	*x = CreateMassiveEntityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMassiveEntityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMassiveEntityNotify) ProtoMessage() {}

func (x *CreateMassiveEntityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMassiveEntityNotify.ProtoReflect.Descriptor instead.
func (*CreateMassiveEntityNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{58}
}

func (x *CreateMassiveEntityNotify) GetMassiveEntityList() []*ServerMassiveEntity {
	if x != nil {
		return x.MassiveEntityList
	}
	return nil
}

type DestroyMassiveEntityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MassiveEntityList []*ClientMassiveEntity `protobuf:"bytes,7,rep,name=massive_entity_list,json=massiveEntityList,proto3" json:"massive_entity_list,omitempty"`
}

func (x *DestroyMassiveEntityNotify) Reset() {
	*x = DestroyMassiveEntityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyMassiveEntityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyMassiveEntityNotify) ProtoMessage() {}

func (x *DestroyMassiveEntityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyMassiveEntityNotify.ProtoReflect.Descriptor instead.
func (*DestroyMassiveEntityNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{59}
}

func (x *DestroyMassiveEntityNotify) GetMassiveEntityList() []*ClientMassiveEntity {
	if x != nil {
		return x.MassiveEntityList
	}
	return nil
}

type MassiveEntityStateChangedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MassiveEntityStateList []*MassiveEntityState `protobuf:"bytes,4,rep,name=massive_entity_state_list,json=massiveEntityStateList,proto3" json:"massive_entity_state_list,omitempty"`
}

func (x *MassiveEntityStateChangedNotify) Reset() {
	*x = MassiveEntityStateChangedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassiveEntityStateChangedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassiveEntityStateChangedNotify) ProtoMessage() {}

func (x *MassiveEntityStateChangedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassiveEntityStateChangedNotify.ProtoReflect.Descriptor instead.
func (*MassiveEntityStateChangedNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{60}
}

func (x *MassiveEntityStateChangedNotify) GetMassiveEntityStateList() []*MassiveEntityState {
	if x != nil {
		return x.MassiveEntityStateList
	}
	return nil
}

type TeamEntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorityPeerId uint32                `protobuf:"varint,10,opt,name=authority_peer_id,json=authorityPeerId,proto3" json:"authority_peer_id,omitempty"`
	TeamAbilityInfo *AbilitySyncStateInfo `protobuf:"bytes,9,opt,name=team_ability_info,json=teamAbilityInfo,proto3" json:"team_ability_info,omitempty"`
	TeamEntityId    uint32                `protobuf:"varint,8,opt,name=team_entity_id,json=teamEntityId,proto3" json:"team_entity_id,omitempty"`
}

func (x *TeamEntityInfo) Reset() {
	*x = TeamEntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamEntityInfo) ProtoMessage() {}

func (x *TeamEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamEntityInfo.ProtoReflect.Descriptor instead.
func (*TeamEntityInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{61}
}

func (x *TeamEntityInfo) GetAuthorityPeerId() uint32 {
	if x != nil {
		return x.AuthorityPeerId
	}
	return 0
}

func (x *TeamEntityInfo) GetTeamAbilityInfo() *AbilitySyncStateInfo {
	if x != nil {
		return x.TeamAbilityInfo
	}
	return nil
}

func (x *TeamEntityInfo) GetTeamEntityId() uint32 {
	if x != nil {
		return x.TeamEntityId
	}
	return 0
}

type SyncTeamEntityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId            uint32            `protobuf:"varint,13,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	TeamEntityInfoList []*TeamEntityInfo `protobuf:"bytes,15,rep,name=team_entity_info_list,json=teamEntityInfoList,proto3" json:"team_entity_info_list,omitempty"`
}

func (x *SyncTeamEntityNotify) Reset() {
	*x = SyncTeamEntityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTeamEntityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTeamEntityNotify) ProtoMessage() {}

func (x *SyncTeamEntityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTeamEntityNotify.ProtoReflect.Descriptor instead.
func (*SyncTeamEntityNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{62}
}

func (x *SyncTeamEntityNotify) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *SyncTeamEntityNotify) GetTeamEntityInfoList() []*TeamEntityInfo {
	if x != nil {
		return x.TeamEntityInfoList
	}
	return nil
}

type DelTeamEntityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelEntityIdList []uint32 `protobuf:"varint,15,rep,packed,name=del_entity_id_list,json=delEntityIdList,proto3" json:"del_entity_id_list,omitempty"`
	SceneId         uint32   `protobuf:"varint,8,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *DelTeamEntityNotify) Reset() {
	*x = DelTeamEntityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTeamEntityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTeamEntityNotify) ProtoMessage() {}

func (x *DelTeamEntityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTeamEntityNotify.ProtoReflect.Descriptor instead.
func (*DelTeamEntityNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{63}
}

func (x *DelTeamEntityNotify) GetDelEntityIdList() []uint32 {
	if x != nil {
		return x.DelEntityIdList
	}
	return nil
}

func (x *DelTeamEntityNotify) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type EvtSyncSkillAnchorPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId            uint32  `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	SkillAnchorPosition *Vector `protobuf:"bytes,13,opt,name=skill_anchor_position,json=skillAnchorPosition,proto3" json:"skill_anchor_position,omitempty"`
}

func (x *EvtSyncSkillAnchorPosition) Reset() {
	*x = EvtSyncSkillAnchorPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtSyncSkillAnchorPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtSyncSkillAnchorPosition) ProtoMessage() {}

func (x *EvtSyncSkillAnchorPosition) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtSyncSkillAnchorPosition.ProtoReflect.Descriptor instead.
func (*EvtSyncSkillAnchorPosition) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{64}
}

func (x *EvtSyncSkillAnchorPosition) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtSyncSkillAnchorPosition) GetSkillAnchorPosition() *Vector {
	if x != nil {
		return x.SkillAnchorPosition
	}
	return nil
}

type CombatInvokeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombatData   []byte             `protobuf:"bytes,12,opt,name=combat_data,json=combatData,proto3" json:"combat_data,omitempty"`
	ForwardType  ForwardType        `protobuf:"varint,10,opt,name=forward_type,json=forwardType,proto3,enum=proto.ForwardType" json:"forward_type,omitempty"`
	ArgumentType CombatTypeArgument `protobuf:"varint,11,opt,name=argument_type,json=argumentType,proto3,enum=proto.CombatTypeArgument" json:"argument_type,omitempty"`
}

func (x *CombatInvokeEntry) Reset() {
	*x = CombatInvokeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombatInvokeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatInvokeEntry) ProtoMessage() {}

func (x *CombatInvokeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatInvokeEntry.ProtoReflect.Descriptor instead.
func (*CombatInvokeEntry) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{65}
}

func (x *CombatInvokeEntry) GetCombatData() []byte {
	if x != nil {
		return x.CombatData
	}
	return nil
}

func (x *CombatInvokeEntry) GetForwardType() ForwardType {
	if x != nil {
		return x.ForwardType
	}
	return ForwardType_FORWARD_LOCAL
}

func (x *CombatInvokeEntry) GetArgumentType() CombatTypeArgument {
	if x != nil {
		return x.ArgumentType
	}
	return CombatTypeArgument_COMBAT_NONE
}

type CombatInvocationsNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvokeList []*CombatInvokeEntry `protobuf:"bytes,14,rep,name=invoke_list,json=invokeList,proto3" json:"invoke_list,omitempty"`
}

func (x *CombatInvocationsNotify) Reset() {
	*x = CombatInvocationsNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombatInvocationsNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatInvocationsNotify) ProtoMessage() {}

func (x *CombatInvocationsNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatInvocationsNotify.ProtoReflect.Descriptor instead.
func (*CombatInvocationsNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{66}
}

func (x *CombatInvocationsNotify) GetInvokeList() []*CombatInvokeEntry {
	if x != nil {
		return x.InvokeList
	}
	return nil
}

type ServerBuffChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerBuffChangeType ServerBuffChangeNotify_ServerBuffChangeType `protobuf:"varint,7,opt,name=server_buff_change_type,json=serverBuffChangeType,proto3,enum=proto.ServerBuffChangeNotify_ServerBuffChangeType" json:"server_buff_change_type,omitempty"`
	IsCreatureBuff       bool                                        `protobuf:"varint,10,opt,name=is_creature_buff,json=isCreatureBuff,proto3" json:"is_creature_buff,omitempty"`
	EntityIdList         []uint32                                    `protobuf:"varint,1,rep,packed,name=entity_id_list,json=entityIdList,proto3" json:"entity_id_list,omitempty"`
	AvatarGuidList       []uint64                                    `protobuf:"varint,12,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
	ServerBuffList       []*ServerBuff                               `protobuf:"bytes,11,rep,name=server_buff_list,json=serverBuffList,proto3" json:"server_buff_list,omitempty"`
}

func (x *ServerBuffChangeNotify) Reset() {
	*x = ServerBuffChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerBuffChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerBuffChangeNotify) ProtoMessage() {}

func (x *ServerBuffChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerBuffChangeNotify.ProtoReflect.Descriptor instead.
func (*ServerBuffChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{67}
}

func (x *ServerBuffChangeNotify) GetServerBuffChangeType() ServerBuffChangeNotify_ServerBuffChangeType {
	if x != nil {
		return x.ServerBuffChangeType
	}
	return ServerBuffChangeNotify_ADD_SERVER_BUFF
}

func (x *ServerBuffChangeNotify) GetIsCreatureBuff() bool {
	if x != nil {
		return x.IsCreatureBuff
	}
	return false
}

func (x *ServerBuffChangeNotify) GetEntityIdList() []uint32 {
	if x != nil {
		return x.EntityIdList
	}
	return nil
}

func (x *ServerBuffChangeNotify) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

func (x *ServerBuffChangeNotify) GetServerBuffList() []*ServerBuff {
	if x != nil {
		return x.ServerBuffList
	}
	return nil
}

type AiThreatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiThreatMap map[uint32]uint32 `protobuf:"bytes,11,rep,name=ai_threat_map,json=aiThreatMap,proto3" json:"ai_threat_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AiThreatInfo) Reset() {
	*x = AiThreatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiThreatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiThreatInfo) ProtoMessage() {}

func (x *AiThreatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiThreatInfo.ProtoReflect.Descriptor instead.
func (*AiThreatInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{68}
}

func (x *AiThreatInfo) GetAiThreatMap() map[uint32]uint32 {
	if x != nil {
		return x.AiThreatMap
	}
	return nil
}

type EvtAiSyncCombatThreatInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombatThreatInfoMap map[uint32]*AiThreatInfo `protobuf:"bytes,8,rep,name=combat_threat_info_map,json=combatThreatInfoMap,proto3" json:"combat_threat_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EvtAiSyncCombatThreatInfoNotify) Reset() {
	*x = EvtAiSyncCombatThreatInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAiSyncCombatThreatInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAiSyncCombatThreatInfoNotify) ProtoMessage() {}

func (x *EvtAiSyncCombatThreatInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAiSyncCombatThreatInfoNotify.ProtoReflect.Descriptor instead.
func (*EvtAiSyncCombatThreatInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{69}
}

func (x *EvtAiSyncCombatThreatInfoNotify) GetCombatThreatInfoMap() map[uint32]*AiThreatInfo {
	if x != nil {
		return x.CombatThreatInfoMap
	}
	return nil
}

type MassiveEntityElementOpBatchNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType              int32   `protobuf:"varint,6,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	OpIdx                   uint32  `protobuf:"varint,9,opt,name=op_idx,json=opIdx,proto3" json:"op_idx,omitempty"`
	UserId                  uint32  `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AttackerId              uint32  `protobuf:"varint,3,opt,name=attacker_id,json=attackerId,proto3" json:"attacker_id,omitempty"`
	SourceElementType       int32   `protobuf:"varint,12,opt,name=source_element_type,json=sourceElementType,proto3" json:"source_element_type,omitempty"`
	ReactionSourceType      int32   `protobuf:"varint,4,opt,name=reaction_source_type,json=reactionSourceType,proto3" json:"reaction_source_type,omitempty"`
	AttackElementDurability float32 `protobuf:"fixed32,7,opt,name=attack_element_durability,json=attackElementDurability,proto3" json:"attack_element_durability,omitempty"`
	// Types that are assignable to CheckShape:
	//
	//	*MassiveEntityElementOpBatchNotify_ShapeSphere
	//	*MassiveEntityElementOpBatchNotify_ShapeBox
	CheckShape isMassiveEntityElementOpBatchNotify_CheckShape `protobuf_oneof:"check_shape"`
}

func (x *MassiveEntityElementOpBatchNotify) Reset() {
	*x = MassiveEntityElementOpBatchNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassiveEntityElementOpBatchNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassiveEntityElementOpBatchNotify) ProtoMessage() {}

func (x *MassiveEntityElementOpBatchNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassiveEntityElementOpBatchNotify.ProtoReflect.Descriptor instead.
func (*MassiveEntityElementOpBatchNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{70}
}

func (x *MassiveEntityElementOpBatchNotify) GetEntityType() int32 {
	if x != nil {
		return x.EntityType
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetOpIdx() uint32 {
	if x != nil {
		return x.OpIdx
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetAttackerId() uint32 {
	if x != nil {
		return x.AttackerId
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetSourceElementType() int32 {
	if x != nil {
		return x.SourceElementType
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetReactionSourceType() int32 {
	if x != nil {
		return x.ReactionSourceType
	}
	return 0
}

func (x *MassiveEntityElementOpBatchNotify) GetAttackElementDurability() float32 {
	if x != nil {
		return x.AttackElementDurability
	}
	return 0
}

func (m *MassiveEntityElementOpBatchNotify) GetCheckShape() isMassiveEntityElementOpBatchNotify_CheckShape {
	if m != nil {
		return m.CheckShape
	}
	return nil
}

func (x *MassiveEntityElementOpBatchNotify) GetShapeSphere() *ShapeSphere {
	if x, ok := x.GetCheckShape().(*MassiveEntityElementOpBatchNotify_ShapeSphere); ok {
		return x.ShapeSphere
	}
	return nil
}

func (x *MassiveEntityElementOpBatchNotify) GetShapeBox() *ShapeBox {
	if x, ok := x.GetCheckShape().(*MassiveEntityElementOpBatchNotify_ShapeBox); ok {
		return x.ShapeBox
	}
	return nil
}

type isMassiveEntityElementOpBatchNotify_CheckShape interface {
	isMassiveEntityElementOpBatchNotify_CheckShape()
}

type MassiveEntityElementOpBatchNotify_ShapeSphere struct {
	ShapeSphere *ShapeSphere `protobuf:"bytes,10,opt,name=shape_sphere,json=shapeSphere,proto3,oneof"`
}

type MassiveEntityElementOpBatchNotify_ShapeBox struct {
	ShapeBox *ShapeBox `protobuf:"bytes,2,opt,name=shape_box,json=shapeBox,proto3,oneof"`
}

func (*MassiveEntityElementOpBatchNotify_ShapeSphere) isMassiveEntityElementOpBatchNotify_CheckShape() {
}

func (*MassiveEntityElementOpBatchNotify_ShapeBox) isMassiveEntityElementOpBatchNotify_CheckShape() {}

type AiSyncInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId        uint32 `protobuf:"varint,9,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	IsSelfKilling   bool   `protobuf:"varint,8,opt,name=is_self_killing,json=isSelfKilling,proto3" json:"is_self_killing,omitempty"`
	HasPathToTarget bool   `protobuf:"varint,4,opt,name=has_path_to_target,json=hasPathToTarget,proto3" json:"has_path_to_target,omitempty"`
}

func (x *AiSyncInfo) Reset() {
	*x = AiSyncInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiSyncInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiSyncInfo) ProtoMessage() {}

func (x *AiSyncInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiSyncInfo.ProtoReflect.Descriptor instead.
func (*AiSyncInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{71}
}

func (x *AiSyncInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AiSyncInfo) GetIsSelfKilling() bool {
	if x != nil {
		return x.IsSelfKilling
	}
	return false
}

func (x *AiSyncInfo) GetHasPathToTarget() bool {
	if x != nil {
		return x.HasPathToTarget
	}
	return false
}

type EntityAiSyncNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAvatarAlertedMonsterList []uint32      `protobuf:"varint,15,rep,packed,name=local_avatar_alerted_monster_list,json=localAvatarAlertedMonsterList,proto3" json:"local_avatar_alerted_monster_list,omitempty"`
	InfoList                      []*AiSyncInfo `protobuf:"bytes,1,rep,name=info_list,json=infoList,proto3" json:"info_list,omitempty"`
}

func (x *EntityAiSyncNotify) Reset() {
	*x = EntityAiSyncNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAiSyncNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAiSyncNotify) ProtoMessage() {}

func (x *EntityAiSyncNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAiSyncNotify.ProtoReflect.Descriptor instead.
func (*EntityAiSyncNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{72}
}

func (x *EntityAiSyncNotify) GetLocalAvatarAlertedMonsterList() []uint32 {
	if x != nil {
		return x.LocalAvatarAlertedMonsterList
	}
	return nil
}

func (x *EntityAiSyncNotify) GetInfoList() []*AiSyncInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

type LuaSetOptionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuaSetParam string                           `protobuf:"bytes,8,opt,name=lua_set_param,json=luaSetParam,proto3" json:"lua_set_param,omitempty"`
	OptionType  LuaSetOptionNotify_LuaOptionType `protobuf:"varint,10,opt,name=option_type,json=optionType,proto3,enum=proto.LuaSetOptionNotify_LuaOptionType" json:"option_type,omitempty"`
}

func (x *LuaSetOptionNotify) Reset() {
	*x = LuaSetOptionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuaSetOptionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuaSetOptionNotify) ProtoMessage() {}

func (x *LuaSetOptionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuaSetOptionNotify.ProtoReflect.Descriptor instead.
func (*LuaSetOptionNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{73}
}

func (x *LuaSetOptionNotify) GetLuaSetParam() string {
	if x != nil {
		return x.LuaSetParam
	}
	return ""
}

func (x *LuaSetOptionNotify) GetOptionType() LuaSetOptionNotify_LuaOptionType {
	if x != nil {
		return x.OptionType
	}
	return LuaSetOptionNotify_LUA_OPTION_NONE
}

type EvtDestroyServerGadgetNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32 `protobuf:"varint,7,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtDestroyServerGadgetNotify) Reset() {
	*x = EvtDestroyServerGadgetNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtDestroyServerGadgetNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtDestroyServerGadgetNotify) ProtoMessage() {}

func (x *EvtDestroyServerGadgetNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtDestroyServerGadgetNotify.ProtoReflect.Descriptor instead.
func (*EvtDestroyServerGadgetNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{74}
}

func (x *EvtDestroyServerGadgetNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EntityAiKillSelfNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32 `protobuf:"varint,12,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityAiKillSelfNotify) Reset() {
	*x = EntityAiKillSelfNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAiKillSelfNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAiKillSelfNotify) ProtoMessage() {}

func (x *EntityAiKillSelfNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAiKillSelfNotify.ProtoReflect.Descriptor instead.
func (*EntityAiKillSelfNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{75}
}

func (x *EntityAiKillSelfNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type EvtAvatarLockChairReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChairId  uint64  `protobuf:"varint,5,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
	Position *Vector `protobuf:"bytes,8,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *EvtAvatarLockChairReq) Reset() {
	*x = EvtAvatarLockChairReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarLockChairReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarLockChairReq) ProtoMessage() {}

func (x *EvtAvatarLockChairReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarLockChairReq.ProtoReflect.Descriptor instead.
func (*EvtAvatarLockChairReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{76}
}

func (x *EvtAvatarLockChairReq) GetChairId() uint64 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *EvtAvatarLockChairReq) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

type EvtAvatarLockChairRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChairId  uint64  `protobuf:"varint,14,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
	EntityId uint32  `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Position *Vector `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Retcode  int32   `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *EvtAvatarLockChairRsp) Reset() {
	*x = EvtAvatarLockChairRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtAvatarLockChairRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtAvatarLockChairRsp) ProtoMessage() {}

func (x *EvtAvatarLockChairRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtAvatarLockChairRsp.ProtoReflect.Descriptor instead.
func (*EvtAvatarLockChairRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{77}
}

func (x *EvtAvatarLockChairRsp) GetChairId() uint64 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *EvtAvatarLockChairRsp) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EvtAvatarLockChairRsp) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EvtAvatarLockChairRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ReportFightAntiCheatNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheatCount uint32 `protobuf:"varint,8,opt,name=cheat_count,json=cheatCount,proto3" json:"cheat_count,omitempty"`
	CheatType  uint32 `protobuf:"varint,12,opt,name=cheat_type,json=cheatType,proto3" json:"cheat_type,omitempty"`
}

func (x *ReportFightAntiCheatNotify) Reset() {
	*x = ReportFightAntiCheatNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFightAntiCheatNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFightAntiCheatNotify) ProtoMessage() {}

func (x *ReportFightAntiCheatNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFightAntiCheatNotify.ProtoReflect.Descriptor instead.
func (*ReportFightAntiCheatNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{78}
}

func (x *ReportFightAntiCheatNotify) GetCheatCount() uint32 {
	if x != nil {
		return x.CheatCount
	}
	return 0
}

func (x *ReportFightAntiCheatNotify) GetCheatType() uint32 {
	if x != nil {
		return x.CheatType
	}
	return 0
}

type EvtBeingHealedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId       uint32  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	RealHealAmount float32 `protobuf:"fixed32,5,opt,name=real_heal_amount,json=realHealAmount,proto3" json:"real_heal_amount,omitempty"`
	SourceId       uint32  `protobuf:"varint,13,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	HealAmount     float32 `protobuf:"fixed32,4,opt,name=heal_amount,json=healAmount,proto3" json:"heal_amount,omitempty"`
}

func (x *EvtBeingHealedNotify) Reset() {
	*x = EvtBeingHealedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtBeingHealedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtBeingHealedNotify) ProtoMessage() {}

func (x *EvtBeingHealedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtBeingHealedNotify.ProtoReflect.Descriptor instead.
func (*EvtBeingHealedNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{79}
}

func (x *EvtBeingHealedNotify) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *EvtBeingHealedNotify) GetRealHealAmount() float32 {
	if x != nil {
		return x.RealHealAmount
	}
	return 0
}

func (x *EvtBeingHealedNotify) GetSourceId() uint32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EvtBeingHealedNotify) GetHealAmount() float32 {
	if x != nil {
		return x.HealAmount
	}
	return 0
}

type EvtLocalGadgetOwnerLeaveSceneNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32 `protobuf:"varint,10,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EvtLocalGadgetOwnerLeaveSceneNotify) Reset() {
	*x = EvtLocalGadgetOwnerLeaveSceneNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fight_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvtLocalGadgetOwnerLeaveSceneNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvtLocalGadgetOwnerLeaveSceneNotify) ProtoMessage() {}

func (x *EvtLocalGadgetOwnerLeaveSceneNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fight_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvtLocalGadgetOwnerLeaveSceneNotify.ProtoReflect.Descriptor instead.
func (*EvtLocalGadgetOwnerLeaveSceneNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fight_proto_rawDescGZIP(), []int{80}
}

func (x *EvtLocalGadgetOwnerLeaveSceneNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

var File_cmd_cmd_fight_proto protoreflect.FileDescriptor

var file_cmd_cmd_fight_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x48,
	0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x11, 0x68,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x68, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x09, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x08, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x65, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x65, 0x48, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x68, 0x69, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x68, 0x69, 0x74, 0x44, 0x69, 0x72, 0x12, 0x39, 0x0a, 0x19,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x65, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x16, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x65, 0x48, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x69, 0x74, 0x5f, 0x62,
	0x6f, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x68, 0x69, 0x74, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x91, 0x02, 0x0a, 0x15,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x69, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x6c,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x10, 0x68, 0x69, 0x74, 0x48, 0x61, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x68, 0x69, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x69,
	0x74, 0x45, 0x66, 0x66, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x69, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x61, 0x69, 0x72, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d,
	0x68, 0x69, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x68, 0x69, 0x74, 0x45, 0x66, 0x66, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x68, 0x69, 0x74, 0x48, 0x61, 0x6c, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x65, 0x61, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x72, 0x65, 0x74, 0x72, 0x65, 0x61, 0x74, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0xa2, 0x02, 0x0a, 0x11, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x62, 0x75, 0x66, 0x66, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0xee, 0x0a, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x69,
	0x73, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0xc2, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x1b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0xf3, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x61,
	0x6d, 0x70, 0x6c, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0xd5, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x66, 0x79, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x65, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x1e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa9, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x1c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x6d, 0x73, 0x18, 0xa4, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x2b, 0x0a,
	0x12, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x66, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6d, 0x73, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x62, 0x75, 0x6c, 0x6c, 0x65,
	0x74, 0x46, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x63, 0x72, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43,
	0x72, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x70, 0x6c, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x84, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x70, 0x6c, 0x69,
	0x66, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x9c, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x80, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x68, 0x69, 0x74, 0x5f, 0x65, 0x66,
	0x66, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x69, 0x74,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x68, 0x69,
	0x74, 0x45, 0x66, 0x66, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x18, 0xb2, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0xae, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x44, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x15, 0x61, 0x64, 0x64, 0x68, 0x75, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xdf, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x61, 0x64, 0x64, 0x68, 0x75, 0x72, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x96, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x61, 0x64,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x8a, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x75, 0x73, 0x65, 0x47, 0x61, 0x64,
	0x67, 0x65, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x18, 0x68, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x68, 0x69, 0x74, 0x52, 0x65, 0x74, 0x72, 0x65, 0x61, 0x74, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x12, 0x47, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x75, 0x72, 0x74, 0x18, 0xfa, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x6d, 0x75, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x75, 0x72, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xd6,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x68, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x68,
	0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x67,
	0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0xd6, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x78, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x74, 0x42, 0x65, 0x69,
	0x6e, 0x67, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x68, 0x0a, 0x13, 0x45, 0x76, 0x74,
	0x48, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x38, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x74, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x48, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x0e, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x76, 0x74, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf4, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x88, 0x02, 0x0a, 0x1a, 0x45, 0x76, 0x74, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4f, 0x0a, 0x13, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x74, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8e, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x6d, 0x0a, 0x0f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x67, 0x12,
	0x1d, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x67, 0x12, 0x19,
	0x0a, 0x07, 0x73, 0x74, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x41, 0x72, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x72, 0x67,
	0x22, 0x9e, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xb8, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x92, 0x02, 0x0a, 0x14, 0x45, 0x76, 0x74, 0x44, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x53, 0x75, 0x63, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27,
	0x0a, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xcf, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xac, 0x07, 0x0a, 0x15, 0x45, 0x76, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x73, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x69, 0x74,
	0x68, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0xf9, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6d, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x65, 0x75,
	0x6c, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0f, 0x69, 0x6e, 0x69, 0x74, 0x45, 0x75, 0x6c, 0x65, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x17, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x80, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x69, 0x6e, 0x69, 0x74, 0x50,
	0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x74,
	0x72, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x79,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0xfb, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69,
	0x73, 0x54, 0x72, 0x75, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb3,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x74, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xc1, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf5, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x74,
	0x46, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaf, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x59, 0x0a, 0x10, 0x45, 0x76, 0x74, 0x46, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x12,
	0x45, 0x76, 0x74, 0x46, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x14, 0x65, 0x76, 0x74,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x76, 0x74, 0x46, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x10, 0x65, 0x76, 0x74, 0x46, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x86, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf5, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x74, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x90, 0x02, 0x0a, 0x18, 0x45, 0x76, 0x74, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x1a, 0x65, 0x76, 0x74, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x76, 0x74, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x16, 0x65, 0x76, 0x74, 0x53, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8f, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x89, 0x03, 0x0a, 0x1b, 0x45, 0x76, 0x74, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x66, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x66, 0x61,
	0x64, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x21, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79,
	0x22, 0xe0, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x44, 0x69, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x50, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x17, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x6f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x45, 0x76, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x52,
	0x75, 0x73, 0x68, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x12, 0x6e, 0x65,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x69, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x49,
	0x73, 0x49, 0x6e, 0x41, 0x69, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x47, 0x0a, 0x21, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x45, 0x78, 0x69, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x22,
	0x8b, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x12,
	0x2c, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x74, 0x22, 0xb9, 0x01,
	0x0a, 0x10, 0x45, 0x76, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x72, 0x62, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x41, 0x62, 0x73, 0x6f, 0x72, 0x62, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x8f, 0x03, 0x0a, 0x14, 0x45, 0x76,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x69, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x49, 0x73, 0x49,
	0x6e, 0x41, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x21, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x45, 0x78, 0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x1d,
	0x45, 0x76, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a,
	0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x1f, 0x65, 0x76, 0x74, 0x5f, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x1b, 0x65, 0x76, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcb, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xe1, 0x02, 0x0a, 0x0f, 0x45, 0x76, 0x74, 0x52, 0x75, 0x73, 0x68, 0x4d, 0x6f,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2d,
	0x0a, 0x0b, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x09, 0x72, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x12, 0x42, 0x0a,
	0x16, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x72, 0x75,
	0x73, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x08,
	0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x1e, 0x45, 0x76, 0x74, 0x4d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x65, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65,
	0x44, 0x69, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a,
	0x18, 0x45, 0x76, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x53, 0x74, 0x65, 0x65, 0x72, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x22, 0xaa, 0x01, 0x0a,
	0x18, 0x45, 0x76, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6f,
	0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x19, 0x45, 0x76,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x11, 0x45,
	0x76, 0x74, 0x52, 0x75, 0x73, 0x68, 0x4d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x65, 0x76, 0x74, 0x5f, 0x72,
	0x75, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x74, 0x52,
	0x75, 0x73, 0x68, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65, 0x76, 0x74,
	0x52, 0x75, 0x73, 0x68, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf7, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xff, 0x03, 0x0a, 0x12, 0x45, 0x76, 0x74, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x69,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x09, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x0a, 0x68, 0x69, 0x74, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x09, 0x68, 0x69, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x68,
	0x69, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x68, 0x69, 0x74, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x22, 0x0a, 0x0d, 0x68, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x68, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x11, 0x68, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x68,
	0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdc, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x85, 0x02, 0x0a, 0x17, 0x45, 0x76, 0x74, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74,
	0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x8d, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9c, 0x02, 0x0a, 0x1a, 0x45,
	0x76, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x65,
	0x45, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x69, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x69, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xfd, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf5, 0x01, 0x0a, 0x13, 0x45, 0x76,
	0x74, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x50, 0x6f, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xed, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x97, 0x05, 0x0a, 0x19, 0x45, 0x76, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x73,
	0x68, 0x6f, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x53, 0x68, 0x6f,
	0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x69,
	0x6d, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x69, 0x6d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x61, 0x73, 0x74, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x5f, 0x68, 0x61, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68,
	0x6f, 0x77, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x61, 0x69, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x66, 0x6f, 0x63, 0x75,
	0x73, 0x5f, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x53,
	0x68, 0x6f, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x66,
	0x6f, 0x63, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0c, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e,
	0x69, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x5f, 0x67, 0x79, 0x72, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x47, 0x79, 0x72, 0x6f, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x88, 0x02, 0x0a, 0x18,
	0x45, 0x76, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x69, 0x74, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x34, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x89, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x88, 0x02, 0x0a, 0x1a, 0x45, 0x76, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x0d,
	0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0c, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc7, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb8,
	0x01, 0x0a, 0x1b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a,
	0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8a, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x42, 0x75, 0x66, 0x66, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x84, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xb3, 0x01, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x75, 0x66, 0x66, 0x44, 0x65,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49,
	0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc6,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf3, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x69, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xeb, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x17,
	0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0x8b, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x1c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xce, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x24, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xde, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd7, 0x02,
	0x0a, 0x1f, 0x45, 0x76, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x54, 0x0a, 0x15, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x13, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xd7, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf7, 0x01, 0x0a, 0x1d, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x41, 0x69, 0x72, 0x4d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x61, 0x69, 0x72,
	0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x41,
	0x69, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf6, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xb2, 0x02, 0x0a, 0x0d, 0x41, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x64, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x56, 0x0a, 0x12, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x64, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x64,
	0x4d, 0x61, 0x70, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x45, 0x76, 0x74, 0x41, 0x69,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x46, 0x0a, 0x09, 0x61, 0x69, 0x5f, 0x63, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x74,
	0x41, 0x69, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x41, 0x69, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x61, 0x69, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x50, 0x0a, 0x0c, 0x41, 0x69, 0x43,
	0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x69, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf8, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x84, 0x02, 0x0a, 0x19, 0x45, 0x76, 0x74, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x74, 0x73,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a,
	0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x17, 0x65, 0x76, 0x74, 0x5f, 0x62, 0x65, 0x69, 0x6e,
	0x67, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76,
	0x74, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x65,
	0x76, 0x74, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xda, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xdf, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xc4, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf0, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x74,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xe4, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc8, 0x01, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x11, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xd6, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xca, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xef, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xcc, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x61, 0x73,
	0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe6, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xdb, 0x01, 0x0a, 0x1f, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x54, 0x0a, 0x19, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x16, 0x6d, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf2, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xab, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x47, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xca,
	0x01, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x48, 0x0a, 0x15, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbd, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x64, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xae, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7c, 0x0a, 0x1a, 0x45, 0x76,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x15, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x13, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x35, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbf, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xcb, 0x03, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x69, 0x0a, 0x17,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x66,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x52, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe9, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x40, 0x0a,
	0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45,
	0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x10, 0x01, 0x22,
	0x98, 0x01, 0x0a, 0x0c, 0x41, 0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x48, 0x0a, 0x0d, 0x61, 0x69, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x69, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61,
	0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x69,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x02, 0x0a, 0x1f, 0x45,
	0x76, 0x74, 0x41, 0x69, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x74,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x74, 0x41, 0x69, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x5b, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x69, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc9,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8f, 0x04, 0x0a, 0x21, 0x4d, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x70,
	0x49, 0x64, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3a, 0x0a, 0x19, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x17, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x5f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53,
	0x70, 0x68, 0x65, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x70, 0x65, 0x53, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x62, 0x6f,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x42, 0x6f, 0x78, 0x48, 0x00, 0x52, 0x08, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x42, 0x6f, 0x78, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xe5, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x0a, 0x41, 0x69, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6b, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x53,
	0x65, 0x6c, 0x66, 0x4b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x12, 0x68, 0x61,
	0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x50, 0x61, 0x74, 0x68, 0x54,
	0x6f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x41, 0x69, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x48,
	0x0a, 0x21, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1d, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x69, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x90, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x94, 0x02, 0x0a,
	0x12, 0x4c, 0x75, 0x61, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x75, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x75, 0x61, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x48, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x75, 0x61, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4c, 0x75, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbc,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x41, 0x0a, 0x0d, 0x4c, 0x75, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x55, 0x41, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x55, 0x41, 0x5f, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x01, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x45, 0x76, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x83,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x41, 0x69, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x66, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd4, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c,
	0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbe,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x74, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xee, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x43,
	0x68, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x68, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x68, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf0, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xea,
	0x01, 0x0a, 0x14, 0x45, 0x76, 0x74, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x68, 0x65, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x72, 0x65, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x68, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcd, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x23,
	0x45, 0x76, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x80, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x2a,
	0xeb, 0x01, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x4f,
	0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x5f,
	0x43, 0x55, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44,
	0x5f, 0x54, 0x4f, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x4f,
	0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x47, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f,
	0x54, 0x4f, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x53, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x4f, 0x52, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x10, 0x08, 0x2a, 0x7e, 0x0a,
	0x0f, 0x48, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x14, 0x48, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x49, 0x44, 0x45, 0x52,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x49,
	0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x42,
	0x4f, 0x58, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4c,
	0x49, 0x44, 0x45, 0x52, 0x5f, 0x57, 0x45, 0x54, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x42, 0x4f, 0x58,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x03, 0x2a, 0xb0, 0x04,
	0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f,
	0x45, 0x56, 0x54, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x49, 0x52, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f,
	0x4d, 0x42, 0x41, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4d, 0x42,
	0x41, 0x54, 0x5f, 0x52, 0x55, 0x53, 0x48, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x05, 0x12, 0x25,
	0x0a, 0x21, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x45, 0x45, 0x52,
	0x5f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x09, 0x12, 0x1d,
	0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x53,
	0x45, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0a, 0x12, 0x1e, 0x0a,
	0x1a, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x10, 0x0b, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x44, 0x4f, 0x5f, 0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f,
	0x4d, 0x42, 0x41, 0x54, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x52, 0x55, 0x53, 0x48, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x10,
	0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x0f, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x45,
	0x41, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x10, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f,
	0x4d, 0x42, 0x41, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x41, 0x4e, 0x43, 0x48, 0x4f,
	0x52, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x11,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x12,
	0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34,
	0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_cmd_cmd_fight_proto_rawDescOnce sync.Once
	file_cmd_cmd_fight_proto_rawDescData = file_cmd_cmd_fight_proto_rawDesc
)

func file_cmd_cmd_fight_proto_rawDescGZIP() []byte {
	file_cmd_cmd_fight_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_fight_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_fight_proto_rawDescData)
	})
	return file_cmd_cmd_fight_proto_rawDescData
}

var file_cmd_cmd_fight_proto_enumTypes = make([]protoimpl.EnumInfo, 57)
var file_cmd_cmd_fight_proto_msgTypes = make([]protoimpl.MessageInfo, 86)
var file_cmd_cmd_fight_proto_goTypes = []interface{}{
	(ForwardType)(0),                                 // 0: proto.ForwardType
	(HitColliderType)(0),                             // 1: proto.HitColliderType
	(CombatTypeArgument)(0),                          // 2: proto.CombatTypeArgument
	(EvtBeingHitNotify_CmdId)(0),                     // 3: proto.EvtBeingHitNotify.CmdId
	(EvtAnimatorParameterNotify_CmdId)(0),            // 4: proto.EvtAnimatorParameterNotify.CmdId
	(HostPlayerNotify_CmdId)(0),                      // 5: proto.HostPlayerNotify.CmdId
	(EvtDoSkillSuccNotify_CmdId)(0),                  // 6: proto.EvtDoSkillSuccNotify.CmdId
	(EvtCreateGadgetNotify_CmdId)(0),                 // 7: proto.EvtCreateGadgetNotify.CmdId
	(EvtDestroyGadgetNotify_CmdId)(0),                // 8: proto.EvtDestroyGadgetNotify.CmdId
	(EvtFaceToEntityNotify_CmdId)(0),                 // 9: proto.EvtFaceToEntityNotify.CmdId
	(EvtFaceToDirNotify_CmdId)(0),                    // 10: proto.EvtFaceToDirNotify.CmdId
	(EvtCostStaminaNotify_CmdId)(0),                  // 11: proto.EvtCostStaminaNotify.CmdId
	(EvtSetAttackTargetNotify_CmdId)(0),              // 12: proto.EvtSetAttackTargetNotify.CmdId
	(EvtAnimatorStateChangedNotify_CmdId)(0),         // 13: proto.EvtAnimatorStateChangedNotify.CmdId
	(EvtRushMoveNotify_CmdId)(0),                     // 14: proto.EvtRushMoveNotify.CmdId
	(EvtBulletHitNotify_CmdId)(0),                    // 15: proto.EvtBulletHitNotify.CmdId
	(EvtBulletDeactiveNotify_CmdId)(0),               // 16: proto.EvtBulletDeactiveNotify.CmdId
	(EvtEntityStartDieEndNotify_CmdId)(0),            // 17: proto.EvtEntityStartDieEndNotify.CmdId
	(EvtBulletMoveNotify_CmdId)(0),                   // 18: proto.EvtBulletMoveNotify.CmdId
	(EvtAvatarEnterFocusNotify_CmdId)(0),             // 19: proto.EvtAvatarEnterFocusNotify.CmdId
	(EvtAvatarExitFocusNotify_CmdId)(0),              // 20: proto.EvtAvatarExitFocusNotify.CmdId
	(EvtAvatarUpdateFocusNotify_CmdId)(0),            // 21: proto.EvtAvatarUpdateFocusNotify.CmdId
	(EntityAuthorityChangeNotify_CmdId)(0),           // 22: proto.EntityAuthorityChangeNotify.CmdId
	(AvatarBuffAddNotify_CmdId)(0),                   // 23: proto.AvatarBuffAddNotify.CmdId
	(AvatarBuffDelNotify_CmdId)(0),                   // 24: proto.AvatarBuffDelNotify.CmdId
	(MonsterAlertChangeNotify_CmdId)(0),              // 25: proto.MonsterAlertChangeNotify.CmdId
	(MonsterForceAlertNotify_CmdId)(0),               // 26: proto.MonsterForceAlertNotify.CmdId
	(AvatarEnterElementViewNotify_CmdId)(0),          // 27: proto.AvatarEnterElementViewNotify.CmdId
	(TriggerCreateGadgetToEquipPartNotify_CmdId)(0),  // 28: proto.TriggerCreateGadgetToEquipPartNotify.CmdId
	(EvtEntityRenderersChangedNotify_CmdId)(0),       // 29: proto.EvtEntityRenderersChangedNotify.CmdId
	(AnimatorForceSetAirMoveNotify_CmdId)(0),         // 30: proto.AnimatorForceSetAirMoveNotify.CmdId
	(EvtAiSyncSkillCdNotify_CmdId)(0),                // 31: proto.EvtAiSyncSkillCdNotify.CmdId
	(EvtBeingHitsCombineNotify_CmdId)(0),             // 32: proto.EvtBeingHitsCombineNotify.CmdId
	(EvtAvatarSitDownNotify_CmdId)(0),                // 33: proto.EvtAvatarSitDownNotify.CmdId
	(EvtAvatarStandUpNotify_CmdId)(0),                // 34: proto.EvtAvatarStandUpNotify.CmdId
	(CreateMassiveEntityReq_CmdId)(0),                // 35: proto.CreateMassiveEntityReq.CmdId
	(CreateMassiveEntityRsp_CmdId)(0),                // 36: proto.CreateMassiveEntityRsp.CmdId
	(CreateMassiveEntityNotify_CmdId)(0),             // 37: proto.CreateMassiveEntityNotify.CmdId
	(DestroyMassiveEntityNotify_CmdId)(0),            // 38: proto.DestroyMassiveEntityNotify.CmdId
	(MassiveEntityStateChangedNotify_CmdId)(0),       // 39: proto.MassiveEntityStateChangedNotify.CmdId
	(SyncTeamEntityNotify_CmdId)(0),                  // 40: proto.SyncTeamEntityNotify.CmdId
	(DelTeamEntityNotify_CmdId)(0),                   // 41: proto.DelTeamEntityNotify.CmdId
	(CombatInvocationsNotify_CmdId)(0),               // 42: proto.CombatInvocationsNotify.CmdId
	(ServerBuffChangeNotify_CmdId)(0),                // 43: proto.ServerBuffChangeNotify.CmdId
	(ServerBuffChangeNotify_ServerBuffChangeType)(0), // 44: proto.ServerBuffChangeNotify.ServerBuffChangeType
	(EvtAiSyncCombatThreatInfoNotify_CmdId)(0),       // 45: proto.EvtAiSyncCombatThreatInfoNotify.CmdId
	(MassiveEntityElementOpBatchNotify_CmdId)(0),     // 46: proto.MassiveEntityElementOpBatchNotify.CmdId
	(EntityAiSyncNotify_CmdId)(0),                    // 47: proto.EntityAiSyncNotify.CmdId
	(LuaSetOptionNotify_CmdId)(0),                    // 48: proto.LuaSetOptionNotify.CmdId
	(LuaSetOptionNotify_LuaOptionType)(0),            // 49: proto.LuaSetOptionNotify.LuaOptionType
	(EvtDestroyServerGadgetNotify_CmdId)(0),          // 50: proto.EvtDestroyServerGadgetNotify.CmdId
	(EntityAiKillSelfNotify_CmdId)(0),                // 51: proto.EntityAiKillSelfNotify.CmdId
	(EvtAvatarLockChairReq_CmdId)(0),                 // 52: proto.EvtAvatarLockChairReq.CmdId
	(EvtAvatarLockChairRsp_CmdId)(0),                 // 53: proto.EvtAvatarLockChairRsp.CmdId
	(ReportFightAntiCheatNotify_CmdId)(0),            // 54: proto.ReportFightAntiCheatNotify.CmdId
	(EvtBeingHealedNotify_CmdId)(0),                  // 55: proto.EvtBeingHealedNotify.CmdId
	(EvtLocalGadgetOwnerLeaveSceneNotify_CmdId)(0),   // 56: proto.EvtLocalGadgetOwnerLeaveSceneNotify.CmdId
	(*HitCollision)(nil),                             // 57: proto.HitCollision
	(*AttackHitEffectResult)(nil),                    // 58: proto.AttackHitEffectResult
	(*AbilityIdentifier)(nil),                        // 59: proto.AbilityIdentifier
	(*AttackResult)(nil),                             // 60: proto.AttackResult
	(*EvtBeingHitInfo)(nil),                          // 61: proto.EvtBeingHitInfo
	(*EvtHittingOtherInfo)(nil),                      // 62: proto.EvtHittingOtherInfo
	(*EvtBeingHitNotify)(nil),                        // 63: proto.EvtBeingHitNotify
	(*EvtAnimatorParameterInfo)(nil),                 // 64: proto.EvtAnimatorParameterInfo
	(*EvtAnimatorParameterNotify)(nil),               // 65: proto.EvtAnimatorParameterNotify
	(*AbilityArgument)(nil),                          // 66: proto.AbilityArgument
	(*HostPlayerNotify)(nil),                         // 67: proto.HostPlayerNotify
	(*EvtDoSkillSuccNotify)(nil),                     // 68: proto.EvtDoSkillSuccNotify
	(*EvtCreateGadgetNotify)(nil),                    // 69: proto.EvtCreateGadgetNotify
	(*EvtDestroyGadgetNotify)(nil),                   // 70: proto.EvtDestroyGadgetNotify
	(*EvtFaceToEntityNotify)(nil),                    // 71: proto.EvtFaceToEntityNotify
	(*EvtFaceToDirInfo)(nil),                         // 72: proto.EvtFaceToDirInfo
	(*EvtFaceToDirNotify)(nil),                       // 73: proto.EvtFaceToDirNotify
	(*EvtCostStaminaNotify)(nil),                     // 74: proto.EvtCostStaminaNotify
	(*EvtSetAttackTargetInfo)(nil),                   // 75: proto.EvtSetAttackTargetInfo
	(*EvtSetAttackTargetNotify)(nil),                 // 76: proto.EvtSetAttackTargetNotify
	(*EvtAnimatorStateChangedInfo)(nil),              // 77: proto.EvtAnimatorStateChangedInfo
	(*EvtCompensatePosDiffInfo)(nil),                 // 78: proto.EvtCompensatePosDiffInfo
	(*EvtMonsterDoBlink)(nil),                        // 79: proto.EvtMonsterDoBlink
	(*EvtFixedRushMove)(nil),                         // 80: proto.EvtFixedRushMove
	(*EvtSyncTransform)(nil),                         // 81: proto.EvtSyncTransform
	(*EvtLightCoreMove)(nil),                         // 82: proto.EvtLightCoreMove
	(*EvtGrapplingHookMove)(nil),                     // 83: proto.EvtGrapplingHookMove
	(*EvtAnimatorStateChangedNotify)(nil),            // 84: proto.EvtAnimatorStateChangedNotify
	(*EvtRushMoveInfo)(nil),                          // 85: proto.EvtRushMoveInfo
	(*EvtMotionInfoDuringSteerAttack)(nil),           // 86: proto.EvtMotionInfoDuringSteerAttack
	(*EvtCombatSteerMotionInfo)(nil),                 // 87: proto.EvtCombatSteerMotionInfo
	(*EvtCombatForceSetPosInfo)(nil),                 // 88: proto.EvtCombatForceSetPosInfo
	(*EvtSyncEntityPositionInfo)(nil),                // 89: proto.EvtSyncEntityPositionInfo
	(*EvtRushMoveNotify)(nil),                        // 90: proto.EvtRushMoveNotify
	(*EvtBulletHitNotify)(nil),                       // 91: proto.EvtBulletHitNotify
	(*EvtBulletDeactiveNotify)(nil),                  // 92: proto.EvtBulletDeactiveNotify
	(*EvtEntityStartDieEndNotify)(nil),               // 93: proto.EvtEntityStartDieEndNotify
	(*EvtBulletMoveNotify)(nil),                      // 94: proto.EvtBulletMoveNotify
	(*EvtAvatarEnterFocusNotify)(nil),                // 95: proto.EvtAvatarEnterFocusNotify
	(*EvtAvatarExitFocusNotify)(nil),                 // 96: proto.EvtAvatarExitFocusNotify
	(*EvtAvatarUpdateFocusNotify)(nil),               // 97: proto.EvtAvatarUpdateFocusNotify
	(*AuthorityChange)(nil),                          // 98: proto.AuthorityChange
	(*EntityAuthorityChangeNotify)(nil),              // 99: proto.EntityAuthorityChangeNotify
	(*AvatarBuffAddNotify)(nil),                      // 100: proto.AvatarBuffAddNotify
	(*AvatarBuffDelNotify)(nil),                      // 101: proto.AvatarBuffDelNotify
	(*MonsterAlertChangeNotify)(nil),                 // 102: proto.MonsterAlertChangeNotify
	(*MonsterForceAlertNotify)(nil),                  // 103: proto.MonsterForceAlertNotify
	(*AvatarEnterElementViewNotify)(nil),             // 104: proto.AvatarEnterElementViewNotify
	(*TriggerCreateGadgetToEquipPartNotify)(nil),     // 105: proto.TriggerCreateGadgetToEquipPartNotify
	(*EvtEntityRenderersChangedNotify)(nil),          // 106: proto.EvtEntityRenderersChangedNotify
	(*AnimatorForceSetAirMoveNotify)(nil),            // 107: proto.AnimatorForceSetAirMoveNotify
	(*AiSkillCdInfo)(nil),                            // 108: proto.AiSkillCdInfo
	(*EvtAiSyncSkillCdNotify)(nil),                   // 109: proto.EvtAiSyncSkillCdNotify
	(*EvtBeingHitsCombineNotify)(nil),                // 110: proto.EvtBeingHitsCombineNotify
	(*EvtAvatarSitDownNotify)(nil),                   // 111: proto.EvtAvatarSitDownNotify
	(*EvtAvatarStandUpNotify)(nil),                   // 112: proto.EvtAvatarStandUpNotify
	(*CreateMassiveEntityReq)(nil),                   // 113: proto.CreateMassiveEntityReq
	(*CreateMassiveEntityRsp)(nil),                   // 114: proto.CreateMassiveEntityRsp
	(*CreateMassiveEntityNotify)(nil),                // 115: proto.CreateMassiveEntityNotify
	(*DestroyMassiveEntityNotify)(nil),               // 116: proto.DestroyMassiveEntityNotify
	(*MassiveEntityStateChangedNotify)(nil),          // 117: proto.MassiveEntityStateChangedNotify
	(*TeamEntityInfo)(nil),                           // 118: proto.TeamEntityInfo
	(*SyncTeamEntityNotify)(nil),                     // 119: proto.SyncTeamEntityNotify
	(*DelTeamEntityNotify)(nil),                      // 120: proto.DelTeamEntityNotify
	(*EvtSyncSkillAnchorPosition)(nil),               // 121: proto.EvtSyncSkillAnchorPosition
	(*CombatInvokeEntry)(nil),                        // 122: proto.CombatInvokeEntry
	(*CombatInvocationsNotify)(nil),                  // 123: proto.CombatInvocationsNotify
	(*ServerBuffChangeNotify)(nil),                   // 124: proto.ServerBuffChangeNotify
	(*AiThreatInfo)(nil),                             // 125: proto.AiThreatInfo
	(*EvtAiSyncCombatThreatInfoNotify)(nil),          // 126: proto.EvtAiSyncCombatThreatInfoNotify
	(*MassiveEntityElementOpBatchNotify)(nil),        // 127: proto.MassiveEntityElementOpBatchNotify
	(*AiSyncInfo)(nil),                               // 128: proto.AiSyncInfo
	(*EntityAiSyncNotify)(nil),                       // 129: proto.EntityAiSyncNotify
	(*LuaSetOptionNotify)(nil),                       // 130: proto.LuaSetOptionNotify
	(*EvtDestroyServerGadgetNotify)(nil),             // 131: proto.EvtDestroyServerGadgetNotify
	(*EntityAiKillSelfNotify)(nil),                   // 132: proto.EntityAiKillSelfNotify
	(*EvtAvatarLockChairReq)(nil),                    // 133: proto.EvtAvatarLockChairReq
	(*EvtAvatarLockChairRsp)(nil),                    // 134: proto.EvtAvatarLockChairRsp
	(*ReportFightAntiCheatNotify)(nil),               // 135: proto.ReportFightAntiCheatNotify
	(*EvtBeingHealedNotify)(nil),                     // 136: proto.EvtBeingHealedNotify
	(*EvtLocalGadgetOwnerLeaveSceneNotify)(nil),      // 137: proto.EvtLocalGadgetOwnerLeaveSceneNotify
	nil,                                // 138: proto.AiSkillCdInfo.SkillCdMapEntry
	nil,                                // 139: proto.AiSkillCdInfo.SkillGroupCdMapEntry
	nil,                                // 140: proto.EvtAiSyncSkillCdNotify.AiCdMapEntry
	nil,                                // 141: proto.AiThreatInfo.AiThreatMapEntry
	nil,                                // 142: proto.EvtAiSyncCombatThreatInfoNotify.CombatThreatInfoMapEntry
	(*Vector)(nil),                     // 143: proto.Vector
	(*AnimatorParameterValueInfo)(nil), // 144: proto.AnimatorParameterValueInfo
	(*EntityAuthorityInfo)(nil),        // 145: proto.EntityAuthorityInfo
	(*EntityRendererChangedInfo)(nil),  // 146: proto.EntityRendererChangedInfo
	(*ClientMassiveEntity)(nil),        // 147: proto.ClientMassiveEntity
	(*ServerMassiveEntity)(nil),        // 148: proto.ServerMassiveEntity
	(*MassiveEntityState)(nil),         // 149: proto.MassiveEntityState
	(*AbilitySyncStateInfo)(nil),       // 150: proto.AbilitySyncStateInfo
	(*ServerBuff)(nil),                 // 151: proto.ServerBuff
	(*ShapeSphere)(nil),                // 152: proto.ShapeSphere
	(*ShapeBox)(nil),                   // 153: proto.ShapeBox
}
var file_cmd_cmd_fight_proto_depIdxs = []int32{
	1,   // 0: proto.HitCollision.hit_collider_type:type_name -> proto.HitColliderType
	143, // 1: proto.HitCollision.hit_point:type_name -> proto.Vector
	143, // 2: proto.HitCollision.hit_dir:type_name -> proto.Vector
	58,  // 3: proto.AttackResult.hit_eff_result:type_name -> proto.AttackHitEffectResult
	143, // 4: proto.AttackResult.resolved_dir:type_name -> proto.Vector
	59,  // 5: proto.AttackResult.ability_identifier:type_name -> proto.AbilityIdentifier
	57,  // 6: proto.AttackResult.hit_collision:type_name -> proto.HitCollision
	60,  // 7: proto.EvtBeingHitInfo.attack_result:type_name -> proto.AttackResult
	60,  // 8: proto.EvtHittingOtherInfo.attack_result:type_name -> proto.AttackResult
	0,   // 9: proto.EvtBeingHitNotify.forward_type:type_name -> proto.ForwardType
	61,  // 10: proto.EvtBeingHitNotify.being_hit_info:type_name -> proto.EvtBeingHitInfo
	144, // 11: proto.EvtAnimatorParameterInfo.value:type_name -> proto.AnimatorParameterValueInfo
	64,  // 12: proto.EvtAnimatorParameterNotify.animator_param_info:type_name -> proto.EvtAnimatorParameterInfo
	0,   // 13: proto.EvtAnimatorParameterNotify.forward_type:type_name -> proto.ForwardType
	0,   // 14: proto.EvtDoSkillSuccNotify.forward_type:type_name -> proto.ForwardType
	143, // 15: proto.EvtDoSkillSuccNotify.forward:type_name -> proto.Vector
	0,   // 16: proto.EvtCreateGadgetNotify.forward_type:type_name -> proto.ForwardType
	143, // 17: proto.EvtCreateGadgetNotify.init_euler_angles:type_name -> proto.Vector
	143, // 18: proto.EvtCreateGadgetNotify.init_pos:type_name -> proto.Vector
	0,   // 19: proto.EvtDestroyGadgetNotify.forward_type:type_name -> proto.ForwardType
	0,   // 20: proto.EvtFaceToEntityNotify.forward_type:type_name -> proto.ForwardType
	143, // 21: proto.EvtFaceToDirInfo.face_dir:type_name -> proto.Vector
	0,   // 22: proto.EvtFaceToDirNotify.forward_type:type_name -> proto.ForwardType
	72,  // 23: proto.EvtFaceToDirNotify.evt_face_to_dir_info:type_name -> proto.EvtFaceToDirInfo
	0,   // 24: proto.EvtSetAttackTargetNotify.forward_type:type_name -> proto.ForwardType
	75,  // 25: proto.EvtSetAttackTargetNotify.evt_set_attack_target_info:type_name -> proto.EvtSetAttackTargetInfo
	143, // 26: proto.EvtAnimatorStateChangedInfo.pos:type_name -> proto.Vector
	143, // 27: proto.EvtCompensatePosDiffInfo.cur_pos:type_name -> proto.Vector
	143, // 28: proto.EvtMonsterDoBlink.target_rot:type_name -> proto.Vector
	143, // 29: proto.EvtMonsterDoBlink.target_pos:type_name -> proto.Vector
	143, // 30: proto.EvtFixedRushMove.target_pos:type_name -> proto.Vector
	143, // 31: proto.EvtSyncTransform.entity_pos:type_name -> proto.Vector
	143, // 32: proto.EvtSyncTransform.entity_rot:type_name -> proto.Vector
	143, // 33: proto.EvtLightCoreMove.target_pos:type_name -> proto.Vector
	143, // 34: proto.EvtGrapplingHookMove.target_pos:type_name -> proto.Vector
	0,   // 35: proto.EvtAnimatorStateChangedNotify.forward_type:type_name -> proto.ForwardType
	77,  // 36: proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info:type_name -> proto.EvtAnimatorStateChangedInfo
	143, // 37: proto.EvtRushMoveInfo.rush_to_pos:type_name -> proto.Vector
	143, // 38: proto.EvtRushMoveInfo.rush_attack_target_pos:type_name -> proto.Vector
	143, // 39: proto.EvtRushMoveInfo.velocity:type_name -> proto.Vector
	143, // 40: proto.EvtRushMoveInfo.pos:type_name -> proto.Vector
	143, // 41: proto.EvtMotionInfoDuringSteerAttack.face_dir:type_name -> proto.Vector
	143, // 42: proto.EvtMotionInfoDuringSteerAttack.velocity:type_name -> proto.Vector
	143, // 43: proto.EvtMotionInfoDuringSteerAttack.pos:type_name -> proto.Vector
	143, // 44: proto.EvtCombatSteerMotionInfo.pos:type_name -> proto.Vector
	143, // 45: proto.EvtCombatSteerMotionInfo.velocity:type_name -> proto.Vector
	143, // 46: proto.EvtCombatSteerMotionInfo.face_dir:type_name -> proto.Vector
	143, // 47: proto.EvtCombatForceSetPosInfo.target_pos:type_name -> proto.Vector
	143, // 48: proto.EvtSyncEntityPositionInfo.pos:type_name -> proto.Vector
	0,   // 49: proto.EvtRushMoveNotify.forward_type:type_name -> proto.ForwardType
	85,  // 50: proto.EvtRushMoveNotify.evt_rush_move_info:type_name -> proto.EvtRushMoveInfo
	143, // 51: proto.EvtBulletHitNotify.hit_point:type_name -> proto.Vector
	143, // 52: proto.EvtBulletHitNotify.hit_normal:type_name -> proto.Vector
	0,   // 53: proto.EvtBulletHitNotify.forward_type:type_name -> proto.ForwardType
	1,   // 54: proto.EvtBulletHitNotify.hit_collider_type:type_name -> proto.HitColliderType
	0,   // 55: proto.EvtBulletDeactiveNotify.forward_type:type_name -> proto.ForwardType
	143, // 56: proto.EvtBulletDeactiveNotify.disappear_pos:type_name -> proto.Vector
	0,   // 57: proto.EvtEntityStartDieEndNotify.forward_type:type_name -> proto.ForwardType
	0,   // 58: proto.EvtBulletMoveNotify.forward_type:type_name -> proto.ForwardType
	143, // 59: proto.EvtBulletMoveNotify.cur_pos:type_name -> proto.Vector
	0,   // 60: proto.EvtAvatarEnterFocusNotify.forward_type:type_name -> proto.ForwardType
	143, // 61: proto.EvtAvatarEnterFocusNotify.focus_forward:type_name -> proto.Vector
	143, // 62: proto.EvtAvatarExitFocusNotify.finish_forward:type_name -> proto.Vector
	0,   // 63: proto.EvtAvatarExitFocusNotify.forward_type:type_name -> proto.ForwardType
	0,   // 64: proto.EvtAvatarUpdateFocusNotify.forward_type:type_name -> proto.ForwardType
	143, // 65: proto.EvtAvatarUpdateFocusNotify.focus_forward:type_name -> proto.Vector
	145, // 66: proto.AuthorityChange.entity_authority_info:type_name -> proto.EntityAuthorityInfo
	98,  // 67: proto.EntityAuthorityChangeNotify.authority_change_list:type_name -> proto.AuthorityChange
	0,   // 68: proto.EvtEntityRenderersChangedNotify.forward_type:type_name -> proto.ForwardType
	146, // 69: proto.EvtEntityRenderersChangedNotify.renderer_changed_info:type_name -> proto.EntityRendererChangedInfo
	0,   // 70: proto.AnimatorForceSetAirMoveNotify.forward_type:type_name -> proto.ForwardType
	138, // 71: proto.AiSkillCdInfo.skill_cd_map:type_name -> proto.AiSkillCdInfo.SkillCdMapEntry
	139, // 72: proto.AiSkillCdInfo.skill_group_cd_map:type_name -> proto.AiSkillCdInfo.SkillGroupCdMapEntry
	140, // 73: proto.EvtAiSyncSkillCdNotify.ai_cd_map:type_name -> proto.EvtAiSyncSkillCdNotify.AiCdMapEntry
	0,   // 74: proto.EvtBeingHitsCombineNotify.forward_type:type_name -> proto.ForwardType
	61,  // 75: proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list:type_name -> proto.EvtBeingHitInfo
	143, // 76: proto.EvtAvatarSitDownNotify.position:type_name -> proto.Vector
	147, // 77: proto.CreateMassiveEntityReq.massive_entity_list:type_name -> proto.ClientMassiveEntity
	148, // 78: proto.CreateMassiveEntityNotify.massive_entity_list:type_name -> proto.ServerMassiveEntity
	147, // 79: proto.DestroyMassiveEntityNotify.massive_entity_list:type_name -> proto.ClientMassiveEntity
	149, // 80: proto.MassiveEntityStateChangedNotify.massive_entity_state_list:type_name -> proto.MassiveEntityState
	150, // 81: proto.TeamEntityInfo.team_ability_info:type_name -> proto.AbilitySyncStateInfo
	118, // 82: proto.SyncTeamEntityNotify.team_entity_info_list:type_name -> proto.TeamEntityInfo
	143, // 83: proto.EvtSyncSkillAnchorPosition.skill_anchor_position:type_name -> proto.Vector
	0,   // 84: proto.CombatInvokeEntry.forward_type:type_name -> proto.ForwardType
	2,   // 85: proto.CombatInvokeEntry.argument_type:type_name -> proto.CombatTypeArgument
	122, // 86: proto.CombatInvocationsNotify.invoke_list:type_name -> proto.CombatInvokeEntry
	44,  // 87: proto.ServerBuffChangeNotify.server_buff_change_type:type_name -> proto.ServerBuffChangeNotify.ServerBuffChangeType
	151, // 88: proto.ServerBuffChangeNotify.server_buff_list:type_name -> proto.ServerBuff
	141, // 89: proto.AiThreatInfo.ai_threat_map:type_name -> proto.AiThreatInfo.AiThreatMapEntry
	142, // 90: proto.EvtAiSyncCombatThreatInfoNotify.combat_threat_info_map:type_name -> proto.EvtAiSyncCombatThreatInfoNotify.CombatThreatInfoMapEntry
	152, // 91: proto.MassiveEntityElementOpBatchNotify.shape_sphere:type_name -> proto.ShapeSphere
	153, // 92: proto.MassiveEntityElementOpBatchNotify.shape_box:type_name -> proto.ShapeBox
	128, // 93: proto.EntityAiSyncNotify.info_list:type_name -> proto.AiSyncInfo
	49,  // 94: proto.LuaSetOptionNotify.option_type:type_name -> proto.LuaSetOptionNotify.LuaOptionType
	143, // 95: proto.EvtAvatarLockChairReq.position:type_name -> proto.Vector
	143, // 96: proto.EvtAvatarLockChairRsp.position:type_name -> proto.Vector
	108, // 97: proto.EvtAiSyncSkillCdNotify.AiCdMapEntry.value:type_name -> proto.AiSkillCdInfo
	125, // 98: proto.EvtAiSyncCombatThreatInfoNotify.CombatThreatInfoMapEntry.value:type_name -> proto.AiThreatInfo
	99,  // [99:99] is the sub-list for method output_type
	99,  // [99:99] is the sub-list for method input_type
	99,  // [99:99] is the sub-list for extension type_name
	99,  // [99:99] is the sub-list for extension extendee
	0,   // [0:99] is the sub-list for field type_name
}

func init() { file_cmd_cmd_fight_proto_init() }
func file_cmd_cmd_fight_proto_init() {
	if File_cmd_cmd_fight_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_fight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitCollision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackHitEffectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbilityIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBeingHitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtHittingOtherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBeingHitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAnimatorParameterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAnimatorParameterNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbilityArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPlayerNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtDoSkillSuccNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtCreateGadgetNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtDestroyGadgetNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtFaceToEntityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtFaceToDirInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtFaceToDirNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtCostStaminaNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtSetAttackTargetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtSetAttackTargetNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAnimatorStateChangedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtCompensatePosDiffInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtMonsterDoBlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtFixedRushMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtSyncTransform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtLightCoreMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtGrapplingHookMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAnimatorStateChangedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtRushMoveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtMotionInfoDuringSteerAttack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtCombatSteerMotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtCombatForceSetPosInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtSyncEntityPositionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtRushMoveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBulletHitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBulletDeactiveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtEntityStartDieEndNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBulletMoveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarEnterFocusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarExitFocusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarUpdateFocusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAuthorityChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarBuffAddNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarBuffDelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonsterAlertChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonsterForceAlertNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarEnterElementViewNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerCreateGadgetToEquipPartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtEntityRenderersChangedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimatorForceSetAirMoveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiSkillCdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAiSyncSkillCdNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBeingHitsCombineNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarSitDownNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarStandUpNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMassiveEntityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMassiveEntityRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMassiveEntityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyMassiveEntityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassiveEntityStateChangedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamEntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTeamEntityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTeamEntityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtSyncSkillAnchorPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombatInvokeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombatInvocationsNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerBuffChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiThreatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAiSyncCombatThreatInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassiveEntityElementOpBatchNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiSyncInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAiSyncNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LuaSetOptionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtDestroyServerGadgetNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAiKillSelfNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarLockChairReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtAvatarLockChairRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFightAntiCheatNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtBeingHealedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fight_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvtLocalGadgetOwnerLeaveSceneNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_cmd_fight_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AbilityArgument_IntArg)(nil),
		(*AbilityArgument_FloatArg)(nil),
		(*AbilityArgument_StrArg)(nil),
	}
	file_cmd_cmd_fight_proto_msgTypes[70].OneofWrappers = []interface{}{
		(*MassiveEntityElementOpBatchNotify_ShapeSphere)(nil),
		(*MassiveEntityElementOpBatchNotify_ShapeBox)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_fight_proto_rawDesc,
			NumEnums:      57,
			NumMessages:   86,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_fight_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_fight_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_fight_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_fight_proto_msgTypes,
	}.Build()
	File_cmd_cmd_fight_proto = out.File
	file_cmd_cmd_fight_proto_rawDesc = nil
	file_cmd_cmd_fight_proto_goTypes = nil
	file_cmd_cmd_fight_proto_depIdxs = nil
}
