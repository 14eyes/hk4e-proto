// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_achievement.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Achievement_Status int32

const (
	Achievement_INVALID      Achievement_Status = 0
	Achievement_UNFINISHED   Achievement_Status = 1
	Achievement_FINISHED     Achievement_Status = 2
	Achievement_REWARD_TAKEN Achievement_Status = 3
)

// Enum value maps for Achievement_Status.
var (
	Achievement_Status_name = map[int32]string{
		0: "INVALID",
		1: "UNFINISHED",
		2: "FINISHED",
		3: "REWARD_TAKEN",
	}
	Achievement_Status_value = map[string]int32{
		"INVALID":      0,
		"UNFINISHED":   1,
		"FINISHED":     2,
		"REWARD_TAKEN": 3,
	}
)

func (x Achievement_Status) Enum() *Achievement_Status {
	p := new(Achievement_Status)
	*p = x
	return p
}

func (x Achievement_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Achievement_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_achievement_proto_enumTypes[0].Descriptor()
}

func (Achievement_Status) Type() protoreflect.EnumType {
	return &file_cmd_cmd_achievement_proto_enumTypes[0]
}

func (x Achievement_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Achievement_Status.Descriptor instead.
func (Achievement_Status) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{0, 0}
}

type Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishTimestamp uint32             `protobuf:"varint,11,opt,name=finish_timestamp,json=finishTimestamp,proto3" json:"finish_timestamp,omitempty"`
	Status          Achievement_Status `protobuf:"varint,13,opt,name=status,proto3,enum=proto.Achievement_Status" json:"status,omitempty"`
	CurProgress     uint32             `protobuf:"varint,12,opt,name=cur_progress,json=curProgress,proto3" json:"cur_progress,omitempty"`
	Id              uint32             `protobuf:"varint,14,opt,name=id,proto3" json:"id,omitempty"`
	TotalProgress   uint32             `protobuf:"varint,8,opt,name=total_progress,json=totalProgress,proto3" json:"total_progress,omitempty"`
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{0}
}

func (x *Achievement) GetFinishTimestamp() uint32 {
	if x != nil {
		return x.FinishTimestamp
	}
	return 0
}

func (x *Achievement) GetStatus() Achievement_Status {
	if x != nil {
		return x.Status
	}
	return Achievement_INVALID
}

func (x *Achievement) GetCurProgress() uint32 {
	if x != nil {
		return x.CurProgress
	}
	return 0
}

func (x *Achievement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Achievement) GetTotalProgress() uint32 {
	if x != nil {
		return x.TotalProgress
	}
	return 0
}

type AchievementAllDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementList       []*Achievement `protobuf:"bytes,4,rep,name=achievement_list,json=achievementList,proto3" json:"achievement_list,omitempty"`
	RewardTakenGoalIdList []uint32       `protobuf:"varint,2,rep,packed,name=reward_taken_goal_id_list,json=rewardTakenGoalIdList,proto3" json:"reward_taken_goal_id_list,omitempty"`
}

func (x *AchievementAllDataNotify) Reset() {
	*x = AchievementAllDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementAllDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementAllDataNotify) ProtoMessage() {}

func (x *AchievementAllDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementAllDataNotify.ProtoReflect.Descriptor instead.
func (*AchievementAllDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{1}
}

func (x *AchievementAllDataNotify) GetAchievementList() []*Achievement {
	if x != nil {
		return x.AchievementList
	}
	return nil
}

func (x *AchievementAllDataNotify) GetRewardTakenGoalIdList() []uint32 {
	if x != nil {
		return x.RewardTakenGoalIdList
	}
	return nil
}

type AchievementUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementList []*Achievement `protobuf:"bytes,14,rep,name=achievement_list,json=achievementList,proto3" json:"achievement_list,omitempty"`
}

func (x *AchievementUpdateNotify) Reset() {
	*x = AchievementUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementUpdateNotify) ProtoMessage() {}

func (x *AchievementUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementUpdateNotify.ProtoReflect.Descriptor instead.
func (*AchievementUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{2}
}

func (x *AchievementUpdateNotify) GetAchievementList() []*Achievement {
	if x != nil {
		return x.AchievementList
	}
	return nil
}

type TakeAchievementRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []uint32 `protobuf:"varint,13,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *TakeAchievementRewardReq) Reset() {
	*x = TakeAchievementRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeAchievementRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeAchievementRewardReq) ProtoMessage() {}

func (x *TakeAchievementRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeAchievementRewardReq.ProtoReflect.Descriptor instead.
func (*TakeAchievementRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{3}
}

func (x *TakeAchievementRewardReq) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

type TakeAchievementRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList   []uint32     `protobuf:"varint,7,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	ItemList []*ItemParam `protobuf:"bytes,10,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Retcode  int32        `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeAchievementRewardRsp) Reset() {
	*x = TakeAchievementRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeAchievementRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeAchievementRewardRsp) ProtoMessage() {}

func (x *TakeAchievementRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeAchievementRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeAchievementRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{4}
}

func (x *TakeAchievementRewardRsp) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *TakeAchievementRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TakeAchievementRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type TakeAchievementGoalRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []uint32 `protobuf:"varint,5,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *TakeAchievementGoalRewardReq) Reset() {
	*x = TakeAchievementGoalRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeAchievementGoalRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeAchievementGoalRewardReq) ProtoMessage() {}

func (x *TakeAchievementGoalRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeAchievementGoalRewardReq.ProtoReflect.Descriptor instead.
func (*TakeAchievementGoalRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{5}
}

func (x *TakeAchievementGoalRewardReq) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

type TakeAchievementGoalRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32        `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IdList   []uint32     `protobuf:"varint,12,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	ItemList []*ItemParam `protobuf:"bytes,5,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *TakeAchievementGoalRewardRsp) Reset() {
	*x = TakeAchievementGoalRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_achievement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeAchievementGoalRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeAchievementGoalRewardRsp) ProtoMessage() {}

func (x *TakeAchievementGoalRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_achievement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeAchievementGoalRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeAchievementGoalRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_achievement_proto_rawDescGZIP(), []int{6}
}

func (x *TakeAchievementGoalRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeAchievementGoalRewardRsp) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *TakeAchievementGoalRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

var File_cmd_cmd_achievement_proto protoreflect.FileDescriptor

var file_cmd_cmd_achievement_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8c, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x4e, 0x10, 0x03, 0x22,
	0x93, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3d, 0x0a, 0x10,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x19, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x15,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x47, 0x6f, 0x61, 0x6c, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x17, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x3d, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x33, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x37, 0x0a, 0x1c, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x1c,
	0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x6f, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x28,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79,
	0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_achievement_proto_rawDescOnce sync.Once
	file_cmd_cmd_achievement_proto_rawDescData = file_cmd_cmd_achievement_proto_rawDesc
)

func file_cmd_cmd_achievement_proto_rawDescGZIP() []byte {
	file_cmd_cmd_achievement_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_achievement_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_achievement_proto_rawDescData)
	})
	return file_cmd_cmd_achievement_proto_rawDescData
}

var file_cmd_cmd_achievement_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cmd_cmd_achievement_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cmd_cmd_achievement_proto_goTypes = []interface{}{
	(Achievement_Status)(0),              // 0: proto.Achievement.Status
	(*Achievement)(nil),                  // 1: proto.Achievement
	(*AchievementAllDataNotify)(nil),     // 2: proto.AchievementAllDataNotify
	(*AchievementUpdateNotify)(nil),      // 3: proto.AchievementUpdateNotify
	(*TakeAchievementRewardReq)(nil),     // 4: proto.TakeAchievementRewardReq
	(*TakeAchievementRewardRsp)(nil),     // 5: proto.TakeAchievementRewardRsp
	(*TakeAchievementGoalRewardReq)(nil), // 6: proto.TakeAchievementGoalRewardReq
	(*TakeAchievementGoalRewardRsp)(nil), // 7: proto.TakeAchievementGoalRewardRsp
	(*ItemParam)(nil),                    // 8: proto.ItemParam
}
var file_cmd_cmd_achievement_proto_depIdxs = []int32{
	0, // 0: proto.Achievement.status:type_name -> proto.Achievement.Status
	1, // 1: proto.AchievementAllDataNotify.achievement_list:type_name -> proto.Achievement
	1, // 2: proto.AchievementUpdateNotify.achievement_list:type_name -> proto.Achievement
	8, // 3: proto.TakeAchievementRewardRsp.item_list:type_name -> proto.ItemParam
	8, // 4: proto.TakeAchievementGoalRewardRsp.item_list:type_name -> proto.ItemParam
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cmd_cmd_achievement_proto_init() }
func file_cmd_cmd_achievement_proto_init() {
	if File_cmd_cmd_achievement_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_achievement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementAllDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeAchievementRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeAchievementRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeAchievementGoalRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_achievement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeAchievementGoalRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_achievement_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_achievement_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_achievement_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_achievement_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_achievement_proto_msgTypes,
	}.Build()
	File_cmd_cmd_achievement_proto = out.File
	file_cmd_cmd_achievement_proto_rawDesc = nil
	file_cmd_cmd_achievement_proto_goTypes = nil
	file_cmd_cmd_achievement_proto_depIdxs = nil
}
