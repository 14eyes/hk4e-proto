// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_coop.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MainCoop_Status int32

const (
	MainCoop_INVALID  MainCoop_Status = 0
	MainCoop_RUNNING  MainCoop_Status = 1
	MainCoop_FINISHED MainCoop_Status = 2
)

// Enum value maps for MainCoop_Status.
var (
	MainCoop_Status_name = map[int32]string{
		0: "INVALID",
		1: "RUNNING",
		2: "FINISHED",
	}
	MainCoop_Status_value = map[string]int32{
		"INVALID":  0,
		"RUNNING":  1,
		"FINISHED": 2,
	}
)

func (x MainCoop_Status) Enum() *MainCoop_Status {
	p := new(MainCoop_Status)
	*p = x
	return p
}

func (x MainCoop_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MainCoop_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_coop_proto_enumTypes[0].Descriptor()
}

func (MainCoop_Status) Type() protoreflect.EnumType {
	return &file_cmd_cmd_coop_proto_enumTypes[0]
}

func (x MainCoop_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MainCoop_Status.Descriptor instead.
func (MainCoop_Status) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{0, 0}
}

type CoopPoint_State int32

const (
	CoopPoint_STATE_UNSTARTED CoopPoint_State = 0
	CoopPoint_STATE_STARTED   CoopPoint_State = 1
	CoopPoint_STATE_FINISHED  CoopPoint_State = 2
)

// Enum value maps for CoopPoint_State.
var (
	CoopPoint_State_name = map[int32]string{
		0: "STATE_UNSTARTED",
		1: "STATE_STARTED",
		2: "STATE_FINISHED",
	}
	CoopPoint_State_value = map[string]int32{
		"STATE_UNSTARTED": 0,
		"STATE_STARTED":   1,
		"STATE_FINISHED":  2,
	}
)

func (x CoopPoint_State) Enum() *CoopPoint_State {
	p := new(CoopPoint_State)
	*p = x
	return p
}

func (x CoopPoint_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoopPoint_State) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_coop_proto_enumTypes[1].Descriptor()
}

func (CoopPoint_State) Type() protoreflect.EnumType {
	return &file_cmd_cmd_coop_proto_enumTypes[1]
}

func (x CoopPoint_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoopPoint_State.Descriptor instead.
func (CoopPoint_State) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{7, 0}
}

type CoopReward_State int32

const (
	CoopReward_STATE_UNLOCK CoopReward_State = 0
	CoopReward_STATE_LOCK   CoopReward_State = 1
	CoopReward_STATE_TAKEN  CoopReward_State = 2
)

// Enum value maps for CoopReward_State.
var (
	CoopReward_State_name = map[int32]string{
		0: "STATE_UNLOCK",
		1: "STATE_LOCK",
		2: "STATE_TAKEN",
	}
	CoopReward_State_value = map[string]int32{
		"STATE_UNLOCK": 0,
		"STATE_LOCK":   1,
		"STATE_TAKEN":  2,
	}
)

func (x CoopReward_State) Enum() *CoopReward_State {
	p := new(CoopReward_State)
	*p = x
	return p
}

func (x CoopReward_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoopReward_State) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_coop_proto_enumTypes[2].Descriptor()
}

func (CoopReward_State) Type() protoreflect.EnumType {
	return &file_cmd_cmd_coop_proto_enumTypes[2]
}

func (x CoopReward_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoopReward_State.Descriptor instead.
func (CoopReward_State) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{8, 0}
}

type CoopChapter_State int32

const (
	CoopChapter_STATE_CLOSE         CoopChapter_State = 0
	CoopChapter_STATE_COND_NOT_MEET CoopChapter_State = 1
	CoopChapter_STATE_COND_MEET     CoopChapter_State = 2
	CoopChapter_STATE_ACCEPT        CoopChapter_State = 3
)

// Enum value maps for CoopChapter_State.
var (
	CoopChapter_State_name = map[int32]string{
		0: "STATE_CLOSE",
		1: "STATE_COND_NOT_MEET",
		2: "STATE_COND_MEET",
		3: "STATE_ACCEPT",
	}
	CoopChapter_State_value = map[string]int32{
		"STATE_CLOSE":         0,
		"STATE_COND_NOT_MEET": 1,
		"STATE_COND_MEET":     2,
		"STATE_ACCEPT":        3,
	}
)

func (x CoopChapter_State) Enum() *CoopChapter_State {
	p := new(CoopChapter_State)
	*p = x
	return p
}

func (x CoopChapter_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoopChapter_State) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_coop_proto_enumTypes[3].Descriptor()
}

func (CoopChapter_State) Type() protoreflect.EnumType {
	return &file_cmd_cmd_coop_proto_enumTypes[3]
}

func (x CoopChapter_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoopChapter_State.Descriptor instead.
func (CoopChapter_State) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{10, 0}
}

type MainCoop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeenEndingMap   map[uint32]uint32 `protobuf:"bytes,13,rep,name=seen_ending_map,json=seenEndingMap,proto3" json:"seen_ending_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NormalVarMap    map[uint32]int32  `protobuf:"bytes,4,rep,name=normal_var_map,json=normalVarMap,proto3" json:"normal_var_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SelfConfidence  uint32            `protobuf:"varint,5,opt,name=self_confidence,json=selfConfidence,proto3" json:"self_confidence,omitempty"`
	SavePointIdList []uint32          `protobuf:"varint,1,rep,packed,name=save_point_id_list,json=savePointIdList,proto3" json:"save_point_id_list,omitempty"`
	Status          MainCoop_Status   `protobuf:"varint,6,opt,name=status,proto3,enum=proto.MainCoop_Status" json:"status,omitempty"`
	TempVarMap      map[uint32]int32  `protobuf:"bytes,11,rep,name=temp_var_map,json=tempVarMap,proto3" json:"temp_var_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Id              uint32            `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MainCoop) Reset() {
	*x = MainCoop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainCoop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainCoop) ProtoMessage() {}

func (x *MainCoop) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainCoop.ProtoReflect.Descriptor instead.
func (*MainCoop) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{0}
}

func (x *MainCoop) GetSeenEndingMap() map[uint32]uint32 {
	if x != nil {
		return x.SeenEndingMap
	}
	return nil
}

func (x *MainCoop) GetNormalVarMap() map[uint32]int32 {
	if x != nil {
		return x.NormalVarMap
	}
	return nil
}

func (x *MainCoop) GetSelfConfidence() uint32 {
	if x != nil {
		return x.SelfConfidence
	}
	return 0
}

func (x *MainCoop) GetSavePointIdList() []uint32 {
	if x != nil {
		return x.SavePointIdList
	}
	return nil
}

func (x *MainCoop) GetStatus() MainCoop_Status {
	if x != nil {
		return x.Status
	}
	return MainCoop_INVALID
}

func (x *MainCoop) GetTempVarMap() map[uint32]int32 {
	if x != nil {
		return x.TempVarMap
	}
	return nil
}

func (x *MainCoop) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AllCoopInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainCoopList []*MainCoop `protobuf:"bytes,14,rep,name=main_coop_list,json=mainCoopList,proto3" json:"main_coop_list,omitempty"`
}

func (x *AllCoopInfoNotify) Reset() {
	*x = AllCoopInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCoopInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCoopInfoNotify) ProtoMessage() {}

func (x *AllCoopInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCoopInfoNotify.ProtoReflect.Descriptor instead.
func (*AllCoopInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{1}
}

func (x *AllCoopInfoNotify) GetMainCoopList() []*MainCoop {
	if x != nil {
		return x.MainCoopList
	}
	return nil
}

type MainCoopUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainCoopList []*MainCoop `protobuf:"bytes,5,rep,name=main_coop_list,json=mainCoopList,proto3" json:"main_coop_list,omitempty"`
}

func (x *MainCoopUpdateNotify) Reset() {
	*x = MainCoopUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainCoopUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainCoopUpdateNotify) ProtoMessage() {}

func (x *MainCoopUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainCoopUpdateNotify.ProtoReflect.Descriptor instead.
func (*MainCoopUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{2}
}

func (x *MainCoopUpdateNotify) GetMainCoopList() []*MainCoop {
	if x != nil {
		return x.MainCoopList
	}
	return nil
}

type SaveMainCoopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NormalVarMap   map[uint32]int32 `protobuf:"bytes,15,rep,name=normal_var_map,json=normalVarMap,proto3" json:"normal_var_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SelfConfidence uint32           `protobuf:"varint,2,opt,name=self_confidence,json=selfConfidence,proto3" json:"self_confidence,omitempty"`
	SavePointId    uint32           `protobuf:"varint,1,opt,name=save_point_id,json=savePointId,proto3" json:"save_point_id,omitempty"`
	TempVarMap     map[uint32]int32 `protobuf:"bytes,8,rep,name=temp_var_map,json=tempVarMap,proto3" json:"temp_var_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Id             uint32           `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveMainCoopReq) Reset() {
	*x = SaveMainCoopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMainCoopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMainCoopReq) ProtoMessage() {}

func (x *SaveMainCoopReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMainCoopReq.ProtoReflect.Descriptor instead.
func (*SaveMainCoopReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{3}
}

func (x *SaveMainCoopReq) GetNormalVarMap() map[uint32]int32 {
	if x != nil {
		return x.NormalVarMap
	}
	return nil
}

func (x *SaveMainCoopReq) GetSelfConfidence() uint32 {
	if x != nil {
		return x.SelfConfidence
	}
	return 0
}

func (x *SaveMainCoopReq) GetSavePointId() uint32 {
	if x != nil {
		return x.SavePointId
	}
	return 0
}

func (x *SaveMainCoopReq) GetTempVarMap() map[uint32]int32 {
	if x != nil {
		return x.TempVarMap
	}
	return nil
}

func (x *SaveMainCoopReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveMainCoopRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32    `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	SavePointIdList []uint32 `protobuf:"varint,15,rep,packed,name=save_point_id_list,json=savePointIdList,proto3" json:"save_point_id_list,omitempty"`
	Id              uint32   `protobuf:"varint,14,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveMainCoopRsp) Reset() {
	*x = SaveMainCoopRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMainCoopRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMainCoopRsp) ProtoMessage() {}

func (x *SaveMainCoopRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMainCoopRsp.ProtoReflect.Descriptor instead.
func (*SaveMainCoopRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{4}
}

func (x *SaveMainCoopRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SaveMainCoopRsp) GetSavePointIdList() []uint32 {
	if x != nil {
		return x.SavePointIdList
	}
	return nil
}

func (x *SaveMainCoopRsp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FinishMainCoopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32 `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	EndingSavePointId uint32 `protobuf:"varint,1,opt,name=ending_save_point_id,json=endingSavePointId,proto3" json:"ending_save_point_id,omitempty"`
}

func (x *FinishMainCoopReq) Reset() {
	*x = FinishMainCoopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishMainCoopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishMainCoopReq) ProtoMessage() {}

func (x *FinishMainCoopReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishMainCoopReq.ProtoReflect.Descriptor instead.
func (*FinishMainCoopReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{5}
}

func (x *FinishMainCoopReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FinishMainCoopReq) GetEndingSavePointId() uint32 {
	if x != nil {
		return x.EndingSavePointId
	}
	return 0
}

type FinishMainCoopRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	EndingSavePointId uint32 `protobuf:"varint,6,opt,name=ending_save_point_id,json=endingSavePointId,proto3" json:"ending_save_point_id,omitempty"`
	Retcode           int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *FinishMainCoopRsp) Reset() {
	*x = FinishMainCoopRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishMainCoopRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishMainCoopRsp) ProtoMessage() {}

func (x *FinishMainCoopRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishMainCoopRsp.ProtoReflect.Descriptor instead.
func (*FinishMainCoopRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{6}
}

func (x *FinishMainCoopRsp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FinishMainCoopRsp) GetEndingSavePointId() uint32 {
	if x != nil {
		return x.EndingSavePointId
	}
	return 0
}

func (x *FinishMainCoopRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CoopPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfConfidence uint32          `protobuf:"varint,15,opt,name=self_confidence,json=selfConfidence,proto3" json:"self_confidence,omitempty"`
	State          CoopPoint_State `protobuf:"varint,10,opt,name=state,proto3,enum=proto.CoopPoint_State" json:"state,omitempty"`
	Id             uint32          `protobuf:"varint,14,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoopPoint) Reset() {
	*x = CoopPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopPoint) ProtoMessage() {}

func (x *CoopPoint) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopPoint.ProtoReflect.Descriptor instead.
func (*CoopPoint) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{7}
}

func (x *CoopPoint) GetSelfConfidence() uint32 {
	if x != nil {
		return x.SelfConfidence
	}
	return 0
}

func (x *CoopPoint) GetState() CoopPoint_State {
	if x != nil {
		return x.State
	}
	return CoopPoint_STATE_UNSTARTED
}

func (x *CoopPoint) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoopReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32           `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	State CoopReward_State `protobuf:"varint,6,opt,name=state,proto3,enum=proto.CoopReward_State" json:"state,omitempty"`
}

func (x *CoopReward) Reset() {
	*x = CoopReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopReward) ProtoMessage() {}

func (x *CoopReward) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopReward.ProtoReflect.Descriptor instead.
func (*CoopReward) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{8}
}

func (x *CoopReward) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoopReward) GetState() CoopReward_State {
	if x != nil {
		return x.State
	}
	return CoopReward_STATE_UNLOCK
}

type CoopCg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnlock bool   `protobuf:"varint,14,opt,name=is_unlock,json=isUnlock,proto3" json:"is_unlock,omitempty"`
	Id       uint32 `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoopCg) Reset() {
	*x = CoopCg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopCg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopCg) ProtoMessage() {}

func (x *CoopCg) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopCg.ProtoReflect.Descriptor instead.
func (*CoopCg) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{9}
}

func (x *CoopCg) GetIsUnlock() bool {
	if x != nil {
		return x.IsUnlock
	}
	return false
}

func (x *CoopCg) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoopChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoopCgList       []*CoopCg         `protobuf:"bytes,1,rep,name=coop_cg_list,json=coopCgList,proto3" json:"coop_cg_list,omitempty"`
	Id               uint32            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	CoopPointList    []*CoopPoint      `protobuf:"bytes,11,rep,name=coop_point_list,json=coopPointList,proto3" json:"coop_point_list,omitempty"`
	FinishDialogList []uint32          `protobuf:"varint,10,rep,packed,name=finish_dialog_list,json=finishDialogList,proto3" json:"finish_dialog_list,omitempty"`
	FinishedEndCount uint32            `protobuf:"varint,14,opt,name=finished_end_count,json=finishedEndCount,proto3" json:"finished_end_count,omitempty"`
	TotalEndCount    uint32            `protobuf:"varint,7,opt,name=total_end_count,json=totalEndCount,proto3" json:"total_end_count,omitempty"`
	CoopRewardList   []*CoopReward     `protobuf:"bytes,5,rep,name=coop_reward_list,json=coopRewardList,proto3" json:"coop_reward_list,omitempty"`
	LockReasonList   []uint32          `protobuf:"varint,12,rep,packed,name=lock_reason_list,json=lockReasonList,proto3" json:"lock_reason_list,omitempty"`
	State            CoopChapter_State `protobuf:"varint,4,opt,name=state,proto3,enum=proto.CoopChapter_State" json:"state,omitempty"`
	SeenEndingMap    map[uint32]uint32 `protobuf:"bytes,9,rep,name=seen_ending_map,json=seenEndingMap,proto3" json:"seen_ending_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CoopChapter) Reset() {
	*x = CoopChapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopChapter) ProtoMessage() {}

func (x *CoopChapter) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopChapter.ProtoReflect.Descriptor instead.
func (*CoopChapter) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{10}
}

func (x *CoopChapter) GetCoopCgList() []*CoopCg {
	if x != nil {
		return x.CoopCgList
	}
	return nil
}

func (x *CoopChapter) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoopChapter) GetCoopPointList() []*CoopPoint {
	if x != nil {
		return x.CoopPointList
	}
	return nil
}

func (x *CoopChapter) GetFinishDialogList() []uint32 {
	if x != nil {
		return x.FinishDialogList
	}
	return nil
}

func (x *CoopChapter) GetFinishedEndCount() uint32 {
	if x != nil {
		return x.FinishedEndCount
	}
	return 0
}

func (x *CoopChapter) GetTotalEndCount() uint32 {
	if x != nil {
		return x.TotalEndCount
	}
	return 0
}

func (x *CoopChapter) GetCoopRewardList() []*CoopReward {
	if x != nil {
		return x.CoopRewardList
	}
	return nil
}

func (x *CoopChapter) GetLockReasonList() []uint32 {
	if x != nil {
		return x.LockReasonList
	}
	return nil
}

func (x *CoopChapter) GetState() CoopChapter_State {
	if x != nil {
		return x.State
	}
	return CoopChapter_STATE_CLOSE
}

func (x *CoopChapter) GetSeenEndingMap() map[uint32]uint32 {
	if x != nil {
		return x.SeenEndingMap
	}
	return nil
}

type CoopDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterList       []*CoopChapter `protobuf:"bytes,15,rep,name=chapter_list,json=chapterList,proto3" json:"chapter_list,omitempty"`
	ViewedChapterList []uint32       `protobuf:"varint,7,rep,packed,name=viewed_chapter_list,json=viewedChapterList,proto3" json:"viewed_chapter_list,omitempty"`
	IsHaveProgress    bool           `protobuf:"varint,10,opt,name=is_have_progress,json=isHaveProgress,proto3" json:"is_have_progress,omitempty"`
	CurCoopPoint      uint32         `protobuf:"varint,5,opt,name=cur_coop_point,json=curCoopPoint,proto3" json:"cur_coop_point,omitempty"`
}

func (x *CoopDataNotify) Reset() {
	*x = CoopDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopDataNotify) ProtoMessage() {}

func (x *CoopDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopDataNotify.ProtoReflect.Descriptor instead.
func (*CoopDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{11}
}

func (x *CoopDataNotify) GetChapterList() []*CoopChapter {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

func (x *CoopDataNotify) GetViewedChapterList() []uint32 {
	if x != nil {
		return x.ViewedChapterList
	}
	return nil
}

func (x *CoopDataNotify) GetIsHaveProgress() bool {
	if x != nil {
		return x.IsHaveProgress
	}
	return false
}

func (x *CoopDataNotify) GetCurCoopPoint() uint32 {
	if x != nil {
		return x.CurCoopPoint
	}
	return 0
}

type CoopChapterUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterList []*CoopChapter `protobuf:"bytes,14,rep,name=chapter_list,json=chapterList,proto3" json:"chapter_list,omitempty"`
}

func (x *CoopChapterUpdateNotify) Reset() {
	*x = CoopChapterUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopChapterUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopChapterUpdateNotify) ProtoMessage() {}

func (x *CoopChapterUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopChapterUpdateNotify.ProtoReflect.Descriptor instead.
func (*CoopChapterUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{12}
}

func (x *CoopChapterUpdateNotify) GetChapterList() []*CoopChapter {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

type CoopCgUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgList []uint32 `protobuf:"varint,13,rep,packed,name=cg_list,json=cgList,proto3" json:"cg_list,omitempty"`
}

func (x *CoopCgUpdateNotify) Reset() {
	*x = CoopCgUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopCgUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopCgUpdateNotify) ProtoMessage() {}

func (x *CoopCgUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopCgUpdateNotify.ProtoReflect.Descriptor instead.
func (*CoopCgUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{13}
}

func (x *CoopCgUpdateNotify) GetCgList() []uint32 {
	if x != nil {
		return x.CgList
	}
	return nil
}

type CoopRewardUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardList []*CoopReward `protobuf:"bytes,7,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"`
}

func (x *CoopRewardUpdateNotify) Reset() {
	*x = CoopRewardUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopRewardUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopRewardUpdateNotify) ProtoMessage() {}

func (x *CoopRewardUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopRewardUpdateNotify.ProtoReflect.Descriptor instead.
func (*CoopRewardUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{14}
}

func (x *CoopRewardUpdateNotify) GetRewardList() []*CoopReward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type UnlockCoopChapterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,3,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *UnlockCoopChapterReq) Reset() {
	*x = UnlockCoopChapterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockCoopChapterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockCoopChapterReq) ProtoMessage() {}

func (x *UnlockCoopChapterReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockCoopChapterReq.ProtoReflect.Descriptor instead.
func (*UnlockCoopChapterReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{15}
}

func (x *UnlockCoopChapterReq) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

type UnlockCoopChapterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,4,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Retcode   int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *UnlockCoopChapterRsp) Reset() {
	*x = UnlockCoopChapterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockCoopChapterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockCoopChapterRsp) ProtoMessage() {}

func (x *UnlockCoopChapterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockCoopChapterRsp.ProtoReflect.Descriptor instead.
func (*UnlockCoopChapterRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{16}
}

func (x *UnlockCoopChapterRsp) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *UnlockCoopChapterRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CoopPointUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoopPoint *CoopPoint `protobuf:"bytes,13,opt,name=coop_point,json=coopPoint,proto3" json:"coop_point,omitempty"`
}

func (x *CoopPointUpdateNotify) Reset() {
	*x = CoopPointUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopPointUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopPointUpdateNotify) ProtoMessage() {}

func (x *CoopPointUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopPointUpdateNotify.ProtoReflect.Descriptor instead.
func (*CoopPointUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{17}
}

func (x *CoopPointUpdateNotify) GetCoopPoint() *CoopPoint {
	if x != nil {
		return x.CoopPoint
	}
	return nil
}

type StartCoopPointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoopPoint uint32 `protobuf:"varint,7,opt,name=coop_point,json=coopPoint,proto3" json:"coop_point,omitempty"`
}

func (x *StartCoopPointReq) Reset() {
	*x = StartCoopPointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCoopPointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCoopPointReq) ProtoMessage() {}

func (x *StartCoopPointReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCoopPointReq.ProtoReflect.Descriptor instead.
func (*StartCoopPointReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{18}
}

func (x *StartCoopPointReq) GetCoopPoint() uint32 {
	if x != nil {
		return x.CoopPoint
	}
	return 0
}

type StartCoopPointRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStart       bool      `protobuf:"varint,9,opt,name=is_start,json=isStart,proto3" json:"is_start,omitempty"`
	StartMainCoop *MainCoop `protobuf:"bytes,15,opt,name=start_main_coop,json=startMainCoop,proto3" json:"start_main_coop,omitempty"`
	CoopPoint     uint32    `protobuf:"varint,13,opt,name=coop_point,json=coopPoint,proto3" json:"coop_point,omitempty"`
	Retcode       int32     `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *StartCoopPointRsp) Reset() {
	*x = StartCoopPointRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCoopPointRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCoopPointRsp) ProtoMessage() {}

func (x *StartCoopPointRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCoopPointRsp.ProtoReflect.Descriptor instead.
func (*StartCoopPointRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{19}
}

func (x *StartCoopPointRsp) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

func (x *StartCoopPointRsp) GetStartMainCoop() *MainCoop {
	if x != nil {
		return x.StartMainCoop
	}
	return nil
}

func (x *StartCoopPointRsp) GetCoopPoint() uint32 {
	if x != nil {
		return x.CoopPoint
	}
	return 0
}

func (x *StartCoopPointRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CancelCoopTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,13,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *CancelCoopTaskReq) Reset() {
	*x = CancelCoopTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCoopTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCoopTaskReq) ProtoMessage() {}

func (x *CancelCoopTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCoopTaskReq.ProtoReflect.Descriptor instead.
func (*CancelCoopTaskReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{20}
}

func (x *CancelCoopTaskReq) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

type CancelCoopTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Retcode   int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *CancelCoopTaskRsp) Reset() {
	*x = CancelCoopTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCoopTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCoopTaskRsp) ProtoMessage() {}

func (x *CancelCoopTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCoopTaskRsp.ProtoReflect.Descriptor instead.
func (*CancelCoopTaskRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{21}
}

func (x *CancelCoopTaskRsp) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *CancelCoopTaskRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type TakeCoopRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardConfigId uint32 `protobuf:"varint,6,opt,name=reward_config_id,json=rewardConfigId,proto3" json:"reward_config_id,omitempty"`
}

func (x *TakeCoopRewardReq) Reset() {
	*x = TakeCoopRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCoopRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCoopRewardReq) ProtoMessage() {}

func (x *TakeCoopRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCoopRewardReq.ProtoReflect.Descriptor instead.
func (*TakeCoopRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{22}
}

func (x *TakeCoopRewardReq) GetRewardConfigId() uint32 {
	if x != nil {
		return x.RewardConfigId
	}
	return 0
}

type TakeCoopRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32  `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RewardConfigId uint32 `protobuf:"varint,1,opt,name=reward_config_id,json=rewardConfigId,proto3" json:"reward_config_id,omitempty"`
}

func (x *TakeCoopRewardRsp) Reset() {
	*x = TakeCoopRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCoopRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCoopRewardRsp) ProtoMessage() {}

func (x *TakeCoopRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCoopRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeCoopRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{23}
}

func (x *TakeCoopRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeCoopRewardRsp) GetRewardConfigId() uint32 {
	if x != nil {
		return x.RewardConfigId
	}
	return 0
}

type CoopProgressUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurCoopPoint   uint32 `protobuf:"varint,11,opt,name=cur_coop_point,json=curCoopPoint,proto3" json:"cur_coop_point,omitempty"`
	IsHaveProgress bool   `protobuf:"varint,12,opt,name=is_have_progress,json=isHaveProgress,proto3" json:"is_have_progress,omitempty"`
}

func (x *CoopProgressUpdateNotify) Reset() {
	*x = CoopProgressUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopProgressUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopProgressUpdateNotify) ProtoMessage() {}

func (x *CoopProgressUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopProgressUpdateNotify.ProtoReflect.Descriptor instead.
func (*CoopProgressUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{24}
}

func (x *CoopProgressUpdateNotify) GetCurCoopPoint() uint32 {
	if x != nil {
		return x.CurCoopPoint
	}
	return 0
}

func (x *CoopProgressUpdateNotify) GetIsHaveProgress() bool {
	if x != nil {
		return x.IsHaveProgress
	}
	return false
}

type SaveCoopDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainCoopId uint32 `protobuf:"varint,11,opt,name=main_coop_id,json=mainCoopId,proto3" json:"main_coop_id,omitempty"`
	DialogId   uint32 `protobuf:"varint,6,opt,name=dialog_id,json=dialogId,proto3" json:"dialog_id,omitempty"`
}

func (x *SaveCoopDialogReq) Reset() {
	*x = SaveCoopDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCoopDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCoopDialogReq) ProtoMessage() {}

func (x *SaveCoopDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCoopDialogReq.ProtoReflect.Descriptor instead.
func (*SaveCoopDialogReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{25}
}

func (x *SaveCoopDialogReq) GetMainCoopId() uint32 {
	if x != nil {
		return x.MainCoopId
	}
	return 0
}

func (x *SaveCoopDialogReq) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type SaveCoopDialogRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogId   uint32 `protobuf:"varint,8,opt,name=dialog_id,json=dialogId,proto3" json:"dialog_id,omitempty"`
	MainCoopId uint32 `protobuf:"varint,10,opt,name=main_coop_id,json=mainCoopId,proto3" json:"main_coop_id,omitempty"`
	Retcode    int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SaveCoopDialogRsp) Reset() {
	*x = SaveCoopDialogRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCoopDialogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCoopDialogRsp) ProtoMessage() {}

func (x *SaveCoopDialogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCoopDialogRsp.ProtoReflect.Descriptor instead.
func (*SaveCoopDialogRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{26}
}

func (x *SaveCoopDialogRsp) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *SaveCoopDialogRsp) GetMainCoopId() uint32 {
	if x != nil {
		return x.MainCoopId
	}
	return 0
}

func (x *SaveCoopDialogRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CoopCgShowNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgList []uint32 `protobuf:"varint,10,rep,packed,name=cg_list,json=cgList,proto3" json:"cg_list,omitempty"`
}

func (x *CoopCgShowNotify) Reset() {
	*x = CoopCgShowNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopCgShowNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopCgShowNotify) ProtoMessage() {}

func (x *CoopCgShowNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopCgShowNotify.ProtoReflect.Descriptor instead.
func (*CoopCgShowNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{27}
}

func (x *CoopCgShowNotify) GetCgList() []uint32 {
	if x != nil {
		return x.CgList
	}
	return nil
}

type SetCoopChapterViewedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *SetCoopChapterViewedReq) Reset() {
	*x = SetCoopChapterViewedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCoopChapterViewedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCoopChapterViewedReq) ProtoMessage() {}

func (x *SetCoopChapterViewedReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCoopChapterViewedReq.ProtoReflect.Descriptor instead.
func (*SetCoopChapterViewedReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{28}
}

func (x *SetCoopChapterViewedReq) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

type SetCoopChapterViewedRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId uint32 `protobuf:"varint,11,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Retcode   int32  `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetCoopChapterViewedRsp) Reset() {
	*x = SetCoopChapterViewedRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCoopChapterViewedRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCoopChapterViewedRsp) ProtoMessage() {}

func (x *SetCoopChapterViewedRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCoopChapterViewedRsp.ProtoReflect.Descriptor instead.
func (*SetCoopChapterViewedRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{29}
}

func (x *SetCoopChapterViewedRsp) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *SetCoopChapterViewedRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MainCoopFailNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextmapId string `protobuf:"bytes,7,opt,name=textmap_id,json=textmapId,proto3" json:"textmap_id,omitempty"`
	ChapterId uint32 `protobuf:"varint,15,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *MainCoopFailNotify) Reset() {
	*x = MainCoopFailNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_coop_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainCoopFailNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainCoopFailNotify) ProtoMessage() {}

func (x *MainCoopFailNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_coop_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainCoopFailNotify.ProtoReflect.Descriptor instead.
func (*MainCoopFailNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_coop_proto_rawDescGZIP(), []int{30}
}

func (x *MainCoopFailNotify) GetTextmapId() string {
	if x != nil {
		return x.TextmapId
	}
	return ""
}

func (x *MainCoopFailNotify) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

var File_cmd_cmd_coop_proto protoreflect.FileDescriptor

var file_cmd_cmd_coop_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x04, 0x0a, 0x08,
	0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x73, 0x65, 0x65, 0x6e,
	0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6f, 0x70, 0x2e, 0x53, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x76,
	0x61, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x2e, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x72, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x56,
	0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x40, 0x0a, 0x12, 0x53, 0x65, 0x65, 0x6e, 0x45, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x65, 0x6d,
	0x70, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x22, 0x4a, 0x0a, 0x11, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x35, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6f, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35,
	0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x88, 0x03, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x0e, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6c,
	0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x76,
	0x61, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x1a, 0x3f, 0x0a, 0x11, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x68, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a,
	0x12, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x6e, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x76, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xb7, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x22, 0x87, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x4b,
	0x45, 0x4e, 0x10, 0x02, 0x22, 0x35, 0x0a, 0x06, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e, 0x05, 0x0a, 0x0b,
	0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x0c, 0x63,
	0x6f, 0x6f, 0x70, 0x5f, 0x63, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x67,
	0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x43, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0f,
	0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x63, 0x6f,
	0x6f, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f,
	0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0e, 0x63, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x73, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70,
	0x1a, 0x40, 0x0a, 0x12, 0x53, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x58, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d,
	0x45, 0x45, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x45, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x03, 0x22, 0xc7, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x35, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x73, 0x48, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x43, 0x6f, 0x6f,
	0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x6f, 0x6f, 0x70,
	0x43, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x16, 0x43, 0x6f, 0x6f, 0x70, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x32, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x14,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a,
	0x15, 0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f,
	0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x0f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6f, 0x70, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x32,
	0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6f, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x3d, 0x0a, 0x11, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22,
	0x57, 0x0a, 0x11, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x18, 0x43, 0x6f, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x5f, 0x63, 0x6f, 0x6f, 0x70,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x43, 0x6f, 0x6f, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x48, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6f, 0x70,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x6f, 0x6f, 0x70, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x10, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x52, 0x0a, 0x12, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x70, 0x46, 0x61, 0x69,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x6d,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_coop_proto_rawDescOnce sync.Once
	file_cmd_cmd_coop_proto_rawDescData = file_cmd_cmd_coop_proto_rawDesc
)

func file_cmd_cmd_coop_proto_rawDescGZIP() []byte {
	file_cmd_cmd_coop_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_coop_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_coop_proto_rawDescData)
	})
	return file_cmd_cmd_coop_proto_rawDescData
}

var file_cmd_cmd_coop_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cmd_cmd_coop_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_cmd_cmd_coop_proto_goTypes = []interface{}{
	(MainCoop_Status)(0),             // 0: proto.MainCoop.Status
	(CoopPoint_State)(0),             // 1: proto.CoopPoint.State
	(CoopReward_State)(0),            // 2: proto.CoopReward.State
	(CoopChapter_State)(0),           // 3: proto.CoopChapter.State
	(*MainCoop)(nil),                 // 4: proto.MainCoop
	(*AllCoopInfoNotify)(nil),        // 5: proto.AllCoopInfoNotify
	(*MainCoopUpdateNotify)(nil),     // 6: proto.MainCoopUpdateNotify
	(*SaveMainCoopReq)(nil),          // 7: proto.SaveMainCoopReq
	(*SaveMainCoopRsp)(nil),          // 8: proto.SaveMainCoopRsp
	(*FinishMainCoopReq)(nil),        // 9: proto.FinishMainCoopReq
	(*FinishMainCoopRsp)(nil),        // 10: proto.FinishMainCoopRsp
	(*CoopPoint)(nil),                // 11: proto.CoopPoint
	(*CoopReward)(nil),               // 12: proto.CoopReward
	(*CoopCg)(nil),                   // 13: proto.CoopCg
	(*CoopChapter)(nil),              // 14: proto.CoopChapter
	(*CoopDataNotify)(nil),           // 15: proto.CoopDataNotify
	(*CoopChapterUpdateNotify)(nil),  // 16: proto.CoopChapterUpdateNotify
	(*CoopCgUpdateNotify)(nil),       // 17: proto.CoopCgUpdateNotify
	(*CoopRewardUpdateNotify)(nil),   // 18: proto.CoopRewardUpdateNotify
	(*UnlockCoopChapterReq)(nil),     // 19: proto.UnlockCoopChapterReq
	(*UnlockCoopChapterRsp)(nil),     // 20: proto.UnlockCoopChapterRsp
	(*CoopPointUpdateNotify)(nil),    // 21: proto.CoopPointUpdateNotify
	(*StartCoopPointReq)(nil),        // 22: proto.StartCoopPointReq
	(*StartCoopPointRsp)(nil),        // 23: proto.StartCoopPointRsp
	(*CancelCoopTaskReq)(nil),        // 24: proto.CancelCoopTaskReq
	(*CancelCoopTaskRsp)(nil),        // 25: proto.CancelCoopTaskRsp
	(*TakeCoopRewardReq)(nil),        // 26: proto.TakeCoopRewardReq
	(*TakeCoopRewardRsp)(nil),        // 27: proto.TakeCoopRewardRsp
	(*CoopProgressUpdateNotify)(nil), // 28: proto.CoopProgressUpdateNotify
	(*SaveCoopDialogReq)(nil),        // 29: proto.SaveCoopDialogReq
	(*SaveCoopDialogRsp)(nil),        // 30: proto.SaveCoopDialogRsp
	(*CoopCgShowNotify)(nil),         // 31: proto.CoopCgShowNotify
	(*SetCoopChapterViewedReq)(nil),  // 32: proto.SetCoopChapterViewedReq
	(*SetCoopChapterViewedRsp)(nil),  // 33: proto.SetCoopChapterViewedRsp
	(*MainCoopFailNotify)(nil),       // 34: proto.MainCoopFailNotify
	nil,                              // 35: proto.MainCoop.SeenEndingMapEntry
	nil,                              // 36: proto.MainCoop.NormalVarMapEntry
	nil,                              // 37: proto.MainCoop.TempVarMapEntry
	nil,                              // 38: proto.SaveMainCoopReq.NormalVarMapEntry
	nil,                              // 39: proto.SaveMainCoopReq.TempVarMapEntry
	nil,                              // 40: proto.CoopChapter.SeenEndingMapEntry
}
var file_cmd_cmd_coop_proto_depIdxs = []int32{
	35, // 0: proto.MainCoop.seen_ending_map:type_name -> proto.MainCoop.SeenEndingMapEntry
	36, // 1: proto.MainCoop.normal_var_map:type_name -> proto.MainCoop.NormalVarMapEntry
	0,  // 2: proto.MainCoop.status:type_name -> proto.MainCoop.Status
	37, // 3: proto.MainCoop.temp_var_map:type_name -> proto.MainCoop.TempVarMapEntry
	4,  // 4: proto.AllCoopInfoNotify.main_coop_list:type_name -> proto.MainCoop
	4,  // 5: proto.MainCoopUpdateNotify.main_coop_list:type_name -> proto.MainCoop
	38, // 6: proto.SaveMainCoopReq.normal_var_map:type_name -> proto.SaveMainCoopReq.NormalVarMapEntry
	39, // 7: proto.SaveMainCoopReq.temp_var_map:type_name -> proto.SaveMainCoopReq.TempVarMapEntry
	1,  // 8: proto.CoopPoint.state:type_name -> proto.CoopPoint.State
	2,  // 9: proto.CoopReward.state:type_name -> proto.CoopReward.State
	13, // 10: proto.CoopChapter.coop_cg_list:type_name -> proto.CoopCg
	11, // 11: proto.CoopChapter.coop_point_list:type_name -> proto.CoopPoint
	12, // 12: proto.CoopChapter.coop_reward_list:type_name -> proto.CoopReward
	3,  // 13: proto.CoopChapter.state:type_name -> proto.CoopChapter.State
	40, // 14: proto.CoopChapter.seen_ending_map:type_name -> proto.CoopChapter.SeenEndingMapEntry
	14, // 15: proto.CoopDataNotify.chapter_list:type_name -> proto.CoopChapter
	14, // 16: proto.CoopChapterUpdateNotify.chapter_list:type_name -> proto.CoopChapter
	12, // 17: proto.CoopRewardUpdateNotify.reward_list:type_name -> proto.CoopReward
	11, // 18: proto.CoopPointUpdateNotify.coop_point:type_name -> proto.CoopPoint
	4,  // 19: proto.StartCoopPointRsp.start_main_coop:type_name -> proto.MainCoop
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cmd_cmd_coop_proto_init() }
func file_cmd_cmd_coop_proto_init() {
	if File_cmd_cmd_coop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_coop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainCoop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCoopInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainCoopUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMainCoopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMainCoopRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishMainCoopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishMainCoopRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopCg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopChapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopChapterUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopCgUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopRewardUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockCoopChapterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockCoopChapterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopPointUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCoopPointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCoopPointRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCoopTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCoopTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCoopRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCoopRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopProgressUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCoopDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCoopDialogRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopCgShowNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCoopChapterViewedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCoopChapterViewedRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_coop_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainCoopFailNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_coop_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_coop_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_coop_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_coop_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_coop_proto_msgTypes,
	}.Build()
	File_cmd_cmd_coop_proto = out.File
	file_cmd_cmd_coop_proto_rawDesc = nil
	file_cmd_cmd_coop_proto_goTypes = nil
	file_cmd_cmd_coop_proto_depIdxs = nil
}
