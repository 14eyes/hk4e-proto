// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/bin.home.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HomeBasicCompBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransNoCount  uint64 `protobuf:"varint,1,opt,name=trans_no_count,json=transNoCount,proto3" json:"trans_no_count,omitempty"`
	Exp           uint64 `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`
	Level         uint32 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	OwnerNickName string `protobuf:"bytes,6,opt,name=owner_nick_name,json=ownerNickName,proto3" json:"owner_nick_name,omitempty"`
	TotalHomeTime uint32 `protobuf:"varint,7,opt,name=total_home_time,json=totalHomeTime,proto3" json:"total_home_time,omitempty"`
	HomeTimeMs    uint64 `protobuf:"varint,8,opt,name=home_time_ms,json=homeTimeMs,proto3" json:"home_time_ms,omitempty"`
}

func (x *HomeBasicCompBin) Reset() {
	*x = HomeBasicCompBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBasicCompBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBasicCompBin) ProtoMessage() {}

func (x *HomeBasicCompBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBasicCompBin.ProtoReflect.Descriptor instead.
func (*HomeBasicCompBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{0}
}

func (x *HomeBasicCompBin) GetTransNoCount() uint64 {
	if x != nil {
		return x.TransNoCount
	}
	return 0
}

func (x *HomeBasicCompBin) GetExp() uint64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *HomeBasicCompBin) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *HomeBasicCompBin) GetOwnerNickName() string {
	if x != nil {
		return x.OwnerNickName
	}
	return ""
}

func (x *HomeBasicCompBin) GetTotalHomeTime() uint32 {
	if x != nil {
		return x.TotalHomeTime
	}
	return 0
}

func (x *HomeBasicCompBin) GetHomeTimeMs() uint64 {
	if x != nil {
		return x.HomeTimeMs
	}
	return 0
}

type HomeFurnitureBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FurnitureId          uint32     `protobuf:"varint,1,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SpawnPos             *VectorBin `protobuf:"bytes,3,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	SpawnRot             *VectorBin `protobuf:"bytes,4,opt,name=spawn_rot,json=spawnRot,proto3" json:"spawn_rot,omitempty"`
	ParentFurnitureIndex int32      `protobuf:"varint,7,opt,name=parent_furniture_index,json=parentFurnitureIndex,proto3" json:"parent_furniture_index,omitempty"`
	Guid                 uint32     `protobuf:"varint,8,opt,name=guid,proto3" json:"guid,omitempty"`
	Version              uint32     `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *HomeFurnitureBin) Reset() {
	*x = HomeFurnitureBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFurnitureBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFurnitureBin) ProtoMessage() {}

func (x *HomeFurnitureBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFurnitureBin.ProtoReflect.Descriptor instead.
func (*HomeFurnitureBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{1}
}

func (x *HomeFurnitureBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeFurnitureBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeFurnitureBin) GetSpawnRot() *VectorBin {
	if x != nil {
		return x.SpawnRot
	}
	return nil
}

func (x *HomeFurnitureBin) GetParentFurnitureIndex() int32 {
	if x != nil {
		return x.ParentFurnitureIndex
	}
	return 0
}

func (x *HomeFurnitureBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomeFurnitureBin) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type HomeFurnitureSuiteBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuiteId                    uint32     `protobuf:"varint,1,opt,name=suite_id,json=suiteId,proto3" json:"suite_id,omitempty"`
	SpawnPos                   *VectorBin `protobuf:"bytes,2,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	IncludedFurnitureIndexList []int32    `protobuf:"varint,3,rep,packed,name=included_furniture_index_list,json=includedFurnitureIndexList,proto3" json:"included_furniture_index_list,omitempty"`
	Guid                       uint32     `protobuf:"varint,4,opt,name=guid,proto3" json:"guid,omitempty"`
	IsAllowSummon              bool       `protobuf:"varint,5,opt,name=is_allow_summon,json=isAllowSummon,proto3" json:"is_allow_summon,omitempty"`
}

func (x *HomeFurnitureSuiteBin) Reset() {
	*x = HomeFurnitureSuiteBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFurnitureSuiteBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFurnitureSuiteBin) ProtoMessage() {}

func (x *HomeFurnitureSuiteBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFurnitureSuiteBin.ProtoReflect.Descriptor instead.
func (*HomeFurnitureSuiteBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{2}
}

func (x *HomeFurnitureSuiteBin) GetSuiteId() uint32 {
	if x != nil {
		return x.SuiteId
	}
	return 0
}

func (x *HomeFurnitureSuiteBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeFurnitureSuiteBin) GetIncludedFurnitureIndexList() []int32 {
	if x != nil {
		return x.IncludedFurnitureIndexList
	}
	return nil
}

func (x *HomeFurnitureSuiteBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomeFurnitureSuiteBin) GetIsAllowSummon() bool {
	if x != nil {
		return x.IsAllowSummon
	}
	return false
}

type HomeNpcBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId  uint32     `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	SpawnPos  *VectorBin `protobuf:"bytes,2,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	SpawnRot  *VectorBin `protobuf:"bytes,3,opt,name=spawn_rot,json=spawnRot,proto3" json:"spawn_rot,omitempty"`
	CostumeId uint32     `protobuf:"varint,4,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *HomeNpcBin) Reset() {
	*x = HomeNpcBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeNpcBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeNpcBin) ProtoMessage() {}

func (x *HomeNpcBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeNpcBin.ProtoReflect.Descriptor instead.
func (*HomeNpcBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{3}
}

func (x *HomeNpcBin) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *HomeNpcBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeNpcBin) GetSpawnRot() *VectorBin {
	if x != nil {
		return x.SpawnRot
	}
	return nil
}

func (x *HomeNpcBin) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type HomeAnimalBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FurnitureId uint32     `protobuf:"varint,1,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SpawnPos    *VectorBin `protobuf:"bytes,2,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	SpawnRot    *VectorBin `protobuf:"bytes,3,opt,name=spawn_rot,json=spawnRot,proto3" json:"spawn_rot,omitempty"`
}

func (x *HomeAnimalBin) Reset() {
	*x = HomeAnimalBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeAnimalBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeAnimalBin) ProtoMessage() {}

func (x *HomeAnimalBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeAnimalBin.ProtoReflect.Descriptor instead.
func (*HomeAnimalBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{4}
}

func (x *HomeAnimalBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeAnimalBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeAnimalBin) GetSpawnRot() *VectorBin {
	if x != nil {
		return x.SpawnRot
	}
	return nil
}

type HomeBlockSubFieldBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpawnPos *VectorBin `protobuf:"bytes,1,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	SpawnRot *VectorBin `protobuf:"bytes,2,opt,name=spawn_rot,json=spawnRot,proto3" json:"spawn_rot,omitempty"`
}

func (x *HomeBlockSubFieldBin) Reset() {
	*x = HomeBlockSubFieldBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBlockSubFieldBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBlockSubFieldBin) ProtoMessage() {}

func (x *HomeBlockSubFieldBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBlockSubFieldBin.ProtoReflect.Descriptor instead.
func (*HomeBlockSubFieldBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{5}
}

func (x *HomeBlockSubFieldBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeBlockSubFieldBin) GetSpawnRot() *VectorBin {
	if x != nil {
		return x.SpawnRot
	}
	return nil
}

type HomeBlockFieldBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid         uint32                  `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	FurnitureId  uint32                  `protobuf:"varint,2,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SpawnPos     *VectorBin              `protobuf:"bytes,3,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	SpawnRot     *VectorBin              `protobuf:"bytes,4,opt,name=spawn_rot,json=spawnRot,proto3" json:"spawn_rot,omitempty"`
	SubFieldList []*HomeBlockSubFieldBin `protobuf:"bytes,5,rep,name=sub_field_list,json=subFieldList,proto3" json:"sub_field_list,omitempty"`
}

func (x *HomeBlockFieldBin) Reset() {
	*x = HomeBlockFieldBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBlockFieldBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBlockFieldBin) ProtoMessage() {}

func (x *HomeBlockFieldBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBlockFieldBin.ProtoReflect.Descriptor instead.
func (*HomeBlockFieldBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{6}
}

func (x *HomeBlockFieldBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomeBlockFieldBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeBlockFieldBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeBlockFieldBin) GetSpawnRot() *VectorBin {
	if x != nil {
		return x.SpawnRot
	}
	return nil
}

func (x *HomeBlockFieldBin) GetSubFieldList() []*HomeBlockSubFieldBin {
	if x != nil {
		return x.SubFieldList
	}
	return nil
}

type HomeFurnitureGroupBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupFurnitureIndex uint32              `protobuf:"varint,1,opt,name=group_furniture_index,json=groupFurnitureIndex,proto3" json:"group_furniture_index,omitempty"`
	VirtualFurniureList []*HomeFurnitureBin `protobuf:"bytes,2,rep,name=virtual_furniure_list,json=virtualFurniureList,proto3" json:"virtual_furniure_list,omitempty"`
}

func (x *HomeFurnitureGroupBin) Reset() {
	*x = HomeFurnitureGroupBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFurnitureGroupBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFurnitureGroupBin) ProtoMessage() {}

func (x *HomeFurnitureGroupBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFurnitureGroupBin.ProtoReflect.Descriptor instead.
func (*HomeFurnitureGroupBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{7}
}

func (x *HomeFurnitureGroupBin) GetGroupFurnitureIndex() uint32 {
	if x != nil {
		return x.GroupFurnitureIndex
	}
	return 0
}

func (x *HomeFurnitureGroupBin) GetVirtualFurniureList() []*HomeFurnitureBin {
	if x != nil {
		return x.VirtualFurniureList
	}
	return nil
}

type HomeFurnitureCustomSuiteBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpawnPos                   *VectorBin `protobuf:"bytes,1,opt,name=spawn_pos,json=spawnPos,proto3" json:"spawn_pos,omitempty"`
	IncludedFurnitureIndexList []int32    `protobuf:"varint,2,rep,packed,name=included_furniture_index_list,json=includedFurnitureIndexList,proto3" json:"included_furniture_index_list,omitempty"`
	Guid                       uint32     `protobuf:"varint,3,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *HomeFurnitureCustomSuiteBin) Reset() {
	*x = HomeFurnitureCustomSuiteBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFurnitureCustomSuiteBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFurnitureCustomSuiteBin) ProtoMessage() {}

func (x *HomeFurnitureCustomSuiteBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFurnitureCustomSuiteBin.ProtoReflect.Descriptor instead.
func (*HomeFurnitureCustomSuiteBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{8}
}

func (x *HomeFurnitureCustomSuiteBin) GetSpawnPos() *VectorBin {
	if x != nil {
		return x.SpawnPos
	}
	return nil
}

func (x *HomeFurnitureCustomSuiteBin) GetIncludedFurnitureIndexList() []int32 {
	if x != nil {
		return x.IncludedFurnitureIndexList
	}
	return nil
}

func (x *HomeFurnitureCustomSuiteBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type HomeBlockBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId                  uint32                         `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	PersistentFurnitureList  []*HomeFurnitureBin            `protobuf:"bytes,2,rep,name=persistent_furniture_list,json=persistentFurnitureList,proto3" json:"persistent_furniture_list,omitempty"`
	DeployFurniureList       []*HomeFurnitureBin            `protobuf:"bytes,3,rep,name=deploy_furniure_list,json=deployFurniureList,proto3" json:"deploy_furniure_list,omitempty"`
	DeployNpcList            []*HomeNpcBin                  `protobuf:"bytes,4,rep,name=deploy_npc_list,json=deployNpcList,proto3" json:"deploy_npc_list,omitempty"`
	FurnitureSuiteList       []*HomeFurnitureSuiteBin       `protobuf:"bytes,5,rep,name=furniture_suite_list,json=furnitureSuiteList,proto3" json:"furniture_suite_list,omitempty"`
	DeployAnimalList         []*HomeAnimalBin               `protobuf:"bytes,6,rep,name=deploy_animal_list,json=deployAnimalList,proto3" json:"deploy_animal_list,omitempty"`
	IsUnlocked               bool                           `protobuf:"varint,7,opt,name=is_unlocked,json=isUnlocked,proto3" json:"is_unlocked,omitempty"`
	DeployFieldList          []*HomeBlockFieldBin           `protobuf:"bytes,8,rep,name=deploy_field_list,json=deployFieldList,proto3" json:"deploy_field_list,omitempty"`
	DeployFurnitureGroupList []*HomeFurnitureGroupBin       `protobuf:"bytes,9,rep,name=deploy_furniture_group_list,json=deployFurnitureGroupList,proto3" json:"deploy_furniture_group_list,omitempty"`
	FurnitureCustomSuiteList []*HomeFurnitureCustomSuiteBin `protobuf:"bytes,10,rep,name=furniture_custom_suite_list,json=furnitureCustomSuiteList,proto3" json:"furniture_custom_suite_list,omitempty"`
}

func (x *HomeBlockBin) Reset() {
	*x = HomeBlockBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBlockBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBlockBin) ProtoMessage() {}

func (x *HomeBlockBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBlockBin.ProtoReflect.Descriptor instead.
func (*HomeBlockBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{9}
}

func (x *HomeBlockBin) GetBlockId() uint32 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *HomeBlockBin) GetPersistentFurnitureList() []*HomeFurnitureBin {
	if x != nil {
		return x.PersistentFurnitureList
	}
	return nil
}

func (x *HomeBlockBin) GetDeployFurniureList() []*HomeFurnitureBin {
	if x != nil {
		return x.DeployFurniureList
	}
	return nil
}

func (x *HomeBlockBin) GetDeployNpcList() []*HomeNpcBin {
	if x != nil {
		return x.DeployNpcList
	}
	return nil
}

func (x *HomeBlockBin) GetFurnitureSuiteList() []*HomeFurnitureSuiteBin {
	if x != nil {
		return x.FurnitureSuiteList
	}
	return nil
}

func (x *HomeBlockBin) GetDeployAnimalList() []*HomeAnimalBin {
	if x != nil {
		return x.DeployAnimalList
	}
	return nil
}

func (x *HomeBlockBin) GetIsUnlocked() bool {
	if x != nil {
		return x.IsUnlocked
	}
	return false
}

func (x *HomeBlockBin) GetDeployFieldList() []*HomeBlockFieldBin {
	if x != nil {
		return x.DeployFieldList
	}
	return nil
}

func (x *HomeBlockBin) GetDeployFurnitureGroupList() []*HomeFurnitureGroupBin {
	if x != nil {
		return x.DeployFurnitureGroupList
	}
	return nil
}

func (x *HomeBlockBin) GetFurnitureCustomSuiteList() []*HomeFurnitureCustomSuiteBin {
	if x != nil {
		return x.FurnitureCustomSuiteList
	}
	return nil
}

type HomeSceneBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId      uint32              `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	SceneBin     *SceneBin           `protobuf:"bytes,2,opt,name=scene_bin,json=sceneBin,proto3" json:"scene_bin,omitempty"`
	BlockBinList []*HomeBlockBin     `protobuf:"bytes,3,rep,name=block_bin_list,json=blockBinList,proto3" json:"block_bin_list,omitempty"`
	IsSetBornPos bool                `protobuf:"varint,4,opt,name=is_set_born_pos,json=isSetBornPos,proto3" json:"is_set_born_pos,omitempty"`
	BornPos      *VectorBin          `protobuf:"bytes,5,opt,name=born_pos,json=bornPos,proto3" json:"born_pos,omitempty"`
	BornRot      *VectorBin          `protobuf:"bytes,6,opt,name=born_rot,json=bornRot,proto3" json:"born_rot,omitempty"`
	DoorList     []*HomeFurnitureBin `protobuf:"bytes,7,rep,name=door_list,json=doorList,proto3" json:"door_list,omitempty"`
	StairList    []*HomeFurnitureBin `protobuf:"bytes,8,rep,name=stair_list,json=stairList,proto3" json:"stair_list,omitempty"`
	MainHouse    *HomeFurnitureBin   `protobuf:"bytes,9,opt,name=main_house,json=mainHouse,proto3" json:"main_house,omitempty"`
	DjinnPos     *VectorBin          `protobuf:"bytes,10,opt,name=djinn_pos,json=djinnPos,proto3" json:"djinn_pos,omitempty"`
	TmpVersion   uint32              `protobuf:"varint,12,opt,name=tmp_version,json=tmpVersion,proto3" json:"tmp_version,omitempty"`
	SaveTime     uint32              `protobuf:"fixed32,13,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	BgmId        uint32              `protobuf:"varint,14,opt,name=bgm_id,json=bgmId,proto3" json:"bgm_id,omitempty"`
}

func (x *HomeSceneBin) Reset() {
	*x = HomeSceneBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSceneBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSceneBin) ProtoMessage() {}

func (x *HomeSceneBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSceneBin.ProtoReflect.Descriptor instead.
func (*HomeSceneBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{10}
}

func (x *HomeSceneBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeSceneBin) GetSceneBin() *SceneBin {
	if x != nil {
		return x.SceneBin
	}
	return nil
}

func (x *HomeSceneBin) GetBlockBinList() []*HomeBlockBin {
	if x != nil {
		return x.BlockBinList
	}
	return nil
}

func (x *HomeSceneBin) GetIsSetBornPos() bool {
	if x != nil {
		return x.IsSetBornPos
	}
	return false
}

func (x *HomeSceneBin) GetBornPos() *VectorBin {
	if x != nil {
		return x.BornPos
	}
	return nil
}

func (x *HomeSceneBin) GetBornRot() *VectorBin {
	if x != nil {
		return x.BornRot
	}
	return nil
}

func (x *HomeSceneBin) GetDoorList() []*HomeFurnitureBin {
	if x != nil {
		return x.DoorList
	}
	return nil
}

func (x *HomeSceneBin) GetStairList() []*HomeFurnitureBin {
	if x != nil {
		return x.StairList
	}
	return nil
}

func (x *HomeSceneBin) GetMainHouse() *HomeFurnitureBin {
	if x != nil {
		return x.MainHouse
	}
	return nil
}

func (x *HomeSceneBin) GetDjinnPos() *VectorBin {
	if x != nil {
		return x.DjinnPos
	}
	return nil
}

func (x *HomeSceneBin) GetTmpVersion() uint32 {
	if x != nil {
		return x.TmpVersion
	}
	return 0
}

func (x *HomeSceneBin) GetSaveTime() uint32 {
	if x != nil {
		return x.SaveTime
	}
	return 0
}

func (x *HomeSceneBin) GetBgmId() uint32 {
	if x != nil {
		return x.BgmId
	}
	return 0
}

type HomeModuleBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId       uint32          `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	CurRoomSceneId uint32          `protobuf:"varint,2,opt,name=cur_room_scene_id,json=curRoomSceneId,proto3" json:"cur_room_scene_id,omitempty"`
	SceneBinList   []*HomeSceneBin `protobuf:"bytes,3,rep,name=scene_bin_list,json=sceneBinList,proto3" json:"scene_bin_list,omitempty"`
}

func (x *HomeModuleBin) Reset() {
	*x = HomeModuleBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeModuleBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeModuleBin) ProtoMessage() {}

func (x *HomeModuleBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeModuleBin.ProtoReflect.Descriptor instead.
func (*HomeModuleBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{11}
}

func (x *HomeModuleBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomeModuleBin) GetCurRoomSceneId() uint32 {
	if x != nil {
		return x.CurRoomSceneId
	}
	return 0
}

func (x *HomeModuleBin) GetSceneBinList() []*HomeSceneBin {
	if x != nil {
		return x.SceneBinList
	}
	return nil
}

type HomeSceneCompBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurModuleId   uint32           `protobuf:"varint,1,opt,name=cur_module_id,json=curModuleId,proto3" json:"cur_module_id,omitempty"`
	ModuleBinList []*HomeModuleBin `protobuf:"bytes,2,rep,name=module_bin_list,json=moduleBinList,proto3" json:"module_bin_list,omitempty"`
}

func (x *HomeSceneCompBin) Reset() {
	*x = HomeSceneCompBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSceneCompBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSceneCompBin) ProtoMessage() {}

func (x *HomeSceneCompBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSceneCompBin.ProtoReflect.Descriptor instead.
func (*HomeSceneCompBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{12}
}

func (x *HomeSceneCompBin) GetCurModuleId() uint32 {
	if x != nil {
		return x.CurModuleId
	}
	return 0
}

func (x *HomeSceneCompBin) GetModuleBinList() []*HomeModuleBin {
	if x != nil {
		return x.ModuleBinList
	}
	return nil
}

type HomeOfflineMsgExeBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      *HomeOfflineMsgBin `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	ExeTimes uint32             `protobuf:"varint,2,opt,name=exe_times,json=exeTimes,proto3" json:"exe_times,omitempty"`
}

func (x *HomeOfflineMsgExeBin) Reset() {
	*x = HomeOfflineMsgExeBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeOfflineMsgExeBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeOfflineMsgExeBin) ProtoMessage() {}

func (x *HomeOfflineMsgExeBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeOfflineMsgExeBin.ProtoReflect.Descriptor instead.
func (*HomeOfflineMsgExeBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{13}
}

func (x *HomeOfflineMsgExeBin) GetMsg() *HomeOfflineMsgBin {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *HomeOfflineMsgExeBin) GetExeTimes() uint32 {
	if x != nil {
		return x.ExeTimes
	}
	return 0
}

type HomeOfflineMsgCompBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index              uint32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	NextOfflineMsgList []*HomeOfflineMsgExeBin `protobuf:"bytes,2,rep,name=next_offline_msg_list,json=nextOfflineMsgList,proto3" json:"next_offline_msg_list,omitempty"`
}

func (x *HomeOfflineMsgCompBin) Reset() {
	*x = HomeOfflineMsgCompBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeOfflineMsgCompBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeOfflineMsgCompBin) ProtoMessage() {}

func (x *HomeOfflineMsgCompBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeOfflineMsgCompBin.ProtoReflect.Descriptor instead.
func (*HomeOfflineMsgCompBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{14}
}

func (x *HomeOfflineMsgCompBin) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *HomeOfflineMsgCompBin) GetNextOfflineMsgList() []*HomeOfflineMsgExeBin {
	if x != nil {
		return x.NextOfflineMsgList
	}
	return nil
}

type HomeFurnitureMakeBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FurnitureMakeSlotsBinList []*FurnitureMakeSlotsBin `protobuf:"bytes,1,rep,name=furniture_make_slots_bin_list,json=furnitureMakeSlotsBinList,proto3" json:"furniture_make_slots_bin_list,omitempty"`
}

func (x *HomeFurnitureMakeBin) Reset() {
	*x = HomeFurnitureMakeBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFurnitureMakeBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFurnitureMakeBin) ProtoMessage() {}

func (x *HomeFurnitureMakeBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFurnitureMakeBin.ProtoReflect.Descriptor instead.
func (*HomeFurnitureMakeBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{15}
}

func (x *HomeFurnitureMakeBin) GetFurnitureMakeSlotsBinList() []*FurnitureMakeSlotsBin {
	if x != nil {
		return x.FurnitureMakeSlotsBinList
	}
	return nil
}

type HomeLimitedShopPoolRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId      uint32   `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	GoodsIdList []uint32 `protobuf:"varint,2,rep,packed,name=goods_id_list,json=goodsIdList,proto3" json:"goods_id_list,omitempty"`
}

func (x *HomeLimitedShopPoolRecordBin) Reset() {
	*x = HomeLimitedShopPoolRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLimitedShopPoolRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLimitedShopPoolRecordBin) ProtoMessage() {}

func (x *HomeLimitedShopPoolRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLimitedShopPoolRecordBin.ProtoReflect.Descriptor instead.
func (*HomeLimitedShopPoolRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{16}
}

func (x *HomeLimitedShopPoolRecordBin) GetPoolId() uint32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *HomeLimitedShopPoolRecordBin) GetGoodsIdList() []uint32 {
	if x != nil {
		return x.GoodsIdList
	}
	return nil
}

type HomeLimitedShopGoodsInfoBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	BuyNum  uint32 `protobuf:"varint,2,opt,name=buy_num,json=buyNum,proto3" json:"buy_num,omitempty"`
}

func (x *HomeLimitedShopGoodsInfoBin) Reset() {
	*x = HomeLimitedShopGoodsInfoBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLimitedShopGoodsInfoBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLimitedShopGoodsInfoBin) ProtoMessage() {}

func (x *HomeLimitedShopGoodsInfoBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLimitedShopGoodsInfoBin.ProtoReflect.Descriptor instead.
func (*HomeLimitedShopGoodsInfoBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{17}
}

func (x *HomeLimitedShopGoodsInfoBin) GetGoodsId() uint32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *HomeLimitedShopGoodsInfoBin) GetBuyNum() uint32 {
	if x != nil {
		return x.BuyNum
	}
	return 0
}

type HomeLimitedShopNPCPosBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId uint32 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	SceneId  uint32 `protobuf:"varint,4,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	BlockId  uint32 `protobuf:"varint,5,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Index    uint32 `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *HomeLimitedShopNPCPosBin) Reset() {
	*x = HomeLimitedShopNPCPosBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLimitedShopNPCPosBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLimitedShopNPCPosBin) ProtoMessage() {}

func (x *HomeLimitedShopNPCPosBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLimitedShopNPCPosBin.ProtoReflect.Descriptor instead.
func (*HomeLimitedShopNPCPosBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{18}
}

func (x *HomeLimitedShopNPCPosBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomeLimitedShopNPCPosBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeLimitedShopNPCPosBin) GetBlockId() uint32 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *HomeLimitedShopNPCPosBin) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type HomeLimitedShopBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastRefreshTime   uint32                          `protobuf:"varint,1,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time,omitempty"`
	PoolRecordBinList []*HomeLimitedShopPoolRecordBin `protobuf:"bytes,3,rep,name=pool_record_bin_list,json=poolRecordBinList,proto3" json:"pool_record_bin_list,omitempty"`
	GoodsInfoBinList  []*HomeLimitedShopGoodsInfoBin  `protobuf:"bytes,4,rep,name=goods_info_bin_list,json=goodsInfoBinList,proto3" json:"goods_info_bin_list,omitempty"`
	NpcPosBinList     []*HomeLimitedShopNPCPosBin     `protobuf:"bytes,5,rep,name=npc_pos_bin_list,json=npcPosBinList,proto3" json:"npc_pos_bin_list,omitempty"`
}

func (x *HomeLimitedShopBin) Reset() {
	*x = HomeLimitedShopBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLimitedShopBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLimitedShopBin) ProtoMessage() {}

func (x *HomeLimitedShopBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLimitedShopBin.ProtoReflect.Descriptor instead.
func (*HomeLimitedShopBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{19}
}

func (x *HomeLimitedShopBin) GetLastRefreshTime() uint32 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

func (x *HomeLimitedShopBin) GetPoolRecordBinList() []*HomeLimitedShopPoolRecordBin {
	if x != nil {
		return x.PoolRecordBinList
	}
	return nil
}

func (x *HomeLimitedShopBin) GetGoodsInfoBinList() []*HomeLimitedShopGoodsInfoBin {
	if x != nil {
		return x.GoodsInfoBinList
	}
	return nil
}

func (x *HomeLimitedShopBin) GetNpcPosBinList() []*HomeLimitedShopNPCPosBin {
	if x != nil {
		return x.NpcPosBinList
	}
	return nil
}

type HomePlantSubFieldBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index           uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	SeedId          uint32   `protobuf:"varint,2,opt,name=seed_id,json=seedId,proto3" json:"seed_id,omitempty"`
	GrowTime        uint32   `protobuf:"varint,3,opt,name=grow_time,json=growTime,proto3" json:"grow_time,omitempty"`
	LastUpdateTime  uint32   `protobuf:"varint,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	GatherIndexList []uint32 `protobuf:"varint,5,rep,packed,name=gather_index_list,json=gatherIndexList,proto3" json:"gather_index_list,omitempty"`
	HomeGatherId    uint32   `protobuf:"varint,6,opt,name=home_gather_id,json=homeGatherId,proto3" json:"home_gather_id,omitempty"`
}

func (x *HomePlantSubFieldBin) Reset() {
	*x = HomePlantSubFieldBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomePlantSubFieldBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomePlantSubFieldBin) ProtoMessage() {}

func (x *HomePlantSubFieldBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomePlantSubFieldBin.ProtoReflect.Descriptor instead.
func (*HomePlantSubFieldBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{20}
}

func (x *HomePlantSubFieldBin) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *HomePlantSubFieldBin) GetSeedId() uint32 {
	if x != nil {
		return x.SeedId
	}
	return 0
}

func (x *HomePlantSubFieldBin) GetGrowTime() uint32 {
	if x != nil {
		return x.GrowTime
	}
	return 0
}

func (x *HomePlantSubFieldBin) GetLastUpdateTime() uint32 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *HomePlantSubFieldBin) GetGatherIndexList() []uint32 {
	if x != nil {
		return x.GatherIndexList
	}
	return nil
}

func (x *HomePlantSubFieldBin) GetHomeGatherId() uint32 {
	if x != nil {
		return x.HomeGatherId
	}
	return 0
}

type HomePlantFieldBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId        uint32                  `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	SceneId         uint32                  `protobuf:"varint,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	Guid            uint32                  `protobuf:"varint,3,opt,name=guid,proto3" json:"guid,omitempty"`
	FurnitureId     uint32                  `protobuf:"varint,4,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SubFieldBinList []*HomePlantSubFieldBin `protobuf:"bytes,5,rep,name=sub_field_bin_list,json=subFieldBinList,proto3" json:"sub_field_bin_list,omitempty"`
}

func (x *HomePlantFieldBin) Reset() {
	*x = HomePlantFieldBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomePlantFieldBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomePlantFieldBin) ProtoMessage() {}

func (x *HomePlantFieldBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomePlantFieldBin.ProtoReflect.Descriptor instead.
func (*HomePlantFieldBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{21}
}

func (x *HomePlantFieldBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomePlantFieldBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomePlantFieldBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomePlantFieldBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomePlantFieldBin) GetSubFieldBinList() []*HomePlantSubFieldBin {
	if x != nil {
		return x.SubFieldBinList
	}
	return nil
}

type HomePlantBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldBinList []*HomePlantFieldBin `protobuf:"bytes,1,rep,name=field_bin_list,json=fieldBinList,proto3" json:"field_bin_list,omitempty"`
}

func (x *HomePlantBin) Reset() {
	*x = HomePlantBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomePlantBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomePlantBin) ProtoMessage() {}

func (x *HomePlantBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomePlantBin.ProtoReflect.Descriptor instead.
func (*HomePlantBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{22}
}

func (x *HomePlantBin) GetFieldBinList() []*HomePlantFieldBin {
	if x != nil {
		return x.FieldBinList
	}
	return nil
}

type HomeFishpondFarmingBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId      uint32   `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	FishpondGuid uint32   `protobuf:"varint,2,opt,name=fishpond_guid,json=fishpondGuid,proto3" json:"fishpond_guid,omitempty"`
	FurnitureId  uint32   `protobuf:"varint,3,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	FishIdList   []uint32 `protobuf:"varint,4,rep,packed,name=fish_id_list,json=fishIdList,proto3" json:"fish_id_list,omitempty"`
}

func (x *HomeFishpondFarmingBin) Reset() {
	*x = HomeFishpondFarmingBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFishpondFarmingBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFishpondFarmingBin) ProtoMessage() {}

func (x *HomeFishpondFarmingBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFishpondFarmingBin.ProtoReflect.Descriptor instead.
func (*HomeFishpondFarmingBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{23}
}

func (x *HomeFishpondFarmingBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeFishpondFarmingBin) GetFishpondGuid() uint32 {
	if x != nil {
		return x.FishpondGuid
	}
	return 0
}

func (x *HomeFishpondFarmingBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeFishpondFarmingBin) GetFishIdList() []uint32 {
	if x != nil {
		return x.FishIdList
	}
	return nil
}

type HomeScenePointFishFarmingBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId       uint32   `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	LocalEntityId uint32   `protobuf:"varint,2,opt,name=local_entity_id,json=localEntityId,proto3" json:"local_entity_id,omitempty"`
	FishIdList    []uint32 `protobuf:"varint,4,rep,packed,name=fish_id_list,json=fishIdList,proto3" json:"fish_id_list,omitempty"`
}

func (x *HomeScenePointFishFarmingBin) Reset() {
	*x = HomeScenePointFishFarmingBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeScenePointFishFarmingBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeScenePointFishFarmingBin) ProtoMessage() {}

func (x *HomeScenePointFishFarmingBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeScenePointFishFarmingBin.ProtoReflect.Descriptor instead.
func (*HomeScenePointFishFarmingBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{24}
}

func (x *HomeScenePointFishFarmingBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeScenePointFishFarmingBin) GetLocalEntityId() uint32 {
	if x != nil {
		return x.LocalEntityId
	}
	return 0
}

func (x *HomeScenePointFishFarmingBin) GetFishIdList() []uint32 {
	if x != nil {
		return x.FishIdList
	}
	return nil
}

type HomeModuleFishFarmingBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId                     uint32                          `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	FishpondFarmingBinList       []*HomeFishpondFarmingBin       `protobuf:"bytes,2,rep,name=fishpond_farming_bin_list,json=fishpondFarmingBinList,proto3" json:"fishpond_farming_bin_list,omitempty"`
	ScenePointFishFarmingBinList []*HomeScenePointFishFarmingBin `protobuf:"bytes,3,rep,name=scene_point_fish_farming_bin_list,json=scenePointFishFarmingBinList,proto3" json:"scene_point_fish_farming_bin_list,omitempty"`
}

func (x *HomeModuleFishFarmingBin) Reset() {
	*x = HomeModuleFishFarmingBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeModuleFishFarmingBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeModuleFishFarmingBin) ProtoMessage() {}

func (x *HomeModuleFishFarmingBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeModuleFishFarmingBin.ProtoReflect.Descriptor instead.
func (*HomeModuleFishFarmingBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{25}
}

func (x *HomeModuleFishFarmingBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomeModuleFishFarmingBin) GetFishpondFarmingBinList() []*HomeFishpondFarmingBin {
	if x != nil {
		return x.FishpondFarmingBinList
	}
	return nil
}

func (x *HomeModuleFishFarmingBin) GetScenePointFishFarmingBinList() []*HomeScenePointFishFarmingBin {
	if x != nil {
		return x.ScenePointFishFarmingBinList
	}
	return nil
}

type HomeFishFarmingBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleFishFarmingBinList []*HomeModuleFishFarmingBin `protobuf:"bytes,1,rep,name=module_fish_farming_bin_list,json=moduleFishFarmingBinList,proto3" json:"module_fish_farming_bin_list,omitempty"`
}

func (x *HomeFishFarmingBin) Reset() {
	*x = HomeFishFarmingBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFishFarmingBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFishFarmingBin) ProtoMessage() {}

func (x *HomeFishFarmingBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFishFarmingBin.ProtoReflect.Descriptor instead.
func (*HomeFishFarmingBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{26}
}

func (x *HomeFishFarmingBin) GetModuleFishFarmingBinList() []*HomeModuleFishFarmingBin {
	if x != nil {
		return x.ModuleFishFarmingBinList
	}
	return nil
}

type HomeCustomFurnitureNodeInfoBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentIndex    int32  `protobuf:"varint,1,opt,name=parent_index,json=parentIndex,proto3" json:"parent_index,omitempty"`
	FurnitureId    uint32 `protobuf:"varint,2,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SlotIdentifier string `protobuf:"bytes,3,opt,name=slot_identifier,json=slotIdentifier,proto3" json:"slot_identifier,omitempty"`
}

func (x *HomeCustomFurnitureNodeInfoBin) Reset() {
	*x = HomeCustomFurnitureNodeInfoBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeCustomFurnitureNodeInfoBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeCustomFurnitureNodeInfoBin) ProtoMessage() {}

func (x *HomeCustomFurnitureNodeInfoBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeCustomFurnitureNodeInfoBin.ProtoReflect.Descriptor instead.
func (*HomeCustomFurnitureNodeInfoBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{27}
}

func (x *HomeCustomFurnitureNodeInfoBin) GetParentIndex() int32 {
	if x != nil {
		return x.ParentIndex
	}
	return 0
}

func (x *HomeCustomFurnitureNodeInfoBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeCustomFurnitureNodeInfoBin) GetSlotIdentifier() string {
	if x != nil {
		return x.SlotIdentifier
	}
	return ""
}

type HomeOneCustomFurnitureBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId          uint32                            `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	Guid             uint32                            `protobuf:"varint,2,opt,name=guid,proto3" json:"guid,omitempty"`
	FurnitureId      uint32                            `protobuf:"varint,3,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	SubFurnitureList []*HomeCustomFurnitureNodeInfoBin `protobuf:"bytes,4,rep,name=sub_furniture_list,json=subFurnitureList,proto3" json:"sub_furniture_list,omitempty"`
}

func (x *HomeOneCustomFurnitureBin) Reset() {
	*x = HomeOneCustomFurnitureBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeOneCustomFurnitureBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeOneCustomFurnitureBin) ProtoMessage() {}

func (x *HomeOneCustomFurnitureBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeOneCustomFurnitureBin.ProtoReflect.Descriptor instead.
func (*HomeOneCustomFurnitureBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{28}
}

func (x *HomeOneCustomFurnitureBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeOneCustomFurnitureBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomeOneCustomFurnitureBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeOneCustomFurnitureBin) GetSubFurnitureList() []*HomeCustomFurnitureNodeInfoBin {
	if x != nil {
		return x.SubFurnitureList
	}
	return nil
}

type HomeModuleCustomFurnitureBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId               uint32                       `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	CustomFurnitureBinList []*HomeOneCustomFurnitureBin `protobuf:"bytes,2,rep,name=custom_furniture_bin_list,json=customFurnitureBinList,proto3" json:"custom_furniture_bin_list,omitempty"`
}

func (x *HomeModuleCustomFurnitureBin) Reset() {
	*x = HomeModuleCustomFurnitureBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeModuleCustomFurnitureBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeModuleCustomFurnitureBin) ProtoMessage() {}

func (x *HomeModuleCustomFurnitureBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeModuleCustomFurnitureBin.ProtoReflect.Descriptor instead.
func (*HomeModuleCustomFurnitureBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{29}
}

func (x *HomeModuleCustomFurnitureBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomeModuleCustomFurnitureBin) GetCustomFurnitureBinList() []*HomeOneCustomFurnitureBin {
	if x != nil {
		return x.CustomFurnitureBinList
	}
	return nil
}

type HomeCustomFurnitureBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCustomFurnitureBinList []*HomeModuleCustomFurnitureBin `protobuf:"bytes,1,rep,name=module_custom_furniture_bin_list,json=moduleCustomFurnitureBinList,proto3" json:"module_custom_furniture_bin_list,omitempty"`
}

func (x *HomeCustomFurnitureBin) Reset() {
	*x = HomeCustomFurnitureBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeCustomFurnitureBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeCustomFurnitureBin) ProtoMessage() {}

func (x *HomeCustomFurnitureBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeCustomFurnitureBin.ProtoReflect.Descriptor instead.
func (*HomeCustomFurnitureBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{30}
}

func (x *HomeCustomFurnitureBin) GetModuleCustomFurnitureBinList() []*HomeModuleCustomFurnitureBin {
	if x != nil {
		return x.ModuleCustomFurnitureBinList
	}
	return nil
}

type HomeOnePictureFrameBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId     uint32 `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	Guid        uint32 `protobuf:"varint,2,opt,name=guid,proto3" json:"guid,omitempty"`
	FurnitureId uint32 `protobuf:"varint,3,opt,name=furniture_id,json=furnitureId,proto3" json:"furniture_id,omitempty"`
	PictureId   uint32 `protobuf:"varint,4,opt,name=picture_id,json=pictureId,proto3" json:"picture_id,omitempty"`
}

func (x *HomeOnePictureFrameBin) Reset() {
	*x = HomeOnePictureFrameBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeOnePictureFrameBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeOnePictureFrameBin) ProtoMessage() {}

func (x *HomeOnePictureFrameBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeOnePictureFrameBin.ProtoReflect.Descriptor instead.
func (*HomeOnePictureFrameBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{31}
}

func (x *HomeOnePictureFrameBin) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *HomeOnePictureFrameBin) GetGuid() uint32 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *HomeOnePictureFrameBin) GetFurnitureId() uint32 {
	if x != nil {
		return x.FurnitureId
	}
	return 0
}

func (x *HomeOnePictureFrameBin) GetPictureId() uint32 {
	if x != nil {
		return x.PictureId
	}
	return 0
}

type HomeModulePictureFrameBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId            uint32                    `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	PictureFrameBinList []*HomeOnePictureFrameBin `protobuf:"bytes,2,rep,name=picture_frame_bin_list,json=pictureFrameBinList,proto3" json:"picture_frame_bin_list,omitempty"`
}

func (x *HomeModulePictureFrameBin) Reset() {
	*x = HomeModulePictureFrameBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeModulePictureFrameBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeModulePictureFrameBin) ProtoMessage() {}

func (x *HomeModulePictureFrameBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeModulePictureFrameBin.ProtoReflect.Descriptor instead.
func (*HomeModulePictureFrameBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{32}
}

func (x *HomeModulePictureFrameBin) GetModuleId() uint32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *HomeModulePictureFrameBin) GetPictureFrameBinList() []*HomeOnePictureFrameBin {
	if x != nil {
		return x.PictureFrameBinList
	}
	return nil
}

type HomePictureFrameBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModulePictureFrameBinList []*HomeModulePictureFrameBin `protobuf:"bytes,1,rep,name=module_picture_frame_bin_list,json=modulePictureFrameBinList,proto3" json:"module_picture_frame_bin_list,omitempty"`
}

func (x *HomePictureFrameBin) Reset() {
	*x = HomePictureFrameBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomePictureFrameBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomePictureFrameBin) ProtoMessage() {}

func (x *HomePictureFrameBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomePictureFrameBin.ProtoReflect.Descriptor instead.
func (*HomePictureFrameBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{33}
}

func (x *HomePictureFrameBin) GetModulePictureFrameBinList() []*HomeModulePictureFrameBin {
	if x != nil {
		return x.ModulePictureFrameBinList
	}
	return nil
}

type HomeGroupPlayerInfoBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            uint32             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname       string             `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PlayerLevel    uint32             `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	ProfilePicture *ProfilePictureBin `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	OnlineId       string             `protobuf:"bytes,5,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	PsnId          string             `protobuf:"bytes,6,opt,name=psn_id,json=psnId,proto3" json:"psn_id,omitempty"`
}

func (x *HomeGroupPlayerInfoBin) Reset() {
	*x = HomeGroupPlayerInfoBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeGroupPlayerInfoBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeGroupPlayerInfoBin) ProtoMessage() {}

func (x *HomeGroupPlayerInfoBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeGroupPlayerInfoBin.ProtoReflect.Descriptor instead.
func (*HomeGroupPlayerInfoBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{34}
}

func (x *HomeGroupPlayerInfoBin) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *HomeGroupPlayerInfoBin) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *HomeGroupPlayerInfoBin) GetPlayerLevel() uint32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *HomeGroupPlayerInfoBin) GetProfilePicture() *ProfilePictureBin {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *HomeGroupPlayerInfoBin) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *HomeGroupPlayerInfoBin) GetPsnId() string {
	if x != nil {
		return x.PsnId
	}
	return ""
}

type HomeRacingGalleryRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseTime    uint32                  `protobuf:"varint,1,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`
	PlayerInfo *HomeGroupPlayerInfoBin `protobuf:"bytes,2,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	Timestamp  uint32                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HomeRacingGalleryRecordBin) Reset() {
	*x = HomeRacingGalleryRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRacingGalleryRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRacingGalleryRecordBin) ProtoMessage() {}

func (x *HomeRacingGalleryRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRacingGalleryRecordBin.ProtoReflect.Descriptor instead.
func (*HomeRacingGalleryRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{35}
}

func (x *HomeRacingGalleryRecordBin) GetUseTime() uint32 {
	if x != nil {
		return x.UseTime
	}
	return 0
}

func (x *HomeRacingGalleryRecordBin) GetPlayerInfo() *HomeGroupPlayerInfoBin {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *HomeRacingGalleryRecordBin) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HomeRacingRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList []*HomeRacingGalleryRecordBin `protobuf:"bytes,1,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"`
}

func (x *HomeRacingRecordBin) Reset() {
	*x = HomeRacingRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeRacingRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeRacingRecordBin) ProtoMessage() {}

func (x *HomeRacingRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeRacingRecordBin.ProtoReflect.Descriptor instead.
func (*HomeRacingRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{36}
}

func (x *HomeRacingRecordBin) GetRecordList() []*HomeRacingGalleryRecordBin {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type HomeBalloonGalleryRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score      uint32                  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	HitCount   uint32                  `protobuf:"varint,2,opt,name=hit_count,json=hitCount,proto3" json:"hit_count,omitempty"`
	PlayerInfo *HomeGroupPlayerInfoBin `protobuf:"bytes,3,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	Timestamp  uint32                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HomeBalloonGalleryRecordBin) Reset() {
	*x = HomeBalloonGalleryRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBalloonGalleryRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBalloonGalleryRecordBin) ProtoMessage() {}

func (x *HomeBalloonGalleryRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBalloonGalleryRecordBin.ProtoReflect.Descriptor instead.
func (*HomeBalloonGalleryRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{37}
}

func (x *HomeBalloonGalleryRecordBin) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *HomeBalloonGalleryRecordBin) GetHitCount() uint32 {
	if x != nil {
		return x.HitCount
	}
	return 0
}

func (x *HomeBalloonGalleryRecordBin) GetPlayerInfo() *HomeGroupPlayerInfoBin {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *HomeBalloonGalleryRecordBin) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HomeBalloonRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList []*HomeBalloonGalleryRecordBin `protobuf:"bytes,1,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"`
}

func (x *HomeBalloonRecordBin) Reset() {
	*x = HomeBalloonRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBalloonRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBalloonRecordBin) ProtoMessage() {}

func (x *HomeBalloonRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBalloonRecordBin.ProtoReflect.Descriptor instead.
func (*HomeBalloonRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{38}
}

func (x *HomeBalloonRecordBin) GetRecordList() []*HomeBalloonGalleryRecordBin {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type HomeStakePlayRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp             uint32                    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EngagedPlayerInfoList []*HomeGroupPlayerInfoBin `protobuf:"bytes,2,rep,name=engaged_player_info_list,json=engagedPlayerInfoList,proto3" json:"engaged_player_info_list,omitempty"`
}

func (x *HomeStakePlayRecordBin) Reset() {
	*x = HomeStakePlayRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeStakePlayRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeStakePlayRecordBin) ProtoMessage() {}

func (x *HomeStakePlayRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeStakePlayRecordBin.ProtoReflect.Descriptor instead.
func (*HomeStakePlayRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{39}
}

func (x *HomeStakePlayRecordBin) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HomeStakePlayRecordBin) GetEngagedPlayerInfoList() []*HomeGroupPlayerInfoBin {
	if x != nil {
		return x.EngagedPlayerInfoList
	}
	return nil
}

type HomeStakeRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList []*HomeStakePlayRecordBin `protobuf:"bytes,1,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"`
}

func (x *HomeStakeRecordBin) Reset() {
	*x = HomeStakeRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeStakeRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeStakeRecordBin) ProtoMessage() {}

func (x *HomeStakeRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeStakeRecordBin.ProtoReflect.Descriptor instead.
func (*HomeStakeRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{40}
}

func (x *HomeStakeRecordBin) GetRecordList() []*HomeStakePlayRecordBin {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type HomeSeekFurniturePlayerScoreBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo *HomeGroupPlayerInfoBin `protobuf:"bytes,1,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	Score      uint32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *HomeSeekFurniturePlayerScoreBin) Reset() {
	*x = HomeSeekFurniturePlayerScoreBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSeekFurniturePlayerScoreBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSeekFurniturePlayerScoreBin) ProtoMessage() {}

func (x *HomeSeekFurniturePlayerScoreBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSeekFurniturePlayerScoreBin.ProtoReflect.Descriptor instead.
func (*HomeSeekFurniturePlayerScoreBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{41}
}

func (x *HomeSeekFurniturePlayerScoreBin) GetPlayerInfo() *HomeGroupPlayerInfoBin {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *HomeSeekFurniturePlayerScoreBin) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type HomeSeekFurnitureOneRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp              uint32                             `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EngagedPlayerScoreList []*HomeSeekFurniturePlayerScoreBin `protobuf:"bytes,2,rep,name=engaged_player_score_list,json=engagedPlayerScoreList,proto3" json:"engaged_player_score_list,omitempty"`
}

func (x *HomeSeekFurnitureOneRecordBin) Reset() {
	*x = HomeSeekFurnitureOneRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSeekFurnitureOneRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSeekFurnitureOneRecordBin) ProtoMessage() {}

func (x *HomeSeekFurnitureOneRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSeekFurnitureOneRecordBin.ProtoReflect.Descriptor instead.
func (*HomeSeekFurnitureOneRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{42}
}

func (x *HomeSeekFurnitureOneRecordBin) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HomeSeekFurnitureOneRecordBin) GetEngagedPlayerScoreList() []*HomeSeekFurniturePlayerScoreBin {
	if x != nil {
		return x.EngagedPlayerScoreList
	}
	return nil
}

type HomeSeekFurnitureAllRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList []*HomeSeekFurnitureOneRecordBin `protobuf:"bytes,1,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"`
}

func (x *HomeSeekFurnitureAllRecordBin) Reset() {
	*x = HomeSeekFurnitureAllRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSeekFurnitureAllRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSeekFurnitureAllRecordBin) ProtoMessage() {}

func (x *HomeSeekFurnitureAllRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSeekFurnitureAllRecordBin.ProtoReflect.Descriptor instead.
func (*HomeSeekFurnitureAllRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{43}
}

func (x *HomeSeekFurnitureAllRecordBin) GetRecordList() []*HomeSeekFurnitureOneRecordBin {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type HomeGroupRecordBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Detail:
	//
	//	*HomeGroupRecordBin_RacingGalleryInfoBin
	//	*HomeGroupRecordBin_BalloonGalleryInfoBin
	//	*HomeGroupRecordBin_StakePlayInfoBin
	//	*HomeGroupRecordBin_SeekFurniturePlayInfoBin
	Detail isHomeGroupRecordBin_Detail `protobuf_oneof:"detail"`
}

func (x *HomeGroupRecordBin) Reset() {
	*x = HomeGroupRecordBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeGroupRecordBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeGroupRecordBin) ProtoMessage() {}

func (x *HomeGroupRecordBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeGroupRecordBin.ProtoReflect.Descriptor instead.
func (*HomeGroupRecordBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{44}
}

func (m *HomeGroupRecordBin) GetDetail() isHomeGroupRecordBin_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *HomeGroupRecordBin) GetRacingGalleryInfoBin() *HomeRacingRecordBin {
	if x, ok := x.GetDetail().(*HomeGroupRecordBin_RacingGalleryInfoBin); ok {
		return x.RacingGalleryInfoBin
	}
	return nil
}

func (x *HomeGroupRecordBin) GetBalloonGalleryInfoBin() *HomeBalloonRecordBin {
	if x, ok := x.GetDetail().(*HomeGroupRecordBin_BalloonGalleryInfoBin); ok {
		return x.BalloonGalleryInfoBin
	}
	return nil
}

func (x *HomeGroupRecordBin) GetStakePlayInfoBin() *HomeStakeRecordBin {
	if x, ok := x.GetDetail().(*HomeGroupRecordBin_StakePlayInfoBin); ok {
		return x.StakePlayInfoBin
	}
	return nil
}

func (x *HomeGroupRecordBin) GetSeekFurniturePlayInfoBin() *HomeSeekFurnitureAllRecordBin {
	if x, ok := x.GetDetail().(*HomeGroupRecordBin_SeekFurniturePlayInfoBin); ok {
		return x.SeekFurniturePlayInfoBin
	}
	return nil
}

type isHomeGroupRecordBin_Detail interface {
	isHomeGroupRecordBin_Detail()
}

type HomeGroupRecordBin_RacingGalleryInfoBin struct {
	RacingGalleryInfoBin *HomeRacingRecordBin `protobuf:"bytes,11,opt,name=racing_gallery_info_bin,json=racingGalleryInfoBin,proto3,oneof"`
}

type HomeGroupRecordBin_BalloonGalleryInfoBin struct {
	BalloonGalleryInfoBin *HomeBalloonRecordBin `protobuf:"bytes,12,opt,name=balloon_gallery_info_bin,json=balloonGalleryInfoBin,proto3,oneof"`
}

type HomeGroupRecordBin_StakePlayInfoBin struct {
	StakePlayInfoBin *HomeStakeRecordBin `protobuf:"bytes,13,opt,name=stake_play_info_bin,json=stakePlayInfoBin,proto3,oneof"`
}

type HomeGroupRecordBin_SeekFurniturePlayInfoBin struct {
	SeekFurniturePlayInfoBin *HomeSeekFurnitureAllRecordBin `protobuf:"bytes,14,opt,name=seek_furniture_play_info_bin,json=seekFurniturePlayInfoBin,proto3,oneof"`
}

func (*HomeGroupRecordBin_RacingGalleryInfoBin) isHomeGroupRecordBin_Detail() {}

func (*HomeGroupRecordBin_BalloonGalleryInfoBin) isHomeGroupRecordBin_Detail() {}

func (*HomeGroupRecordBin_StakePlayInfoBin) isHomeGroupRecordBin_Detail() {}

func (*HomeGroupRecordBin_SeekFurniturePlayInfoBin) isHomeGroupRecordBin_Detail() {}

type HomeGroupRecordCompBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupRecordMapBin map[uint32]*HomeGroupRecordBin `protobuf:"bytes,1,rep,name=group_record_map_bin,json=groupRecordMapBin,proto3" json:"group_record_map_bin,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HomeGroupRecordCompBin) Reset() {
	*x = HomeGroupRecordCompBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeGroupRecordCompBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeGroupRecordCompBin) ProtoMessage() {}

func (x *HomeGroupRecordCompBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeGroupRecordCompBin.ProtoReflect.Descriptor instead.
func (*HomeGroupRecordCompBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{45}
}

func (x *HomeGroupRecordCompBin) GetGroupRecordMapBin() map[uint32]*HomeGroupRecordBin {
	if x != nil {
		return x.GroupRecordMapBin
	}
	return nil
}

type HomeBlueprintCompBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAllowFriendCopy bool `protobuf:"varint,1,opt,name=is_allow_friend_copy,json=isAllowFriendCopy,proto3" json:"is_allow_friend_copy,omitempty"`
}

func (x *HomeBlueprintCompBin) Reset() {
	*x = HomeBlueprintCompBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBlueprintCompBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBlueprintCompBin) ProtoMessage() {}

func (x *HomeBlueprintCompBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBlueprintCompBin.ProtoReflect.Descriptor instead.
func (*HomeBlueprintCompBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{46}
}

func (x *HomeBlueprintCompBin) GetIsAllowFriendCopy() bool {
	if x != nil {
		return x.IsAllowFriendCopy
	}
	return false
}

type HomeDataBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicBin           *HomeBasicCompBin       `protobuf:"bytes,1,opt,name=basic_bin,json=basicBin,proto3" json:"basic_bin,omitempty"`
	SceneBin           *HomeSceneCompBin       `protobuf:"bytes,2,opt,name=scene_bin,json=sceneBin,proto3" json:"scene_bin,omitempty"`
	OfflineMsgBin      *HomeOfflineMsgCompBin  `protobuf:"bytes,3,opt,name=offline_msg_bin,json=offlineMsgBin,proto3" json:"offline_msg_bin,omitempty"`
	FurnitureMakeBin   *HomeFurnitureMakeBin   `protobuf:"bytes,4,opt,name=furniture_make_bin,json=furnitureMakeBin,proto3" json:"furniture_make_bin,omitempty"`
	LimitedShopBin     *HomeLimitedShopBin     `protobuf:"bytes,5,opt,name=limited_shop_bin,json=limitedShopBin,proto3" json:"limited_shop_bin,omitempty"`
	PlantBin           *HomePlantBin           `protobuf:"bytes,6,opt,name=plant_bin,json=plantBin,proto3" json:"plant_bin,omitempty"`
	FishFarmingBin     *HomeFishFarmingBin     `protobuf:"bytes,7,opt,name=fish_farming_bin,json=fishFarmingBin,proto3" json:"fish_farming_bin,omitempty"`
	CustomFurnitureBin *HomeCustomFurnitureBin `protobuf:"bytes,8,opt,name=custom_furniture_bin,json=customFurnitureBin,proto3" json:"custom_furniture_bin,omitempty"`
	PictureFrameBin    *HomePictureFrameBin    `protobuf:"bytes,9,opt,name=picture_frame_bin,json=pictureFrameBin,proto3" json:"picture_frame_bin,omitempty"`
	GroupRecordBin     *HomeGroupRecordCompBin `protobuf:"bytes,10,opt,name=group_record_bin,json=groupRecordBin,proto3" json:"group_record_bin,omitempty"`
	BlueprintBin       *HomeBlueprintCompBin   `protobuf:"bytes,11,opt,name=blueprint_bin,json=blueprintBin,proto3" json:"blueprint_bin,omitempty"`
}

func (x *HomeDataBin) Reset() {
	*x = HomeDataBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeDataBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeDataBin) ProtoMessage() {}

func (x *HomeDataBin) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeDataBin.ProtoReflect.Descriptor instead.
func (*HomeDataBin) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{47}
}

func (x *HomeDataBin) GetBasicBin() *HomeBasicCompBin {
	if x != nil {
		return x.BasicBin
	}
	return nil
}

func (x *HomeDataBin) GetSceneBin() *HomeSceneCompBin {
	if x != nil {
		return x.SceneBin
	}
	return nil
}

func (x *HomeDataBin) GetOfflineMsgBin() *HomeOfflineMsgCompBin {
	if x != nil {
		return x.OfflineMsgBin
	}
	return nil
}

func (x *HomeDataBin) GetFurnitureMakeBin() *HomeFurnitureMakeBin {
	if x != nil {
		return x.FurnitureMakeBin
	}
	return nil
}

func (x *HomeDataBin) GetLimitedShopBin() *HomeLimitedShopBin {
	if x != nil {
		return x.LimitedShopBin
	}
	return nil
}

func (x *HomeDataBin) GetPlantBin() *HomePlantBin {
	if x != nil {
		return x.PlantBin
	}
	return nil
}

func (x *HomeDataBin) GetFishFarmingBin() *HomeFishFarmingBin {
	if x != nil {
		return x.FishFarmingBin
	}
	return nil
}

func (x *HomeDataBin) GetCustomFurnitureBin() *HomeCustomFurnitureBin {
	if x != nil {
		return x.CustomFurnitureBin
	}
	return nil
}

func (x *HomeDataBin) GetPictureFrameBin() *HomePictureFrameBin {
	if x != nil {
		return x.PictureFrameBin
	}
	return nil
}

func (x *HomeDataBin) GetGroupRecordBin() *HomeGroupRecordCompBin {
	if x != nil {
		return x.GroupRecordBin
	}
	return nil
}

func (x *HomeDataBin) GetBlueprintBin() *HomeBlueprintCompBin {
	if x != nil {
		return x.BlueprintBin
	}
	return nil
}

type HomeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DataVersion  uint32 `protobuf:"varint,2,opt,name=data_version,json=dataVersion,proto3" json:"data_version,omitempty"`
	BinData      []byte `protobuf:"bytes,3,opt,name=bin_data,json=binData,proto3" json:"bin_data,omitempty"`
	BlockEndTime int32  `protobuf:"varint,4,opt,name=block_end_time,json=blockEndTime,proto3" json:"block_end_time,omitempty"`
}

func (x *HomeData) Reset() {
	*x = HomeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_bin_home_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeData) ProtoMessage() {}

func (x *HomeData) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_bin_home_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeData.ProtoReflect.Descriptor instead.
func (*HomeData) Descriptor() ([]byte, []int) {
	return file_server_only_bin_home_proto_rawDescGZIP(), []int{48}
}

func (x *HomeData) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *HomeData) GetDataVersion() uint32 {
	if x != nil {
		return x.DataVersion
	}
	return 0
}

func (x *HomeData) GetBinData() []byte {
	if x != nil {
		return x.BinData
	}
	return nil
}

func (x *HomeData) GetBlockEndTime() int32 {
	if x != nil {
		return x.BlockEndTime
	}
	return 0
}

var File_server_only_bin_home_proto protoreflect.FileDescriptor

var file_server_only_bin_home_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x62, 0x69,
	0x6e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x2f, 0x62, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x42, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4e, 0x6f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x65, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x10,
	0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50,
	0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x72, 0x6f, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x6f,
	0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75,
	0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x75, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52,
	0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x1a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x48, 0x6f, 0x6d,
	0x65, 0x4e, 0x70, 0x63, 0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x50, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x72, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52,
	0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49,
	0x64, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c,
	0x42, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e, 0x69,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x72,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x52, 0x6f, 0x74, 0x22, 0x74, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x09,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69,
	0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x5f, 0x72, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e,
	0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x6f, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x11, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x5f, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f,
	0x72, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x52, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x48, 0x6f, 0x6d,
	0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x69, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4b, 0x0a, 0x15, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x13,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x75, 0x72, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x42, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50,
	0x6f, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x1a, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0xbf, 0x05, 0x0a, 0x0c, 0x48, 0x6f,
	0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x19, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x17, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x75, 0x72,
	0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x14, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x75, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f,
	0x6e, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x70, 0x63, 0x42, 0x69,
	0x6e, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x14, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x12, 0x66, 0x75,
	0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x42,
	0x69, 0x6e, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x1b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72,
	0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x69, 0x6e, 0x52, 0x18,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x75, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x75, 0x69, 0x74, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x18, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x53, 0x75, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbd, 0x04, 0x0a, 0x0c,
	0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x69, 0x6e, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x6f, 0x72, 0x6e, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x65, 0x74,
	0x42, 0x6f, 0x72, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x6e, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x07, 0x62, 0x6f, 0x72,
	0x6e, 0x50, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x6e, 0x5f, 0x72, 0x6f, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x07, 0x62, 0x6f, 0x72, 0x6e, 0x52, 0x6f,
	0x74, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x64,
	0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x69, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x69, 0x6e, 0x52, 0x09, 0x73, 0x74, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x09, 0x6d, 0x61,
	0x69, 0x6e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x6a, 0x69, 0x6e, 0x6e,
	0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x64, 0x6a,
	0x69, 0x6e, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6d, 0x70, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6d, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x67, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x67, 0x6d, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0d,
	0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x75,
	0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x42,
	0x69, 0x6e, 0x52, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x74, 0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x42, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x2a,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x73, 0x67, 0x42, 0x69, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x78, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x42, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x65, 0x42,
	0x69, 0x6e, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x75,
	0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x5e,
	0x0a, 0x1d, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75,
	0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x42, 0x69, 0x6e, 0x52, 0x19, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x1c, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x1b, 0x48,
	0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0x83,
	0x01, 0x0a, 0x18, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68,
	0x6f, 0x70, 0x4e, 0x50, 0x43, 0x50, 0x6f, 0x73, 0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0xb3, 0x02, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x11, 0x70, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x51, 0x0a,
	0x13, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68,
	0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x10,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x10, 0x6e, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x53, 0x68,
	0x6f, 0x70, 0x4e, 0x50, 0x43, 0x50, 0x6f, 0x73, 0x42, 0x69, 0x6e, 0x52, 0x0d, 0x6e, 0x70, 0x63,
	0x50, 0x6f, 0x73, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x48,
	0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x42, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x65,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x67, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68,
	0x6f, 0x6d, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x11,
	0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x48, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x69,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x0c, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0c, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x48,
	0x6f, 0x6d, 0x65, 0x46, 0x69, 0x73, 0x68, 0x70, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x69,
	0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x73, 0x68, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x69, 0x73, 0x68, 0x70, 0x6f, 0x6e,
	0x64, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72,
	0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x73, 0x68,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x48,
	0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x73,
	0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xff, 0x01, 0x0a, 0x18, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46,
	0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x19, 0x66, 0x69,
	0x73, 0x68, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x69, 0x73, 0x68, 0x70, 0x6f,
	0x6e, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x52, 0x16, 0x66, 0x69,
	0x73, 0x68, 0x70, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x21, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e,
	0x67, 0x42, 0x69, 0x6e, 0x52, 0x1c, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x46, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x75, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x69, 0x73, 0x68, 0x46, 0x61,
	0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x5f, 0x0a, 0x1c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x52,
	0x18, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69,
	0x6e, 0x67, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x1e, 0x48, 0x6f,
	0x6d, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xc2, 0x01, 0x0a, 0x19,
	0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72,
	0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x12, 0x73,
	0x75, 0x62, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x10,
	0x73, 0x75, 0x62, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x98, 0x01, 0x0a, 0x1c, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x5b,
	0x0a, 0x19, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x6e,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x69, 0x6e, 0x52, 0x16, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69,
	0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x16,
	0x48, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x6b, 0x0a, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x1c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x6e, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x19, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x16, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x6e, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x13, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79,
	0x0a, 0x13, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x62, 0x0a, 0x1d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x62, 0x69,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x19,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x16, 0x48, 0x6f,
	0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a,
	0x1a, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x59, 0x0a, 0x13, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x69, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xae, 0x01, 0x0a, 0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x69, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x5b, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f,
	0x6e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69,
	0x6e, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x16, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x56, 0x0a, 0x18, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x15, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x54,
	0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x1f, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b,
	0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa0, 0x01,
	0x0a, 0x1d, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x61, 0x0a,
	0x19, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65,
	0x6b, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x16, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x66, 0x0a, 0x1d, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69,
	0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65,
	0x4f, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xff, 0x02, 0x0a, 0x12, 0x48, 0x6f, 0x6d,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x12,
	0x53, 0x0a, 0x17, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x14,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x69, 0x6e, 0x12, 0x56, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x5f,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x69, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x12, 0x4a, 0x0a, 0x13,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x62, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e, 0x12, 0x66, 0x0a, 0x1c, 0x73, 0x65, 0x65, 0x6b,
	0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x65, 0x6b, 0x46,
	0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x65, 0x6b, 0x46, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xe0, 0x01, 0x0a, 0x16, 0x48,
	0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x42, 0x69, 0x6e, 0x12, 0x65, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x42,
	0x69, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x61,
	0x70, 0x42, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x61, 0x70, 0x42, 0x69, 0x6e, 0x1a, 0x5f, 0x0a, 0x16,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x61, 0x70, 0x42, 0x69,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42,
	0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a,
	0x14, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x42, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x70, 0x79, 0x22, 0xea, 0x05, 0x0a, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f,
	0x62, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x42,
	0x69, 0x6e, 0x52, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x09,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x42, 0x69, 0x6e, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x42,
	0x69, 0x6e, 0x12, 0x44, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x42, 0x69, 0x6e, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x49, 0x0a, 0x12, 0x66, 0x75, 0x72, 0x6e,
	0x69, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x10, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x6b, 0x65,
	0x42, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x69, 0x6e, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6e,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x10, 0x66, 0x69,
	0x73, 0x68, 0x5f, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x46, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x52,
	0x0e, 0x66, 0x69, 0x73, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12,
	0x4f, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x75, 0x72, 0x6e, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x12, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x72, 0x6e, 0x69, 0x74, 0x75, 0x72, 0x65, 0x42, 0x69, 0x6e,
	0x12, 0x46, 0x0a, 0x11, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x47, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x42, 0x69,
	0x6e, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x69,
	0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x62,
	0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x42, 0x69, 0x6e, 0x52, 0x0c, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x42, 0x69, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_bin_home_proto_rawDescOnce sync.Once
	file_server_only_bin_home_proto_rawDescData = file_server_only_bin_home_proto_rawDesc
)

func file_server_only_bin_home_proto_rawDescGZIP() []byte {
	file_server_only_bin_home_proto_rawDescOnce.Do(func() {
		file_server_only_bin_home_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_bin_home_proto_rawDescData)
	})
	return file_server_only_bin_home_proto_rawDescData
}

var file_server_only_bin_home_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_server_only_bin_home_proto_goTypes = []interface{}{
	(*HomeBasicCompBin)(nil),                // 0: proto.HomeBasicCompBin
	(*HomeFurnitureBin)(nil),                // 1: proto.HomeFurnitureBin
	(*HomeFurnitureSuiteBin)(nil),           // 2: proto.HomeFurnitureSuiteBin
	(*HomeNpcBin)(nil),                      // 3: proto.HomeNpcBin
	(*HomeAnimalBin)(nil),                   // 4: proto.HomeAnimalBin
	(*HomeBlockSubFieldBin)(nil),            // 5: proto.HomeBlockSubFieldBin
	(*HomeBlockFieldBin)(nil),               // 6: proto.HomeBlockFieldBin
	(*HomeFurnitureGroupBin)(nil),           // 7: proto.HomeFurnitureGroupBin
	(*HomeFurnitureCustomSuiteBin)(nil),     // 8: proto.HomeFurnitureCustomSuiteBin
	(*HomeBlockBin)(nil),                    // 9: proto.HomeBlockBin
	(*HomeSceneBin)(nil),                    // 10: proto.HomeSceneBin
	(*HomeModuleBin)(nil),                   // 11: proto.HomeModuleBin
	(*HomeSceneCompBin)(nil),                // 12: proto.HomeSceneCompBin
	(*HomeOfflineMsgExeBin)(nil),            // 13: proto.HomeOfflineMsgExeBin
	(*HomeOfflineMsgCompBin)(nil),           // 14: proto.HomeOfflineMsgCompBin
	(*HomeFurnitureMakeBin)(nil),            // 15: proto.HomeFurnitureMakeBin
	(*HomeLimitedShopPoolRecordBin)(nil),    // 16: proto.HomeLimitedShopPoolRecordBin
	(*HomeLimitedShopGoodsInfoBin)(nil),     // 17: proto.HomeLimitedShopGoodsInfoBin
	(*HomeLimitedShopNPCPosBin)(nil),        // 18: proto.HomeLimitedShopNPCPosBin
	(*HomeLimitedShopBin)(nil),              // 19: proto.HomeLimitedShopBin
	(*HomePlantSubFieldBin)(nil),            // 20: proto.HomePlantSubFieldBin
	(*HomePlantFieldBin)(nil),               // 21: proto.HomePlantFieldBin
	(*HomePlantBin)(nil),                    // 22: proto.HomePlantBin
	(*HomeFishpondFarmingBin)(nil),          // 23: proto.HomeFishpondFarmingBin
	(*HomeScenePointFishFarmingBin)(nil),    // 24: proto.HomeScenePointFishFarmingBin
	(*HomeModuleFishFarmingBin)(nil),        // 25: proto.HomeModuleFishFarmingBin
	(*HomeFishFarmingBin)(nil),              // 26: proto.HomeFishFarmingBin
	(*HomeCustomFurnitureNodeInfoBin)(nil),  // 27: proto.HomeCustomFurnitureNodeInfoBin
	(*HomeOneCustomFurnitureBin)(nil),       // 28: proto.HomeOneCustomFurnitureBin
	(*HomeModuleCustomFurnitureBin)(nil),    // 29: proto.HomeModuleCustomFurnitureBin
	(*HomeCustomFurnitureBin)(nil),          // 30: proto.HomeCustomFurnitureBin
	(*HomeOnePictureFrameBin)(nil),          // 31: proto.HomeOnePictureFrameBin
	(*HomeModulePictureFrameBin)(nil),       // 32: proto.HomeModulePictureFrameBin
	(*HomePictureFrameBin)(nil),             // 33: proto.HomePictureFrameBin
	(*HomeGroupPlayerInfoBin)(nil),          // 34: proto.HomeGroupPlayerInfoBin
	(*HomeRacingGalleryRecordBin)(nil),      // 35: proto.HomeRacingGalleryRecordBin
	(*HomeRacingRecordBin)(nil),             // 36: proto.HomeRacingRecordBin
	(*HomeBalloonGalleryRecordBin)(nil),     // 37: proto.HomeBalloonGalleryRecordBin
	(*HomeBalloonRecordBin)(nil),            // 38: proto.HomeBalloonRecordBin
	(*HomeStakePlayRecordBin)(nil),          // 39: proto.HomeStakePlayRecordBin
	(*HomeStakeRecordBin)(nil),              // 40: proto.HomeStakeRecordBin
	(*HomeSeekFurniturePlayerScoreBin)(nil), // 41: proto.HomeSeekFurniturePlayerScoreBin
	(*HomeSeekFurnitureOneRecordBin)(nil),   // 42: proto.HomeSeekFurnitureOneRecordBin
	(*HomeSeekFurnitureAllRecordBin)(nil),   // 43: proto.HomeSeekFurnitureAllRecordBin
	(*HomeGroupRecordBin)(nil),              // 44: proto.HomeGroupRecordBin
	(*HomeGroupRecordCompBin)(nil),          // 45: proto.HomeGroupRecordCompBin
	(*HomeBlueprintCompBin)(nil),            // 46: proto.HomeBlueprintCompBin
	(*HomeDataBin)(nil),                     // 47: proto.HomeDataBin
	(*HomeData)(nil),                        // 48: proto.HomeData
	nil,                                     // 49: proto.HomeGroupRecordCompBin.GroupRecordMapBinEntry
	(*VectorBin)(nil),                       // 50: proto.VectorBin
	(*SceneBin)(nil),                        // 51: proto.SceneBin
	(*HomeOfflineMsgBin)(nil),               // 52: proto.HomeOfflineMsgBin
	(*FurnitureMakeSlotsBin)(nil),           // 53: proto.FurnitureMakeSlotsBin
	(*ProfilePictureBin)(nil),               // 54: proto.ProfilePictureBin
}
var file_server_only_bin_home_proto_depIdxs = []int32{
	50, // 0: proto.HomeFurnitureBin.spawn_pos:type_name -> proto.VectorBin
	50, // 1: proto.HomeFurnitureBin.spawn_rot:type_name -> proto.VectorBin
	50, // 2: proto.HomeFurnitureSuiteBin.spawn_pos:type_name -> proto.VectorBin
	50, // 3: proto.HomeNpcBin.spawn_pos:type_name -> proto.VectorBin
	50, // 4: proto.HomeNpcBin.spawn_rot:type_name -> proto.VectorBin
	50, // 5: proto.HomeAnimalBin.spawn_pos:type_name -> proto.VectorBin
	50, // 6: proto.HomeAnimalBin.spawn_rot:type_name -> proto.VectorBin
	50, // 7: proto.HomeBlockSubFieldBin.spawn_pos:type_name -> proto.VectorBin
	50, // 8: proto.HomeBlockSubFieldBin.spawn_rot:type_name -> proto.VectorBin
	50, // 9: proto.HomeBlockFieldBin.spawn_pos:type_name -> proto.VectorBin
	50, // 10: proto.HomeBlockFieldBin.spawn_rot:type_name -> proto.VectorBin
	5,  // 11: proto.HomeBlockFieldBin.sub_field_list:type_name -> proto.HomeBlockSubFieldBin
	1,  // 12: proto.HomeFurnitureGroupBin.virtual_furniure_list:type_name -> proto.HomeFurnitureBin
	50, // 13: proto.HomeFurnitureCustomSuiteBin.spawn_pos:type_name -> proto.VectorBin
	1,  // 14: proto.HomeBlockBin.persistent_furniture_list:type_name -> proto.HomeFurnitureBin
	1,  // 15: proto.HomeBlockBin.deploy_furniure_list:type_name -> proto.HomeFurnitureBin
	3,  // 16: proto.HomeBlockBin.deploy_npc_list:type_name -> proto.HomeNpcBin
	2,  // 17: proto.HomeBlockBin.furniture_suite_list:type_name -> proto.HomeFurnitureSuiteBin
	4,  // 18: proto.HomeBlockBin.deploy_animal_list:type_name -> proto.HomeAnimalBin
	6,  // 19: proto.HomeBlockBin.deploy_field_list:type_name -> proto.HomeBlockFieldBin
	7,  // 20: proto.HomeBlockBin.deploy_furniture_group_list:type_name -> proto.HomeFurnitureGroupBin
	8,  // 21: proto.HomeBlockBin.furniture_custom_suite_list:type_name -> proto.HomeFurnitureCustomSuiteBin
	51, // 22: proto.HomeSceneBin.scene_bin:type_name -> proto.SceneBin
	9,  // 23: proto.HomeSceneBin.block_bin_list:type_name -> proto.HomeBlockBin
	50, // 24: proto.HomeSceneBin.born_pos:type_name -> proto.VectorBin
	50, // 25: proto.HomeSceneBin.born_rot:type_name -> proto.VectorBin
	1,  // 26: proto.HomeSceneBin.door_list:type_name -> proto.HomeFurnitureBin
	1,  // 27: proto.HomeSceneBin.stair_list:type_name -> proto.HomeFurnitureBin
	1,  // 28: proto.HomeSceneBin.main_house:type_name -> proto.HomeFurnitureBin
	50, // 29: proto.HomeSceneBin.djinn_pos:type_name -> proto.VectorBin
	10, // 30: proto.HomeModuleBin.scene_bin_list:type_name -> proto.HomeSceneBin
	11, // 31: proto.HomeSceneCompBin.module_bin_list:type_name -> proto.HomeModuleBin
	52, // 32: proto.HomeOfflineMsgExeBin.msg:type_name -> proto.HomeOfflineMsgBin
	13, // 33: proto.HomeOfflineMsgCompBin.next_offline_msg_list:type_name -> proto.HomeOfflineMsgExeBin
	53, // 34: proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list:type_name -> proto.FurnitureMakeSlotsBin
	16, // 35: proto.HomeLimitedShopBin.pool_record_bin_list:type_name -> proto.HomeLimitedShopPoolRecordBin
	17, // 36: proto.HomeLimitedShopBin.goods_info_bin_list:type_name -> proto.HomeLimitedShopGoodsInfoBin
	18, // 37: proto.HomeLimitedShopBin.npc_pos_bin_list:type_name -> proto.HomeLimitedShopNPCPosBin
	20, // 38: proto.HomePlantFieldBin.sub_field_bin_list:type_name -> proto.HomePlantSubFieldBin
	21, // 39: proto.HomePlantBin.field_bin_list:type_name -> proto.HomePlantFieldBin
	23, // 40: proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list:type_name -> proto.HomeFishpondFarmingBin
	24, // 41: proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list:type_name -> proto.HomeScenePointFishFarmingBin
	25, // 42: proto.HomeFishFarmingBin.module_fish_farming_bin_list:type_name -> proto.HomeModuleFishFarmingBin
	27, // 43: proto.HomeOneCustomFurnitureBin.sub_furniture_list:type_name -> proto.HomeCustomFurnitureNodeInfoBin
	28, // 44: proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list:type_name -> proto.HomeOneCustomFurnitureBin
	29, // 45: proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list:type_name -> proto.HomeModuleCustomFurnitureBin
	31, // 46: proto.HomeModulePictureFrameBin.picture_frame_bin_list:type_name -> proto.HomeOnePictureFrameBin
	32, // 47: proto.HomePictureFrameBin.module_picture_frame_bin_list:type_name -> proto.HomeModulePictureFrameBin
	54, // 48: proto.HomeGroupPlayerInfoBin.profile_picture:type_name -> proto.ProfilePictureBin
	34, // 49: proto.HomeRacingGalleryRecordBin.player_info:type_name -> proto.HomeGroupPlayerInfoBin
	35, // 50: proto.HomeRacingRecordBin.record_list:type_name -> proto.HomeRacingGalleryRecordBin
	34, // 51: proto.HomeBalloonGalleryRecordBin.player_info:type_name -> proto.HomeGroupPlayerInfoBin
	37, // 52: proto.HomeBalloonRecordBin.record_list:type_name -> proto.HomeBalloonGalleryRecordBin
	34, // 53: proto.HomeStakePlayRecordBin.engaged_player_info_list:type_name -> proto.HomeGroupPlayerInfoBin
	39, // 54: proto.HomeStakeRecordBin.record_list:type_name -> proto.HomeStakePlayRecordBin
	34, // 55: proto.HomeSeekFurniturePlayerScoreBin.player_info:type_name -> proto.HomeGroupPlayerInfoBin
	41, // 56: proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list:type_name -> proto.HomeSeekFurniturePlayerScoreBin
	42, // 57: proto.HomeSeekFurnitureAllRecordBin.record_list:type_name -> proto.HomeSeekFurnitureOneRecordBin
	36, // 58: proto.HomeGroupRecordBin.racing_gallery_info_bin:type_name -> proto.HomeRacingRecordBin
	38, // 59: proto.HomeGroupRecordBin.balloon_gallery_info_bin:type_name -> proto.HomeBalloonRecordBin
	40, // 60: proto.HomeGroupRecordBin.stake_play_info_bin:type_name -> proto.HomeStakeRecordBin
	43, // 61: proto.HomeGroupRecordBin.seek_furniture_play_info_bin:type_name -> proto.HomeSeekFurnitureAllRecordBin
	49, // 62: proto.HomeGroupRecordCompBin.group_record_map_bin:type_name -> proto.HomeGroupRecordCompBin.GroupRecordMapBinEntry
	0,  // 63: proto.HomeDataBin.basic_bin:type_name -> proto.HomeBasicCompBin
	12, // 64: proto.HomeDataBin.scene_bin:type_name -> proto.HomeSceneCompBin
	14, // 65: proto.HomeDataBin.offline_msg_bin:type_name -> proto.HomeOfflineMsgCompBin
	15, // 66: proto.HomeDataBin.furniture_make_bin:type_name -> proto.HomeFurnitureMakeBin
	19, // 67: proto.HomeDataBin.limited_shop_bin:type_name -> proto.HomeLimitedShopBin
	22, // 68: proto.HomeDataBin.plant_bin:type_name -> proto.HomePlantBin
	26, // 69: proto.HomeDataBin.fish_farming_bin:type_name -> proto.HomeFishFarmingBin
	30, // 70: proto.HomeDataBin.custom_furniture_bin:type_name -> proto.HomeCustomFurnitureBin
	33, // 71: proto.HomeDataBin.picture_frame_bin:type_name -> proto.HomePictureFrameBin
	45, // 72: proto.HomeDataBin.group_record_bin:type_name -> proto.HomeGroupRecordCompBin
	46, // 73: proto.HomeDataBin.blueprint_bin:type_name -> proto.HomeBlueprintCompBin
	44, // 74: proto.HomeGroupRecordCompBin.GroupRecordMapBinEntry.value:type_name -> proto.HomeGroupRecordBin
	75, // [75:75] is the sub-list for method output_type
	75, // [75:75] is the sub-list for method input_type
	75, // [75:75] is the sub-list for extension type_name
	75, // [75:75] is the sub-list for extension extendee
	0,  // [0:75] is the sub-list for field type_name
}

func init() { file_server_only_bin_home_proto_init() }
func file_server_only_bin_home_proto_init() {
	if File_server_only_bin_home_proto != nil {
		return
	}
	file_server_only_bin_common_server_proto_init()
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_bin_home_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBasicCompBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFurnitureBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFurnitureSuiteBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeNpcBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeAnimalBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBlockSubFieldBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBlockFieldBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFurnitureGroupBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFurnitureCustomSuiteBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBlockBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSceneBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeModuleBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSceneCompBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeOfflineMsgExeBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeOfflineMsgCompBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFurnitureMakeBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLimitedShopPoolRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLimitedShopGoodsInfoBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLimitedShopNPCPosBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLimitedShopBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomePlantSubFieldBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomePlantFieldBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomePlantBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFishpondFarmingBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeScenePointFishFarmingBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeModuleFishFarmingBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFishFarmingBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeCustomFurnitureNodeInfoBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeOneCustomFurnitureBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeModuleCustomFurnitureBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeCustomFurnitureBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeOnePictureFrameBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeModulePictureFrameBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomePictureFrameBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeGroupPlayerInfoBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRacingGalleryRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeRacingRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBalloonGalleryRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBalloonRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeStakePlayRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeStakeRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSeekFurniturePlayerScoreBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSeekFurnitureOneRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSeekFurnitureAllRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeGroupRecordBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeGroupRecordCompBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBlueprintCompBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeDataBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_bin_home_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_only_bin_home_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*HomeGroupRecordBin_RacingGalleryInfoBin)(nil),
		(*HomeGroupRecordBin_BalloonGalleryInfoBin)(nil),
		(*HomeGroupRecordBin_StakePlayInfoBin)(nil),
		(*HomeGroupRecordBin_SeekFurniturePlayInfoBin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_bin_home_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_bin_home_proto_goTypes,
		DependencyIndexes: file_server_only_bin_home_proto_depIdxs,
		MessageInfos:      file_server_only_bin_home_proto_msgTypes,
	}.Build()
	File_server_only_bin_home_proto = out.File
	file_server_only_bin_home_proto_rawDesc = nil
	file_server_only_bin_home_proto_goTypes = nil
	file_server_only_bin_home_proto_depIdxs = nil
}
