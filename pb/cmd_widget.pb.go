// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_widget.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LunchBoxSlotType int32

const (
	LunchBoxSlotType_LUNCH_BOX_SLOT_NONE   LunchBoxSlotType = 0
	LunchBoxSlotType_LUNCH_BOX_SLOT_REVIVE LunchBoxSlotType = 1
	LunchBoxSlotType_LUNCH_BOX_SLOT_HEAL   LunchBoxSlotType = 2
)

// Enum value maps for LunchBoxSlotType.
var (
	LunchBoxSlotType_name = map[int32]string{
		0: "LUNCH_BOX_SLOT_NONE",
		1: "LUNCH_BOX_SLOT_REVIVE",
		2: "LUNCH_BOX_SLOT_HEAL",
	}
	LunchBoxSlotType_value = map[string]int32{
		"LUNCH_BOX_SLOT_NONE":   0,
		"LUNCH_BOX_SLOT_REVIVE": 1,
		"LUNCH_BOX_SLOT_HEAL":   2,
	}
)

func (x LunchBoxSlotType) Enum() *LunchBoxSlotType {
	p := new(LunchBoxSlotType)
	*p = x
	return p
}

func (x LunchBoxSlotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LunchBoxSlotType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[0].Descriptor()
}

func (LunchBoxSlotType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[0]
}

func (x LunchBoxSlotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LunchBoxSlotType.Descriptor instead.
func (LunchBoxSlotType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{0}
}

type WidgetSlotTag int32

const (
	WidgetSlotTag_WIDGET_SLOT_QUICK_USE     WidgetSlotTag = 0
	WidgetSlotTag_WIDGET_SLOT_ATTACH_AVATAR WidgetSlotTag = 1
)

// Enum value maps for WidgetSlotTag.
var (
	WidgetSlotTag_name = map[int32]string{
		0: "WIDGET_SLOT_QUICK_USE",
		1: "WIDGET_SLOT_ATTACH_AVATAR",
	}
	WidgetSlotTag_value = map[string]int32{
		"WIDGET_SLOT_QUICK_USE":     0,
		"WIDGET_SLOT_ATTACH_AVATAR": 1,
	}
)

func (x WidgetSlotTag) Enum() *WidgetSlotTag {
	p := new(WidgetSlotTag)
	*p = x
	return p
}

func (x WidgetSlotTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetSlotTag) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[1].Descriptor()
}

func (WidgetSlotTag) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[1]
}

func (x WidgetSlotTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetSlotTag.Descriptor instead.
func (WidgetSlotTag) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{1}
}

type WidgetSlotOp int32

const (
	WidgetSlotOp_WIDGET_SLOT_OP_ATTACH WidgetSlotOp = 0
	WidgetSlotOp_WIDGET_SLOT_OP_DETACH WidgetSlotOp = 1
)

// Enum value maps for WidgetSlotOp.
var (
	WidgetSlotOp_name = map[int32]string{
		0: "WIDGET_SLOT_OP_ATTACH",
		1: "WIDGET_SLOT_OP_DETACH",
	}
	WidgetSlotOp_value = map[string]int32{
		"WIDGET_SLOT_OP_ATTACH": 0,
		"WIDGET_SLOT_OP_DETACH": 1,
	}
)

func (x WidgetSlotOp) Enum() *WidgetSlotOp {
	p := new(WidgetSlotOp)
	*p = x
	return p
}

func (x WidgetSlotOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetSlotOp) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[2].Descriptor()
}

func (WidgetSlotOp) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[2]
}

func (x WidgetSlotOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetSlotOp.Descriptor instead.
func (WidgetSlotOp) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{2}
}

type WidgetCreatorOpType int32

const (
	WidgetCreatorOpType_WIDGET_CREATOR_TYPE_NONE               WidgetCreatorOpType = 0
	WidgetCreatorOpType_WIDGET_CREATOR_TYPE_RETRACT            WidgetCreatorOpType = 1
	WidgetCreatorOpType_WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE WidgetCreatorOpType = 2
)

// Enum value maps for WidgetCreatorOpType.
var (
	WidgetCreatorOpType_name = map[int32]string{
		0: "WIDGET_CREATOR_TYPE_NONE",
		1: "WIDGET_CREATOR_TYPE_RETRACT",
		2: "WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE",
	}
	WidgetCreatorOpType_value = map[string]int32{
		"WIDGET_CREATOR_TYPE_NONE":               0,
		"WIDGET_CREATOR_TYPE_RETRACT":            1,
		"WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE": 2,
	}
)

func (x WidgetCreatorOpType) Enum() *WidgetCreatorOpType {
	p := new(WidgetCreatorOpType)
	*p = x
	return p
}

func (x WidgetCreatorOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetCreatorOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[3].Descriptor()
}

func (WidgetCreatorOpType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[3]
}

func (x WidgetCreatorOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetCreatorOpType.Descriptor instead.
func (WidgetCreatorOpType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{3}
}

type WIDGET_EXTRA_CD_TYPE int32

const (
	WIDGET_EXTRA_CD_TYPE_WIDGET_EXTRA_CD_TYPE_NONE           WIDGET_EXTRA_CD_TYPE = 0
	WIDGET_EXTRA_CD_TYPE_WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED WIDGET_EXTRA_CD_TYPE = 1
)

// Enum value maps for WIDGET_EXTRA_CD_TYPE.
var (
	WIDGET_EXTRA_CD_TYPE_name = map[int32]string{
		0: "WIDGET_EXTRA_CD_TYPE_NONE",
		1: "WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED",
	}
	WIDGET_EXTRA_CD_TYPE_value = map[string]int32{
		"WIDGET_EXTRA_CD_TYPE_NONE":           0,
		"WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED": 1,
	}
)

func (x WIDGET_EXTRA_CD_TYPE) Enum() *WIDGET_EXTRA_CD_TYPE {
	p := new(WIDGET_EXTRA_CD_TYPE)
	*p = x
	return p
}

func (x WIDGET_EXTRA_CD_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WIDGET_EXTRA_CD_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[4].Descriptor()
}

func (WIDGET_EXTRA_CD_TYPE) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[4]
}

func (x WIDGET_EXTRA_CD_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WIDGET_EXTRA_CD_TYPE.Descriptor instead.
func (WIDGET_EXTRA_CD_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{4}
}

type FireworksReformParamType int32

const (
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_NONE     FireworksReformParamType = 0
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_COLOR    FireworksReformParamType = 1
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_HEIGHT   FireworksReformParamType = 2
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_SIZE     FireworksReformParamType = 3
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_DENSITY  FireworksReformParamType = 4
	FireworksReformParamType_FIREWORKS_REFORM_PARAM_ROTATION FireworksReformParamType = 5
)

// Enum value maps for FireworksReformParamType.
var (
	FireworksReformParamType_name = map[int32]string{
		0: "FIREWORKS_REFORM_PARAM_NONE",
		1: "FIREWORKS_REFORM_PARAM_COLOR",
		2: "FIREWORKS_REFORM_PARAM_HEIGHT",
		3: "FIREWORKS_REFORM_PARAM_SIZE",
		4: "FIREWORKS_REFORM_PARAM_DENSITY",
		5: "FIREWORKS_REFORM_PARAM_ROTATION",
	}
	FireworksReformParamType_value = map[string]int32{
		"FIREWORKS_REFORM_PARAM_NONE":     0,
		"FIREWORKS_REFORM_PARAM_COLOR":    1,
		"FIREWORKS_REFORM_PARAM_HEIGHT":   2,
		"FIREWORKS_REFORM_PARAM_SIZE":     3,
		"FIREWORKS_REFORM_PARAM_DENSITY":  4,
		"FIREWORKS_REFORM_PARAM_ROTATION": 5,
	}
)

func (x FireworksReformParamType) Enum() *FireworksReformParamType {
	p := new(FireworksReformParamType)
	*p = x
	return p
}

func (x FireworksReformParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FireworksReformParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[5].Descriptor()
}

func (FireworksReformParamType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[5]
}

func (x FireworksReformParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FireworksReformParamType.Descriptor instead.
func (FireworksReformParamType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{5}
}

type FireworksLaunchParamType int32

const (
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_NONE          FireworksLaunchParamType = 0
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_REPEAT        FireworksLaunchParamType = 1
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_INTEVAL       FireworksLaunchParamType = 2
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_DELAY         FireworksLaunchParamType = 3
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL FireworksLaunchParamType = 4
	FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_MAX           FireworksLaunchParamType = 5
)

// Enum value maps for FireworksLaunchParamType.
var (
	FireworksLaunchParamType_name = map[int32]string{
		0: "FIREWORKS_LAUNCH_PARAM_NONE",
		1: "FIREWORKS_LAUNCH_PARAM_REPEAT",
		2: "FIREWORKS_LAUNCH_PARAM_INTEVAL",
		3: "FIREWORKS_LAUNCH_PARAM_DELAY",
		4: "FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL",
		5: "FIREWORKS_LAUNCH_PARAM_MAX",
	}
	FireworksLaunchParamType_value = map[string]int32{
		"FIREWORKS_LAUNCH_PARAM_NONE":          0,
		"FIREWORKS_LAUNCH_PARAM_REPEAT":        1,
		"FIREWORKS_LAUNCH_PARAM_INTEVAL":       2,
		"FIREWORKS_LAUNCH_PARAM_DELAY":         3,
		"FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL": 4,
		"FIREWORKS_LAUNCH_PARAM_MAX":           5,
	}
)

func (x FireworksLaunchParamType) Enum() *FireworksLaunchParamType {
	p := new(FireworksLaunchParamType)
	*p = x
	return p
}

func (x FireworksLaunchParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FireworksLaunchParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[6].Descriptor()
}

func (FireworksLaunchParamType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[6]
}

func (x FireworksLaunchParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FireworksLaunchParamType.Descriptor instead.
func (FireworksLaunchParamType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{6}
}

type AnchorPointDataNotify_CmdId int32

const (
	AnchorPointDataNotify_NONE             AnchorPointDataNotify_CmdId = 0
	AnchorPointDataNotify_CMD_ID           AnchorPointDataNotify_CmdId = 4276
	AnchorPointDataNotify_ENET_CHANNEL_ID  AnchorPointDataNotify_CmdId = 0
	AnchorPointDataNotify_ENET_IS_RELIABLE AnchorPointDataNotify_CmdId = 1
)

// Enum value maps for AnchorPointDataNotify_CmdId.
var (
	AnchorPointDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4276: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AnchorPointDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4276,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AnchorPointDataNotify_CmdId) Enum() *AnchorPointDataNotify_CmdId {
	p := new(AnchorPointDataNotify_CmdId)
	*p = x
	return p
}

func (x AnchorPointDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnchorPointDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[7].Descriptor()
}

func (AnchorPointDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[7]
}

func (x AnchorPointDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnchorPointDataNotify_CmdId.Descriptor instead.
func (AnchorPointDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{1, 0}
}

type AnchorPointOpReq_CmdId int32

const (
	AnchorPointOpReq_NONE             AnchorPointOpReq_CmdId = 0
	AnchorPointOpReq_CMD_ID           AnchorPointOpReq_CmdId = 4257
	AnchorPointOpReq_ENET_CHANNEL_ID  AnchorPointOpReq_CmdId = 0
	AnchorPointOpReq_ENET_IS_RELIABLE AnchorPointOpReq_CmdId = 1
	AnchorPointOpReq_IS_ALLOW_CLIENT  AnchorPointOpReq_CmdId = 1
)

// Enum value maps for AnchorPointOpReq_CmdId.
var (
	AnchorPointOpReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4257: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AnchorPointOpReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4257,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AnchorPointOpReq_CmdId) Enum() *AnchorPointOpReq_CmdId {
	p := new(AnchorPointOpReq_CmdId)
	*p = x
	return p
}

func (x AnchorPointOpReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnchorPointOpReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[8].Descriptor()
}

func (AnchorPointOpReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[8]
}

func (x AnchorPointOpReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnchorPointOpReq_CmdId.Descriptor instead.
func (AnchorPointOpReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{2, 0}
}

type AnchorPointOpReq_AnchorPointOpType int32

const (
	AnchorPointOpReq_ANCHOR_POINT_OP_NONE     AnchorPointOpReq_AnchorPointOpType = 0
	AnchorPointOpReq_ANCHOR_POINT_OP_TELEPORT AnchorPointOpReq_AnchorPointOpType = 1
	AnchorPointOpReq_ANCHOR_POINT_OP_REMOVE   AnchorPointOpReq_AnchorPointOpType = 2
)

// Enum value maps for AnchorPointOpReq_AnchorPointOpType.
var (
	AnchorPointOpReq_AnchorPointOpType_name = map[int32]string{
		0: "ANCHOR_POINT_OP_NONE",
		1: "ANCHOR_POINT_OP_TELEPORT",
		2: "ANCHOR_POINT_OP_REMOVE",
	}
	AnchorPointOpReq_AnchorPointOpType_value = map[string]int32{
		"ANCHOR_POINT_OP_NONE":     0,
		"ANCHOR_POINT_OP_TELEPORT": 1,
		"ANCHOR_POINT_OP_REMOVE":   2,
	}
)

func (x AnchorPointOpReq_AnchorPointOpType) Enum() *AnchorPointOpReq_AnchorPointOpType {
	p := new(AnchorPointOpReq_AnchorPointOpType)
	*p = x
	return p
}

func (x AnchorPointOpReq_AnchorPointOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnchorPointOpReq_AnchorPointOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[9].Descriptor()
}

func (AnchorPointOpReq_AnchorPointOpType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[9]
}

func (x AnchorPointOpReq_AnchorPointOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnchorPointOpReq_AnchorPointOpType.Descriptor instead.
func (AnchorPointOpReq_AnchorPointOpType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{2, 1}
}

type AnchorPointOpRsp_CmdId int32

const (
	AnchorPointOpRsp_NONE             AnchorPointOpRsp_CmdId = 0
	AnchorPointOpRsp_CMD_ID           AnchorPointOpRsp_CmdId = 4252
	AnchorPointOpRsp_ENET_CHANNEL_ID  AnchorPointOpRsp_CmdId = 0
	AnchorPointOpRsp_ENET_IS_RELIABLE AnchorPointOpRsp_CmdId = 1
)

// Enum value maps for AnchorPointOpRsp_CmdId.
var (
	AnchorPointOpRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4252: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AnchorPointOpRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4252,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AnchorPointOpRsp_CmdId) Enum() *AnchorPointOpRsp_CmdId {
	p := new(AnchorPointOpRsp_CmdId)
	*p = x
	return p
}

func (x AnchorPointOpRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnchorPointOpRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[10].Descriptor()
}

func (AnchorPointOpRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[10]
}

func (x AnchorPointOpRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnchorPointOpRsp_CmdId.Descriptor instead.
func (AnchorPointOpRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{3, 0}
}

type SetUpLunchBoxWidgetReq_CmdId int32

const (
	SetUpLunchBoxWidgetReq_NONE             SetUpLunchBoxWidgetReq_CmdId = 0
	SetUpLunchBoxWidgetReq_CMD_ID           SetUpLunchBoxWidgetReq_CmdId = 4272
	SetUpLunchBoxWidgetReq_ENET_CHANNEL_ID  SetUpLunchBoxWidgetReq_CmdId = 0
	SetUpLunchBoxWidgetReq_ENET_IS_RELIABLE SetUpLunchBoxWidgetReq_CmdId = 1
	SetUpLunchBoxWidgetReq_IS_ALLOW_CLIENT  SetUpLunchBoxWidgetReq_CmdId = 1
)

// Enum value maps for SetUpLunchBoxWidgetReq_CmdId.
var (
	SetUpLunchBoxWidgetReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4272: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetUpLunchBoxWidgetReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4272,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetUpLunchBoxWidgetReq_CmdId) Enum() *SetUpLunchBoxWidgetReq_CmdId {
	p := new(SetUpLunchBoxWidgetReq_CmdId)
	*p = x
	return p
}

func (x SetUpLunchBoxWidgetReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetUpLunchBoxWidgetReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[11].Descriptor()
}

func (SetUpLunchBoxWidgetReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[11]
}

func (x SetUpLunchBoxWidgetReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetUpLunchBoxWidgetReq_CmdId.Descriptor instead.
func (SetUpLunchBoxWidgetReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{5, 0}
}

type SetUpLunchBoxWidgetRsp_CmdId int32

const (
	SetUpLunchBoxWidgetRsp_NONE             SetUpLunchBoxWidgetRsp_CmdId = 0
	SetUpLunchBoxWidgetRsp_CMD_ID           SetUpLunchBoxWidgetRsp_CmdId = 4294
	SetUpLunchBoxWidgetRsp_ENET_CHANNEL_ID  SetUpLunchBoxWidgetRsp_CmdId = 0
	SetUpLunchBoxWidgetRsp_ENET_IS_RELIABLE SetUpLunchBoxWidgetRsp_CmdId = 1
)

// Enum value maps for SetUpLunchBoxWidgetRsp_CmdId.
var (
	SetUpLunchBoxWidgetRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4294: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetUpLunchBoxWidgetRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4294,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetUpLunchBoxWidgetRsp_CmdId) Enum() *SetUpLunchBoxWidgetRsp_CmdId {
	p := new(SetUpLunchBoxWidgetRsp_CmdId)
	*p = x
	return p
}

func (x SetUpLunchBoxWidgetRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetUpLunchBoxWidgetRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[12].Descriptor()
}

func (SetUpLunchBoxWidgetRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[12]
}

func (x SetUpLunchBoxWidgetRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetUpLunchBoxWidgetRsp_CmdId.Descriptor instead.
func (SetUpLunchBoxWidgetRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{6, 0}
}

type QuickUseWidgetReq_CmdId int32

const (
	QuickUseWidgetReq_NONE             QuickUseWidgetReq_CmdId = 0
	QuickUseWidgetReq_CMD_ID           QuickUseWidgetReq_CmdId = 4299
	QuickUseWidgetReq_ENET_CHANNEL_ID  QuickUseWidgetReq_CmdId = 0
	QuickUseWidgetReq_ENET_IS_RELIABLE QuickUseWidgetReq_CmdId = 1
	QuickUseWidgetReq_IS_ALLOW_CLIENT  QuickUseWidgetReq_CmdId = 1
)

// Enum value maps for QuickUseWidgetReq_CmdId.
var (
	QuickUseWidgetReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4299: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	QuickUseWidgetReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4299,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x QuickUseWidgetReq_CmdId) Enum() *QuickUseWidgetReq_CmdId {
	p := new(QuickUseWidgetReq_CmdId)
	*p = x
	return p
}

func (x QuickUseWidgetReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuickUseWidgetReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[13].Descriptor()
}

func (QuickUseWidgetReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[13]
}

func (x QuickUseWidgetReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuickUseWidgetReq_CmdId.Descriptor instead.
func (QuickUseWidgetReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{15, 0}
}

type QuickUseWidgetRsp_CmdId int32

const (
	QuickUseWidgetRsp_NONE             QuickUseWidgetRsp_CmdId = 0
	QuickUseWidgetRsp_CMD_ID           QuickUseWidgetRsp_CmdId = 4270
	QuickUseWidgetRsp_ENET_CHANNEL_ID  QuickUseWidgetRsp_CmdId = 0
	QuickUseWidgetRsp_ENET_IS_RELIABLE QuickUseWidgetRsp_CmdId = 1
)

// Enum value maps for QuickUseWidgetRsp_CmdId.
var (
	QuickUseWidgetRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4270: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	QuickUseWidgetRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4270,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x QuickUseWidgetRsp_CmdId) Enum() *QuickUseWidgetRsp_CmdId {
	p := new(QuickUseWidgetRsp_CmdId)
	*p = x
	return p
}

func (x QuickUseWidgetRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuickUseWidgetRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[14].Descriptor()
}

func (QuickUseWidgetRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[14]
}

func (x QuickUseWidgetRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuickUseWidgetRsp_CmdId.Descriptor instead.
func (QuickUseWidgetRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{16, 0}
}

type WidgetCoolDownNotify_CmdId int32

const (
	WidgetCoolDownNotify_NONE             WidgetCoolDownNotify_CmdId = 0
	WidgetCoolDownNotify_CMD_ID           WidgetCoolDownNotify_CmdId = 4295
	WidgetCoolDownNotify_ENET_CHANNEL_ID  WidgetCoolDownNotify_CmdId = 0
	WidgetCoolDownNotify_ENET_IS_RELIABLE WidgetCoolDownNotify_CmdId = 1
)

// Enum value maps for WidgetCoolDownNotify_CmdId.
var (
	WidgetCoolDownNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4295: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetCoolDownNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4295,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetCoolDownNotify_CmdId) Enum() *WidgetCoolDownNotify_CmdId {
	p := new(WidgetCoolDownNotify_CmdId)
	*p = x
	return p
}

func (x WidgetCoolDownNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetCoolDownNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[15].Descriptor()
}

func (WidgetCoolDownNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[15]
}

func (x WidgetCoolDownNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetCoolDownNotify_CmdId.Descriptor instead.
func (WidgetCoolDownNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{18, 0}
}

type WidgetReportReq_CmdId int32

const (
	WidgetReportReq_NONE             WidgetReportReq_CmdId = 0
	WidgetReportReq_CMD_ID           WidgetReportReq_CmdId = 4291
	WidgetReportReq_ENET_CHANNEL_ID  WidgetReportReq_CmdId = 0
	WidgetReportReq_ENET_IS_RELIABLE WidgetReportReq_CmdId = 1
	WidgetReportReq_IS_ALLOW_CLIENT  WidgetReportReq_CmdId = 1
)

// Enum value maps for WidgetReportReq_CmdId.
var (
	WidgetReportReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4291: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WidgetReportReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4291,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WidgetReportReq_CmdId) Enum() *WidgetReportReq_CmdId {
	p := new(WidgetReportReq_CmdId)
	*p = x
	return p
}

func (x WidgetReportReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetReportReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[16].Descriptor()
}

func (WidgetReportReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[16]
}

func (x WidgetReportReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetReportReq_CmdId.Descriptor instead.
func (WidgetReportReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{19, 0}
}

type WidgetReportRsp_CmdId int32

const (
	WidgetReportRsp_NONE             WidgetReportRsp_CmdId = 0
	WidgetReportRsp_CMD_ID           WidgetReportRsp_CmdId = 4292
	WidgetReportRsp_ENET_CHANNEL_ID  WidgetReportRsp_CmdId = 0
	WidgetReportRsp_ENET_IS_RELIABLE WidgetReportRsp_CmdId = 1
)

// Enum value maps for WidgetReportRsp_CmdId.
var (
	WidgetReportRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4292: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetReportRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4292,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetReportRsp_CmdId) Enum() *WidgetReportRsp_CmdId {
	p := new(WidgetReportRsp_CmdId)
	*p = x
	return p
}

func (x WidgetReportRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetReportRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[17].Descriptor()
}

func (WidgetReportRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[17]
}

func (x WidgetReportRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetReportRsp_CmdId.Descriptor instead.
func (WidgetReportRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{20, 0}
}

type ClientCollectorDataNotify_CmdId int32

const (
	ClientCollectorDataNotify_NONE             ClientCollectorDataNotify_CmdId = 0
	ClientCollectorDataNotify_CMD_ID           ClientCollectorDataNotify_CmdId = 4264
	ClientCollectorDataNotify_ENET_CHANNEL_ID  ClientCollectorDataNotify_CmdId = 0
	ClientCollectorDataNotify_ENET_IS_RELIABLE ClientCollectorDataNotify_CmdId = 1
)

// Enum value maps for ClientCollectorDataNotify_CmdId.
var (
	ClientCollectorDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4264: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ClientCollectorDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4264,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ClientCollectorDataNotify_CmdId) Enum() *ClientCollectorDataNotify_CmdId {
	p := new(ClientCollectorDataNotify_CmdId)
	*p = x
	return p
}

func (x ClientCollectorDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientCollectorDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[18].Descriptor()
}

func (ClientCollectorDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[18]
}

func (x ClientCollectorDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientCollectorDataNotify_CmdId.Descriptor instead.
func (ClientCollectorDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{21, 0}
}

type OneoffGatherPointDetectorDataNotify_CmdId int32

const (
	OneoffGatherPointDetectorDataNotify_NONE             OneoffGatherPointDetectorDataNotify_CmdId = 0
	OneoffGatherPointDetectorDataNotify_CMD_ID           OneoffGatherPointDetectorDataNotify_CmdId = 4297
	OneoffGatherPointDetectorDataNotify_ENET_CHANNEL_ID  OneoffGatherPointDetectorDataNotify_CmdId = 0
	OneoffGatherPointDetectorDataNotify_ENET_IS_RELIABLE OneoffGatherPointDetectorDataNotify_CmdId = 1
)

// Enum value maps for OneoffGatherPointDetectorDataNotify_CmdId.
var (
	OneoffGatherPointDetectorDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4297: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	OneoffGatherPointDetectorDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4297,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x OneoffGatherPointDetectorDataNotify_CmdId) Enum() *OneoffGatherPointDetectorDataNotify_CmdId {
	p := new(OneoffGatherPointDetectorDataNotify_CmdId)
	*p = x
	return p
}

func (x OneoffGatherPointDetectorDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OneoffGatherPointDetectorDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[19].Descriptor()
}

func (OneoffGatherPointDetectorDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[19]
}

func (x OneoffGatherPointDetectorDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OneoffGatherPointDetectorDataNotify_CmdId.Descriptor instead.
func (OneoffGatherPointDetectorDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{22, 0}
}

type SkyCrystalDetectorDataUpdateNotify_CmdId int32

const (
	SkyCrystalDetectorDataUpdateNotify_NONE             SkyCrystalDetectorDataUpdateNotify_CmdId = 0
	SkyCrystalDetectorDataUpdateNotify_CMD_ID           SkyCrystalDetectorDataUpdateNotify_CmdId = 4287
	SkyCrystalDetectorDataUpdateNotify_ENET_CHANNEL_ID  SkyCrystalDetectorDataUpdateNotify_CmdId = 0
	SkyCrystalDetectorDataUpdateNotify_ENET_IS_RELIABLE SkyCrystalDetectorDataUpdateNotify_CmdId = 1
)

// Enum value maps for SkyCrystalDetectorDataUpdateNotify_CmdId.
var (
	SkyCrystalDetectorDataUpdateNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4287: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SkyCrystalDetectorDataUpdateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4287,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SkyCrystalDetectorDataUpdateNotify_CmdId) Enum() *SkyCrystalDetectorDataUpdateNotify_CmdId {
	p := new(SkyCrystalDetectorDataUpdateNotify_CmdId)
	*p = x
	return p
}

func (x SkyCrystalDetectorDataUpdateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkyCrystalDetectorDataUpdateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[20].Descriptor()
}

func (SkyCrystalDetectorDataUpdateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[20]
}

func (x SkyCrystalDetectorDataUpdateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkyCrystalDetectorDataUpdateNotify_CmdId.Descriptor instead.
func (SkyCrystalDetectorDataUpdateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{23, 0}
}

type TreasureMapDetectorDataNotify_CmdId int32

const (
	TreasureMapDetectorDataNotify_NONE             TreasureMapDetectorDataNotify_CmdId = 0
	TreasureMapDetectorDataNotify_CMD_ID           TreasureMapDetectorDataNotify_CmdId = 4300
	TreasureMapDetectorDataNotify_ENET_CHANNEL_ID  TreasureMapDetectorDataNotify_CmdId = 0
	TreasureMapDetectorDataNotify_ENET_IS_RELIABLE TreasureMapDetectorDataNotify_CmdId = 1
)

// Enum value maps for TreasureMapDetectorDataNotify_CmdId.
var (
	TreasureMapDetectorDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4300: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	TreasureMapDetectorDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4300,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x TreasureMapDetectorDataNotify_CmdId) Enum() *TreasureMapDetectorDataNotify_CmdId {
	p := new(TreasureMapDetectorDataNotify_CmdId)
	*p = x
	return p
}

func (x TreasureMapDetectorDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreasureMapDetectorDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[21].Descriptor()
}

func (TreasureMapDetectorDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[21]
}

func (x TreasureMapDetectorDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreasureMapDetectorDataNotify_CmdId.Descriptor instead.
func (TreasureMapDetectorDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{24, 0}
}

type SetWidgetSlotReq_CmdId int32

const (
	SetWidgetSlotReq_NONE             SetWidgetSlotReq_CmdId = 0
	SetWidgetSlotReq_CMD_ID           SetWidgetSlotReq_CmdId = 4259
	SetWidgetSlotReq_ENET_CHANNEL_ID  SetWidgetSlotReq_CmdId = 0
	SetWidgetSlotReq_ENET_IS_RELIABLE SetWidgetSlotReq_CmdId = 1
	SetWidgetSlotReq_IS_ALLOW_CLIENT  SetWidgetSlotReq_CmdId = 1
)

// Enum value maps for SetWidgetSlotReq_CmdId.
var (
	SetWidgetSlotReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4259: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetWidgetSlotReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4259,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetWidgetSlotReq_CmdId) Enum() *SetWidgetSlotReq_CmdId {
	p := new(SetWidgetSlotReq_CmdId)
	*p = x
	return p
}

func (x SetWidgetSlotReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetWidgetSlotReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[22].Descriptor()
}

func (SetWidgetSlotReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[22]
}

func (x SetWidgetSlotReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetWidgetSlotReq_CmdId.Descriptor instead.
func (SetWidgetSlotReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{26, 0}
}

type SetWidgetSlotRsp_CmdId int32

const (
	SetWidgetSlotRsp_NONE             SetWidgetSlotRsp_CmdId = 0
	SetWidgetSlotRsp_CMD_ID           SetWidgetSlotRsp_CmdId = 4277
	SetWidgetSlotRsp_ENET_CHANNEL_ID  SetWidgetSlotRsp_CmdId = 0
	SetWidgetSlotRsp_ENET_IS_RELIABLE SetWidgetSlotRsp_CmdId = 1
)

// Enum value maps for SetWidgetSlotRsp_CmdId.
var (
	SetWidgetSlotRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4277: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetWidgetSlotRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4277,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetWidgetSlotRsp_CmdId) Enum() *SetWidgetSlotRsp_CmdId {
	p := new(SetWidgetSlotRsp_CmdId)
	*p = x
	return p
}

func (x SetWidgetSlotRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetWidgetSlotRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[23].Descriptor()
}

func (SetWidgetSlotRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[23]
}

func (x SetWidgetSlotRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetWidgetSlotRsp_CmdId.Descriptor instead.
func (SetWidgetSlotRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{27, 0}
}

type WidgetSlotChangeNotify_CmdId int32

const (
	WidgetSlotChangeNotify_NONE             WidgetSlotChangeNotify_CmdId = 0
	WidgetSlotChangeNotify_CMD_ID           WidgetSlotChangeNotify_CmdId = 4267
	WidgetSlotChangeNotify_ENET_CHANNEL_ID  WidgetSlotChangeNotify_CmdId = 0
	WidgetSlotChangeNotify_ENET_IS_RELIABLE WidgetSlotChangeNotify_CmdId = 1
)

// Enum value maps for WidgetSlotChangeNotify_CmdId.
var (
	WidgetSlotChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4267: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetSlotChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4267,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetSlotChangeNotify_CmdId) Enum() *WidgetSlotChangeNotify_CmdId {
	p := new(WidgetSlotChangeNotify_CmdId)
	*p = x
	return p
}

func (x WidgetSlotChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetSlotChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[24].Descriptor()
}

func (WidgetSlotChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[24]
}

func (x WidgetSlotChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetSlotChangeNotify_CmdId.Descriptor instead.
func (WidgetSlotChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{28, 0}
}

type GetWidgetSlotReq_CmdId int32

const (
	GetWidgetSlotReq_NONE             GetWidgetSlotReq_CmdId = 0
	GetWidgetSlotReq_CMD_ID           GetWidgetSlotReq_CmdId = 4253
	GetWidgetSlotReq_ENET_CHANNEL_ID  GetWidgetSlotReq_CmdId = 0
	GetWidgetSlotReq_ENET_IS_RELIABLE GetWidgetSlotReq_CmdId = 1
	GetWidgetSlotReq_IS_ALLOW_CLIENT  GetWidgetSlotReq_CmdId = 1
)

// Enum value maps for GetWidgetSlotReq_CmdId.
var (
	GetWidgetSlotReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4253: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetWidgetSlotReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4253,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetWidgetSlotReq_CmdId) Enum() *GetWidgetSlotReq_CmdId {
	p := new(GetWidgetSlotReq_CmdId)
	*p = x
	return p
}

func (x GetWidgetSlotReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetWidgetSlotReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[25].Descriptor()
}

func (GetWidgetSlotReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[25]
}

func (x GetWidgetSlotReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetWidgetSlotReq_CmdId.Descriptor instead.
func (GetWidgetSlotReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{29, 0}
}

type GetWidgetSlotRsp_CmdId int32

const (
	GetWidgetSlotRsp_NONE             GetWidgetSlotRsp_CmdId = 0
	GetWidgetSlotRsp_CMD_ID           GetWidgetSlotRsp_CmdId = 4254
	GetWidgetSlotRsp_ENET_CHANNEL_ID  GetWidgetSlotRsp_CmdId = 0
	GetWidgetSlotRsp_ENET_IS_RELIABLE GetWidgetSlotRsp_CmdId = 1
)

// Enum value maps for GetWidgetSlotRsp_CmdId.
var (
	GetWidgetSlotRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4254: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetWidgetSlotRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4254,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetWidgetSlotRsp_CmdId) Enum() *GetWidgetSlotRsp_CmdId {
	p := new(GetWidgetSlotRsp_CmdId)
	*p = x
	return p
}

func (x GetWidgetSlotRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetWidgetSlotRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[26].Descriptor()
}

func (GetWidgetSlotRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[26]
}

func (x GetWidgetSlotRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetWidgetSlotRsp_CmdId.Descriptor instead.
func (GetWidgetSlotRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{30, 0}
}

type AllWidgetDataNotify_CmdId int32

const (
	AllWidgetDataNotify_NONE             AllWidgetDataNotify_CmdId = 0
	AllWidgetDataNotify_CMD_ID           AllWidgetDataNotify_CmdId = 4271
	AllWidgetDataNotify_ENET_CHANNEL_ID  AllWidgetDataNotify_CmdId = 0
	AllWidgetDataNotify_ENET_IS_RELIABLE AllWidgetDataNotify_CmdId = 1
)

// Enum value maps for AllWidgetDataNotify_CmdId.
var (
	AllWidgetDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4271: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AllWidgetDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4271,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AllWidgetDataNotify_CmdId) Enum() *AllWidgetDataNotify_CmdId {
	p := new(AllWidgetDataNotify_CmdId)
	*p = x
	return p
}

func (x AllWidgetDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllWidgetDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[27].Descriptor()
}

func (AllWidgetDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[27]
}

func (x AllWidgetDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllWidgetDataNotify_CmdId.Descriptor instead.
func (AllWidgetDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{31, 0}
}

type UseWidgetCreateGadgetReq_CmdId int32

const (
	UseWidgetCreateGadgetReq_NONE             UseWidgetCreateGadgetReq_CmdId = 0
	UseWidgetCreateGadgetReq_CMD_ID           UseWidgetCreateGadgetReq_CmdId = 4293
	UseWidgetCreateGadgetReq_ENET_CHANNEL_ID  UseWidgetCreateGadgetReq_CmdId = 0
	UseWidgetCreateGadgetReq_ENET_IS_RELIABLE UseWidgetCreateGadgetReq_CmdId = 1
	UseWidgetCreateGadgetReq_IS_ALLOW_CLIENT  UseWidgetCreateGadgetReq_CmdId = 1
)

// Enum value maps for UseWidgetCreateGadgetReq_CmdId.
var (
	UseWidgetCreateGadgetReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4293: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UseWidgetCreateGadgetReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4293,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UseWidgetCreateGadgetReq_CmdId) Enum() *UseWidgetCreateGadgetReq_CmdId {
	p := new(UseWidgetCreateGadgetReq_CmdId)
	*p = x
	return p
}

func (x UseWidgetCreateGadgetReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseWidgetCreateGadgetReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[28].Descriptor()
}

func (UseWidgetCreateGadgetReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[28]
}

func (x UseWidgetCreateGadgetReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseWidgetCreateGadgetReq_CmdId.Descriptor instead.
func (UseWidgetCreateGadgetReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{32, 0}
}

type UseWidgetCreateGadgetRsp_CmdId int32

const (
	UseWidgetCreateGadgetRsp_NONE             UseWidgetCreateGadgetRsp_CmdId = 0
	UseWidgetCreateGadgetRsp_CMD_ID           UseWidgetCreateGadgetRsp_CmdId = 4290
	UseWidgetCreateGadgetRsp_ENET_CHANNEL_ID  UseWidgetCreateGadgetRsp_CmdId = 0
	UseWidgetCreateGadgetRsp_ENET_IS_RELIABLE UseWidgetCreateGadgetRsp_CmdId = 1
)

// Enum value maps for UseWidgetCreateGadgetRsp_CmdId.
var (
	UseWidgetCreateGadgetRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4290: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UseWidgetCreateGadgetRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4290,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UseWidgetCreateGadgetRsp_CmdId) Enum() *UseWidgetCreateGadgetRsp_CmdId {
	p := new(UseWidgetCreateGadgetRsp_CmdId)
	*p = x
	return p
}

func (x UseWidgetCreateGadgetRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseWidgetCreateGadgetRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[29].Descriptor()
}

func (UseWidgetCreateGadgetRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[29]
}

func (x UseWidgetCreateGadgetRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseWidgetCreateGadgetRsp_CmdId.Descriptor instead.
func (UseWidgetCreateGadgetRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{33, 0}
}

type UseWidgetRetractGadgetReq_CmdId int32

const (
	UseWidgetRetractGadgetReq_NONE             UseWidgetRetractGadgetReq_CmdId = 0
	UseWidgetRetractGadgetReq_CMD_ID           UseWidgetRetractGadgetReq_CmdId = 4286
	UseWidgetRetractGadgetReq_ENET_CHANNEL_ID  UseWidgetRetractGadgetReq_CmdId = 0
	UseWidgetRetractGadgetReq_ENET_IS_RELIABLE UseWidgetRetractGadgetReq_CmdId = 1
	UseWidgetRetractGadgetReq_IS_ALLOW_CLIENT  UseWidgetRetractGadgetReq_CmdId = 1
)

// Enum value maps for UseWidgetRetractGadgetReq_CmdId.
var (
	UseWidgetRetractGadgetReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4286: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UseWidgetRetractGadgetReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4286,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UseWidgetRetractGadgetReq_CmdId) Enum() *UseWidgetRetractGadgetReq_CmdId {
	p := new(UseWidgetRetractGadgetReq_CmdId)
	*p = x
	return p
}

func (x UseWidgetRetractGadgetReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseWidgetRetractGadgetReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[30].Descriptor()
}

func (UseWidgetRetractGadgetReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[30]
}

func (x UseWidgetRetractGadgetReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseWidgetRetractGadgetReq_CmdId.Descriptor instead.
func (UseWidgetRetractGadgetReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{34, 0}
}

type UseWidgetRetractGadgetRsp_CmdId int32

const (
	UseWidgetRetractGadgetRsp_NONE             UseWidgetRetractGadgetRsp_CmdId = 0
	UseWidgetRetractGadgetRsp_CMD_ID           UseWidgetRetractGadgetRsp_CmdId = 4261
	UseWidgetRetractGadgetRsp_ENET_CHANNEL_ID  UseWidgetRetractGadgetRsp_CmdId = 0
	UseWidgetRetractGadgetRsp_ENET_IS_RELIABLE UseWidgetRetractGadgetRsp_CmdId = 1
	UseWidgetRetractGadgetRsp_IS_ALLOW_CLIENT  UseWidgetRetractGadgetRsp_CmdId = 1
)

// Enum value maps for UseWidgetRetractGadgetRsp_CmdId.
var (
	UseWidgetRetractGadgetRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4261: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	UseWidgetRetractGadgetRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4261,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x UseWidgetRetractGadgetRsp_CmdId) Enum() *UseWidgetRetractGadgetRsp_CmdId {
	p := new(UseWidgetRetractGadgetRsp_CmdId)
	*p = x
	return p
}

func (x UseWidgetRetractGadgetRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseWidgetRetractGadgetRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[31].Descriptor()
}

func (UseWidgetRetractGadgetRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[31]
}

func (x UseWidgetRetractGadgetRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseWidgetRetractGadgetRsp_CmdId.Descriptor instead.
func (UseWidgetRetractGadgetRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{35, 0}
}

type WidgetGadgetAllDataNotify_CmdId int32

const (
	WidgetGadgetAllDataNotify_NONE             WidgetGadgetAllDataNotify_CmdId = 0
	WidgetGadgetAllDataNotify_CMD_ID           WidgetGadgetAllDataNotify_CmdId = 4284
	WidgetGadgetAllDataNotify_ENET_CHANNEL_ID  WidgetGadgetAllDataNotify_CmdId = 0
	WidgetGadgetAllDataNotify_ENET_IS_RELIABLE WidgetGadgetAllDataNotify_CmdId = 1
)

// Enum value maps for WidgetGadgetAllDataNotify_CmdId.
var (
	WidgetGadgetAllDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4284: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetGadgetAllDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4284,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetGadgetAllDataNotify_CmdId) Enum() *WidgetGadgetAllDataNotify_CmdId {
	p := new(WidgetGadgetAllDataNotify_CmdId)
	*p = x
	return p
}

func (x WidgetGadgetAllDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetGadgetAllDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[32].Descriptor()
}

func (WidgetGadgetAllDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[32]
}

func (x WidgetGadgetAllDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetGadgetAllDataNotify_CmdId.Descriptor instead.
func (WidgetGadgetAllDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{37, 0}
}

type WidgetGadgetDataNotify_CmdId int32

const (
	WidgetGadgetDataNotify_NONE             WidgetGadgetDataNotify_CmdId = 0
	WidgetGadgetDataNotify_CMD_ID           WidgetGadgetDataNotify_CmdId = 4266
	WidgetGadgetDataNotify_ENET_CHANNEL_ID  WidgetGadgetDataNotify_CmdId = 0
	WidgetGadgetDataNotify_ENET_IS_RELIABLE WidgetGadgetDataNotify_CmdId = 1
)

// Enum value maps for WidgetGadgetDataNotify_CmdId.
var (
	WidgetGadgetDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4266: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetGadgetDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4266,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetGadgetDataNotify_CmdId) Enum() *WidgetGadgetDataNotify_CmdId {
	p := new(WidgetGadgetDataNotify_CmdId)
	*p = x
	return p
}

func (x WidgetGadgetDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetGadgetDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[33].Descriptor()
}

func (WidgetGadgetDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[33]
}

func (x WidgetGadgetDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetGadgetDataNotify_CmdId.Descriptor instead.
func (WidgetGadgetDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{38, 0}
}

type WidgetGadgetDestroyNotify_CmdId int32

const (
	WidgetGadgetDestroyNotify_NONE             WidgetGadgetDestroyNotify_CmdId = 0
	WidgetGadgetDestroyNotify_CMD_ID           WidgetGadgetDestroyNotify_CmdId = 4274
	WidgetGadgetDestroyNotify_ENET_CHANNEL_ID  WidgetGadgetDestroyNotify_CmdId = 0
	WidgetGadgetDestroyNotify_ENET_IS_RELIABLE WidgetGadgetDestroyNotify_CmdId = 1
)

// Enum value maps for WidgetGadgetDestroyNotify_CmdId.
var (
	WidgetGadgetDestroyNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4274: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetGadgetDestroyNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4274,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetGadgetDestroyNotify_CmdId) Enum() *WidgetGadgetDestroyNotify_CmdId {
	p := new(WidgetGadgetDestroyNotify_CmdId)
	*p = x
	return p
}

func (x WidgetGadgetDestroyNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetGadgetDestroyNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[34].Descriptor()
}

func (WidgetGadgetDestroyNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[34]
}

func (x WidgetGadgetDestroyNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetGadgetDestroyNotify_CmdId.Descriptor instead.
func (WidgetGadgetDestroyNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{39, 0}
}

type WidgetDoBagReq_CmdId int32

const (
	WidgetDoBagReq_NONE             WidgetDoBagReq_CmdId = 0
	WidgetDoBagReq_CMD_ID           WidgetDoBagReq_CmdId = 4255
	WidgetDoBagReq_ENET_CHANNEL_ID  WidgetDoBagReq_CmdId = 0
	WidgetDoBagReq_ENET_IS_RELIABLE WidgetDoBagReq_CmdId = 1
	WidgetDoBagReq_IS_ALLOW_CLIENT  WidgetDoBagReq_CmdId = 1
)

// Enum value maps for WidgetDoBagReq_CmdId.
var (
	WidgetDoBagReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4255: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WidgetDoBagReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4255,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WidgetDoBagReq_CmdId) Enum() *WidgetDoBagReq_CmdId {
	p := new(WidgetDoBagReq_CmdId)
	*p = x
	return p
}

func (x WidgetDoBagReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetDoBagReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[35].Descriptor()
}

func (WidgetDoBagReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[35]
}

func (x WidgetDoBagReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetDoBagReq_CmdId.Descriptor instead.
func (WidgetDoBagReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{42, 0}
}

type WidgetDoBagRsp_CmdId int32

const (
	WidgetDoBagRsp_NONE             WidgetDoBagRsp_CmdId = 0
	WidgetDoBagRsp_CMD_ID           WidgetDoBagRsp_CmdId = 4296
	WidgetDoBagRsp_ENET_CHANNEL_ID  WidgetDoBagRsp_CmdId = 0
	WidgetDoBagRsp_ENET_IS_RELIABLE WidgetDoBagRsp_CmdId = 1
)

// Enum value maps for WidgetDoBagRsp_CmdId.
var (
	WidgetDoBagRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4296: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetDoBagRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4296,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetDoBagRsp_CmdId) Enum() *WidgetDoBagRsp_CmdId {
	p := new(WidgetDoBagRsp_CmdId)
	*p = x
	return p
}

func (x WidgetDoBagRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetDoBagRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[36].Descriptor()
}

func (WidgetDoBagRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[36]
}

func (x WidgetDoBagRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetDoBagRsp_CmdId.Descriptor instead.
func (WidgetDoBagRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{43, 0}
}

type WidgetActiveChangeNotify_CmdId int32

const (
	WidgetActiveChangeNotify_NONE             WidgetActiveChangeNotify_CmdId = 0
	WidgetActiveChangeNotify_CMD_ID           WidgetActiveChangeNotify_CmdId = 4280
	WidgetActiveChangeNotify_ENET_CHANNEL_ID  WidgetActiveChangeNotify_CmdId = 0
	WidgetActiveChangeNotify_ENET_IS_RELIABLE WidgetActiveChangeNotify_CmdId = 1
)

// Enum value maps for WidgetActiveChangeNotify_CmdId.
var (
	WidgetActiveChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4280: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetActiveChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4280,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetActiveChangeNotify_CmdId) Enum() *WidgetActiveChangeNotify_CmdId {
	p := new(WidgetActiveChangeNotify_CmdId)
	*p = x
	return p
}

func (x WidgetActiveChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetActiveChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[37].Descriptor()
}

func (WidgetActiveChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[37]
}

func (x WidgetActiveChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetActiveChangeNotify_CmdId.Descriptor instead.
func (WidgetActiveChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{44, 0}
}

type WidgetUseAttachAbilityGroupChangeNotify_CmdId int32

const (
	WidgetUseAttachAbilityGroupChangeNotify_NONE             WidgetUseAttachAbilityGroupChangeNotify_CmdId = 0
	WidgetUseAttachAbilityGroupChangeNotify_CMD_ID           WidgetUseAttachAbilityGroupChangeNotify_CmdId = 4258
	WidgetUseAttachAbilityGroupChangeNotify_ENET_CHANNEL_ID  WidgetUseAttachAbilityGroupChangeNotify_CmdId = 0
	WidgetUseAttachAbilityGroupChangeNotify_ENET_IS_RELIABLE WidgetUseAttachAbilityGroupChangeNotify_CmdId = 1
)

// Enum value maps for WidgetUseAttachAbilityGroupChangeNotify_CmdId.
var (
	WidgetUseAttachAbilityGroupChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		4258: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetUseAttachAbilityGroupChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4258,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetUseAttachAbilityGroupChangeNotify_CmdId) Enum() *WidgetUseAttachAbilityGroupChangeNotify_CmdId {
	p := new(WidgetUseAttachAbilityGroupChangeNotify_CmdId)
	*p = x
	return p
}

func (x WidgetUseAttachAbilityGroupChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetUseAttachAbilityGroupChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[38].Descriptor()
}

func (WidgetUseAttachAbilityGroupChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[38]
}

func (x WidgetUseAttachAbilityGroupChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetUseAttachAbilityGroupChangeNotify_CmdId.Descriptor instead.
func (WidgetUseAttachAbilityGroupChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{45, 0}
}

type WidgetCaptureAnimalReq_CmdId int32

const (
	WidgetCaptureAnimalReq_NONE             WidgetCaptureAnimalReq_CmdId = 0
	WidgetCaptureAnimalReq_CMD_ID           WidgetCaptureAnimalReq_CmdId = 4256
	WidgetCaptureAnimalReq_ENET_CHANNEL_ID  WidgetCaptureAnimalReq_CmdId = 0
	WidgetCaptureAnimalReq_ENET_IS_RELIABLE WidgetCaptureAnimalReq_CmdId = 1
	WidgetCaptureAnimalReq_IS_ALLOW_CLIENT  WidgetCaptureAnimalReq_CmdId = 1
)

// Enum value maps for WidgetCaptureAnimalReq_CmdId.
var (
	WidgetCaptureAnimalReq_CmdId_name = map[int32]string{
		0:    "NONE",
		4256: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WidgetCaptureAnimalReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4256,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WidgetCaptureAnimalReq_CmdId) Enum() *WidgetCaptureAnimalReq_CmdId {
	p := new(WidgetCaptureAnimalReq_CmdId)
	*p = x
	return p
}

func (x WidgetCaptureAnimalReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetCaptureAnimalReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[39].Descriptor()
}

func (WidgetCaptureAnimalReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[39]
}

func (x WidgetCaptureAnimalReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetCaptureAnimalReq_CmdId.Descriptor instead.
func (WidgetCaptureAnimalReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{46, 0}
}

type WidgetCaptureAnimalRsp_CmdId int32

const (
	WidgetCaptureAnimalRsp_NONE             WidgetCaptureAnimalRsp_CmdId = 0
	WidgetCaptureAnimalRsp_CMD_ID           WidgetCaptureAnimalRsp_CmdId = 4289
	WidgetCaptureAnimalRsp_ENET_CHANNEL_ID  WidgetCaptureAnimalRsp_CmdId = 0
	WidgetCaptureAnimalRsp_ENET_IS_RELIABLE WidgetCaptureAnimalRsp_CmdId = 1
)

// Enum value maps for WidgetCaptureAnimalRsp_CmdId.
var (
	WidgetCaptureAnimalRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		4289: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetCaptureAnimalRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           4289,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetCaptureAnimalRsp_CmdId) Enum() *WidgetCaptureAnimalRsp_CmdId {
	p := new(WidgetCaptureAnimalRsp_CmdId)
	*p = x
	return p
}

func (x WidgetCaptureAnimalRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetCaptureAnimalRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[40].Descriptor()
}

func (WidgetCaptureAnimalRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[40]
}

func (x WidgetCaptureAnimalRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetCaptureAnimalRsp_CmdId.Descriptor instead.
func (WidgetCaptureAnimalRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{47, 0}
}

type WidgetUpdateExtraCDReq_CmdId int32

const (
	WidgetUpdateExtraCDReq_NONE             WidgetUpdateExtraCDReq_CmdId = 0
	WidgetUpdateExtraCDReq_CMD_ID           WidgetUpdateExtraCDReq_CmdId = 5960
	WidgetUpdateExtraCDReq_ENET_CHANNEL_ID  WidgetUpdateExtraCDReq_CmdId = 0
	WidgetUpdateExtraCDReq_ENET_IS_RELIABLE WidgetUpdateExtraCDReq_CmdId = 1
	WidgetUpdateExtraCDReq_IS_ALLOW_CLIENT  WidgetUpdateExtraCDReq_CmdId = 1
)

// Enum value maps for WidgetUpdateExtraCDReq_CmdId.
var (
	WidgetUpdateExtraCDReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5960: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	WidgetUpdateExtraCDReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5960,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x WidgetUpdateExtraCDReq_CmdId) Enum() *WidgetUpdateExtraCDReq_CmdId {
	p := new(WidgetUpdateExtraCDReq_CmdId)
	*p = x
	return p
}

func (x WidgetUpdateExtraCDReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetUpdateExtraCDReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[41].Descriptor()
}

func (WidgetUpdateExtraCDReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[41]
}

func (x WidgetUpdateExtraCDReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetUpdateExtraCDReq_CmdId.Descriptor instead.
func (WidgetUpdateExtraCDReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{48, 0}
}

type WidgetUpdateExtraCDRsp_CmdId int32

const (
	WidgetUpdateExtraCDRsp_NONE             WidgetUpdateExtraCDRsp_CmdId = 0
	WidgetUpdateExtraCDRsp_CMD_ID           WidgetUpdateExtraCDRsp_CmdId = 6056
	WidgetUpdateExtraCDRsp_ENET_CHANNEL_ID  WidgetUpdateExtraCDRsp_CmdId = 0
	WidgetUpdateExtraCDRsp_ENET_IS_RELIABLE WidgetUpdateExtraCDRsp_CmdId = 1
)

// Enum value maps for WidgetUpdateExtraCDRsp_CmdId.
var (
	WidgetUpdateExtraCDRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6056: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetUpdateExtraCDRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6056,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetUpdateExtraCDRsp_CmdId) Enum() *WidgetUpdateExtraCDRsp_CmdId {
	p := new(WidgetUpdateExtraCDRsp_CmdId)
	*p = x
	return p
}

func (x WidgetUpdateExtraCDRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetUpdateExtraCDRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[42].Descriptor()
}

func (WidgetUpdateExtraCDRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[42]
}

func (x WidgetUpdateExtraCDRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetUpdateExtraCDRsp_CmdId.Descriptor instead.
func (WidgetUpdateExtraCDRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{49, 0}
}

type FireworksReformDataNotify_CmdId int32

const (
	FireworksReformDataNotify_NONE             FireworksReformDataNotify_CmdId = 0
	FireworksReformDataNotify_CMD_ID           FireworksReformDataNotify_CmdId = 6033
	FireworksReformDataNotify_ENET_CHANNEL_ID  FireworksReformDataNotify_CmdId = 0
	FireworksReformDataNotify_ENET_IS_RELIABLE FireworksReformDataNotify_CmdId = 1
)

// Enum value maps for FireworksReformDataNotify_CmdId.
var (
	FireworksReformDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		6033: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FireworksReformDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6033,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FireworksReformDataNotify_CmdId) Enum() *FireworksReformDataNotify_CmdId {
	p := new(FireworksReformDataNotify_CmdId)
	*p = x
	return p
}

func (x FireworksReformDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FireworksReformDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[43].Descriptor()
}

func (FireworksReformDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[43]
}

func (x FireworksReformDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FireworksReformDataNotify_CmdId.Descriptor instead.
func (FireworksReformDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{52, 0}
}

type ReformFireworksReq_CmdId int32

const (
	ReformFireworksReq_NONE             ReformFireworksReq_CmdId = 0
	ReformFireworksReq_CMD_ID           ReformFireworksReq_CmdId = 6036
	ReformFireworksReq_ENET_CHANNEL_ID  ReformFireworksReq_CmdId = 0
	ReformFireworksReq_ENET_IS_RELIABLE ReformFireworksReq_CmdId = 1
	ReformFireworksReq_IS_ALLOW_CLIENT  ReformFireworksReq_CmdId = 1
)

// Enum value maps for ReformFireworksReq_CmdId.
var (
	ReformFireworksReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6036: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ReformFireworksReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6036,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ReformFireworksReq_CmdId) Enum() *ReformFireworksReq_CmdId {
	p := new(ReformFireworksReq_CmdId)
	*p = x
	return p
}

func (x ReformFireworksReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReformFireworksReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[44].Descriptor()
}

func (ReformFireworksReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[44]
}

func (x ReformFireworksReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReformFireworksReq_CmdId.Descriptor instead.
func (ReformFireworksReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{53, 0}
}

type ReformFireworksRsp_CmdId int32

const (
	ReformFireworksRsp_NONE             ReformFireworksRsp_CmdId = 0
	ReformFireworksRsp_CMD_ID           ReformFireworksRsp_CmdId = 5929
	ReformFireworksRsp_ENET_CHANNEL_ID  ReformFireworksRsp_CmdId = 0
	ReformFireworksRsp_ENET_IS_RELIABLE ReformFireworksRsp_CmdId = 1
)

// Enum value maps for ReformFireworksRsp_CmdId.
var (
	ReformFireworksRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5929: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ReformFireworksRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5929,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ReformFireworksRsp_CmdId) Enum() *ReformFireworksRsp_CmdId {
	p := new(ReformFireworksRsp_CmdId)
	*p = x
	return p
}

func (x ReformFireworksRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReformFireworksRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[45].Descriptor()
}

func (ReformFireworksRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[45]
}

func (x ReformFireworksRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReformFireworksRsp_CmdId.Descriptor instead.
func (ReformFireworksRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{54, 0}
}

type LaunchFireworksReq_CmdId int32

const (
	LaunchFireworksReq_NONE             LaunchFireworksReq_CmdId = 0
	LaunchFireworksReq_CMD_ID           LaunchFireworksReq_CmdId = 6090
	LaunchFireworksReq_ENET_CHANNEL_ID  LaunchFireworksReq_CmdId = 0
	LaunchFireworksReq_ENET_IS_RELIABLE LaunchFireworksReq_CmdId = 1
	LaunchFireworksReq_IS_ALLOW_CLIENT  LaunchFireworksReq_CmdId = 1
)

// Enum value maps for LaunchFireworksReq_CmdId.
var (
	LaunchFireworksReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6090: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	LaunchFireworksReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6090,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x LaunchFireworksReq_CmdId) Enum() *LaunchFireworksReq_CmdId {
	p := new(LaunchFireworksReq_CmdId)
	*p = x
	return p
}

func (x LaunchFireworksReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LaunchFireworksReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[46].Descriptor()
}

func (LaunchFireworksReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[46]
}

func (x LaunchFireworksReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LaunchFireworksReq_CmdId.Descriptor instead.
func (LaunchFireworksReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{57, 0}
}

type LaunchFireworksRsp_CmdId int32

const (
	LaunchFireworksRsp_NONE             LaunchFireworksRsp_CmdId = 0
	LaunchFireworksRsp_CMD_ID           LaunchFireworksRsp_CmdId = 6057
	LaunchFireworksRsp_ENET_CHANNEL_ID  LaunchFireworksRsp_CmdId = 0
	LaunchFireworksRsp_ENET_IS_RELIABLE LaunchFireworksRsp_CmdId = 1
)

// Enum value maps for LaunchFireworksRsp_CmdId.
var (
	LaunchFireworksRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6057: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	LaunchFireworksRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6057,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x LaunchFireworksRsp_CmdId) Enum() *LaunchFireworksRsp_CmdId {
	p := new(LaunchFireworksRsp_CmdId)
	*p = x
	return p
}

func (x LaunchFireworksRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LaunchFireworksRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[47].Descriptor()
}

func (LaunchFireworksRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[47]
}

func (x LaunchFireworksRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LaunchFireworksRsp_CmdId.Descriptor instead.
func (LaunchFireworksRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{58, 0}
}

type FireworksLaunchDataNotify_CmdId int32

const (
	FireworksLaunchDataNotify_NONE             FireworksLaunchDataNotify_CmdId = 0
	FireworksLaunchDataNotify_CMD_ID           FireworksLaunchDataNotify_CmdId = 5928
	FireworksLaunchDataNotify_ENET_CHANNEL_ID  FireworksLaunchDataNotify_CmdId = 0
	FireworksLaunchDataNotify_ENET_IS_RELIABLE FireworksLaunchDataNotify_CmdId = 1
)

// Enum value maps for FireworksLaunchDataNotify_CmdId.
var (
	FireworksLaunchDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5928: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FireworksLaunchDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5928,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FireworksLaunchDataNotify_CmdId) Enum() *FireworksLaunchDataNotify_CmdId {
	p := new(FireworksLaunchDataNotify_CmdId)
	*p = x
	return p
}

func (x FireworksLaunchDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FireworksLaunchDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[48].Descriptor()
}

func (FireworksLaunchDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[48]
}

func (x FireworksLaunchDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FireworksLaunchDataNotify_CmdId.Descriptor instead.
func (FireworksLaunchDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{59, 0}
}

type ChangeWidgetBackgroundActiveStateReq_CmdId int32

const (
	ChangeWidgetBackgroundActiveStateReq_NONE             ChangeWidgetBackgroundActiveStateReq_CmdId = 0
	ChangeWidgetBackgroundActiveStateReq_CMD_ID           ChangeWidgetBackgroundActiveStateReq_CmdId = 5907
	ChangeWidgetBackgroundActiveStateReq_ENET_CHANNEL_ID  ChangeWidgetBackgroundActiveStateReq_CmdId = 0
	ChangeWidgetBackgroundActiveStateReq_ENET_IS_RELIABLE ChangeWidgetBackgroundActiveStateReq_CmdId = 1
	ChangeWidgetBackgroundActiveStateReq_IS_ALLOW_CLIENT  ChangeWidgetBackgroundActiveStateReq_CmdId = 1
)

// Enum value maps for ChangeWidgetBackgroundActiveStateReq_CmdId.
var (
	ChangeWidgetBackgroundActiveStateReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5907: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ChangeWidgetBackgroundActiveStateReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5907,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ChangeWidgetBackgroundActiveStateReq_CmdId) Enum() *ChangeWidgetBackgroundActiveStateReq_CmdId {
	p := new(ChangeWidgetBackgroundActiveStateReq_CmdId)
	*p = x
	return p
}

func (x ChangeWidgetBackgroundActiveStateReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeWidgetBackgroundActiveStateReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[49].Descriptor()
}

func (ChangeWidgetBackgroundActiveStateReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[49]
}

func (x ChangeWidgetBackgroundActiveStateReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeWidgetBackgroundActiveStateReq_CmdId.Descriptor instead.
func (ChangeWidgetBackgroundActiveStateReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{60, 0}
}

type ChangeWidgetBackgroundActiveStateRsp_CmdId int32

const (
	ChangeWidgetBackgroundActiveStateRsp_NONE             ChangeWidgetBackgroundActiveStateRsp_CmdId = 0
	ChangeWidgetBackgroundActiveStateRsp_CMD_ID           ChangeWidgetBackgroundActiveStateRsp_CmdId = 6060
	ChangeWidgetBackgroundActiveStateRsp_ENET_CHANNEL_ID  ChangeWidgetBackgroundActiveStateRsp_CmdId = 0
	ChangeWidgetBackgroundActiveStateRsp_ENET_IS_RELIABLE ChangeWidgetBackgroundActiveStateRsp_CmdId = 1
)

// Enum value maps for ChangeWidgetBackgroundActiveStateRsp_CmdId.
var (
	ChangeWidgetBackgroundActiveStateRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6060: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ChangeWidgetBackgroundActiveStateRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6060,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ChangeWidgetBackgroundActiveStateRsp_CmdId) Enum() *ChangeWidgetBackgroundActiveStateRsp_CmdId {
	p := new(ChangeWidgetBackgroundActiveStateRsp_CmdId)
	*p = x
	return p
}

func (x ChangeWidgetBackgroundActiveStateRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeWidgetBackgroundActiveStateRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[50].Descriptor()
}

func (ChangeWidgetBackgroundActiveStateRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[50]
}

func (x ChangeWidgetBackgroundActiveStateRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeWidgetBackgroundActiveStateRsp_CmdId.Descriptor instead.
func (ChangeWidgetBackgroundActiveStateRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{61, 0}
}

type AllWidgetBackgroundActiveStateNotify_CmdId int32

const (
	AllWidgetBackgroundActiveStateNotify_NONE             AllWidgetBackgroundActiveStateNotify_CmdId = 0
	AllWidgetBackgroundActiveStateNotify_CMD_ID           AllWidgetBackgroundActiveStateNotify_CmdId = 6092
	AllWidgetBackgroundActiveStateNotify_ENET_CHANNEL_ID  AllWidgetBackgroundActiveStateNotify_CmdId = 0
	AllWidgetBackgroundActiveStateNotify_ENET_IS_RELIABLE AllWidgetBackgroundActiveStateNotify_CmdId = 1
)

// Enum value maps for AllWidgetBackgroundActiveStateNotify_CmdId.
var (
	AllWidgetBackgroundActiveStateNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		6092: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AllWidgetBackgroundActiveStateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6092,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AllWidgetBackgroundActiveStateNotify_CmdId) Enum() *AllWidgetBackgroundActiveStateNotify_CmdId {
	p := new(AllWidgetBackgroundActiveStateNotify_CmdId)
	*p = x
	return p
}

func (x AllWidgetBackgroundActiveStateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllWidgetBackgroundActiveStateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[51].Descriptor()
}

func (AllWidgetBackgroundActiveStateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[51]
}

func (x AllWidgetBackgroundActiveStateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllWidgetBackgroundActiveStateNotify_CmdId.Descriptor instead.
func (AllWidgetBackgroundActiveStateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{62, 0}
}

type RemotePlayerWidgetNotify_CmdId int32

const (
	RemotePlayerWidgetNotify_NONE             RemotePlayerWidgetNotify_CmdId = 0
	RemotePlayerWidgetNotify_CMD_ID           RemotePlayerWidgetNotify_CmdId = 5995
	RemotePlayerWidgetNotify_ENET_CHANNEL_ID  RemotePlayerWidgetNotify_CmdId = 0
	RemotePlayerWidgetNotify_ENET_IS_RELIABLE RemotePlayerWidgetNotify_CmdId = 1
)

// Enum value maps for RemotePlayerWidgetNotify_CmdId.
var (
	RemotePlayerWidgetNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5995: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	RemotePlayerWidgetNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5995,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x RemotePlayerWidgetNotify_CmdId) Enum() *RemotePlayerWidgetNotify_CmdId {
	p := new(RemotePlayerWidgetNotify_CmdId)
	*p = x
	return p
}

func (x RemotePlayerWidgetNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemotePlayerWidgetNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[52].Descriptor()
}

func (RemotePlayerWidgetNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[52]
}

func (x RemotePlayerWidgetNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemotePlayerWidgetNotify_CmdId.Descriptor instead.
func (RemotePlayerWidgetNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{64, 0}
}

type WidgetWeatherWizardDataNotify_CmdId int32

const (
	WidgetWeatherWizardDataNotify_NONE             WidgetWeatherWizardDataNotify_CmdId = 0
	WidgetWeatherWizardDataNotify_CMD_ID           WidgetWeatherWizardDataNotify_CmdId = 5942
	WidgetWeatherWizardDataNotify_ENET_CHANNEL_ID  WidgetWeatherWizardDataNotify_CmdId = 0
	WidgetWeatherWizardDataNotify_ENET_IS_RELIABLE WidgetWeatherWizardDataNotify_CmdId = 1
)

// Enum value maps for WidgetWeatherWizardDataNotify_CmdId.
var (
	WidgetWeatherWizardDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5942: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	WidgetWeatherWizardDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5942,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x WidgetWeatherWizardDataNotify_CmdId) Enum() *WidgetWeatherWizardDataNotify_CmdId {
	p := new(WidgetWeatherWizardDataNotify_CmdId)
	*p = x
	return p
}

func (x WidgetWeatherWizardDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetWeatherWizardDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_widget_proto_enumTypes[53].Descriptor()
}

func (WidgetWeatherWizardDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_widget_proto_enumTypes[53]
}

func (x WidgetWeatherWizardDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetWeatherWizardDataNotify_CmdId.Descriptor instead.
func (WidgetWeatherWizardDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{65, 0}
}

type AnchorPointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId       uint32  `protobuf:"varint,5,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	AnchorPointId uint32  `protobuf:"varint,9,opt,name=anchor_point_id,json=anchorPointId,proto3" json:"anchor_point_id,omitempty"`
	EndTime       uint32  `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Pos           *Vector `protobuf:"bytes,15,opt,name=pos,proto3" json:"pos,omitempty"`
	Rot           *Vector `protobuf:"bytes,2,opt,name=rot,proto3" json:"rot,omitempty"`
}

func (x *AnchorPointData) Reset() {
	*x = AnchorPointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorPointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorPointData) ProtoMessage() {}

func (x *AnchorPointData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorPointData.ProtoReflect.Descriptor instead.
func (*AnchorPointData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{0}
}

func (x *AnchorPointData) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *AnchorPointData) GetAnchorPointId() uint32 {
	if x != nil {
		return x.AnchorPointId
	}
	return 0
}

func (x *AnchorPointData) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AnchorPointData) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *AnchorPointData) GetRot() *Vector {
	if x != nil {
		return x.Rot
	}
	return nil
}

type AnchorPointDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorPointList []*AnchorPointData `protobuf:"bytes,10,rep,name=anchor_point_list,json=anchorPointList,proto3" json:"anchor_point_list,omitempty"`
	NextUsableTime  uint32             `protobuf:"varint,14,opt,name=next_usable_time,json=nextUsableTime,proto3" json:"next_usable_time,omitempty"`
}

func (x *AnchorPointDataNotify) Reset() {
	*x = AnchorPointDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorPointDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorPointDataNotify) ProtoMessage() {}

func (x *AnchorPointDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorPointDataNotify.ProtoReflect.Descriptor instead.
func (*AnchorPointDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{1}
}

func (x *AnchorPointDataNotify) GetAnchorPointList() []*AnchorPointData {
	if x != nil {
		return x.AnchorPointList
	}
	return nil
}

func (x *AnchorPointDataNotify) GetNextUsableTime() uint32 {
	if x != nil {
		return x.NextUsableTime
	}
	return 0
}

type AnchorPointOpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorPointId     uint32 `protobuf:"varint,9,opt,name=anchor_point_id,json=anchorPointId,proto3" json:"anchor_point_id,omitempty"`
	AnchorPointOpType uint32 `protobuf:"varint,12,opt,name=anchor_point_op_type,json=anchorPointOpType,proto3" json:"anchor_point_op_type,omitempty"`
}

func (x *AnchorPointOpReq) Reset() {
	*x = AnchorPointOpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorPointOpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorPointOpReq) ProtoMessage() {}

func (x *AnchorPointOpReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorPointOpReq.ProtoReflect.Descriptor instead.
func (*AnchorPointOpReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{2}
}

func (x *AnchorPointOpReq) GetAnchorPointId() uint32 {
	if x != nil {
		return x.AnchorPointId
	}
	return 0
}

func (x *AnchorPointOpReq) GetAnchorPointOpType() uint32 {
	if x != nil {
		return x.AnchorPointOpType
	}
	return 0
}

type AnchorPointOpRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode           int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AnchorPointId     uint32 `protobuf:"varint,12,opt,name=anchor_point_id,json=anchorPointId,proto3" json:"anchor_point_id,omitempty"`
	AnchorPointOpType uint32 `protobuf:"varint,4,opt,name=anchor_point_op_type,json=anchorPointOpType,proto3" json:"anchor_point_op_type,omitempty"`
}

func (x *AnchorPointOpRsp) Reset() {
	*x = AnchorPointOpRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorPointOpRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorPointOpRsp) ProtoMessage() {}

func (x *AnchorPointOpRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorPointOpRsp.ProtoReflect.Descriptor instead.
func (*AnchorPointOpRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{3}
}

func (x *AnchorPointOpRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AnchorPointOpRsp) GetAnchorPointId() uint32 {
	if x != nil {
		return x.AnchorPointId
	}
	return 0
}

func (x *AnchorPointOpRsp) GetAnchorPointOpType() uint32 {
	if x != nil {
		return x.AnchorPointOpType
	}
	return 0
}

type LunchBoxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotMaterialMap map[uint32]uint32 `protobuf:"bytes,3,rep,name=slot_material_map,json=slotMaterialMap,proto3" json:"slot_material_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *LunchBoxData) Reset() {
	*x = LunchBoxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LunchBoxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LunchBoxData) ProtoMessage() {}

func (x *LunchBoxData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LunchBoxData.ProtoReflect.Descriptor instead.
func (*LunchBoxData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{4}
}

func (x *LunchBoxData) GetSlotMaterialMap() map[uint32]uint32 {
	if x != nil {
		return x.SlotMaterialMap
	}
	return nil
}

type SetUpLunchBoxWidgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LunchBoxData *LunchBoxData `protobuf:"bytes,6,opt,name=lunch_box_data,json=lunchBoxData,proto3" json:"lunch_box_data,omitempty"`
}

func (x *SetUpLunchBoxWidgetReq) Reset() {
	*x = SetUpLunchBoxWidgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLunchBoxWidgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLunchBoxWidgetReq) ProtoMessage() {}

func (x *SetUpLunchBoxWidgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLunchBoxWidgetReq.ProtoReflect.Descriptor instead.
func (*SetUpLunchBoxWidgetReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{5}
}

func (x *SetUpLunchBoxWidgetReq) GetLunchBoxData() *LunchBoxData {
	if x != nil {
		return x.LunchBoxData
	}
	return nil
}

type SetUpLunchBoxWidgetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LunchBoxData *LunchBoxData `protobuf:"bytes,3,opt,name=lunch_box_data,json=lunchBoxData,proto3" json:"lunch_box_data,omitempty"`
	Retcode      int32         `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetUpLunchBoxWidgetRsp) Reset() {
	*x = SetUpLunchBoxWidgetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLunchBoxWidgetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLunchBoxWidgetRsp) ProtoMessage() {}

func (x *SetUpLunchBoxWidgetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLunchBoxWidgetRsp.ProtoReflect.Descriptor instead.
func (*SetUpLunchBoxWidgetRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{6}
}

func (x *SetUpLunchBoxWidgetRsp) GetLunchBoxData() *LunchBoxData {
	if x != nil {
		return x.LunchBoxData
	}
	return nil
}

func (x *SetUpLunchBoxWidgetRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type OneoffGatherPointDetectorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintCenterPos  *Vector `protobuf:"bytes,7,opt,name=hint_center_pos,json=hintCenterPos,proto3" json:"hint_center_pos,omitempty"`
	HintRadius     uint32  `protobuf:"varint,14,opt,name=hint_radius,json=hintRadius,proto3" json:"hint_radius,omitempty"`
	MaterialId     uint32  `protobuf:"varint,10,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ConfigId       uint32  `protobuf:"varint,6,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	GroupId        uint32  `protobuf:"varint,13,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsAllCollected bool    `protobuf:"varint,4,opt,name=is_all_collected,json=isAllCollected,proto3" json:"is_all_collected,omitempty"`
	IsHintValid    bool    `protobuf:"varint,15,opt,name=is_hint_valid,json=isHintValid,proto3" json:"is_hint_valid,omitempty"`
}

func (x *OneoffGatherPointDetectorData) Reset() {
	*x = OneoffGatherPointDetectorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneoffGatherPointDetectorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneoffGatherPointDetectorData) ProtoMessage() {}

func (x *OneoffGatherPointDetectorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneoffGatherPointDetectorData.ProtoReflect.Descriptor instead.
func (*OneoffGatherPointDetectorData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{7}
}

func (x *OneoffGatherPointDetectorData) GetHintCenterPos() *Vector {
	if x != nil {
		return x.HintCenterPos
	}
	return nil
}

func (x *OneoffGatherPointDetectorData) GetHintRadius() uint32 {
	if x != nil {
		return x.HintRadius
	}
	return 0
}

func (x *OneoffGatherPointDetectorData) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *OneoffGatherPointDetectorData) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *OneoffGatherPointDetectorData) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OneoffGatherPointDetectorData) GetIsAllCollected() bool {
	if x != nil {
		return x.IsAllCollected
	}
	return false
}

func (x *OneoffGatherPointDetectorData) GetIsHintValid() bool {
	if x != nil {
		return x.IsHintValid
	}
	return false
}

type ClientCollectorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId uint32 `protobuf:"varint,10,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	MaxPoints  uint32 `protobuf:"varint,8,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	CurrPoints uint32 `protobuf:"varint,13,opt,name=curr_points,json=currPoints,proto3" json:"curr_points,omitempty"`
}

func (x *ClientCollectorData) Reset() {
	*x = ClientCollectorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCollectorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCollectorData) ProtoMessage() {}

func (x *ClientCollectorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCollectorData.ProtoReflect.Descriptor instead.
func (*ClientCollectorData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{8}
}

func (x *ClientCollectorData) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *ClientCollectorData) GetMaxPoints() uint32 {
	if x != nil {
		return x.MaxPoints
	}
	return 0
}

func (x *ClientCollectorData) GetCurrPoints() uint32 {
	if x != nil {
		return x.CurrPoints
	}
	return 0
}

type TreasureMapDetectorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId         uint32    `protobuf:"varint,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	CenterPos        *Vector   `protobuf:"bytes,7,opt,name=center_pos,json=centerPos,proto3" json:"center_pos,omitempty"`
	IsRegionDetected bool      `protobuf:"varint,6,opt,name=is_region_detected,json=isRegionDetected,proto3" json:"is_region_detected,omitempty"`
	SpotList         []*Vector `protobuf:"bytes,10,rep,name=spot_list,json=spotList,proto3" json:"spot_list,omitempty"`
	Radius           uint32    `protobuf:"varint,14,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *TreasureMapDetectorData) Reset() {
	*x = TreasureMapDetectorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureMapDetectorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureMapDetectorData) ProtoMessage() {}

func (x *TreasureMapDetectorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureMapDetectorData.ProtoReflect.Descriptor instead.
func (*TreasureMapDetectorData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{9}
}

func (x *TreasureMapDetectorData) GetRegionId() uint32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *TreasureMapDetectorData) GetCenterPos() *Vector {
	if x != nil {
		return x.CenterPos
	}
	return nil
}

func (x *TreasureMapDetectorData) GetIsRegionDetected() bool {
	if x != nil {
		return x.IsRegionDetected
	}
	return false
}

func (x *TreasureMapDetectorData) GetSpotList() []*Vector {
	if x != nil {
		return x.SpotList
	}
	return nil
}

func (x *TreasureMapDetectorData) GetRadius() uint32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type SkyCrystalDetectorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsHintValid   bool    `protobuf:"varint,3,opt,name=is_hint_valid,json=isHintValid,proto3" json:"is_hint_valid,omitempty"`
	HintCenterPos *Vector `protobuf:"bytes,8,opt,name=hint_center_pos,json=hintCenterPos,proto3" json:"hint_center_pos,omitempty"`
	GroupId       uint32  `protobuf:"varint,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ConfigId      uint32  `protobuf:"varint,9,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *SkyCrystalDetectorData) Reset() {
	*x = SkyCrystalDetectorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyCrystalDetectorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyCrystalDetectorData) ProtoMessage() {}

func (x *SkyCrystalDetectorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyCrystalDetectorData.ProtoReflect.Descriptor instead.
func (*SkyCrystalDetectorData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{10}
}

func (x *SkyCrystalDetectorData) GetIsHintValid() bool {
	if x != nil {
		return x.IsHintValid
	}
	return false
}

func (x *SkyCrystalDetectorData) GetHintCenterPos() *Vector {
	if x != nil {
		return x.HintCenterPos
	}
	return nil
}

func (x *SkyCrystalDetectorData) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SkyCrystalDetectorData) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type SkyCrystalDetectorQuickUseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkyCrystalDetectorData *SkyCrystalDetectorData `protobuf:"bytes,9,opt,name=sky_crystal_detector_data,json=skyCrystalDetectorData,proto3" json:"sky_crystal_detector_data,omitempty"`
	Retcode                int32                   `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SkyCrystalDetectorQuickUseResult) Reset() {
	*x = SkyCrystalDetectorQuickUseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyCrystalDetectorQuickUseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyCrystalDetectorQuickUseResult) ProtoMessage() {}

func (x *SkyCrystalDetectorQuickUseResult) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyCrystalDetectorQuickUseResult.ProtoReflect.Descriptor instead.
func (*SkyCrystalDetectorQuickUseResult) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{11}
}

func (x *SkyCrystalDetectorQuickUseResult) GetSkyCrystalDetectorData() *SkyCrystalDetectorData {
	if x != nil {
		return x.SkyCrystalDetectorData
	}
	return nil
}

func (x *SkyCrystalDetectorQuickUseResult) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type WeatherWizardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShieldValue uint32 `protobuf:"varint,13,opt,name=shield_value,json=shieldValue,proto3" json:"shield_value,omitempty"`
}

func (x *WeatherWizardData) Reset() {
	*x = WeatherWizardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherWizardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherWizardData) ProtoMessage() {}

func (x *WeatherWizardData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherWizardData.ProtoReflect.Descriptor instead.
func (*WeatherWizardData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{12}
}

func (x *WeatherWizardData) GetShieldValue() uint32 {
	if x != nil {
		return x.ShieldValue
	}
	return 0
}

type WidgetCameraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetEntityId uint32 `protobuf:"varint,4,opt,name=target_entity_id,json=targetEntityId,proto3" json:"target_entity_id,omitempty"`
}

func (x *WidgetCameraInfo) Reset() {
	*x = WidgetCameraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCameraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCameraInfo) ProtoMessage() {}

func (x *WidgetCameraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCameraInfo.ProtoReflect.Descriptor instead.
func (*WidgetCameraInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{13}
}

func (x *WidgetCameraInfo) GetTargetEntityId() uint32 {
	if x != nil {
		return x.TargetEntityId
	}
	return 0
}

type WidgetThunderBirdFeatherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdList []uint32 `protobuf:"varint,4,rep,packed,name=entity_id_list,json=entityIdList,proto3" json:"entity_id_list,omitempty"`
}

func (x *WidgetThunderBirdFeatherInfo) Reset() {
	*x = WidgetThunderBirdFeatherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetThunderBirdFeatherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetThunderBirdFeatherInfo) ProtoMessage() {}

func (x *WidgetThunderBirdFeatherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetThunderBirdFeatherInfo.ProtoReflect.Descriptor instead.
func (*WidgetThunderBirdFeatherInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{14}
}

func (x *WidgetThunderBirdFeatherInfo) GetEntityIdList() []uint32 {
	if x != nil {
		return x.EntityIdList
	}
	return nil
}

type QuickUseWidgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//
	//	*QuickUseWidgetReq_LocationInfo
	//	*QuickUseWidgetReq_CameraInfo
	//	*QuickUseWidgetReq_CreatorInfo
	//	*QuickUseWidgetReq_ThunderBirdFeatherInfo
	Param isQuickUseWidgetReq_Param `protobuf_oneof:"param"`
}

func (x *QuickUseWidgetReq) Reset() {
	*x = QuickUseWidgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickUseWidgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickUseWidgetReq) ProtoMessage() {}

func (x *QuickUseWidgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickUseWidgetReq.ProtoReflect.Descriptor instead.
func (*QuickUseWidgetReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{15}
}

func (m *QuickUseWidgetReq) GetParam() isQuickUseWidgetReq_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *QuickUseWidgetReq) GetLocationInfo() *WidgetCreateLocationInfo {
	if x, ok := x.GetParam().(*QuickUseWidgetReq_LocationInfo); ok {
		return x.LocationInfo
	}
	return nil
}

func (x *QuickUseWidgetReq) GetCameraInfo() *WidgetCameraInfo {
	if x, ok := x.GetParam().(*QuickUseWidgetReq_CameraInfo); ok {
		return x.CameraInfo
	}
	return nil
}

func (x *QuickUseWidgetReq) GetCreatorInfo() *WidgetCreatorInfo {
	if x, ok := x.GetParam().(*QuickUseWidgetReq_CreatorInfo); ok {
		return x.CreatorInfo
	}
	return nil
}

func (x *QuickUseWidgetReq) GetThunderBirdFeatherInfo() *WidgetThunderBirdFeatherInfo {
	if x, ok := x.GetParam().(*QuickUseWidgetReq_ThunderBirdFeatherInfo); ok {
		return x.ThunderBirdFeatherInfo
	}
	return nil
}

type isQuickUseWidgetReq_Param interface {
	isQuickUseWidgetReq_Param()
}

type QuickUseWidgetReq_LocationInfo struct {
	LocationInfo *WidgetCreateLocationInfo `protobuf:"bytes,676,opt,name=location_info,json=locationInfo,proto3,oneof"`
}

type QuickUseWidgetReq_CameraInfo struct {
	CameraInfo *WidgetCameraInfo `protobuf:"bytes,478,opt,name=camera_info,json=cameraInfo,proto3,oneof"`
}

type QuickUseWidgetReq_CreatorInfo struct {
	CreatorInfo *WidgetCreatorInfo `protobuf:"bytes,812,opt,name=creator_info,json=creatorInfo,proto3,oneof"`
}

type QuickUseWidgetReq_ThunderBirdFeatherInfo struct {
	ThunderBirdFeatherInfo *WidgetThunderBirdFeatherInfo `protobuf:"bytes,1859,opt,name=thunder_bird_feather_info,json=thunderBirdFeatherInfo,proto3,oneof"`
}

func (*QuickUseWidgetReq_LocationInfo) isQuickUseWidgetReq_Param() {}

func (*QuickUseWidgetReq_CameraInfo) isQuickUseWidgetReq_Param() {}

func (*QuickUseWidgetReq_CreatorInfo) isQuickUseWidgetReq_Param() {}

func (*QuickUseWidgetReq_ThunderBirdFeatherInfo) isQuickUseWidgetReq_Param() {}

type QuickUseWidgetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId uint32 `protobuf:"varint,6,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	// Types that are assignable to Param:
	//
	//	*QuickUseWidgetRsp_DetectorData
	//	*QuickUseWidgetRsp_ClientCollectorData
	//	*QuickUseWidgetRsp_SkyCrystalDetectorQuickUseResult
	Param isQuickUseWidgetRsp_Param `protobuf_oneof:"param"`
}

func (x *QuickUseWidgetRsp) Reset() {
	*x = QuickUseWidgetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickUseWidgetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickUseWidgetRsp) ProtoMessage() {}

func (x *QuickUseWidgetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickUseWidgetRsp.ProtoReflect.Descriptor instead.
func (*QuickUseWidgetRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{16}
}

func (x *QuickUseWidgetRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *QuickUseWidgetRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (m *QuickUseWidgetRsp) GetParam() isQuickUseWidgetRsp_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *QuickUseWidgetRsp) GetDetectorData() *OneoffGatherPointDetectorData {
	if x, ok := x.GetParam().(*QuickUseWidgetRsp_DetectorData); ok {
		return x.DetectorData
	}
	return nil
}

func (x *QuickUseWidgetRsp) GetClientCollectorData() *ClientCollectorData {
	if x, ok := x.GetParam().(*QuickUseWidgetRsp_ClientCollectorData); ok {
		return x.ClientCollectorData
	}
	return nil
}

func (x *QuickUseWidgetRsp) GetSkyCrystalDetectorQuickUseResult() *SkyCrystalDetectorQuickUseResult {
	if x, ok := x.GetParam().(*QuickUseWidgetRsp_SkyCrystalDetectorQuickUseResult); ok {
		return x.SkyCrystalDetectorQuickUseResult
	}
	return nil
}

type isQuickUseWidgetRsp_Param interface {
	isQuickUseWidgetRsp_Param()
}

type QuickUseWidgetRsp_DetectorData struct {
	DetectorData *OneoffGatherPointDetectorData `protobuf:"bytes,3,opt,name=detector_data,json=detectorData,proto3,oneof"`
}

type QuickUseWidgetRsp_ClientCollectorData struct {
	ClientCollectorData *ClientCollectorData `protobuf:"bytes,15,opt,name=client_collector_data,json=clientCollectorData,proto3,oneof"`
}

type QuickUseWidgetRsp_SkyCrystalDetectorQuickUseResult struct {
	SkyCrystalDetectorQuickUseResult *SkyCrystalDetectorQuickUseResult `protobuf:"bytes,168922,opt,name=sky_crystal_detector_quick_use_result,json=skyCrystalDetectorQuickUseResult,proto3,oneof"`
}

func (*QuickUseWidgetRsp_DetectorData) isQuickUseWidgetRsp_Param() {}

func (*QuickUseWidgetRsp_ClientCollectorData) isQuickUseWidgetRsp_Param() {}

func (*QuickUseWidgetRsp_SkyCrystalDetectorQuickUseResult) isQuickUseWidgetRsp_Param() {}

type WidgetCoolDownData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess    bool   `protobuf:"varint,5,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	CoolDownTime uint64 `protobuf:"varint,4,opt,name=cool_down_time,json=coolDownTime,proto3" json:"cool_down_time,omitempty"`
	Id           uint32 `protobuf:"varint,15,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WidgetCoolDownData) Reset() {
	*x = WidgetCoolDownData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCoolDownData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCoolDownData) ProtoMessage() {}

func (x *WidgetCoolDownData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCoolDownData.ProtoReflect.Descriptor instead.
func (*WidgetCoolDownData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{17}
}

func (x *WidgetCoolDownData) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *WidgetCoolDownData) GetCoolDownTime() uint64 {
	if x != nil {
		return x.CoolDownTime
	}
	return 0
}

func (x *WidgetCoolDownData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WidgetCoolDownNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NormalCoolDownDataList []*WidgetCoolDownData `protobuf:"bytes,1,rep,name=normal_cool_down_data_list,json=normalCoolDownDataList,proto3" json:"normal_cool_down_data_list,omitempty"`
	GroupCoolDownDataList  []*WidgetCoolDownData `protobuf:"bytes,12,rep,name=group_cool_down_data_list,json=groupCoolDownDataList,proto3" json:"group_cool_down_data_list,omitempty"`
}

func (x *WidgetCoolDownNotify) Reset() {
	*x = WidgetCoolDownNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCoolDownNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCoolDownNotify) ProtoMessage() {}

func (x *WidgetCoolDownNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCoolDownNotify.ProtoReflect.Descriptor instead.
func (*WidgetCoolDownNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{18}
}

func (x *WidgetCoolDownNotify) GetNormalCoolDownDataList() []*WidgetCoolDownData {
	if x != nil {
		return x.NormalCoolDownDataList
	}
	return nil
}

func (x *WidgetCoolDownNotify) GetGroupCoolDownDataList() []*WidgetCoolDownData {
	if x != nil {
		return x.GroupCoolDownDataList
	}
	return nil
}

type WidgetReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeatherWizardShieldValue uint32 `protobuf:"varint,7,opt,name=weather_wizard_shield_value,json=weatherWizardShieldValue,proto3" json:"weather_wizard_shield_value,omitempty"`
	IsClearSkyCrystalHint    bool   `protobuf:"varint,5,opt,name=is_clear_sky_crystal_hint,json=isClearSkyCrystalHint,proto3" json:"is_clear_sky_crystal_hint,omitempty"`
	MaterialId               uint32 `protobuf:"varint,15,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	IsClientCollect          bool   `protobuf:"varint,14,opt,name=is_client_collect,json=isClientCollect,proto3" json:"is_client_collect,omitempty"`
	IsClearHint              bool   `protobuf:"varint,13,opt,name=is_clear_hint,json=isClearHint,proto3" json:"is_clear_hint,omitempty"`
}

func (x *WidgetReportReq) Reset() {
	*x = WidgetReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetReportReq) ProtoMessage() {}

func (x *WidgetReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetReportReq.ProtoReflect.Descriptor instead.
func (*WidgetReportReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{19}
}

func (x *WidgetReportReq) GetWeatherWizardShieldValue() uint32 {
	if x != nil {
		return x.WeatherWizardShieldValue
	}
	return 0
}

func (x *WidgetReportReq) GetIsClearSkyCrystalHint() bool {
	if x != nil {
		return x.IsClearSkyCrystalHint
	}
	return false
}

func (x *WidgetReportReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *WidgetReportReq) GetIsClientCollect() bool {
	if x != nil {
		return x.IsClientCollect
	}
	return false
}

func (x *WidgetReportReq) GetIsClearHint() bool {
	if x != nil {
		return x.IsClearHint
	}
	return false
}

type WidgetReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId uint32 `protobuf:"varint,4,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *WidgetReportRsp) Reset() {
	*x = WidgetReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetReportRsp) ProtoMessage() {}

func (x *WidgetReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetReportRsp.ProtoReflect.Descriptor instead.
func (*WidgetReportRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{20}
}

func (x *WidgetReportRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WidgetReportRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type ClientCollectorDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientCollectorDataList []*ClientCollectorData `protobuf:"bytes,13,rep,name=client_collector_data_list,json=clientCollectorDataList,proto3" json:"client_collector_data_list,omitempty"`
}

func (x *ClientCollectorDataNotify) Reset() {
	*x = ClientCollectorDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCollectorDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCollectorDataNotify) ProtoMessage() {}

func (x *ClientCollectorDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCollectorDataNotify.ProtoReflect.Descriptor instead.
func (*ClientCollectorDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{21}
}

func (x *ClientCollectorDataNotify) GetClientCollectorDataList() []*ClientCollectorData {
	if x != nil {
		return x.ClientCollectorDataList
	}
	return nil
}

type OneoffGatherPointDetectorDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneoffGatherPointDetectorDataList []*OneoffGatherPointDetectorData `protobuf:"bytes,3,rep,name=oneoff_gather_point_detector_data_list,json=oneoffGatherPointDetectorDataList,proto3" json:"oneoff_gather_point_detector_data_list,omitempty"`
}

func (x *OneoffGatherPointDetectorDataNotify) Reset() {
	*x = OneoffGatherPointDetectorDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneoffGatherPointDetectorDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneoffGatherPointDetectorDataNotify) ProtoMessage() {}

func (x *OneoffGatherPointDetectorDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneoffGatherPointDetectorDataNotify.ProtoReflect.Descriptor instead.
func (*OneoffGatherPointDetectorDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{22}
}

func (x *OneoffGatherPointDetectorDataNotify) GetOneoffGatherPointDetectorDataList() []*OneoffGatherPointDetectorData {
	if x != nil {
		return x.OneoffGatherPointDetectorDataList
	}
	return nil
}

type SkyCrystalDetectorDataUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkyCrystalDetectorData *SkyCrystalDetectorData `protobuf:"bytes,9,opt,name=sky_crystal_detector_data,json=skyCrystalDetectorData,proto3" json:"sky_crystal_detector_data,omitempty"`
}

func (x *SkyCrystalDetectorDataUpdateNotify) Reset() {
	*x = SkyCrystalDetectorDataUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyCrystalDetectorDataUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyCrystalDetectorDataUpdateNotify) ProtoMessage() {}

func (x *SkyCrystalDetectorDataUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyCrystalDetectorDataUpdateNotify.ProtoReflect.Descriptor instead.
func (*SkyCrystalDetectorDataUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{23}
}

func (x *SkyCrystalDetectorDataUpdateNotify) GetSkyCrystalDetectorData() *SkyCrystalDetectorData {
	if x != nil {
		return x.SkyCrystalDetectorData
	}
	return nil
}

type TreasureMapDetectorDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TreasureMapDetectorData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TreasureMapDetectorDataNotify) Reset() {
	*x = TreasureMapDetectorDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureMapDetectorDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureMapDetectorDataNotify) ProtoMessage() {}

func (x *TreasureMapDetectorDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureMapDetectorDataNotify.ProtoReflect.Descriptor instead.
func (*TreasureMapDetectorDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{24}
}

func (x *TreasureMapDetectorDataNotify) GetData() *TreasureMapDetectorData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WidgetSlotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdOverTime uint32        `protobuf:"varint,9,opt,name=cd_over_time,json=cdOverTime,proto3" json:"cd_over_time,omitempty"`
	Tag        WidgetSlotTag `protobuf:"varint,14,opt,name=tag,proto3,enum=proto.WidgetSlotTag" json:"tag,omitempty"`
	MaterialId uint32        `protobuf:"varint,11,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	IsActive   bool          `protobuf:"varint,12,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *WidgetSlotData) Reset() {
	*x = WidgetSlotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetSlotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetSlotData) ProtoMessage() {}

func (x *WidgetSlotData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetSlotData.ProtoReflect.Descriptor instead.
func (*WidgetSlotData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{25}
}

func (x *WidgetSlotData) GetCdOverTime() uint32 {
	if x != nil {
		return x.CdOverTime
	}
	return 0
}

func (x *WidgetSlotData) GetTag() WidgetSlotTag {
	if x != nil {
		return x.Tag
	}
	return WidgetSlotTag_WIDGET_SLOT_QUICK_USE
}

func (x *WidgetSlotData) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *WidgetSlotData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SetWidgetSlotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagList    []WidgetSlotTag `protobuf:"varint,15,rep,packed,name=tag_list,json=tagList,proto3,enum=proto.WidgetSlotTag" json:"tag_list,omitempty"`
	MaterialId uint32          `protobuf:"varint,6,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Op         WidgetSlotOp    `protobuf:"varint,2,opt,name=op,proto3,enum=proto.WidgetSlotOp" json:"op,omitempty"`
}

func (x *SetWidgetSlotReq) Reset() {
	*x = SetWidgetSlotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWidgetSlotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWidgetSlotReq) ProtoMessage() {}

func (x *SetWidgetSlotReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWidgetSlotReq.ProtoReflect.Descriptor instead.
func (*SetWidgetSlotReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{26}
}

func (x *SetWidgetSlotReq) GetTagList() []WidgetSlotTag {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *SetWidgetSlotReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *SetWidgetSlotReq) GetOp() WidgetSlotOp {
	if x != nil {
		return x.Op
	}
	return WidgetSlotOp_WIDGET_SLOT_OP_ATTACH
}

type SetWidgetSlotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagList    []WidgetSlotTag `protobuf:"varint,15,rep,packed,name=tag_list,json=tagList,proto3,enum=proto.WidgetSlotTag" json:"tag_list,omitempty"`
	Retcode    int32           `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId uint32          `protobuf:"varint,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Op         WidgetSlotOp    `protobuf:"varint,4,opt,name=op,proto3,enum=proto.WidgetSlotOp" json:"op,omitempty"`
}

func (x *SetWidgetSlotRsp) Reset() {
	*x = SetWidgetSlotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWidgetSlotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWidgetSlotRsp) ProtoMessage() {}

func (x *SetWidgetSlotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWidgetSlotRsp.ProtoReflect.Descriptor instead.
func (*SetWidgetSlotRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{27}
}

func (x *SetWidgetSlotRsp) GetTagList() []WidgetSlotTag {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *SetWidgetSlotRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetWidgetSlotRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *SetWidgetSlotRsp) GetOp() WidgetSlotOp {
	if x != nil {
		return x.Op
	}
	return WidgetSlotOp_WIDGET_SLOT_OP_ATTACH
}

type WidgetSlotChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op   WidgetSlotOp    `protobuf:"varint,11,opt,name=op,proto3,enum=proto.WidgetSlotOp" json:"op,omitempty"`
	Slot *WidgetSlotData `protobuf:"bytes,8,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *WidgetSlotChangeNotify) Reset() {
	*x = WidgetSlotChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetSlotChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetSlotChangeNotify) ProtoMessage() {}

func (x *WidgetSlotChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetSlotChangeNotify.ProtoReflect.Descriptor instead.
func (*WidgetSlotChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{28}
}

func (x *WidgetSlotChangeNotify) GetOp() WidgetSlotOp {
	if x != nil {
		return x.Op
	}
	return WidgetSlotOp_WIDGET_SLOT_OP_ATTACH
}

func (x *WidgetSlotChangeNotify) GetSlot() *WidgetSlotData {
	if x != nil {
		return x.Slot
	}
	return nil
}

type GetWidgetSlotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWidgetSlotReq) Reset() {
	*x = GetWidgetSlotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWidgetSlotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWidgetSlotReq) ProtoMessage() {}

func (x *GetWidgetSlotReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWidgetSlotReq.ProtoReflect.Descriptor instead.
func (*GetWidgetSlotReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{29}
}

type GetWidgetSlotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotList []*WidgetSlotData `protobuf:"bytes,13,rep,name=slot_list,json=slotList,proto3" json:"slot_list,omitempty"`
	Retcode  int32             `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *GetWidgetSlotRsp) Reset() {
	*x = GetWidgetSlotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWidgetSlotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWidgetSlotRsp) ProtoMessage() {}

func (x *GetWidgetSlotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWidgetSlotRsp.ProtoReflect.Descriptor instead.
func (*GetWidgetSlotRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{30}
}

func (x *GetWidgetSlotRsp) GetSlotList() []*WidgetSlotData {
	if x != nil {
		return x.SlotList
	}
	return nil
}

func (x *GetWidgetSlotRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AllWidgetDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeatherWizardData                 *WeatherWizardData               `protobuf:"bytes,5,opt,name=weather_wizard_data,json=weatherWizardData,proto3" json:"weather_wizard_data,omitempty"`
	OneoffGatherPointDetectorDataList []*OneoffGatherPointDetectorData `protobuf:"bytes,15,rep,name=oneoff_gather_point_detector_data_list,json=oneoffGatherPointDetectorDataList,proto3" json:"oneoff_gather_point_detector_data_list,omitempty"`
	NormalCoolDownDataList            []*WidgetCoolDownData            `protobuf:"bytes,9,rep,name=normal_cool_down_data_list,json=normalCoolDownDataList,proto3" json:"normal_cool_down_data_list,omitempty"`
	LunchBoxData                      *LunchBoxData                    `protobuf:"bytes,1,opt,name=lunch_box_data,json=lunchBoxData,proto3" json:"lunch_box_data,omitempty"`
	SkyCrystalDetectorData            *SkyCrystalDetectorData          `protobuf:"bytes,12,opt,name=sky_crystal_detector_data,json=skyCrystalDetectorData,proto3" json:"sky_crystal_detector_data,omitempty"`
	ClientCollectorDataList           []*ClientCollectorData           `protobuf:"bytes,4,rep,name=client_collector_data_list,json=clientCollectorDataList,proto3" json:"client_collector_data_list,omitempty"`
	AnchorPointList                   []*AnchorPointData               `protobuf:"bytes,3,rep,name=anchor_point_list,json=anchorPointList,proto3" json:"anchor_point_list,omitempty"`
	CoolDownGroupDataList             []*WidgetCoolDownData            `protobuf:"bytes,13,rep,name=cool_down_group_data_list,json=coolDownGroupDataList,proto3" json:"cool_down_group_data_list,omitempty"`
	NextAnchorPointUsableTime         uint32                           `protobuf:"varint,10,opt,name=next_anchor_point_usable_time,json=nextAnchorPointUsableTime,proto3" json:"next_anchor_point_usable_time,omitempty"`
	SlotList                          []*WidgetSlotData                `protobuf:"bytes,6,rep,name=slot_list,json=slotList,proto3" json:"slot_list,omitempty"`
	BackgroundActiveWidgetList        []uint32                         `protobuf:"varint,11,rep,packed,name=background_active_widget_list,json=backgroundActiveWidgetList,proto3" json:"background_active_widget_list,omitempty"`
}

func (x *AllWidgetDataNotify) Reset() {
	*x = AllWidgetDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllWidgetDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWidgetDataNotify) ProtoMessage() {}

func (x *AllWidgetDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWidgetDataNotify.ProtoReflect.Descriptor instead.
func (*AllWidgetDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{31}
}

func (x *AllWidgetDataNotify) GetWeatherWizardData() *WeatherWizardData {
	if x != nil {
		return x.WeatherWizardData
	}
	return nil
}

func (x *AllWidgetDataNotify) GetOneoffGatherPointDetectorDataList() []*OneoffGatherPointDetectorData {
	if x != nil {
		return x.OneoffGatherPointDetectorDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetNormalCoolDownDataList() []*WidgetCoolDownData {
	if x != nil {
		return x.NormalCoolDownDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetLunchBoxData() *LunchBoxData {
	if x != nil {
		return x.LunchBoxData
	}
	return nil
}

func (x *AllWidgetDataNotify) GetSkyCrystalDetectorData() *SkyCrystalDetectorData {
	if x != nil {
		return x.SkyCrystalDetectorData
	}
	return nil
}

func (x *AllWidgetDataNotify) GetClientCollectorDataList() []*ClientCollectorData {
	if x != nil {
		return x.ClientCollectorDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetAnchorPointList() []*AnchorPointData {
	if x != nil {
		return x.AnchorPointList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetCoolDownGroupDataList() []*WidgetCoolDownData {
	if x != nil {
		return x.CoolDownGroupDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetNextAnchorPointUsableTime() uint32 {
	if x != nil {
		return x.NextAnchorPointUsableTime
	}
	return 0
}

func (x *AllWidgetDataNotify) GetSlotList() []*WidgetSlotData {
	if x != nil {
		return x.SlotList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetBackgroundActiveWidgetList() []uint32 {
	if x != nil {
		return x.BackgroundActiveWidgetList
	}
	return nil
}

type UseWidgetCreateGadgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos        *Vector `protobuf:"bytes,15,opt,name=pos,proto3" json:"pos,omitempty"`
	Rot        *Vector `protobuf:"bytes,12,opt,name=rot,proto3" json:"rot,omitempty"`
	MaterialId uint32  `protobuf:"varint,4,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *UseWidgetCreateGadgetReq) Reset() {
	*x = UseWidgetCreateGadgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseWidgetCreateGadgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseWidgetCreateGadgetReq) ProtoMessage() {}

func (x *UseWidgetCreateGadgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseWidgetCreateGadgetReq.ProtoReflect.Descriptor instead.
func (*UseWidgetCreateGadgetReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{32}
}

func (x *UseWidgetCreateGadgetReq) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *UseWidgetCreateGadgetReq) GetRot() *Vector {
	if x != nil {
		return x.Rot
	}
	return nil
}

func (x *UseWidgetCreateGadgetReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type UseWidgetCreateGadgetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId uint32 `protobuf:"varint,12,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *UseWidgetCreateGadgetRsp) Reset() {
	*x = UseWidgetCreateGadgetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseWidgetCreateGadgetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseWidgetCreateGadgetRsp) ProtoMessage() {}

func (x *UseWidgetCreateGadgetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseWidgetCreateGadgetRsp.ProtoReflect.Descriptor instead.
func (*UseWidgetCreateGadgetRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{33}
}

func (x *UseWidgetCreateGadgetRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UseWidgetCreateGadgetRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type UseWidgetRetractGadgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32 `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *UseWidgetRetractGadgetReq) Reset() {
	*x = UseWidgetRetractGadgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseWidgetRetractGadgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseWidgetRetractGadgetReq) ProtoMessage() {}

func (x *UseWidgetRetractGadgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseWidgetRetractGadgetReq.ProtoReflect.Descriptor instead.
func (*UseWidgetRetractGadgetReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{34}
}

func (x *UseWidgetRetractGadgetReq) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type UseWidgetRetractGadgetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	EntityId uint32 `protobuf:"varint,14,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *UseWidgetRetractGadgetRsp) Reset() {
	*x = UseWidgetRetractGadgetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseWidgetRetractGadgetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseWidgetRetractGadgetRsp) ProtoMessage() {}

func (x *UseWidgetRetractGadgetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseWidgetRetractGadgetRsp.ProtoReflect.Descriptor instead.
func (*UseWidgetRetractGadgetRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{35}
}

func (x *UseWidgetRetractGadgetRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UseWidgetRetractGadgetRsp) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type WidgetGadgetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GadgetEntityIdList []uint32 `protobuf:"varint,1,rep,packed,name=gadget_entity_id_list,json=gadgetEntityIdList,proto3" json:"gadget_entity_id_list,omitempty"`
	GadgetId           uint32   `protobuf:"varint,8,opt,name=gadget_id,json=gadgetId,proto3" json:"gadget_id,omitempty"`
}

func (x *WidgetGadgetData) Reset() {
	*x = WidgetGadgetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetGadgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetGadgetData) ProtoMessage() {}

func (x *WidgetGadgetData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetGadgetData.ProtoReflect.Descriptor instead.
func (*WidgetGadgetData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{36}
}

func (x *WidgetGadgetData) GetGadgetEntityIdList() []uint32 {
	if x != nil {
		return x.GadgetEntityIdList
	}
	return nil
}

func (x *WidgetGadgetData) GetGadgetId() uint32 {
	if x != nil {
		return x.GadgetId
	}
	return 0
}

type WidgetGadgetAllDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetGadgetData []*WidgetGadgetData `protobuf:"bytes,13,rep,name=widget_gadget_data,json=widgetGadgetData,proto3" json:"widget_gadget_data,omitempty"`
}

func (x *WidgetGadgetAllDataNotify) Reset() {
	*x = WidgetGadgetAllDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetGadgetAllDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetGadgetAllDataNotify) ProtoMessage() {}

func (x *WidgetGadgetAllDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetGadgetAllDataNotify.ProtoReflect.Descriptor instead.
func (*WidgetGadgetAllDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{37}
}

func (x *WidgetGadgetAllDataNotify) GetWidgetGadgetData() []*WidgetGadgetData {
	if x != nil {
		return x.WidgetGadgetData
	}
	return nil
}

type WidgetGadgetDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetGadgetData *WidgetGadgetData `protobuf:"bytes,12,opt,name=widget_gadget_data,json=widgetGadgetData,proto3" json:"widget_gadget_data,omitempty"`
}

func (x *WidgetGadgetDataNotify) Reset() {
	*x = WidgetGadgetDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetGadgetDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetGadgetDataNotify) ProtoMessage() {}

func (x *WidgetGadgetDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetGadgetDataNotify.ProtoReflect.Descriptor instead.
func (*WidgetGadgetDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{38}
}

func (x *WidgetGadgetDataNotify) GetWidgetGadgetData() *WidgetGadgetData {
	if x != nil {
		return x.WidgetGadgetData
	}
	return nil
}

type WidgetGadgetDestroyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId uint32 `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *WidgetGadgetDestroyNotify) Reset() {
	*x = WidgetGadgetDestroyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetGadgetDestroyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetGadgetDestroyNotify) ProtoMessage() {}

func (x *WidgetGadgetDestroyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetGadgetDestroyNotify.ProtoReflect.Descriptor instead.
func (*WidgetGadgetDestroyNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{39}
}

func (x *WidgetGadgetDestroyNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type WidgetCreateLocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rot *Vector `protobuf:"bytes,3,opt,name=rot,proto3" json:"rot,omitempty"`
	Pos *Vector `protobuf:"bytes,10,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *WidgetCreateLocationInfo) Reset() {
	*x = WidgetCreateLocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCreateLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCreateLocationInfo) ProtoMessage() {}

func (x *WidgetCreateLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCreateLocationInfo.ProtoReflect.Descriptor instead.
func (*WidgetCreateLocationInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{40}
}

func (x *WidgetCreateLocationInfo) GetRot() *Vector {
	if x != nil {
		return x.Rot
	}
	return nil
}

func (x *WidgetCreateLocationInfo) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type WidgetCreatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType       WidgetCreatorOpType       `protobuf:"varint,10,opt,name=op_type,json=opType,proto3,enum=proto.WidgetCreatorOpType" json:"op_type,omitempty"`
	EntityId     uint32                    `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	LocationInfo *WidgetCreateLocationInfo `protobuf:"bytes,12,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
}

func (x *WidgetCreatorInfo) Reset() {
	*x = WidgetCreatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCreatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCreatorInfo) ProtoMessage() {}

func (x *WidgetCreatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCreatorInfo.ProtoReflect.Descriptor instead.
func (*WidgetCreatorInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{41}
}

func (x *WidgetCreatorInfo) GetOpType() WidgetCreatorOpType {
	if x != nil {
		return x.OpType
	}
	return WidgetCreatorOpType_WIDGET_CREATOR_TYPE_NONE
}

func (x *WidgetCreatorInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *WidgetCreatorInfo) GetLocationInfo() *WidgetCreateLocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

type WidgetDoBagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId uint32 `protobuf:"varint,9,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	// Types that are assignable to OpInfo:
	//
	//	*WidgetDoBagReq_LocationInfo
	//	*WidgetDoBagReq_WidgetCreatorInfo
	OpInfo isWidgetDoBagReq_OpInfo `protobuf_oneof:"op_info"`
}

func (x *WidgetDoBagReq) Reset() {
	*x = WidgetDoBagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetDoBagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetDoBagReq) ProtoMessage() {}

func (x *WidgetDoBagReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetDoBagReq.ProtoReflect.Descriptor instead.
func (*WidgetDoBagReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{42}
}

func (x *WidgetDoBagReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (m *WidgetDoBagReq) GetOpInfo() isWidgetDoBagReq_OpInfo {
	if m != nil {
		return m.OpInfo
	}
	return nil
}

func (x *WidgetDoBagReq) GetLocationInfo() *WidgetCreateLocationInfo {
	if x, ok := x.GetOpInfo().(*WidgetDoBagReq_LocationInfo); ok {
		return x.LocationInfo
	}
	return nil
}

func (x *WidgetDoBagReq) GetWidgetCreatorInfo() *WidgetCreatorInfo {
	if x, ok := x.GetOpInfo().(*WidgetDoBagReq_WidgetCreatorInfo); ok {
		return x.WidgetCreatorInfo
	}
	return nil
}

type isWidgetDoBagReq_OpInfo interface {
	isWidgetDoBagReq_OpInfo()
}

type WidgetDoBagReq_LocationInfo struct {
	LocationInfo *WidgetCreateLocationInfo `protobuf:"bytes,832,opt,name=location_info,json=locationInfo,proto3,oneof"`
}

type WidgetDoBagReq_WidgetCreatorInfo struct {
	WidgetCreatorInfo *WidgetCreatorInfo `protobuf:"bytes,1497,opt,name=widget_creator_info,json=widgetCreatorInfo,proto3,oneof"`
}

func (*WidgetDoBagReq_LocationInfo) isWidgetDoBagReq_OpInfo() {}

func (*WidgetDoBagReq_WidgetCreatorInfo) isWidgetDoBagReq_OpInfo() {}

type WidgetDoBagRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId uint32 `protobuf:"varint,3,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *WidgetDoBagRsp) Reset() {
	*x = WidgetDoBagRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetDoBagRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetDoBagRsp) ProtoMessage() {}

func (x *WidgetDoBagRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetDoBagRsp.ProtoReflect.Descriptor instead.
func (*WidgetDoBagRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{43}
}

func (x *WidgetDoBagRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WidgetDoBagRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type WidgetActiveChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetDataList []*WidgetSlotData `protobuf:"bytes,5,rep,name=widget_data_list,json=widgetDataList,proto3" json:"widget_data_list,omitempty"`
}

func (x *WidgetActiveChangeNotify) Reset() {
	*x = WidgetActiveChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetActiveChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetActiveChangeNotify) ProtoMessage() {}

func (x *WidgetActiveChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetActiveChangeNotify.ProtoReflect.Descriptor instead.
func (*WidgetActiveChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{44}
}

func (x *WidgetActiveChangeNotify) GetWidgetDataList() []*WidgetSlotData {
	if x != nil {
		return x.WidgetDataList
	}
	return nil
}

type WidgetUseAttachAbilityGroupChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAttach   bool   `protobuf:"varint,6,opt,name=is_attach,json=isAttach,proto3" json:"is_attach,omitempty"`
	MaterialId uint32 `protobuf:"varint,11,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *WidgetUseAttachAbilityGroupChangeNotify) Reset() {
	*x = WidgetUseAttachAbilityGroupChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetUseAttachAbilityGroupChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetUseAttachAbilityGroupChangeNotify) ProtoMessage() {}

func (x *WidgetUseAttachAbilityGroupChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetUseAttachAbilityGroupChangeNotify.ProtoReflect.Descriptor instead.
func (*WidgetUseAttachAbilityGroupChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{45}
}

func (x *WidgetUseAttachAbilityGroupChangeNotify) GetIsAttach() bool {
	if x != nil {
		return x.IsAttach
	}
	return false
}

func (x *WidgetUseAttachAbilityGroupChangeNotify) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type WidgetCaptureAnimalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos        *Vector `protobuf:"bytes,10,opt,name=pos,proto3" json:"pos,omitempty"`
	EntityId   uint32  `protobuf:"varint,15,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	MaterialId uint32  `protobuf:"varint,6,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *WidgetCaptureAnimalReq) Reset() {
	*x = WidgetCaptureAnimalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCaptureAnimalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCaptureAnimalReq) ProtoMessage() {}

func (x *WidgetCaptureAnimalReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCaptureAnimalReq.ProtoReflect.Descriptor instead.
func (*WidgetCaptureAnimalReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{46}
}

func (x *WidgetCaptureAnimalReq) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *WidgetCaptureAnimalReq) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *WidgetCaptureAnimalReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type WidgetCaptureAnimalRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32   `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	EntityId   uint32  `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	MaterialId uint32  `protobuf:"varint,8,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Pos        *Vector `protobuf:"bytes,10,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *WidgetCaptureAnimalRsp) Reset() {
	*x = WidgetCaptureAnimalRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetCaptureAnimalRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetCaptureAnimalRsp) ProtoMessage() {}

func (x *WidgetCaptureAnimalRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetCaptureAnimalRsp.ProtoReflect.Descriptor instead.
func (*WidgetCaptureAnimalRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{47}
}

func (x *WidgetCaptureAnimalRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WidgetCaptureAnimalRsp) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *WidgetCaptureAnimalRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *WidgetCaptureAnimalRsp) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type WidgetUpdateExtraCDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId  uint32               `protobuf:"varint,14,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ExtraCdType WIDGET_EXTRA_CD_TYPE `protobuf:"varint,10,opt,name=extra_cd_type,json=extraCdType,proto3,enum=proto.WIDGET_EXTRA_CD_TYPE" json:"extra_cd_type,omitempty"`
	CdGroup     uint32               `protobuf:"varint,7,opt,name=cd_group,json=cdGroup,proto3" json:"cd_group,omitempty"`
}

func (x *WidgetUpdateExtraCDReq) Reset() {
	*x = WidgetUpdateExtraCDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetUpdateExtraCDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetUpdateExtraCDReq) ProtoMessage() {}

func (x *WidgetUpdateExtraCDReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetUpdateExtraCDReq.ProtoReflect.Descriptor instead.
func (*WidgetUpdateExtraCDReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{48}
}

func (x *WidgetUpdateExtraCDReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *WidgetUpdateExtraCDReq) GetExtraCdType() WIDGET_EXTRA_CD_TYPE {
	if x != nil {
		return x.ExtraCdType
	}
	return WIDGET_EXTRA_CD_TYPE_WIDGET_EXTRA_CD_TYPE_NONE
}

func (x *WidgetUpdateExtraCDReq) GetCdGroup() uint32 {
	if x != nil {
		return x.CdGroup
	}
	return 0
}

type WidgetUpdateExtraCDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32                `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId  uint32               `protobuf:"varint,11,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ExtraCdType WIDGET_EXTRA_CD_TYPE `protobuf:"varint,6,opt,name=extra_cd_type,json=extraCdType,proto3,enum=proto.WIDGET_EXTRA_CD_TYPE" json:"extra_cd_type,omitempty"`
	CoolData    *WidgetCoolDownData  `protobuf:"bytes,10,opt,name=cool_data,json=coolData,proto3" json:"cool_data,omitempty"`
	CdGroup     uint32               `protobuf:"varint,15,opt,name=cd_group,json=cdGroup,proto3" json:"cd_group,omitempty"`
}

func (x *WidgetUpdateExtraCDRsp) Reset() {
	*x = WidgetUpdateExtraCDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetUpdateExtraCDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetUpdateExtraCDRsp) ProtoMessage() {}

func (x *WidgetUpdateExtraCDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetUpdateExtraCDRsp.ProtoReflect.Descriptor instead.
func (*WidgetUpdateExtraCDRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{49}
}

func (x *WidgetUpdateExtraCDRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *WidgetUpdateExtraCDRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *WidgetUpdateExtraCDRsp) GetExtraCdType() WIDGET_EXTRA_CD_TYPE {
	if x != nil {
		return x.ExtraCdType
	}
	return WIDGET_EXTRA_CD_TYPE_WIDGET_EXTRA_CD_TYPE_NONE
}

func (x *WidgetUpdateExtraCDRsp) GetCoolData() *WidgetCoolDownData {
	if x != nil {
		return x.CoolData
	}
	return nil
}

func (x *WidgetUpdateExtraCDRsp) GetCdGroup() uint32 {
	if x != nil {
		return x.CdGroup
	}
	return 0
}

type FireworksReformParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  FireworksReformParamType `protobuf:"varint,8,opt,name=type,proto3,enum=proto.FireworksReformParamType" json:"type,omitempty"`
	Value int32                    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FireworksReformParam) Reset() {
	*x = FireworksReformParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksReformParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksReformParam) ProtoMessage() {}

func (x *FireworksReformParam) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksReformParam.ProtoReflect.Descriptor instead.
func (*FireworksReformParam) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{50}
}

func (x *FireworksReformParam) GetType() FireworksReformParamType {
	if x != nil {
		return x.Type
	}
	return FireworksReformParamType_FIREWORKS_REFORM_PARAM_NONE
}

func (x *FireworksReformParam) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FireworksReformData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32                  `protobuf:"varint,13,opt,name=id,proto3" json:"id,omitempty"`
	ReformParamList []*FireworksReformParam `protobuf:"bytes,10,rep,name=reform_param_list,json=reformParamList,proto3" json:"reform_param_list,omitempty"`
}

func (x *FireworksReformData) Reset() {
	*x = FireworksReformData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksReformData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksReformData) ProtoMessage() {}

func (x *FireworksReformData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksReformData.ProtoReflect.Descriptor instead.
func (*FireworksReformData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{51}
}

func (x *FireworksReformData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FireworksReformData) GetReformParamList() []*FireworksReformParam {
	if x != nil {
		return x.ReformParamList
	}
	return nil
}

type FireworksReformDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FireworksReformDataList []*FireworksReformData `protobuf:"bytes,6,rep,name=fireworks_reform_data_list,json=fireworksReformDataList,proto3" json:"fireworks_reform_data_list,omitempty"`
}

func (x *FireworksReformDataNotify) Reset() {
	*x = FireworksReformDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksReformDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksReformDataNotify) ProtoMessage() {}

func (x *FireworksReformDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksReformDataNotify.ProtoReflect.Descriptor instead.
func (*FireworksReformDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{52}
}

func (x *FireworksReformDataNotify) GetFireworksReformDataList() []*FireworksReformData {
	if x != nil {
		return x.FireworksReformDataList
	}
	return nil
}

type ReformFireworksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FireworksReformData *FireworksReformData `protobuf:"bytes,3,opt,name=fireworks_reform_data,json=fireworksReformData,proto3" json:"fireworks_reform_data,omitempty"`
}

func (x *ReformFireworksReq) Reset() {
	*x = ReformFireworksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReformFireworksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReformFireworksReq) ProtoMessage() {}

func (x *ReformFireworksReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReformFireworksReq.ProtoReflect.Descriptor instead.
func (*ReformFireworksReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{53}
}

func (x *ReformFireworksReq) GetFireworksReformData() *FireworksReformData {
	if x != nil {
		return x.FireworksReformData
	}
	return nil
}

type ReformFireworksRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ReformFireworksRsp) Reset() {
	*x = ReformFireworksRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReformFireworksRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReformFireworksRsp) ProtoMessage() {}

func (x *ReformFireworksRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReformFireworksRsp.ProtoReflect.Descriptor instead.
func (*ReformFireworksRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{54}
}

func (x *ReformFireworksRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FireworksLaunchParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32                    `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	Type  FireworksLaunchParamType `protobuf:"varint,4,opt,name=type,proto3,enum=proto.FireworksLaunchParamType" json:"type,omitempty"`
}

func (x *FireworksLaunchParam) Reset() {
	*x = FireworksLaunchParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksLaunchParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksLaunchParam) ProtoMessage() {}

func (x *FireworksLaunchParam) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksLaunchParam.ProtoReflect.Descriptor instead.
func (*FireworksLaunchParam) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{55}
}

func (x *FireworksLaunchParam) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FireworksLaunchParam) GetType() FireworksLaunchParamType {
	if x != nil {
		return x.Type
	}
	return FireworksLaunchParamType_FIREWORKS_LAUNCH_PARAM_NONE
}

type FireworksLaunchSchemeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemeId        uint32                  `protobuf:"varint,3,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id,omitempty"`
	FireworksIdList []uint32                `protobuf:"varint,2,rep,packed,name=fireworks_id_list,json=fireworksIdList,proto3" json:"fireworks_id_list,omitempty"`
	LaunchParamList []*FireworksLaunchParam `protobuf:"bytes,7,rep,name=launch_param_list,json=launchParamList,proto3" json:"launch_param_list,omitempty"`
}

func (x *FireworksLaunchSchemeData) Reset() {
	*x = FireworksLaunchSchemeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksLaunchSchemeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksLaunchSchemeData) ProtoMessage() {}

func (x *FireworksLaunchSchemeData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksLaunchSchemeData.ProtoReflect.Descriptor instead.
func (*FireworksLaunchSchemeData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{56}
}

func (x *FireworksLaunchSchemeData) GetSchemeId() uint32 {
	if x != nil {
		return x.SchemeId
	}
	return 0
}

func (x *FireworksLaunchSchemeData) GetFireworksIdList() []uint32 {
	if x != nil {
		return x.FireworksIdList
	}
	return nil
}

func (x *FireworksLaunchSchemeData) GetLaunchParamList() []*FireworksLaunchParam {
	if x != nil {
		return x.LaunchParamList
	}
	return nil
}

type LaunchFireworksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemeData *FireworksLaunchSchemeData `protobuf:"bytes,13,opt,name=scheme_data,json=schemeData,proto3" json:"scheme_data,omitempty"`
}

func (x *LaunchFireworksReq) Reset() {
	*x = LaunchFireworksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchFireworksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchFireworksReq) ProtoMessage() {}

func (x *LaunchFireworksReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchFireworksReq.ProtoReflect.Descriptor instead.
func (*LaunchFireworksReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{57}
}

func (x *LaunchFireworksReq) GetSchemeData() *FireworksLaunchSchemeData {
	if x != nil {
		return x.SchemeData
	}
	return nil
}

type LaunchFireworksRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *LaunchFireworksRsp) Reset() {
	*x = LaunchFireworksRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchFireworksRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchFireworksRsp) ProtoMessage() {}

func (x *LaunchFireworksRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchFireworksRsp.ProtoReflect.Descriptor instead.
func (*LaunchFireworksRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{58}
}

func (x *LaunchFireworksRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FireworksLaunchDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemeDataList  []*FireworksLaunchSchemeData `protobuf:"bytes,12,rep,name=scheme_data_list,json=schemeDataList,proto3" json:"scheme_data_list,omitempty"`
	LastUseSchemeId uint32                       `protobuf:"varint,4,opt,name=last_use_scheme_id,json=lastUseSchemeId,proto3" json:"last_use_scheme_id,omitempty"`
}

func (x *FireworksLaunchDataNotify) Reset() {
	*x = FireworksLaunchDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireworksLaunchDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireworksLaunchDataNotify) ProtoMessage() {}

func (x *FireworksLaunchDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireworksLaunchDataNotify.ProtoReflect.Descriptor instead.
func (*FireworksLaunchDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{59}
}

func (x *FireworksLaunchDataNotify) GetSchemeDataList() []*FireworksLaunchSchemeData {
	if x != nil {
		return x.SchemeDataList
	}
	return nil
}

func (x *FireworksLaunchDataNotify) GetLastUseSchemeId() uint32 {
	if x != nil {
		return x.LastUseSchemeId
	}
	return 0
}

type ChangeWidgetBackgroundActiveStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive   bool   `protobuf:"varint,15,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	MaterialId uint32 `protobuf:"varint,3,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *ChangeWidgetBackgroundActiveStateReq) Reset() {
	*x = ChangeWidgetBackgroundActiveStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWidgetBackgroundActiveStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWidgetBackgroundActiveStateReq) ProtoMessage() {}

func (x *ChangeWidgetBackgroundActiveStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWidgetBackgroundActiveStateReq.ProtoReflect.Descriptor instead.
func (*ChangeWidgetBackgroundActiveStateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{60}
}

func (x *ChangeWidgetBackgroundActiveStateReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ChangeWidgetBackgroundActiveStateReq) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type ChangeWidgetBackgroundActiveStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MaterialId uint32 `protobuf:"varint,6,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *ChangeWidgetBackgroundActiveStateRsp) Reset() {
	*x = ChangeWidgetBackgroundActiveStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWidgetBackgroundActiveStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWidgetBackgroundActiveStateRsp) ProtoMessage() {}

func (x *ChangeWidgetBackgroundActiveStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWidgetBackgroundActiveStateRsp.ProtoReflect.Descriptor instead.
func (*ChangeWidgetBackgroundActiveStateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{61}
}

func (x *ChangeWidgetBackgroundActiveStateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeWidgetBackgroundActiveStateRsp) GetMaterialId() uint32 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type AllWidgetBackgroundActiveStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundActiveWidgetList []uint32 `protobuf:"varint,3,rep,packed,name=background_active_widget_list,json=backgroundActiveWidgetList,proto3" json:"background_active_widget_list,omitempty"`
}

func (x *AllWidgetBackgroundActiveStateNotify) Reset() {
	*x = AllWidgetBackgroundActiveStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllWidgetBackgroundActiveStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWidgetBackgroundActiveStateNotify) ProtoMessage() {}

func (x *AllWidgetBackgroundActiveStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWidgetBackgroundActiveStateNotify.ProtoReflect.Descriptor instead.
func (*AllWidgetBackgroundActiveStateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{62}
}

func (x *AllWidgetBackgroundActiveStateNotify) GetBackgroundActiveWidgetList() []uint32 {
	if x != nil {
		return x.BackgroundActiveWidgetList
	}
	return nil
}

type PlayerWidgetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32            `protobuf:"varint,14,opt,name=uid,proto3" json:"uid,omitempty"`
	SlotList []*WidgetSlotData `protobuf:"bytes,13,rep,name=slot_list,json=slotList,proto3" json:"slot_list,omitempty"`
}

func (x *PlayerWidgetInfo) Reset() {
	*x = PlayerWidgetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerWidgetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerWidgetInfo) ProtoMessage() {}

func (x *PlayerWidgetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerWidgetInfo.ProtoReflect.Descriptor instead.
func (*PlayerWidgetInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{63}
}

func (x *PlayerWidgetInfo) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerWidgetInfo) GetSlotList() []*WidgetSlotData {
	if x != nil {
		return x.SlotList
	}
	return nil
}

type RemotePlayerWidgetNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerWidgetInfoList []*PlayerWidgetInfo `protobuf:"bytes,3,rep,name=player_widget_info_list,json=playerWidgetInfoList,proto3" json:"player_widget_info_list,omitempty"`
}

func (x *RemotePlayerWidgetNotify) Reset() {
	*x = RemotePlayerWidgetNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemotePlayerWidgetNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePlayerWidgetNotify) ProtoMessage() {}

func (x *RemotePlayerWidgetNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemotePlayerWidgetNotify.ProtoReflect.Descriptor instead.
func (*RemotePlayerWidgetNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{64}
}

func (x *RemotePlayerWidgetNotify) GetPlayerWidgetInfoList() []*PlayerWidgetInfo {
	if x != nil {
		return x.PlayerWidgetInfoList
	}
	return nil
}

type WidgetWeatherWizardDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShieldValue uint32 `protobuf:"varint,15,opt,name=shield_value,json=shieldValue,proto3" json:"shield_value,omitempty"`
}

func (x *WidgetWeatherWizardDataNotify) Reset() {
	*x = WidgetWeatherWizardDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_widget_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetWeatherWizardDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetWeatherWizardDataNotify) ProtoMessage() {}

func (x *WidgetWeatherWizardDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_widget_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetWeatherWizardDataNotify.ProtoReflect.Descriptor instead.
func (*WidgetWeatherWizardDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_widget_proto_rawDescGZIP(), []int{65}
}

func (x *WidgetWeatherWizardDataNotify) GetShieldValue() uint32 {
	if x != nil {
		return x.ShieldValue
	}
	return 0
}

var File_cmd_cmd_widget_proto protoreflect.FileDescriptor

var file_cmd_cmd_widget_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0f,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x03, 0x72, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x72, 0x6f, 0x74, 0x22,
	0xd4, 0x01, 0x0a, 0x15, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x42, 0x0a, 0x11, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb4, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb8, 0x02, 0x0a, 0x10, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xa1, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x67, 0x0a, 0x11, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x4e, 0x43, 0x48, 0x4f,
	0x52, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x54, 0x45, 0x4c, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52, 0x5f,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10,
	0x02, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9c, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x4c, 0x75, 0x6e,
	0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x11, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x75, 0x6e,
	0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x73, 0x6c, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x1a,
	0x42, 0x0a, 0x14, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x75, 0x6e,
	0x63, 0x68, 0x42, 0x6f, 0x78, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x39,
	0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6c, 0x75, 0x6e,
	0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbc, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x63,
	0x68, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f,
	0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc6, 0x21, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9e, 0x02, 0x0a,
	0x1d, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35,
	0x0a, 0x0f, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x68, 0x69, 0x6e, 0x74, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x69, 0x6e, 0x74,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x68, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x48, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x76, 0x0a,
	0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x73, 0x70,
	0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x70,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0xab,
	0x01, 0x0a, 0x16, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x68, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x48, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x35, 0x0a,
	0x0f, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x68, 0x69, 0x6e, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a,
	0x20, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x58, 0x0a, 0x19, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x79,
	0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x16, 0x73, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x11, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x10, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1c, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x69, 0x72, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xa9, 0x03, 0x0a, 0x11, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa4, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xde, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xac, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x61, 0x0a,
	0x19, 0x74, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc3, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x69, 0x72, 0x64, 0x46, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x16, 0x74, 0x68, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x42, 0x69, 0x72, 0x64, 0x46, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcb, 0x21,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xc3, 0x03,
	0x0a, 0x11, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4b,
	0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x15, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x7c, 0x0a,
	0x25, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xda, 0xa7, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x20, 0x73, 0x6b, 0x79, 0x43, 0x72,
	0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xae, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x69, 0x0a, 0x12, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x6c,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91,
	0x02, 0x0a, 0x14, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x55, 0x0a, 0x1a, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x16, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xc7, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xdf, 0x02, 0x0a, 0x0f, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x1b, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x5f, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x69,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x48, 0x69, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x48, 0x69, 0x6e, 0x74,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc3, 0x21,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xc4, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x57, 0x0a, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa8, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x23, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x77, 0x0a, 0x26, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x66, 0x5f, 0x67, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x66, 0x47,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x21, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x66, 0x47, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc9, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x22, 0x53, 0x6b, 0x79,
	0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x58, 0x0a, 0x19, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x79, 0x43, 0x72,
	0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x16, 0x73, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbf, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcc, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x98, 0x01,
	0x0a, 0x0e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0c, 0x63, 0x64, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a,
	0x08, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x54, 0x61, 0x67, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70,
	0x52, 0x02, 0x6f, 0x70, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xa3, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x08, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x54, 0x61, 0x67, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb5, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb7, 0x01,
	0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x23, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x29, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xab, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9d, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xaf, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x73, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0x9e, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xbe, 0x07, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x48, 0x0a, 0x13, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x11, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x77, 0x0a, 0x26, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x66, 0x5f, 0x67, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x65, 0x6f,
	0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x21, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x1a,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43,
	0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x16, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x62, 0x6f, 0x78,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0c, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58,
	0x0a, 0x19, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79,
	0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x16, 0x73, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x1a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x11, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x19, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x15, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x1d, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x19, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xaf, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x1f, 0x0a, 0x03, 0x72, 0x6f, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x72, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xc5, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc2, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9c, 0x01,
	0x0a, 0x19, 0x55, 0x73, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbe, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb6, 0x01, 0x0a,
	0x19, 0x55, 0x73, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa5,
	0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x62, 0x0a, 0x10, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x47,
	0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x61, 0x64,
	0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x45, 0x0a, 0x12, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x5f, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbc, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xae, 0x01,
	0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x45, 0x0a, 0x12, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x5f, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaa, 0x21, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x87,
	0x01, 0x0a, 0x19, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x47, 0x61, 0x64, 0x67, 0x65, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb2, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x5c, 0x0a, 0x18, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x03, 0x72, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x03, 0x72, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x07,
	0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb6, 0x02, 0x0a, 0x0e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44,
	0x6f, 0x42, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc0, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4b, 0x0a, 0x13, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd9, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9f, 0x21, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01,
	0x0a, 0x0e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x42, 0x61, 0x67, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc8, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3f, 0x0a, 0x10, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb8, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x27, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa2,
	0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0xdb, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa0, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe0,
	0x01, 0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xc1, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xf9, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x49, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x43, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc8, 0x2e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb6, 0x02,
	0x0a, 0x16, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x43, 0x44, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f,
	0x43, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x43, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xa8, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x61, 0x0a, 0x14, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x33,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x66, 0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a, 0x13, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66,
	0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x57, 0x0a, 0x1a, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66,
	0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x91, 0x2f,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xc8, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x15, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x13, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x94, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7d, 0x0a, 0x12, 0x52, 0x65,
	0x66, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa9, 0x2e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x61, 0x0a, 0x14, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xad, 0x01, 0x0a,
	0x19, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0f, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a,
	0x12, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xca, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7d, 0x0a, 0x12, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa9, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x19, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa8, 0x2e,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xc8, 0x01, 0x0a, 0x24, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x93, 0x2e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x24, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xac, 0x2f, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb8, 0x01,
	0x0a, 0x24, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcc, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x58, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x4e, 0x0a, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xeb, 0x2e, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x91,
	0x01, 0x0a, 0x1d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xb6, 0x2e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x2a, 0x5f, 0x0a, 0x10, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x53, 0x6c,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x55, 0x4e, 0x43, 0x48, 0x5f,
	0x42, 0x4f, 0x58, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x4c, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x4c, 0x4f,
	0x54, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x55,
	0x4e, 0x43, 0x48, 0x5f, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x48, 0x45, 0x41,
	0x4c, 0x10, 0x02, 0x2a, 0x49, 0x0a, 0x0d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x53,
	0x4c, 0x4f, 0x54, 0x5f, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x41,
	0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x10, 0x01, 0x2a, 0x44,
	0x0a, 0x0c, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x12, 0x19,
	0x0a, 0x15, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x4f, 0x50,
	0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x49, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x44, 0x45, 0x54, 0x41,
	0x43, 0x48, 0x10, 0x01, 0x2a, 0x80, 0x01, 0x0a, 0x13, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x49,
	0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x57,
	0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x5e, 0x0a, 0x14, 0x57, 0x49, 0x44, 0x47, 0x45,
	0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x1d, 0x0a, 0x19, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f,
	0x43, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x27,
	0x0a, 0x23, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53,
	0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a, 0xea, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x72, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b,
	0x53, 0x5f, 0x52, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52,
	0x4b, 0x53, 0x5f, 0x52, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x52, 0x45, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x5f, 0x48, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49,
	0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x46,
	0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x44, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x59, 0x10, 0x04, 0x12,
	0x23, 0x0a, 0x1f, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x05, 0x2a, 0xee, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x4c,
	0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f,
	0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x50,
	0x45, 0x41, 0x54, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52,
	0x4b, 0x53, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x56, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x49, 0x52,
	0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x46,
	0x49, 0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x56, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x52, 0x45, 0x57, 0x4f, 0x52,
	0x4b, 0x53, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f,
	0x4d, 0x41, 0x58, 0x10, 0x05, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_widget_proto_rawDescOnce sync.Once
	file_cmd_cmd_widget_proto_rawDescData = file_cmd_cmd_widget_proto_rawDesc
)

func file_cmd_cmd_widget_proto_rawDescGZIP() []byte {
	file_cmd_cmd_widget_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_widget_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_widget_proto_rawDescData)
	})
	return file_cmd_cmd_widget_proto_rawDescData
}

var file_cmd_cmd_widget_proto_enumTypes = make([]protoimpl.EnumInfo, 54)
var file_cmd_cmd_widget_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_cmd_cmd_widget_proto_goTypes = []interface{}{
	(LunchBoxSlotType)(0),                              // 0: proto.LunchBoxSlotType
	(WidgetSlotTag)(0),                                 // 1: proto.WidgetSlotTag
	(WidgetSlotOp)(0),                                  // 2: proto.WidgetSlotOp
	(WidgetCreatorOpType)(0),                           // 3: proto.WidgetCreatorOpType
	(WIDGET_EXTRA_CD_TYPE)(0),                          // 4: proto.WIDGET_EXTRA_CD_TYPE
	(FireworksReformParamType)(0),                      // 5: proto.FireworksReformParamType
	(FireworksLaunchParamType)(0),                      // 6: proto.FireworksLaunchParamType
	(AnchorPointDataNotify_CmdId)(0),                   // 7: proto.AnchorPointDataNotify.CmdId
	(AnchorPointOpReq_CmdId)(0),                        // 8: proto.AnchorPointOpReq.CmdId
	(AnchorPointOpReq_AnchorPointOpType)(0),            // 9: proto.AnchorPointOpReq.AnchorPointOpType
	(AnchorPointOpRsp_CmdId)(0),                        // 10: proto.AnchorPointOpRsp.CmdId
	(SetUpLunchBoxWidgetReq_CmdId)(0),                  // 11: proto.SetUpLunchBoxWidgetReq.CmdId
	(SetUpLunchBoxWidgetRsp_CmdId)(0),                  // 12: proto.SetUpLunchBoxWidgetRsp.CmdId
	(QuickUseWidgetReq_CmdId)(0),                       // 13: proto.QuickUseWidgetReq.CmdId
	(QuickUseWidgetRsp_CmdId)(0),                       // 14: proto.QuickUseWidgetRsp.CmdId
	(WidgetCoolDownNotify_CmdId)(0),                    // 15: proto.WidgetCoolDownNotify.CmdId
	(WidgetReportReq_CmdId)(0),                         // 16: proto.WidgetReportReq.CmdId
	(WidgetReportRsp_CmdId)(0),                         // 17: proto.WidgetReportRsp.CmdId
	(ClientCollectorDataNotify_CmdId)(0),               // 18: proto.ClientCollectorDataNotify.CmdId
	(OneoffGatherPointDetectorDataNotify_CmdId)(0),     // 19: proto.OneoffGatherPointDetectorDataNotify.CmdId
	(SkyCrystalDetectorDataUpdateNotify_CmdId)(0),      // 20: proto.SkyCrystalDetectorDataUpdateNotify.CmdId
	(TreasureMapDetectorDataNotify_CmdId)(0),           // 21: proto.TreasureMapDetectorDataNotify.CmdId
	(SetWidgetSlotReq_CmdId)(0),                        // 22: proto.SetWidgetSlotReq.CmdId
	(SetWidgetSlotRsp_CmdId)(0),                        // 23: proto.SetWidgetSlotRsp.CmdId
	(WidgetSlotChangeNotify_CmdId)(0),                  // 24: proto.WidgetSlotChangeNotify.CmdId
	(GetWidgetSlotReq_CmdId)(0),                        // 25: proto.GetWidgetSlotReq.CmdId
	(GetWidgetSlotRsp_CmdId)(0),                        // 26: proto.GetWidgetSlotRsp.CmdId
	(AllWidgetDataNotify_CmdId)(0),                     // 27: proto.AllWidgetDataNotify.CmdId
	(UseWidgetCreateGadgetReq_CmdId)(0),                // 28: proto.UseWidgetCreateGadgetReq.CmdId
	(UseWidgetCreateGadgetRsp_CmdId)(0),                // 29: proto.UseWidgetCreateGadgetRsp.CmdId
	(UseWidgetRetractGadgetReq_CmdId)(0),               // 30: proto.UseWidgetRetractGadgetReq.CmdId
	(UseWidgetRetractGadgetRsp_CmdId)(0),               // 31: proto.UseWidgetRetractGadgetRsp.CmdId
	(WidgetGadgetAllDataNotify_CmdId)(0),               // 32: proto.WidgetGadgetAllDataNotify.CmdId
	(WidgetGadgetDataNotify_CmdId)(0),                  // 33: proto.WidgetGadgetDataNotify.CmdId
	(WidgetGadgetDestroyNotify_CmdId)(0),               // 34: proto.WidgetGadgetDestroyNotify.CmdId
	(WidgetDoBagReq_CmdId)(0),                          // 35: proto.WidgetDoBagReq.CmdId
	(WidgetDoBagRsp_CmdId)(0),                          // 36: proto.WidgetDoBagRsp.CmdId
	(WidgetActiveChangeNotify_CmdId)(0),                // 37: proto.WidgetActiveChangeNotify.CmdId
	(WidgetUseAttachAbilityGroupChangeNotify_CmdId)(0), // 38: proto.WidgetUseAttachAbilityGroupChangeNotify.CmdId
	(WidgetCaptureAnimalReq_CmdId)(0),                  // 39: proto.WidgetCaptureAnimalReq.CmdId
	(WidgetCaptureAnimalRsp_CmdId)(0),                  // 40: proto.WidgetCaptureAnimalRsp.CmdId
	(WidgetUpdateExtraCDReq_CmdId)(0),                  // 41: proto.WidgetUpdateExtraCDReq.CmdId
	(WidgetUpdateExtraCDRsp_CmdId)(0),                  // 42: proto.WidgetUpdateExtraCDRsp.CmdId
	(FireworksReformDataNotify_CmdId)(0),               // 43: proto.FireworksReformDataNotify.CmdId
	(ReformFireworksReq_CmdId)(0),                      // 44: proto.ReformFireworksReq.CmdId
	(ReformFireworksRsp_CmdId)(0),                      // 45: proto.ReformFireworksRsp.CmdId
	(LaunchFireworksReq_CmdId)(0),                      // 46: proto.LaunchFireworksReq.CmdId
	(LaunchFireworksRsp_CmdId)(0),                      // 47: proto.LaunchFireworksRsp.CmdId
	(FireworksLaunchDataNotify_CmdId)(0),               // 48: proto.FireworksLaunchDataNotify.CmdId
	(ChangeWidgetBackgroundActiveStateReq_CmdId)(0),    // 49: proto.ChangeWidgetBackgroundActiveStateReq.CmdId
	(ChangeWidgetBackgroundActiveStateRsp_CmdId)(0),    // 50: proto.ChangeWidgetBackgroundActiveStateRsp.CmdId
	(AllWidgetBackgroundActiveStateNotify_CmdId)(0),    // 51: proto.AllWidgetBackgroundActiveStateNotify.CmdId
	(RemotePlayerWidgetNotify_CmdId)(0),                // 52: proto.RemotePlayerWidgetNotify.CmdId
	(WidgetWeatherWizardDataNotify_CmdId)(0),           // 53: proto.WidgetWeatherWizardDataNotify.CmdId
	(*AnchorPointData)(nil),                            // 54: proto.AnchorPointData
	(*AnchorPointDataNotify)(nil),                      // 55: proto.AnchorPointDataNotify
	(*AnchorPointOpReq)(nil),                           // 56: proto.AnchorPointOpReq
	(*AnchorPointOpRsp)(nil),                           // 57: proto.AnchorPointOpRsp
	(*LunchBoxData)(nil),                               // 58: proto.LunchBoxData
	(*SetUpLunchBoxWidgetReq)(nil),                     // 59: proto.SetUpLunchBoxWidgetReq
	(*SetUpLunchBoxWidgetRsp)(nil),                     // 60: proto.SetUpLunchBoxWidgetRsp
	(*OneoffGatherPointDetectorData)(nil),              // 61: proto.OneoffGatherPointDetectorData
	(*ClientCollectorData)(nil),                        // 62: proto.ClientCollectorData
	(*TreasureMapDetectorData)(nil),                    // 63: proto.TreasureMapDetectorData
	(*SkyCrystalDetectorData)(nil),                     // 64: proto.SkyCrystalDetectorData
	(*SkyCrystalDetectorQuickUseResult)(nil),           // 65: proto.SkyCrystalDetectorQuickUseResult
	(*WeatherWizardData)(nil),                          // 66: proto.WeatherWizardData
	(*WidgetCameraInfo)(nil),                           // 67: proto.WidgetCameraInfo
	(*WidgetThunderBirdFeatherInfo)(nil),               // 68: proto.WidgetThunderBirdFeatherInfo
	(*QuickUseWidgetReq)(nil),                          // 69: proto.QuickUseWidgetReq
	(*QuickUseWidgetRsp)(nil),                          // 70: proto.QuickUseWidgetRsp
	(*WidgetCoolDownData)(nil),                         // 71: proto.WidgetCoolDownData
	(*WidgetCoolDownNotify)(nil),                       // 72: proto.WidgetCoolDownNotify
	(*WidgetReportReq)(nil),                            // 73: proto.WidgetReportReq
	(*WidgetReportRsp)(nil),                            // 74: proto.WidgetReportRsp
	(*ClientCollectorDataNotify)(nil),                  // 75: proto.ClientCollectorDataNotify
	(*OneoffGatherPointDetectorDataNotify)(nil),        // 76: proto.OneoffGatherPointDetectorDataNotify
	(*SkyCrystalDetectorDataUpdateNotify)(nil),         // 77: proto.SkyCrystalDetectorDataUpdateNotify
	(*TreasureMapDetectorDataNotify)(nil),              // 78: proto.TreasureMapDetectorDataNotify
	(*WidgetSlotData)(nil),                             // 79: proto.WidgetSlotData
	(*SetWidgetSlotReq)(nil),                           // 80: proto.SetWidgetSlotReq
	(*SetWidgetSlotRsp)(nil),                           // 81: proto.SetWidgetSlotRsp
	(*WidgetSlotChangeNotify)(nil),                     // 82: proto.WidgetSlotChangeNotify
	(*GetWidgetSlotReq)(nil),                           // 83: proto.GetWidgetSlotReq
	(*GetWidgetSlotRsp)(nil),                           // 84: proto.GetWidgetSlotRsp
	(*AllWidgetDataNotify)(nil),                        // 85: proto.AllWidgetDataNotify
	(*UseWidgetCreateGadgetReq)(nil),                   // 86: proto.UseWidgetCreateGadgetReq
	(*UseWidgetCreateGadgetRsp)(nil),                   // 87: proto.UseWidgetCreateGadgetRsp
	(*UseWidgetRetractGadgetReq)(nil),                  // 88: proto.UseWidgetRetractGadgetReq
	(*UseWidgetRetractGadgetRsp)(nil),                  // 89: proto.UseWidgetRetractGadgetRsp
	(*WidgetGadgetData)(nil),                           // 90: proto.WidgetGadgetData
	(*WidgetGadgetAllDataNotify)(nil),                  // 91: proto.WidgetGadgetAllDataNotify
	(*WidgetGadgetDataNotify)(nil),                     // 92: proto.WidgetGadgetDataNotify
	(*WidgetGadgetDestroyNotify)(nil),                  // 93: proto.WidgetGadgetDestroyNotify
	(*WidgetCreateLocationInfo)(nil),                   // 94: proto.WidgetCreateLocationInfo
	(*WidgetCreatorInfo)(nil),                          // 95: proto.WidgetCreatorInfo
	(*WidgetDoBagReq)(nil),                             // 96: proto.WidgetDoBagReq
	(*WidgetDoBagRsp)(nil),                             // 97: proto.WidgetDoBagRsp
	(*WidgetActiveChangeNotify)(nil),                   // 98: proto.WidgetActiveChangeNotify
	(*WidgetUseAttachAbilityGroupChangeNotify)(nil),    // 99: proto.WidgetUseAttachAbilityGroupChangeNotify
	(*WidgetCaptureAnimalReq)(nil),                     // 100: proto.WidgetCaptureAnimalReq
	(*WidgetCaptureAnimalRsp)(nil),                     // 101: proto.WidgetCaptureAnimalRsp
	(*WidgetUpdateExtraCDReq)(nil),                     // 102: proto.WidgetUpdateExtraCDReq
	(*WidgetUpdateExtraCDRsp)(nil),                     // 103: proto.WidgetUpdateExtraCDRsp
	(*FireworksReformParam)(nil),                       // 104: proto.FireworksReformParam
	(*FireworksReformData)(nil),                        // 105: proto.FireworksReformData
	(*FireworksReformDataNotify)(nil),                  // 106: proto.FireworksReformDataNotify
	(*ReformFireworksReq)(nil),                         // 107: proto.ReformFireworksReq
	(*ReformFireworksRsp)(nil),                         // 108: proto.ReformFireworksRsp
	(*FireworksLaunchParam)(nil),                       // 109: proto.FireworksLaunchParam
	(*FireworksLaunchSchemeData)(nil),                  // 110: proto.FireworksLaunchSchemeData
	(*LaunchFireworksReq)(nil),                         // 111: proto.LaunchFireworksReq
	(*LaunchFireworksRsp)(nil),                         // 112: proto.LaunchFireworksRsp
	(*FireworksLaunchDataNotify)(nil),                  // 113: proto.FireworksLaunchDataNotify
	(*ChangeWidgetBackgroundActiveStateReq)(nil),       // 114: proto.ChangeWidgetBackgroundActiveStateReq
	(*ChangeWidgetBackgroundActiveStateRsp)(nil),       // 115: proto.ChangeWidgetBackgroundActiveStateRsp
	(*AllWidgetBackgroundActiveStateNotify)(nil),       // 116: proto.AllWidgetBackgroundActiveStateNotify
	(*PlayerWidgetInfo)(nil),                           // 117: proto.PlayerWidgetInfo
	(*RemotePlayerWidgetNotify)(nil),                   // 118: proto.RemotePlayerWidgetNotify
	(*WidgetWeatherWizardDataNotify)(nil),              // 119: proto.WidgetWeatherWizardDataNotify
	nil,                                                // 120: proto.LunchBoxData.SlotMaterialMapEntry
	(*Vector)(nil),                                     // 121: proto.Vector
}
var file_cmd_cmd_widget_proto_depIdxs = []int32{
	121, // 0: proto.AnchorPointData.pos:type_name -> proto.Vector
	121, // 1: proto.AnchorPointData.rot:type_name -> proto.Vector
	54,  // 2: proto.AnchorPointDataNotify.anchor_point_list:type_name -> proto.AnchorPointData
	120, // 3: proto.LunchBoxData.slot_material_map:type_name -> proto.LunchBoxData.SlotMaterialMapEntry
	58,  // 4: proto.SetUpLunchBoxWidgetReq.lunch_box_data:type_name -> proto.LunchBoxData
	58,  // 5: proto.SetUpLunchBoxWidgetRsp.lunch_box_data:type_name -> proto.LunchBoxData
	121, // 6: proto.OneoffGatherPointDetectorData.hint_center_pos:type_name -> proto.Vector
	121, // 7: proto.TreasureMapDetectorData.center_pos:type_name -> proto.Vector
	121, // 8: proto.TreasureMapDetectorData.spot_list:type_name -> proto.Vector
	121, // 9: proto.SkyCrystalDetectorData.hint_center_pos:type_name -> proto.Vector
	64,  // 10: proto.SkyCrystalDetectorQuickUseResult.sky_crystal_detector_data:type_name -> proto.SkyCrystalDetectorData
	94,  // 11: proto.QuickUseWidgetReq.location_info:type_name -> proto.WidgetCreateLocationInfo
	67,  // 12: proto.QuickUseWidgetReq.camera_info:type_name -> proto.WidgetCameraInfo
	95,  // 13: proto.QuickUseWidgetReq.creator_info:type_name -> proto.WidgetCreatorInfo
	68,  // 14: proto.QuickUseWidgetReq.thunder_bird_feather_info:type_name -> proto.WidgetThunderBirdFeatherInfo
	61,  // 15: proto.QuickUseWidgetRsp.detector_data:type_name -> proto.OneoffGatherPointDetectorData
	62,  // 16: proto.QuickUseWidgetRsp.client_collector_data:type_name -> proto.ClientCollectorData
	65,  // 17: proto.QuickUseWidgetRsp.sky_crystal_detector_quick_use_result:type_name -> proto.SkyCrystalDetectorQuickUseResult
	71,  // 18: proto.WidgetCoolDownNotify.normal_cool_down_data_list:type_name -> proto.WidgetCoolDownData
	71,  // 19: proto.WidgetCoolDownNotify.group_cool_down_data_list:type_name -> proto.WidgetCoolDownData
	62,  // 20: proto.ClientCollectorDataNotify.client_collector_data_list:type_name -> proto.ClientCollectorData
	61,  // 21: proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list:type_name -> proto.OneoffGatherPointDetectorData
	64,  // 22: proto.SkyCrystalDetectorDataUpdateNotify.sky_crystal_detector_data:type_name -> proto.SkyCrystalDetectorData
	63,  // 23: proto.TreasureMapDetectorDataNotify.data:type_name -> proto.TreasureMapDetectorData
	1,   // 24: proto.WidgetSlotData.tag:type_name -> proto.WidgetSlotTag
	1,   // 25: proto.SetWidgetSlotReq.tag_list:type_name -> proto.WidgetSlotTag
	2,   // 26: proto.SetWidgetSlotReq.op:type_name -> proto.WidgetSlotOp
	1,   // 27: proto.SetWidgetSlotRsp.tag_list:type_name -> proto.WidgetSlotTag
	2,   // 28: proto.SetWidgetSlotRsp.op:type_name -> proto.WidgetSlotOp
	2,   // 29: proto.WidgetSlotChangeNotify.op:type_name -> proto.WidgetSlotOp
	79,  // 30: proto.WidgetSlotChangeNotify.slot:type_name -> proto.WidgetSlotData
	79,  // 31: proto.GetWidgetSlotRsp.slot_list:type_name -> proto.WidgetSlotData
	66,  // 32: proto.AllWidgetDataNotify.weather_wizard_data:type_name -> proto.WeatherWizardData
	61,  // 33: proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list:type_name -> proto.OneoffGatherPointDetectorData
	71,  // 34: proto.AllWidgetDataNotify.normal_cool_down_data_list:type_name -> proto.WidgetCoolDownData
	58,  // 35: proto.AllWidgetDataNotify.lunch_box_data:type_name -> proto.LunchBoxData
	64,  // 36: proto.AllWidgetDataNotify.sky_crystal_detector_data:type_name -> proto.SkyCrystalDetectorData
	62,  // 37: proto.AllWidgetDataNotify.client_collector_data_list:type_name -> proto.ClientCollectorData
	54,  // 38: proto.AllWidgetDataNotify.anchor_point_list:type_name -> proto.AnchorPointData
	71,  // 39: proto.AllWidgetDataNotify.cool_down_group_data_list:type_name -> proto.WidgetCoolDownData
	79,  // 40: proto.AllWidgetDataNotify.slot_list:type_name -> proto.WidgetSlotData
	121, // 41: proto.UseWidgetCreateGadgetReq.pos:type_name -> proto.Vector
	121, // 42: proto.UseWidgetCreateGadgetReq.rot:type_name -> proto.Vector
	90,  // 43: proto.WidgetGadgetAllDataNotify.widget_gadget_data:type_name -> proto.WidgetGadgetData
	90,  // 44: proto.WidgetGadgetDataNotify.widget_gadget_data:type_name -> proto.WidgetGadgetData
	121, // 45: proto.WidgetCreateLocationInfo.rot:type_name -> proto.Vector
	121, // 46: proto.WidgetCreateLocationInfo.pos:type_name -> proto.Vector
	3,   // 47: proto.WidgetCreatorInfo.op_type:type_name -> proto.WidgetCreatorOpType
	94,  // 48: proto.WidgetCreatorInfo.location_info:type_name -> proto.WidgetCreateLocationInfo
	94,  // 49: proto.WidgetDoBagReq.location_info:type_name -> proto.WidgetCreateLocationInfo
	95,  // 50: proto.WidgetDoBagReq.widget_creator_info:type_name -> proto.WidgetCreatorInfo
	79,  // 51: proto.WidgetActiveChangeNotify.widget_data_list:type_name -> proto.WidgetSlotData
	121, // 52: proto.WidgetCaptureAnimalReq.pos:type_name -> proto.Vector
	121, // 53: proto.WidgetCaptureAnimalRsp.pos:type_name -> proto.Vector
	4,   // 54: proto.WidgetUpdateExtraCDReq.extra_cd_type:type_name -> proto.WIDGET_EXTRA_CD_TYPE
	4,   // 55: proto.WidgetUpdateExtraCDRsp.extra_cd_type:type_name -> proto.WIDGET_EXTRA_CD_TYPE
	71,  // 56: proto.WidgetUpdateExtraCDRsp.cool_data:type_name -> proto.WidgetCoolDownData
	5,   // 57: proto.FireworksReformParam.type:type_name -> proto.FireworksReformParamType
	104, // 58: proto.FireworksReformData.reform_param_list:type_name -> proto.FireworksReformParam
	105, // 59: proto.FireworksReformDataNotify.fireworks_reform_data_list:type_name -> proto.FireworksReformData
	105, // 60: proto.ReformFireworksReq.fireworks_reform_data:type_name -> proto.FireworksReformData
	6,   // 61: proto.FireworksLaunchParam.type:type_name -> proto.FireworksLaunchParamType
	109, // 62: proto.FireworksLaunchSchemeData.launch_param_list:type_name -> proto.FireworksLaunchParam
	110, // 63: proto.LaunchFireworksReq.scheme_data:type_name -> proto.FireworksLaunchSchemeData
	110, // 64: proto.FireworksLaunchDataNotify.scheme_data_list:type_name -> proto.FireworksLaunchSchemeData
	79,  // 65: proto.PlayerWidgetInfo.slot_list:type_name -> proto.WidgetSlotData
	117, // 66: proto.RemotePlayerWidgetNotify.player_widget_info_list:type_name -> proto.PlayerWidgetInfo
	67,  // [67:67] is the sub-list for method output_type
	67,  // [67:67] is the sub-list for method input_type
	67,  // [67:67] is the sub-list for extension type_name
	67,  // [67:67] is the sub-list for extension extendee
	0,   // [0:67] is the sub-list for field type_name
}

func init() { file_cmd_cmd_widget_proto_init() }
func file_cmd_cmd_widget_proto_init() {
	if File_cmd_cmd_widget_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_widget_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorPointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorPointDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorPointOpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorPointOpRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LunchBoxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLunchBoxWidgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLunchBoxWidgetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneoffGatherPointDetectorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCollectorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasureMapDetectorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkyCrystalDetectorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkyCrystalDetectorQuickUseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherWizardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCameraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetThunderBirdFeatherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickUseWidgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickUseWidgetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCoolDownData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCoolDownNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCollectorDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneoffGatherPointDetectorDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkyCrystalDetectorDataUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasureMapDetectorDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetSlotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWidgetSlotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWidgetSlotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetSlotChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWidgetSlotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWidgetSlotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllWidgetDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseWidgetCreateGadgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseWidgetCreateGadgetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseWidgetRetractGadgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseWidgetRetractGadgetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetGadgetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetGadgetAllDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetGadgetDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetGadgetDestroyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCreateLocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCreatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetDoBagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetDoBagRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetActiveChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetUseAttachAbilityGroupChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCaptureAnimalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetCaptureAnimalRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetUpdateExtraCDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetUpdateExtraCDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksReformParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksReformData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksReformDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReformFireworksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReformFireworksRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksLaunchParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksLaunchSchemeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchFireworksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchFireworksRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireworksLaunchDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWidgetBackgroundActiveStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWidgetBackgroundActiveStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllWidgetBackgroundActiveStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerWidgetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemotePlayerWidgetNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_widget_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetWeatherWizardDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_cmd_widget_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*QuickUseWidgetReq_LocationInfo)(nil),
		(*QuickUseWidgetReq_CameraInfo)(nil),
		(*QuickUseWidgetReq_CreatorInfo)(nil),
		(*QuickUseWidgetReq_ThunderBirdFeatherInfo)(nil),
	}
	file_cmd_cmd_widget_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*QuickUseWidgetRsp_DetectorData)(nil),
		(*QuickUseWidgetRsp_ClientCollectorData)(nil),
		(*QuickUseWidgetRsp_SkyCrystalDetectorQuickUseResult)(nil),
	}
	file_cmd_cmd_widget_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*WidgetDoBagReq_LocationInfo)(nil),
		(*WidgetDoBagReq_WidgetCreatorInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_widget_proto_rawDesc,
			NumEnums:      54,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_widget_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_widget_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_widget_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_widget_proto_msgTypes,
	}.Build()
	File_cmd_cmd_widget_proto = out.File
	file_cmd_cmd_widget_proto_rawDesc = nil
	file_cmd_cmd_widget_proto_goTypes = nil
	file_cmd_cmd_widget_proto_depIdxs = nil
}
