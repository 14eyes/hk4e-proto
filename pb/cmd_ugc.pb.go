// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_ugc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UgcType int32

const (
	UgcType_UGC_TYPE_NONE       UgcType = 0
	UgcType_UGC_TYPE_MUSIC_GAME UgcType = 1
)

// Enum value maps for UgcType.
var (
	UgcType_name = map[int32]string{
		0: "UGC_TYPE_NONE",
		1: "UGC_TYPE_MUSIC_GAME",
	}
	UgcType_value = map[string]int32{
		"UGC_TYPE_NONE":       0,
		"UGC_TYPE_MUSIC_GAME": 1,
	}
)

func (x UgcType) Enum() *UgcType {
	p := new(UgcType)
	*p = x
	return p
}

func (x UgcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UgcType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[0].Descriptor()
}

func (UgcType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[0]
}

func (x UgcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UgcType.Descriptor instead.
func (UgcType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{0}
}

type GetUgcType int32

const (
	GetUgcType_GET_UGC_NONE         GetUgcType = 0
	GetUgcType_GET_UGC_TYPE_MINE    GetUgcType = 1
	GetUgcType_GET_UGC_TYPE_PUBLISH GetUgcType = 2
)

// Enum value maps for GetUgcType.
var (
	GetUgcType_name = map[int32]string{
		0: "GET_UGC_NONE",
		1: "GET_UGC_TYPE_MINE",
		2: "GET_UGC_TYPE_PUBLISH",
	}
	GetUgcType_value = map[string]int32{
		"GET_UGC_NONE":         0,
		"GET_UGC_TYPE_MINE":    1,
		"GET_UGC_TYPE_PUBLISH": 2,
	}
)

func (x GetUgcType) Enum() *GetUgcType {
	p := new(GetUgcType)
	*p = x
	return p
}

func (x GetUgcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUgcType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[1].Descriptor()
}

func (GetUgcType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[1]
}

func (x GetUgcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUgcType.Descriptor instead.
func (GetUgcType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{1}
}

type RecordUsage int32

const (
	RecordUsage_UGC_RECORD_USAGE_NONE    RecordUsage = 0
	RecordUsage_UGC_RECORD_USAGE_IMPORT  RecordUsage = 1
	RecordUsage_UGC_RECORD_USAGE_PLAY    RecordUsage = 2
	RecordUsage_UGC_RECORD_USAGE_TRIAL   RecordUsage = 3
	RecordUsage_UGC_RECORD_USAGE_COMPARE RecordUsage = 4
)

// Enum value maps for RecordUsage.
var (
	RecordUsage_name = map[int32]string{
		0: "UGC_RECORD_USAGE_NONE",
		1: "UGC_RECORD_USAGE_IMPORT",
		2: "UGC_RECORD_USAGE_PLAY",
		3: "UGC_RECORD_USAGE_TRIAL",
		4: "UGC_RECORD_USAGE_COMPARE",
	}
	RecordUsage_value = map[string]int32{
		"UGC_RECORD_USAGE_NONE":    0,
		"UGC_RECORD_USAGE_IMPORT":  1,
		"UGC_RECORD_USAGE_PLAY":    2,
		"UGC_RECORD_USAGE_TRIAL":   3,
		"UGC_RECORD_USAGE_COMPARE": 4,
	}
)

func (x RecordUsage) Enum() *RecordUsage {
	p := new(RecordUsage)
	*p = x
	return p
}

func (x RecordUsage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordUsage) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[2].Descriptor()
}

func (RecordUsage) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[2]
}

func (x RecordUsage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordUsage.Descriptor instead.
func (RecordUsage) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{2}
}

type GetUgcReq_CmdId int32

const (
	GetUgcReq_NONE             GetUgcReq_CmdId = 0
	GetUgcReq_CMD_ID           GetUgcReq_CmdId = 6326
	GetUgcReq_ENET_CHANNEL_ID  GetUgcReq_CmdId = 0
	GetUgcReq_ENET_IS_RELIABLE GetUgcReq_CmdId = 1
	GetUgcReq_IS_ALLOW_CLIENT  GetUgcReq_CmdId = 1
)

// Enum value maps for GetUgcReq_CmdId.
var (
	GetUgcReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6326: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetUgcReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6326,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetUgcReq_CmdId) Enum() *GetUgcReq_CmdId {
	p := new(GetUgcReq_CmdId)
	*p = x
	return p
}

func (x GetUgcReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUgcReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[3].Descriptor()
}

func (GetUgcReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[3]
}

func (x GetUgcReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUgcReq_CmdId.Descriptor instead.
func (GetUgcReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{4, 0}
}

type GetUgcRsp_CmdId int32

const (
	GetUgcRsp_NONE             GetUgcRsp_CmdId = 0
	GetUgcRsp_CMD_ID           GetUgcRsp_CmdId = 6318
	GetUgcRsp_ENET_CHANNEL_ID  GetUgcRsp_CmdId = 0
	GetUgcRsp_ENET_IS_RELIABLE GetUgcRsp_CmdId = 1
)

// Enum value maps for GetUgcRsp_CmdId.
var (
	GetUgcRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6318: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetUgcRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6318,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetUgcRsp_CmdId) Enum() *GetUgcRsp_CmdId {
	p := new(GetUgcRsp_CmdId)
	*p = x
	return p
}

func (x GetUgcRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUgcRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[4].Descriptor()
}

func (GetUgcRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[4]
}

func (x GetUgcRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUgcRsp_CmdId.Descriptor instead.
func (GetUgcRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{5, 0}
}

type GetUgcBriefInfoReq_CmdId int32

const (
	GetUgcBriefInfoReq_NONE             GetUgcBriefInfoReq_CmdId = 0
	GetUgcBriefInfoReq_CMD_ID           GetUgcBriefInfoReq_CmdId = 6325
	GetUgcBriefInfoReq_ENET_CHANNEL_ID  GetUgcBriefInfoReq_CmdId = 0
	GetUgcBriefInfoReq_ENET_IS_RELIABLE GetUgcBriefInfoReq_CmdId = 1
	GetUgcBriefInfoReq_IS_ALLOW_CLIENT  GetUgcBriefInfoReq_CmdId = 1
)

// Enum value maps for GetUgcBriefInfoReq_CmdId.
var (
	GetUgcBriefInfoReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6325: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	GetUgcBriefInfoReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6325,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x GetUgcBriefInfoReq_CmdId) Enum() *GetUgcBriefInfoReq_CmdId {
	p := new(GetUgcBriefInfoReq_CmdId)
	*p = x
	return p
}

func (x GetUgcBriefInfoReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUgcBriefInfoReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[5].Descriptor()
}

func (GetUgcBriefInfoReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[5]
}

func (x GetUgcBriefInfoReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUgcBriefInfoReq_CmdId.Descriptor instead.
func (GetUgcBriefInfoReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{6, 0}
}

type GetUgcBriefInfoRsp_CmdId int32

const (
	GetUgcBriefInfoRsp_NONE             GetUgcBriefInfoRsp_CmdId = 0
	GetUgcBriefInfoRsp_CMD_ID           GetUgcBriefInfoRsp_CmdId = 6307
	GetUgcBriefInfoRsp_ENET_CHANNEL_ID  GetUgcBriefInfoRsp_CmdId = 0
	GetUgcBriefInfoRsp_ENET_IS_RELIABLE GetUgcBriefInfoRsp_CmdId = 1
)

// Enum value maps for GetUgcBriefInfoRsp_CmdId.
var (
	GetUgcBriefInfoRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6307: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	GetUgcBriefInfoRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6307,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x GetUgcBriefInfoRsp_CmdId) Enum() *GetUgcBriefInfoRsp_CmdId {
	p := new(GetUgcBriefInfoRsp_CmdId)
	*p = x
	return p
}

func (x GetUgcBriefInfoRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUgcBriefInfoRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[6].Descriptor()
}

func (GetUgcBriefInfoRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[6]
}

func (x GetUgcBriefInfoRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUgcBriefInfoRsp_CmdId.Descriptor instead.
func (GetUgcBriefInfoRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{7, 0}
}

type SaveUgcReq_CmdId int32

const (
	SaveUgcReq_NONE             SaveUgcReq_CmdId = 0
	SaveUgcReq_CMD_ID           SaveUgcReq_CmdId = 6329
	SaveUgcReq_ENET_CHANNEL_ID  SaveUgcReq_CmdId = 0
	SaveUgcReq_ENET_IS_RELIABLE SaveUgcReq_CmdId = 1
	SaveUgcReq_IS_ALLOW_CLIENT  SaveUgcReq_CmdId = 1
)

// Enum value maps for SaveUgcReq_CmdId.
var (
	SaveUgcReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6329: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SaveUgcReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6329,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SaveUgcReq_CmdId) Enum() *SaveUgcReq_CmdId {
	p := new(SaveUgcReq_CmdId)
	*p = x
	return p
}

func (x SaveUgcReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SaveUgcReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[7].Descriptor()
}

func (SaveUgcReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[7]
}

func (x SaveUgcReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SaveUgcReq_CmdId.Descriptor instead.
func (SaveUgcReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{8, 0}
}

type SaveUgcRsp_CmdId int32

const (
	SaveUgcRsp_NONE             SaveUgcRsp_CmdId = 0
	SaveUgcRsp_CMD_ID           SaveUgcRsp_CmdId = 6322
	SaveUgcRsp_ENET_CHANNEL_ID  SaveUgcRsp_CmdId = 0
	SaveUgcRsp_ENET_IS_RELIABLE SaveUgcRsp_CmdId = 1
)

// Enum value maps for SaveUgcRsp_CmdId.
var (
	SaveUgcRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6322: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SaveUgcRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6322,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SaveUgcRsp_CmdId) Enum() *SaveUgcRsp_CmdId {
	p := new(SaveUgcRsp_CmdId)
	*p = x
	return p
}

func (x SaveUgcRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SaveUgcRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[8].Descriptor()
}

func (SaveUgcRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[8]
}

func (x SaveUgcRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SaveUgcRsp_CmdId.Descriptor instead.
func (SaveUgcRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{9, 0}
}

type PublishUgcReq_CmdId int32

const (
	PublishUgcReq_NONE             PublishUgcReq_CmdId = 0
	PublishUgcReq_CMD_ID           PublishUgcReq_CmdId = 6344
	PublishUgcReq_ENET_CHANNEL_ID  PublishUgcReq_CmdId = 0
	PublishUgcReq_ENET_IS_RELIABLE PublishUgcReq_CmdId = 1
	PublishUgcReq_IS_ALLOW_CLIENT  PublishUgcReq_CmdId = 1
)

// Enum value maps for PublishUgcReq_CmdId.
var (
	PublishUgcReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6344: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	PublishUgcReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6344,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x PublishUgcReq_CmdId) Enum() *PublishUgcReq_CmdId {
	p := new(PublishUgcReq_CmdId)
	*p = x
	return p
}

func (x PublishUgcReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublishUgcReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[9].Descriptor()
}

func (PublishUgcReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[9]
}

func (x PublishUgcReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublishUgcReq_CmdId.Descriptor instead.
func (PublishUgcReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{10, 0}
}

type PublishUgcRsp_CmdId int32

const (
	PublishUgcRsp_NONE             PublishUgcRsp_CmdId = 0
	PublishUgcRsp_CMD_ID           PublishUgcRsp_CmdId = 6349
	PublishUgcRsp_ENET_CHANNEL_ID  PublishUgcRsp_CmdId = 0
	PublishUgcRsp_ENET_IS_RELIABLE PublishUgcRsp_CmdId = 1
)

// Enum value maps for PublishUgcRsp_CmdId.
var (
	PublishUgcRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6349: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PublishUgcRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6349,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PublishUgcRsp_CmdId) Enum() *PublishUgcRsp_CmdId {
	p := new(PublishUgcRsp_CmdId)
	*p = x
	return p
}

func (x PublishUgcRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublishUgcRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[10].Descriptor()
}

func (PublishUgcRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[10]
}

func (x PublishUgcRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublishUgcRsp_CmdId.Descriptor instead.
func (PublishUgcRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{11, 0}
}

type CheckUgcUpdateReq_CmdId int32

const (
	CheckUgcUpdateReq_NONE             CheckUgcUpdateReq_CmdId = 0
	CheckUgcUpdateReq_CMD_ID           CheckUgcUpdateReq_CmdId = 6320
	CheckUgcUpdateReq_ENET_CHANNEL_ID  CheckUgcUpdateReq_CmdId = 0
	CheckUgcUpdateReq_ENET_IS_RELIABLE CheckUgcUpdateReq_CmdId = 1
	CheckUgcUpdateReq_IS_ALLOW_CLIENT  CheckUgcUpdateReq_CmdId = 1
)

// Enum value maps for CheckUgcUpdateReq_CmdId.
var (
	CheckUgcUpdateReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6320: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CheckUgcUpdateReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6320,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CheckUgcUpdateReq_CmdId) Enum() *CheckUgcUpdateReq_CmdId {
	p := new(CheckUgcUpdateReq_CmdId)
	*p = x
	return p
}

func (x CheckUgcUpdateReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckUgcUpdateReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[11].Descriptor()
}

func (CheckUgcUpdateReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[11]
}

func (x CheckUgcUpdateReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckUgcUpdateReq_CmdId.Descriptor instead.
func (CheckUgcUpdateReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{12, 0}
}

type CheckUgcUpdateRsp_CmdId int32

const (
	CheckUgcUpdateRsp_NONE             CheckUgcUpdateRsp_CmdId = 0
	CheckUgcUpdateRsp_CMD_ID           CheckUgcUpdateRsp_CmdId = 6345
	CheckUgcUpdateRsp_ENET_CHANNEL_ID  CheckUgcUpdateRsp_CmdId = 0
	CheckUgcUpdateRsp_ENET_IS_RELIABLE CheckUgcUpdateRsp_CmdId = 1
)

// Enum value maps for CheckUgcUpdateRsp_CmdId.
var (
	CheckUgcUpdateRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6345: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CheckUgcUpdateRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6345,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CheckUgcUpdateRsp_CmdId) Enum() *CheckUgcUpdateRsp_CmdId {
	p := new(CheckUgcUpdateRsp_CmdId)
	*p = x
	return p
}

func (x CheckUgcUpdateRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckUgcUpdateRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[12].Descriptor()
}

func (CheckUgcUpdateRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[12]
}

func (x CheckUgcUpdateRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckUgcUpdateRsp_CmdId.Descriptor instead.
func (CheckUgcUpdateRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{13, 0}
}

type UgcNotify_CmdId int32

const (
	UgcNotify_NONE             UgcNotify_CmdId = 0
	UgcNotify_CMD_ID           UgcNotify_CmdId = 6341
	UgcNotify_ENET_CHANNEL_ID  UgcNotify_CmdId = 0
	UgcNotify_ENET_IS_RELIABLE UgcNotify_CmdId = 1
)

// Enum value maps for UgcNotify_CmdId.
var (
	UgcNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		6341: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	UgcNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6341,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x UgcNotify_CmdId) Enum() *UgcNotify_CmdId {
	p := new(UgcNotify_CmdId)
	*p = x
	return p
}

func (x UgcNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UgcNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[13].Descriptor()
}

func (UgcNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[13]
}

func (x UgcNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UgcNotify_CmdId.Descriptor instead.
func (UgcNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{14, 0}
}

type CheckUgcStateReq_CmdId int32

const (
	CheckUgcStateReq_NONE             CheckUgcStateReq_CmdId = 0
	CheckUgcStateReq_CMD_ID           CheckUgcStateReq_CmdId = 6342
	CheckUgcStateReq_ENET_CHANNEL_ID  CheckUgcStateReq_CmdId = 0
	CheckUgcStateReq_ENET_IS_RELIABLE CheckUgcStateReq_CmdId = 1
	CheckUgcStateReq_IS_ALLOW_CLIENT  CheckUgcStateReq_CmdId = 1
)

// Enum value maps for CheckUgcStateReq_CmdId.
var (
	CheckUgcStateReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6342: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	CheckUgcStateReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6342,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x CheckUgcStateReq_CmdId) Enum() *CheckUgcStateReq_CmdId {
	p := new(CheckUgcStateReq_CmdId)
	*p = x
	return p
}

func (x CheckUgcStateReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckUgcStateReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[14].Descriptor()
}

func (CheckUgcStateReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[14]
}

func (x CheckUgcStateReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckUgcStateReq_CmdId.Descriptor instead.
func (CheckUgcStateReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{15, 0}
}

type CheckUgcStateRsp_CmdId int32

const (
	CheckUgcStateRsp_NONE             CheckUgcStateRsp_CmdId = 0
	CheckUgcStateRsp_CMD_ID           CheckUgcStateRsp_CmdId = 6314
	CheckUgcStateRsp_ENET_CHANNEL_ID  CheckUgcStateRsp_CmdId = 0
	CheckUgcStateRsp_ENET_IS_RELIABLE CheckUgcStateRsp_CmdId = 1
)

// Enum value maps for CheckUgcStateRsp_CmdId.
var (
	CheckUgcStateRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6314: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	CheckUgcStateRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6314,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x CheckUgcStateRsp_CmdId) Enum() *CheckUgcStateRsp_CmdId {
	p := new(CheckUgcStateRsp_CmdId)
	*p = x
	return p
}

func (x CheckUgcStateRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckUgcStateRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_ugc_proto_enumTypes[15].Descriptor()
}

func (CheckUgcStateRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_ugc_proto_enumTypes[15]
}

func (x CheckUgcStateRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckUgcStateRsp_CmdId.Descriptor instead.
func (CheckUgcStateRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{16, 0}
}

type UgcMusicNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime uint32 `protobuf:"varint,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint32 `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *UgcMusicNote) Reset() {
	*x = UgcMusicNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcMusicNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcMusicNote) ProtoMessage() {}

func (x *UgcMusicNote) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcMusicNote.ProtoReflect.Descriptor instead.
func (*UgcMusicNote) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{0}
}

func (x *UgcMusicNote) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UgcMusicNote) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type UgcMusicTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicNoteList []*UgcMusicNote `protobuf:"bytes,6,rep,name=music_note_list,json=musicNoteList,proto3" json:"music_note_list,omitempty"`
}

func (x *UgcMusicTrack) Reset() {
	*x = UgcMusicTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcMusicTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcMusicTrack) ProtoMessage() {}

func (x *UgcMusicTrack) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcMusicTrack.ProtoReflect.Descriptor instead.
func (*UgcMusicTrack) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{1}
}

func (x *UgcMusicTrack) GetMusicNoteList() []*UgcMusicNote {
	if x != nil {
		return x.MusicNoteList
	}
	return nil
}

type UgcMusicRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicTrackList []*UgcMusicTrack `protobuf:"bytes,4,rep,name=music_track_list,json=musicTrackList,proto3" json:"music_track_list,omitempty"`
	MusicId        uint32           `protobuf:"varint,13,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
}

func (x *UgcMusicRecord) Reset() {
	*x = UgcMusicRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcMusicRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcMusicRecord) ProtoMessage() {}

func (x *UgcMusicRecord) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcMusicRecord.ProtoReflect.Descriptor instead.
func (*UgcMusicRecord) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{2}
}

func (x *UgcMusicRecord) GetMusicTrackList() []*UgcMusicTrack {
	if x != nil {
		return x.MusicTrackList
	}
	return nil
}

func (x *UgcMusicRecord) GetMusicId() uint32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

type UgcMusicBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportFromUgcGuid     uint64   `protobuf:"varint,5,opt,name=import_from_ugc_guid,json=importFromUgcGuid,proto3" json:"import_from_ugc_guid,omitempty"`
	IsPublished           bool     `protobuf:"varint,8,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	IsPlayed              bool     `protobuf:"varint,1,opt,name=is_played,json=isPlayed,proto3" json:"is_played,omitempty"`
	MusicId               uint32   `protobuf:"varint,2,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	SavePageType          uint32   `protobuf:"varint,1182,opt,name=save_page_type,json=savePageType,proto3" json:"save_page_type,omitempty"`
	SaveIdx               uint32   `protobuf:"varint,12,opt,name=save_idx,json=saveIdx,proto3" json:"save_idx,omitempty"`
	CreatorNickname       string   `protobuf:"bytes,10,opt,name=creator_nickname,json=creatorNickname,proto3" json:"creator_nickname,omitempty"`
	Version               uint32   `protobuf:"varint,15,opt,name=version,proto3" json:"version,omitempty"`
	SaveTime              uint32   `protobuf:"varint,3,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	AfterNoteList         []uint32 `protobuf:"varint,1002,rep,packed,name=after_note_list,json=afterNoteList,proto3" json:"after_note_list,omitempty"`
	BeforeNoteList        []uint32 `protobuf:"varint,982,rep,packed,name=before_note_list,json=beforeNoteList,proto3" json:"before_note_list,omitempty"`
	IsPsnPlatform         bool     `protobuf:"varint,9,opt,name=is_psn_platform,json=isPsnPlatform,proto3" json:"is_psn_platform,omitempty"`
	TimeLineEditTime      uint32   `protobuf:"varint,1822,opt,name=time_line_edit_time,json=timeLineEditTime,proto3" json:"time_line_edit_time,omitempty"`
	IsChangedAfterPublish bool     `protobuf:"varint,11,opt,name=is_changed_after_publish,json=isChangedAfterPublish,proto3" json:"is_changed_after_publish,omitempty"`
	PublishTime           uint32   `protobuf:"varint,13,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	MaxScore              uint32   `protobuf:"varint,14,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	RealTimeEditTime      uint32   `protobuf:"varint,576,opt,name=real_time_edit_time,json=realTimeEditTime,proto3" json:"real_time_edit_time,omitempty"`
	NoteCount             uint32   `protobuf:"varint,7,opt,name=note_count,json=noteCount,proto3" json:"note_count,omitempty"`
	UgcGuid               uint64   `protobuf:"varint,4,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	SelfMaxScore          uint32   `protobuf:"varint,6,opt,name=self_max_score,json=selfMaxScore,proto3" json:"self_max_score,omitempty"`
}

func (x *UgcMusicBriefInfo) Reset() {
	*x = UgcMusicBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcMusicBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcMusicBriefInfo) ProtoMessage() {}

func (x *UgcMusicBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcMusicBriefInfo.ProtoReflect.Descriptor instead.
func (*UgcMusicBriefInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{3}
}

func (x *UgcMusicBriefInfo) GetImportFromUgcGuid() uint64 {
	if x != nil {
		return x.ImportFromUgcGuid
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *UgcMusicBriefInfo) GetIsPlayed() bool {
	if x != nil {
		return x.IsPlayed
	}
	return false
}

func (x *UgcMusicBriefInfo) GetMusicId() uint32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSavePageType() uint32 {
	if x != nil {
		return x.SavePageType
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSaveIdx() uint32 {
	if x != nil {
		return x.SaveIdx
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetCreatorNickname() string {
	if x != nil {
		return x.CreatorNickname
	}
	return ""
}

func (x *UgcMusicBriefInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSaveTime() uint32 {
	if x != nil {
		return x.SaveTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetAfterNoteList() []uint32 {
	if x != nil {
		return x.AfterNoteList
	}
	return nil
}

func (x *UgcMusicBriefInfo) GetBeforeNoteList() []uint32 {
	if x != nil {
		return x.BeforeNoteList
	}
	return nil
}

func (x *UgcMusicBriefInfo) GetIsPsnPlatform() bool {
	if x != nil {
		return x.IsPsnPlatform
	}
	return false
}

func (x *UgcMusicBriefInfo) GetTimeLineEditTime() uint32 {
	if x != nil {
		return x.TimeLineEditTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetIsChangedAfterPublish() bool {
	if x != nil {
		return x.IsChangedAfterPublish
	}
	return false
}

func (x *UgcMusicBriefInfo) GetPublishTime() uint32 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetMaxScore() uint32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetRealTimeEditTime() uint32 {
	if x != nil {
		return x.RealTimeEditTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetNoteCount() uint32 {
	if x != nil {
		return x.NoteCount
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSelfMaxScore() uint32 {
	if x != nil {
		return x.SelfMaxScore
	}
	return 0
}

type GetUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType        UgcType     `protobuf:"varint,8,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid        uint64      `protobuf:"varint,5,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	UgcRecordUsage RecordUsage `protobuf:"varint,6,opt,name=ugc_record_usage,json=ugcRecordUsage,proto3,enum=proto.RecordUsage" json:"ugc_record_usage,omitempty"`
	IsRequireBrief bool        `protobuf:"varint,11,opt,name=is_require_brief,json=isRequireBrief,proto3" json:"is_require_brief,omitempty"`
	GetUgcType_    GetUgcType  `protobuf:"varint,13,opt,name=get_ugc_type,json=getUgcType,proto3,enum=proto.GetUgcType" json:"get_ugc_type,omitempty"`
}

func (x *GetUgcReq) Reset() {
	*x = GetUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUgcReq) ProtoMessage() {}

func (x *GetUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUgcReq.ProtoReflect.Descriptor instead.
func (*GetUgcReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{4}
}

func (x *GetUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *GetUgcReq) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *GetUgcReq) GetUgcRecordUsage() RecordUsage {
	if x != nil {
		return x.UgcRecordUsage
	}
	return RecordUsage_UGC_RECORD_USAGE_NONE
}

func (x *GetUgcReq) GetIsRequireBrief() bool {
	if x != nil {
		return x.IsRequireBrief
	}
	return false
}

func (x *GetUgcReq) GetGetUgcType_() GetUgcType {
	if x != nil {
		return x.GetUgcType_
	}
	return GetUgcType_GET_UGC_NONE
}

type GetUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcGuid        uint64      `protobuf:"varint,15,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	UgcType        UgcType     `protobuf:"varint,10,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	Retcode        int32       `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcRecordUsage RecordUsage `protobuf:"varint,14,opt,name=ugc_record_usage,json=ugcRecordUsage,proto3,enum=proto.RecordUsage" json:"ugc_record_usage,omitempty"`
	// Types that are assignable to Record:
	//
	//	*GetUgcRsp_MusicRecord
	Record isGetUgcRsp_Record `protobuf_oneof:"record"`
	// Types that are assignable to Brief:
	//
	//	*GetUgcRsp_MusicBriefInfo
	Brief isGetUgcRsp_Brief `protobuf_oneof:"brief"`
}

func (x *GetUgcRsp) Reset() {
	*x = GetUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUgcRsp) ProtoMessage() {}

func (x *GetUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUgcRsp.ProtoReflect.Descriptor instead.
func (*GetUgcRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{5}
}

func (x *GetUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *GetUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *GetUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetUgcRsp) GetUgcRecordUsage() RecordUsage {
	if x != nil {
		return x.UgcRecordUsage
	}
	return RecordUsage_UGC_RECORD_USAGE_NONE
}

func (m *GetUgcRsp) GetRecord() isGetUgcRsp_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (x *GetUgcRsp) GetMusicRecord() *UgcMusicRecord {
	if x, ok := x.GetRecord().(*GetUgcRsp_MusicRecord); ok {
		return x.MusicRecord
	}
	return nil
}

func (m *GetUgcRsp) GetBrief() isGetUgcRsp_Brief {
	if m != nil {
		return m.Brief
	}
	return nil
}

func (x *GetUgcRsp) GetMusicBriefInfo() *UgcMusicBriefInfo {
	if x, ok := x.GetBrief().(*GetUgcRsp_MusicBriefInfo); ok {
		return x.MusicBriefInfo
	}
	return nil
}

type isGetUgcRsp_Record interface {
	isGetUgcRsp_Record()
}

type GetUgcRsp_MusicRecord struct {
	MusicRecord *UgcMusicRecord `protobuf:"bytes,4,opt,name=music_record,json=musicRecord,proto3,oneof"`
}

func (*GetUgcRsp_MusicRecord) isGetUgcRsp_Record() {}

type isGetUgcRsp_Brief interface {
	isGetUgcRsp_Brief()
}

type GetUgcRsp_MusicBriefInfo struct {
	MusicBriefInfo *UgcMusicBriefInfo `protobuf:"bytes,1819,opt,name=music_brief_info,json=musicBriefInfo,proto3,oneof"`
}

func (*GetUgcRsp_MusicBriefInfo) isGetUgcRsp_Brief() {}

type GetUgcBriefInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcGuid uint64  `protobuf:"varint,7,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	UgcType UgcType `protobuf:"varint,10,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
}

func (x *GetUgcBriefInfoReq) Reset() {
	*x = GetUgcBriefInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUgcBriefInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUgcBriefInfoReq) ProtoMessage() {}

func (x *GetUgcBriefInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUgcBriefInfoReq.ProtoReflect.Descriptor instead.
func (*GetUgcBriefInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{6}
}

func (x *GetUgcBriefInfoReq) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *GetUgcBriefInfoReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

type GetUgcBriefInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcGuid uint64  `protobuf:"varint,3,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	UgcType UgcType `protobuf:"varint,11,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	Retcode int32   `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	// Types that are assignable to Brief:
	//
	//	*GetUgcBriefInfoRsp_MusicBriefInfo
	Brief isGetUgcBriefInfoRsp_Brief `protobuf_oneof:"brief"`
}

func (x *GetUgcBriefInfoRsp) Reset() {
	*x = GetUgcBriefInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUgcBriefInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUgcBriefInfoRsp) ProtoMessage() {}

func (x *GetUgcBriefInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUgcBriefInfoRsp.ProtoReflect.Descriptor instead.
func (*GetUgcBriefInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{7}
}

func (x *GetUgcBriefInfoRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *GetUgcBriefInfoRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *GetUgcBriefInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (m *GetUgcBriefInfoRsp) GetBrief() isGetUgcBriefInfoRsp_Brief {
	if m != nil {
		return m.Brief
	}
	return nil
}

func (x *GetUgcBriefInfoRsp) GetMusicBriefInfo() *UgcMusicBriefInfo {
	if x, ok := x.GetBrief().(*GetUgcBriefInfoRsp_MusicBriefInfo); ok {
		return x.MusicBriefInfo
	}
	return nil
}

type isGetUgcBriefInfoRsp_Brief interface {
	isGetUgcBriefInfoRsp_Brief()
}

type GetUgcBriefInfoRsp_MusicBriefInfo struct {
	MusicBriefInfo *UgcMusicBriefInfo `protobuf:"bytes,2,opt,name=music_brief_info,json=musicBriefInfo,proto3,oneof"`
}

func (*GetUgcBriefInfoRsp_MusicBriefInfo) isGetUgcBriefInfoRsp_Brief() {}

type SaveUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType UgcType `protobuf:"varint,11,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	// Types that are assignable to Record:
	//
	//	*SaveUgcReq_MusicRecord
	Record isSaveUgcReq_Record `protobuf_oneof:"record"`
	// Types that are assignable to Brief:
	//
	//	*SaveUgcReq_MusicBriefInfo
	Brief isSaveUgcReq_Brief `protobuf_oneof:"brief"`
}

func (x *SaveUgcReq) Reset() {
	*x = SaveUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUgcReq) ProtoMessage() {}

func (x *SaveUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUgcReq.ProtoReflect.Descriptor instead.
func (*SaveUgcReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{8}
}

func (x *SaveUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (m *SaveUgcReq) GetRecord() isSaveUgcReq_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (x *SaveUgcReq) GetMusicRecord() *UgcMusicRecord {
	if x, ok := x.GetRecord().(*SaveUgcReq_MusicRecord); ok {
		return x.MusicRecord
	}
	return nil
}

func (m *SaveUgcReq) GetBrief() isSaveUgcReq_Brief {
	if m != nil {
		return m.Brief
	}
	return nil
}

func (x *SaveUgcReq) GetMusicBriefInfo() *UgcMusicBriefInfo {
	if x, ok := x.GetBrief().(*SaveUgcReq_MusicBriefInfo); ok {
		return x.MusicBriefInfo
	}
	return nil
}

type isSaveUgcReq_Record interface {
	isSaveUgcReq_Record()
}

type SaveUgcReq_MusicRecord struct {
	MusicRecord *UgcMusicRecord `protobuf:"bytes,2,opt,name=music_record,json=musicRecord,proto3,oneof"`
}

func (*SaveUgcReq_MusicRecord) isSaveUgcReq_Record() {}

type isSaveUgcReq_Brief interface {
	isSaveUgcReq_Brief()
}

type SaveUgcReq_MusicBriefInfo struct {
	MusicBriefInfo *UgcMusicBriefInfo `protobuf:"bytes,1488,opt,name=music_brief_info,json=musicBriefInfo,proto3,oneof"`
}

func (*SaveUgcReq_MusicBriefInfo) isSaveUgcReq_Brief() {}

type SaveUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32   `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcGuid uint64  `protobuf:"varint,8,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	UgcType UgcType `protobuf:"varint,1,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
}

func (x *SaveUgcRsp) Reset() {
	*x = SaveUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUgcRsp) ProtoMessage() {}

func (x *SaveUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUgcRsp.ProtoReflect.Descriptor instead.
func (*SaveUgcRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{9}
}

func (x *SaveUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SaveUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *SaveUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

type PublishUgcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType UgcType `protobuf:"varint,7,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
	UgcGuid uint64  `protobuf:"varint,12,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
}

func (x *PublishUgcReq) Reset() {
	*x = PublishUgcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishUgcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishUgcReq) ProtoMessage() {}

func (x *PublishUgcReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishUgcReq.ProtoReflect.Descriptor instead.
func (*PublishUgcReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{10}
}

func (x *PublishUgcReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *PublishUgcReq) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

type PublishUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcGuid uint64  `protobuf:"varint,14,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	Retcode int32   `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType UgcType `protobuf:"varint,13,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
}

func (x *PublishUgcRsp) Reset() {
	*x = PublishUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishUgcRsp) ProtoMessage() {}

func (x *PublishUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishUgcRsp.ProtoReflect.Descriptor instead.
func (*PublishUgcRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{11}
}

func (x *PublishUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *PublishUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PublishUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

type CheckUgcUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcType UgcType `protobuf:"varint,13,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
}

func (x *CheckUgcUpdateReq) Reset() {
	*x = CheckUgcUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUgcUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUgcUpdateReq) ProtoMessage() {}

func (x *CheckUgcUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUgcUpdateReq.ProtoReflect.Descriptor instead.
func (*CheckUgcUpdateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{12}
}

func (x *CheckUgcUpdateReq) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

type CheckUgcUpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateUgcGuidList []uint64 `protobuf:"varint,15,rep,packed,name=update_ugc_guid_list,json=updateUgcGuidList,proto3" json:"update_ugc_guid_list,omitempty"`
	Retcode           int32    `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType           UgcType  `protobuf:"varint,12,opt,name=ugc_type,json=ugcType,proto3,enum=proto.UgcType" json:"ugc_type,omitempty"`
}

func (x *CheckUgcUpdateRsp) Reset() {
	*x = CheckUgcUpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUgcUpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUgcUpdateRsp) ProtoMessage() {}

func (x *CheckUgcUpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUgcUpdateRsp.ProtoReflect.Descriptor instead.
func (*CheckUgcUpdateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{13}
}

func (x *CheckUgcUpdateRsp) GetUpdateUgcGuidList() []uint64 {
	if x != nil {
		return x.UpdateUgcGuidList
	}
	return nil
}

func (x *CheckUgcUpdateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CheckUgcUpdateRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

type UgcNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUgcPublishBan           bool `protobuf:"varint,12,opt,name=is_ugc_publish_ban,json=isUgcPublishBan,proto3" json:"is_ugc_publish_ban,omitempty"`
	IsUgcPublishFeatureClosed bool `protobuf:"varint,8,opt,name=is_ugc_publish_feature_closed,json=isUgcPublishFeatureClosed,proto3" json:"is_ugc_publish_feature_closed,omitempty"`
	IsUgcFeatureClosed        bool `protobuf:"varint,15,opt,name=is_ugc_feature_closed,json=isUgcFeatureClosed,proto3" json:"is_ugc_feature_closed,omitempty"`
}

func (x *UgcNotify) Reset() {
	*x = UgcNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcNotify) ProtoMessage() {}

func (x *UgcNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcNotify.ProtoReflect.Descriptor instead.
func (*UgcNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{14}
}

func (x *UgcNotify) GetIsUgcPublishBan() bool {
	if x != nil {
		return x.IsUgcPublishBan
	}
	return false
}

func (x *UgcNotify) GetIsUgcPublishFeatureClosed() bool {
	if x != nil {
		return x.IsUgcPublishFeatureClosed
	}
	return false
}

func (x *UgcNotify) GetIsUgcFeatureClosed() bool {
	if x != nil {
		return x.IsUgcFeatureClosed
	}
	return false
}

type CheckUgcStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckUgcStateReq) Reset() {
	*x = CheckUgcStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUgcStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUgcStateReq) ProtoMessage() {}

func (x *CheckUgcStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUgcStateReq.ProtoReflect.Descriptor instead.
func (*CheckUgcStateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{15}
}

type CheckUgcStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *CheckUgcStateRsp) Reset() {
	*x = CheckUgcStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_ugc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUgcStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUgcStateRsp) ProtoMessage() {}

func (x *CheckUgcStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_ugc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUgcStateRsp.ProtoReflect.Descriptor instead.
func (*CheckUgcStateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_ugc_proto_rawDescGZIP(), []int{16}
}

func (x *CheckUgcStateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

var File_cmd_cmd_ugc_proto protoreflect.FileDescriptor

var file_cmd_cmd_ugc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x75, 0x67, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48,
	0x0a, 0x0c, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x0d, 0x55, 0x67, 0x63, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0f, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x0e, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x10, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x49, 0x64, 0x22, 0xf8, 0x05, 0x0a, 0x11, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x55, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9e, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x61, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x61, 0x76, 0x65, 0x49, 0x64, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xea, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xd6, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x73, 0x6e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x9e, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xc0, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd2,
	0x02, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08,
	0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x10, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0e, 0x75, 0x67, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x0c, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb6, 0x31, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x8e, 0x03, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x52, 0x73,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08,
	0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x3c, 0x0a, 0x10, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0e, 0x75, 0x67, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67,
	0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x9b, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xae, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x22, 0xbe, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75,
	0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb5,
	0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x10,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xa3, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0xb1, 0x02, 0x0a, 0x0a, 0x53,
	0x61, 0x76, 0x65, 0x55, 0x67, 0x63, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x45, 0x0a, 0x10, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd0, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0xbb,
	0x01, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb2, 0x31, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb9, 0x01, 0x0a,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x67, 0x63, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63,
	0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xc8, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67,
	0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67,
	0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcd, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x55, 0x67, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd8,
	0x01, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x67, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x67, 0x63, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x29, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc9, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xfc, 0x01, 0x0a, 0x09, 0x55, 0x67,
	0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x75, 0x67,
	0x63, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x67, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x42, 0x61, 0x6e, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x55,
	0x67, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x75, 0x67, 0x63,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x55, 0x67, 0x63, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc5, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x76, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x67, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc6, 0x31, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x7b, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x67, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaa, 0x31, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x2a, 0x35, 0x0a,
	0x07, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x47, 0x43, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x47, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x10, 0x01, 0x2a, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x47, 0x43, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x47, 0x43, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x47,
	0x45, 0x54, 0x5f, 0x55, 0x47, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x10, 0x02, 0x2a, 0x9a, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x47, 0x43, 0x5f, 0x52, 0x45, 0x43,
	0x4f, 0x52, 0x44, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x55, 0x47, 0x43, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x55, 0x47, 0x43, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x47, 0x43, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x49,
	0x41, 0x4c, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x47, 0x43, 0x5f, 0x52, 0x45, 0x43, 0x4f,
	0x52, 0x44, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x45,
	0x10, 0x04, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68,
	0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_ugc_proto_rawDescOnce sync.Once
	file_cmd_cmd_ugc_proto_rawDescData = file_cmd_cmd_ugc_proto_rawDesc
)

func file_cmd_cmd_ugc_proto_rawDescGZIP() []byte {
	file_cmd_cmd_ugc_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_ugc_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_ugc_proto_rawDescData)
	})
	return file_cmd_cmd_ugc_proto_rawDescData
}

var file_cmd_cmd_ugc_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_cmd_cmd_ugc_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cmd_cmd_ugc_proto_goTypes = []interface{}{
	(UgcType)(0),                  // 0: proto.UgcType
	(GetUgcType)(0),               // 1: proto.GetUgcType
	(RecordUsage)(0),              // 2: proto.RecordUsage
	(GetUgcReq_CmdId)(0),          // 3: proto.GetUgcReq.CmdId
	(GetUgcRsp_CmdId)(0),          // 4: proto.GetUgcRsp.CmdId
	(GetUgcBriefInfoReq_CmdId)(0), // 5: proto.GetUgcBriefInfoReq.CmdId
	(GetUgcBriefInfoRsp_CmdId)(0), // 6: proto.GetUgcBriefInfoRsp.CmdId
	(SaveUgcReq_CmdId)(0),         // 7: proto.SaveUgcReq.CmdId
	(SaveUgcRsp_CmdId)(0),         // 8: proto.SaveUgcRsp.CmdId
	(PublishUgcReq_CmdId)(0),      // 9: proto.PublishUgcReq.CmdId
	(PublishUgcRsp_CmdId)(0),      // 10: proto.PublishUgcRsp.CmdId
	(CheckUgcUpdateReq_CmdId)(0),  // 11: proto.CheckUgcUpdateReq.CmdId
	(CheckUgcUpdateRsp_CmdId)(0),  // 12: proto.CheckUgcUpdateRsp.CmdId
	(UgcNotify_CmdId)(0),          // 13: proto.UgcNotify.CmdId
	(CheckUgcStateReq_CmdId)(0),   // 14: proto.CheckUgcStateReq.CmdId
	(CheckUgcStateRsp_CmdId)(0),   // 15: proto.CheckUgcStateRsp.CmdId
	(*UgcMusicNote)(nil),          // 16: proto.UgcMusicNote
	(*UgcMusicTrack)(nil),         // 17: proto.UgcMusicTrack
	(*UgcMusicRecord)(nil),        // 18: proto.UgcMusicRecord
	(*UgcMusicBriefInfo)(nil),     // 19: proto.UgcMusicBriefInfo
	(*GetUgcReq)(nil),             // 20: proto.GetUgcReq
	(*GetUgcRsp)(nil),             // 21: proto.GetUgcRsp
	(*GetUgcBriefInfoReq)(nil),    // 22: proto.GetUgcBriefInfoReq
	(*GetUgcBriefInfoRsp)(nil),    // 23: proto.GetUgcBriefInfoRsp
	(*SaveUgcReq)(nil),            // 24: proto.SaveUgcReq
	(*SaveUgcRsp)(nil),            // 25: proto.SaveUgcRsp
	(*PublishUgcReq)(nil),         // 26: proto.PublishUgcReq
	(*PublishUgcRsp)(nil),         // 27: proto.PublishUgcRsp
	(*CheckUgcUpdateReq)(nil),     // 28: proto.CheckUgcUpdateReq
	(*CheckUgcUpdateRsp)(nil),     // 29: proto.CheckUgcUpdateRsp
	(*UgcNotify)(nil),             // 30: proto.UgcNotify
	(*CheckUgcStateReq)(nil),      // 31: proto.CheckUgcStateReq
	(*CheckUgcStateRsp)(nil),      // 32: proto.CheckUgcStateRsp
}
var file_cmd_cmd_ugc_proto_depIdxs = []int32{
	16, // 0: proto.UgcMusicTrack.music_note_list:type_name -> proto.UgcMusicNote
	17, // 1: proto.UgcMusicRecord.music_track_list:type_name -> proto.UgcMusicTrack
	0,  // 2: proto.GetUgcReq.ugc_type:type_name -> proto.UgcType
	2,  // 3: proto.GetUgcReq.ugc_record_usage:type_name -> proto.RecordUsage
	1,  // 4: proto.GetUgcReq.get_ugc_type:type_name -> proto.GetUgcType
	0,  // 5: proto.GetUgcRsp.ugc_type:type_name -> proto.UgcType
	2,  // 6: proto.GetUgcRsp.ugc_record_usage:type_name -> proto.RecordUsage
	18, // 7: proto.GetUgcRsp.music_record:type_name -> proto.UgcMusicRecord
	19, // 8: proto.GetUgcRsp.music_brief_info:type_name -> proto.UgcMusicBriefInfo
	0,  // 9: proto.GetUgcBriefInfoReq.ugc_type:type_name -> proto.UgcType
	0,  // 10: proto.GetUgcBriefInfoRsp.ugc_type:type_name -> proto.UgcType
	19, // 11: proto.GetUgcBriefInfoRsp.music_brief_info:type_name -> proto.UgcMusicBriefInfo
	0,  // 12: proto.SaveUgcReq.ugc_type:type_name -> proto.UgcType
	18, // 13: proto.SaveUgcReq.music_record:type_name -> proto.UgcMusicRecord
	19, // 14: proto.SaveUgcReq.music_brief_info:type_name -> proto.UgcMusicBriefInfo
	0,  // 15: proto.SaveUgcRsp.ugc_type:type_name -> proto.UgcType
	0,  // 16: proto.PublishUgcReq.ugc_type:type_name -> proto.UgcType
	0,  // 17: proto.PublishUgcRsp.ugc_type:type_name -> proto.UgcType
	0,  // 18: proto.CheckUgcUpdateReq.ugc_type:type_name -> proto.UgcType
	0,  // 19: proto.CheckUgcUpdateRsp.ugc_type:type_name -> proto.UgcType
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cmd_cmd_ugc_proto_init() }
func file_cmd_cmd_ugc_proto_init() {
	if File_cmd_cmd_ugc_proto != nil {
		return
	}
	file_define_proto_init()
	file_cmd_cmd_social_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_ugc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcMusicNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcMusicTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcMusicRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcMusicBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUgcBriefInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUgcBriefInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishUgcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUgcUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUgcUpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUgcStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_ugc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUgcStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_cmd_ugc_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetUgcRsp_MusicRecord)(nil),
		(*GetUgcRsp_MusicBriefInfo)(nil),
	}
	file_cmd_cmd_ugc_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GetUgcBriefInfoRsp_MusicBriefInfo)(nil),
	}
	file_cmd_cmd_ugc_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SaveUgcReq_MusicRecord)(nil),
		(*SaveUgcReq_MusicBriefInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_ugc_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_ugc_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_ugc_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_ugc_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_ugc_proto_msgTypes,
	}.Build()
	File_cmd_cmd_ugc_proto = out.File
	file_cmd_cmd_ugc_proto_rawDesc = nil
	file_cmd_cmd_ugc_proto_goTypes = nil
	file_cmd_cmd_ugc_proto_depIdxs = nil
}
