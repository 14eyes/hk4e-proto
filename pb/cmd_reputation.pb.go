// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_reputation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CityReputationQuestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen                     bool     `protobuf:"varint,2,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	TakenParentQuestRewardList []uint32 `protobuf:"varint,12,rep,packed,name=taken_parent_quest_reward_list,json=takenParentQuestRewardList,proto3" json:"taken_parent_quest_reward_list,omitempty"`
	FinishedParentQuestList    []uint32 `protobuf:"varint,7,rep,packed,name=finished_parent_quest_list,json=finishedParentQuestList,proto3" json:"finished_parent_quest_list,omitempty"`
}

func (x *CityReputationQuestInfo) Reset() {
	*x = CityReputationQuestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationQuestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationQuestInfo) ProtoMessage() {}

func (x *CityReputationQuestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationQuestInfo.ProtoReflect.Descriptor instead.
func (*CityReputationQuestInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{0}
}

func (x *CityReputationQuestInfo) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *CityReputationQuestInfo) GetTakenParentQuestRewardList() []uint32 {
	if x != nil {
		return x.TakenParentQuestRewardList
	}
	return nil
}

func (x *CityReputationQuestInfo) GetFinishedParentQuestList() []uint32 {
	if x != nil {
		return x.FinishedParentQuestList
	}
	return nil
}

type CityReputationRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen          bool                                     `protobuf:"varint,2,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	RequestInfoList []*CityReputationRequestInfo_RequestInfo `protobuf:"bytes,1,rep,name=request_info_list,json=requestInfoList,proto3" json:"request_info_list,omitempty"`
}

func (x *CityReputationRequestInfo) Reset() {
	*x = CityReputationRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationRequestInfo) ProtoMessage() {}

func (x *CityReputationRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationRequestInfo.ProtoReflect.Descriptor instead.
func (*CityReputationRequestInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{1}
}

func (x *CityReputationRequestInfo) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *CityReputationRequestInfo) GetRequestInfoList() []*CityReputationRequestInfo_RequestInfo {
	if x != nil {
		return x.RequestInfoList
	}
	return nil
}

type CityReputationExploreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakenExploreRewardList []uint32 `protobuf:"varint,2,rep,packed,name=taken_explore_reward_list,json=takenExploreRewardList,proto3" json:"taken_explore_reward_list,omitempty"`
	ExplorePercent         uint32   `protobuf:"varint,14,opt,name=explore_percent,json=explorePercent,proto3" json:"explore_percent,omitempty"`
	IsOpen                 bool     `protobuf:"varint,15,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
}

func (x *CityReputationExploreInfo) Reset() {
	*x = CityReputationExploreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationExploreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationExploreInfo) ProtoMessage() {}

func (x *CityReputationExploreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationExploreInfo.ProtoReflect.Descriptor instead.
func (*CityReputationExploreInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{2}
}

func (x *CityReputationExploreInfo) GetTakenExploreRewardList() []uint32 {
	if x != nil {
		return x.TakenExploreRewardList
	}
	return nil
}

func (x *CityReputationExploreInfo) GetExplorePercent() uint32 {
	if x != nil {
		return x.ExplorePercent
	}
	return 0
}

func (x *CityReputationExploreInfo) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type CityReputationHuntInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen           bool   `protobuf:"varint,6,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	CurWeekFinishNum uint32 `protobuf:"varint,15,opt,name=cur_week_finish_num,json=curWeekFinishNum,proto3" json:"cur_week_finish_num,omitempty"`
	HasReward        bool   `protobuf:"varint,5,opt,name=has_reward,json=hasReward,proto3" json:"has_reward,omitempty"`
}

func (x *CityReputationHuntInfo) Reset() {
	*x = CityReputationHuntInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationHuntInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationHuntInfo) ProtoMessage() {}

func (x *CityReputationHuntInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationHuntInfo.ProtoReflect.Descriptor instead.
func (*CityReputationHuntInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{3}
}

func (x *CityReputationHuntInfo) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *CityReputationHuntInfo) GetCurWeekFinishNum() uint32 {
	if x != nil {
		return x.CurWeekFinishNum
	}
	return 0
}

func (x *CityReputationHuntInfo) GetHasReward() bool {
	if x != nil {
		return x.HasReward
	}
	return false
}

type CityReputationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level                 uint32                     `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	NextRefreshTime       uint32                     `protobuf:"varint,3,opt,name=next_refresh_time,json=nextRefreshTime,proto3" json:"next_refresh_time,omitempty"`
	HuntInfo              *CityReputationHuntInfo    `protobuf:"bytes,11,opt,name=hunt_info,json=huntInfo,proto3" json:"hunt_info,omitempty"`
	TakenLevelRewardList  []uint32                   `protobuf:"varint,2,rep,packed,name=taken_level_reward_list,json=takenLevelRewardList,proto3" json:"taken_level_reward_list,omitempty"`
	TotalAcceptRequestNum uint32                     `protobuf:"varint,6,opt,name=total_accept_request_num,json=totalAcceptRequestNum,proto3" json:"total_accept_request_num,omitempty"`
	RequestInfo           *CityReputationRequestInfo `protobuf:"bytes,5,opt,name=request_info,json=requestInfo,proto3" json:"request_info,omitempty"`
	QuestInfo             *CityReputationQuestInfo   `protobuf:"bytes,9,opt,name=quest_info,json=questInfo,proto3" json:"quest_info,omitempty"`
	Exp                   uint32                     `protobuf:"varint,13,opt,name=exp,proto3" json:"exp,omitempty"`
	ExploreInfo           *CityReputationExploreInfo `protobuf:"bytes,10,opt,name=explore_info,json=exploreInfo,proto3" json:"explore_info,omitempty"`
}

func (x *CityReputationInfo) Reset() {
	*x = CityReputationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationInfo) ProtoMessage() {}

func (x *CityReputationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationInfo.ProtoReflect.Descriptor instead.
func (*CityReputationInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{4}
}

func (x *CityReputationInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CityReputationInfo) GetNextRefreshTime() uint32 {
	if x != nil {
		return x.NextRefreshTime
	}
	return 0
}

func (x *CityReputationInfo) GetHuntInfo() *CityReputationHuntInfo {
	if x != nil {
		return x.HuntInfo
	}
	return nil
}

func (x *CityReputationInfo) GetTakenLevelRewardList() []uint32 {
	if x != nil {
		return x.TakenLevelRewardList
	}
	return nil
}

func (x *CityReputationInfo) GetTotalAcceptRequestNum() uint32 {
	if x != nil {
		return x.TotalAcceptRequestNum
	}
	return 0
}

func (x *CityReputationInfo) GetRequestInfo() *CityReputationRequestInfo {
	if x != nil {
		return x.RequestInfo
	}
	return nil
}

func (x *CityReputationInfo) GetQuestInfo() *CityReputationQuestInfo {
	if x != nil {
		return x.QuestInfo
	}
	return nil
}

func (x *CityReputationInfo) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *CityReputationInfo) GetExploreInfo() *CityReputationExploreInfo {
	if x != nil {
		return x.ExploreInfo
	}
	return nil
}

type GetCityReputationInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId uint32 `protobuf:"varint,7,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *GetCityReputationInfoReq) Reset() {
	*x = GetCityReputationInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityReputationInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityReputationInfoReq) ProtoMessage() {}

func (x *GetCityReputationInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityReputationInfoReq.ProtoReflect.Descriptor instead.
func (*GetCityReputationInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{5}
}

func (x *GetCityReputationInfoReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type GetCityReputationInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId             uint32              `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode            int32               `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CityReputationInfo *CityReputationInfo `protobuf:"bytes,9,opt,name=city_reputation_info,json=cityReputationInfo,proto3" json:"city_reputation_info,omitempty"`
}

func (x *GetCityReputationInfoRsp) Reset() {
	*x = GetCityReputationInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityReputationInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityReputationInfoRsp) ProtoMessage() {}

func (x *GetCityReputationInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityReputationInfoRsp.ProtoReflect.Descriptor instead.
func (*GetCityReputationInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{6}
}

func (x *GetCityReputationInfoRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetCityReputationInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetCityReputationInfoRsp) GetCityReputationInfo() *CityReputationInfo {
	if x != nil {
		return x.CityReputationInfo
	}
	return nil
}

type TakeCityReputationLevelRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level  uint32 `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
	CityId uint32 `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *TakeCityReputationLevelRewardReq) Reset() {
	*x = TakeCityReputationLevelRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationLevelRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationLevelRewardReq) ProtoMessage() {}

func (x *TakeCityReputationLevelRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationLevelRewardReq.ProtoReflect.Descriptor instead.
func (*TakeCityReputationLevelRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{7}
}

func (x *TakeCityReputationLevelRewardReq) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TakeCityReputationLevelRewardReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type TakeCityReputationLevelRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId   uint32       `protobuf:"varint,15,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode  int32        `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ItemList []*ItemParam `protobuf:"bytes,13,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Level    uint32       `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *TakeCityReputationLevelRewardRsp) Reset() {
	*x = TakeCityReputationLevelRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationLevelRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationLevelRewardRsp) ProtoMessage() {}

func (x *TakeCityReputationLevelRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationLevelRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeCityReputationLevelRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{8}
}

func (x *TakeCityReputationLevelRewardRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *TakeCityReputationLevelRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeCityReputationLevelRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TakeCityReputationLevelRewardRsp) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CityReputationLevelupNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId uint32 `protobuf:"varint,12,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Level  uint32 `protobuf:"varint,15,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *CityReputationLevelupNotify) Reset() {
	*x = CityReputationLevelupNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationLevelupNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationLevelupNotify) ProtoMessage() {}

func (x *CityReputationLevelupNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationLevelupNotify.ProtoReflect.Descriptor instead.
func (*CityReputationLevelupNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{9}
}

func (x *CityReputationLevelupNotify) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CityReputationLevelupNotify) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type TakeCityReputationParentQuestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId          uint32   `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	ParentQuestList []uint32 `protobuf:"varint,6,rep,packed,name=parent_quest_list,json=parentQuestList,proto3" json:"parent_quest_list,omitempty"`
}

func (x *TakeCityReputationParentQuestReq) Reset() {
	*x = TakeCityReputationParentQuestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationParentQuestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationParentQuestReq) ProtoMessage() {}

func (x *TakeCityReputationParentQuestReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationParentQuestReq.ProtoReflect.Descriptor instead.
func (*TakeCityReputationParentQuestReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{10}
}

func (x *TakeCityReputationParentQuestReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *TakeCityReputationParentQuestReq) GetParentQuestList() []uint32 {
	if x != nil {
		return x.ParentQuestList
	}
	return nil
}

type TakeCityReputationParentQuestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32        `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CityId          uint32       `protobuf:"varint,14,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	ParentQuestList []uint32     `protobuf:"varint,9,rep,packed,name=parent_quest_list,json=parentQuestList,proto3" json:"parent_quest_list,omitempty"`
	ItemList        []*ItemParam `protobuf:"bytes,13,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *TakeCityReputationParentQuestRsp) Reset() {
	*x = TakeCityReputationParentQuestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationParentQuestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationParentQuestRsp) ProtoMessage() {}

func (x *TakeCityReputationParentQuestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationParentQuestRsp.ProtoReflect.Descriptor instead.
func (*TakeCityReputationParentQuestRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{11}
}

func (x *TakeCityReputationParentQuestRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeCityReputationParentQuestRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *TakeCityReputationParentQuestRsp) GetParentQuestList() []uint32 {
	if x != nil {
		return x.ParentQuestList
	}
	return nil
}

func (x *TakeCityReputationParentQuestRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type AcceptCityReputationRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId    uint32 `protobuf:"varint,14,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	RequestId uint32 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *AcceptCityReputationRequestReq) Reset() {
	*x = AcceptCityReputationRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptCityReputationRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCityReputationRequestReq) ProtoMessage() {}

func (x *AcceptCityReputationRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCityReputationRequestReq.ProtoReflect.Descriptor instead.
func (*AcceptCityReputationRequestReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{12}
}

func (x *AcceptCityReputationRequestReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *AcceptCityReputationRequestReq) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type AcceptCityReputationRequestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId uint32 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CityId    uint32 `protobuf:"varint,13,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode   int32  `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AcceptCityReputationRequestRsp) Reset() {
	*x = AcceptCityReputationRequestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptCityReputationRequestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCityReputationRequestRsp) ProtoMessage() {}

func (x *AcceptCityReputationRequestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCityReputationRequestRsp.ProtoReflect.Descriptor instead.
func (*AcceptCityReputationRequestRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{13}
}

func (x *AcceptCityReputationRequestRsp) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *AcceptCityReputationRequestRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *AcceptCityReputationRequestRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CancelCityReputationRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId uint32 `protobuf:"varint,10,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CityId    uint32 `protobuf:"varint,6,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *CancelCityReputationRequestReq) Reset() {
	*x = CancelCityReputationRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCityReputationRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCityReputationRequestReq) ProtoMessage() {}

func (x *CancelCityReputationRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCityReputationRequestReq.ProtoReflect.Descriptor instead.
func (*CancelCityReputationRequestReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{14}
}

func (x *CancelCityReputationRequestReq) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *CancelCityReputationRequestReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type CancelCityReputationRequestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId    uint32 `protobuf:"varint,3,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Retcode   int32  `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RequestId uint32 `protobuf:"varint,12,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CancelCityReputationRequestRsp) Reset() {
	*x = CancelCityReputationRequestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCityReputationRequestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCityReputationRequestRsp) ProtoMessage() {}

func (x *CancelCityReputationRequestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCityReputationRequestRsp.ProtoReflect.Descriptor instead.
func (*CancelCityReputationRequestRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{15}
}

func (x *CancelCityReputationRequestRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CancelCityReputationRequestRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CancelCityReputationRequestRsp) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type GetCityReputationMapInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCityReputationMapInfoReq) Reset() {
	*x = GetCityReputationMapInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityReputationMapInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityReputationMapInfoReq) ProtoMessage() {}

func (x *GetCityReputationMapInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityReputationMapInfoReq.ProtoReflect.Descriptor instead.
func (*GetCityReputationMapInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{16}
}

type GetCityReputationMapInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode               int32    `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsNewHunting          bool     `protobuf:"varint,10,opt,name=is_new_hunting,json=isNewHunting,proto3" json:"is_new_hunting,omitempty"`
	IsNewRequest          bool     `protobuf:"varint,2,opt,name=is_new_request,json=isNewRequest,proto3" json:"is_new_request,omitempty"`
	UnlockHuntingCityList []uint32 `protobuf:"varint,9,rep,packed,name=unlock_hunting_city_list,json=unlockHuntingCityList,proto3" json:"unlock_hunting_city_list,omitempty"`
	RewardCityList        []uint32 `protobuf:"varint,3,rep,packed,name=reward_city_list,json=rewardCityList,proto3" json:"reward_city_list,omitempty"`
}

func (x *GetCityReputationMapInfoRsp) Reset() {
	*x = GetCityReputationMapInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityReputationMapInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityReputationMapInfoRsp) ProtoMessage() {}

func (x *GetCityReputationMapInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityReputationMapInfoRsp.ProtoReflect.Descriptor instead.
func (*GetCityReputationMapInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{17}
}

func (x *GetCityReputationMapInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetCityReputationMapInfoRsp) GetIsNewHunting() bool {
	if x != nil {
		return x.IsNewHunting
	}
	return false
}

func (x *GetCityReputationMapInfoRsp) GetIsNewRequest() bool {
	if x != nil {
		return x.IsNewRequest
	}
	return false
}

func (x *GetCityReputationMapInfoRsp) GetUnlockHuntingCityList() []uint32 {
	if x != nil {
		return x.UnlockHuntingCityList
	}
	return nil
}

func (x *GetCityReputationMapInfoRsp) GetRewardCityList() []uint32 {
	if x != nil {
		return x.RewardCityList
	}
	return nil
}

type TakeCityReputationExploreRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId        uint32   `protobuf:"varint,15,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	ExploreIdList []uint32 `protobuf:"varint,12,rep,packed,name=explore_id_list,json=exploreIdList,proto3" json:"explore_id_list,omitempty"`
}

func (x *TakeCityReputationExploreRewardReq) Reset() {
	*x = TakeCityReputationExploreRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationExploreRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationExploreRewardReq) ProtoMessage() {}

func (x *TakeCityReputationExploreRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationExploreRewardReq.ProtoReflect.Descriptor instead.
func (*TakeCityReputationExploreRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{18}
}

func (x *TakeCityReputationExploreRewardReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *TakeCityReputationExploreRewardReq) GetExploreIdList() []uint32 {
	if x != nil {
		return x.ExploreIdList
	}
	return nil
}

type TakeCityReputationExploreRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExploreIdList []uint32     `protobuf:"varint,8,rep,packed,name=explore_id_list,json=exploreIdList,proto3" json:"explore_id_list,omitempty"`
	ItemList      []*ItemParam `protobuf:"bytes,12,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Retcode       int32        `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CityId        uint32       `protobuf:"varint,13,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *TakeCityReputationExploreRewardRsp) Reset() {
	*x = TakeCityReputationExploreRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCityReputationExploreRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCityReputationExploreRewardRsp) ProtoMessage() {}

func (x *TakeCityReputationExploreRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCityReputationExploreRewardRsp.ProtoReflect.Descriptor instead.
func (*TakeCityReputationExploreRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{19}
}

func (x *TakeCityReputationExploreRewardRsp) GetExploreIdList() []uint32 {
	if x != nil {
		return x.ExploreIdList
	}
	return nil
}

func (x *TakeCityReputationExploreRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TakeCityReputationExploreRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakeCityReputationExploreRewardRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type CityReputationSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level  uint32 `protobuf:"varint,15,opt,name=level,proto3" json:"level,omitempty"`
	CityId uint32 `protobuf:"varint,9,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *CityReputationSimpleInfo) Reset() {
	*x = CityReputationSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationSimpleInfo) ProtoMessage() {}

func (x *CityReputationSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationSimpleInfo.ProtoReflect.Descriptor instead.
func (*CityReputationSimpleInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{20}
}

func (x *CityReputationSimpleInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CityReputationSimpleInfo) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type CityReputationDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfoList []*CityReputationSimpleInfo `protobuf:"bytes,7,rep,name=simple_info_list,json=simpleInfoList,proto3" json:"simple_info_list,omitempty"`
}

func (x *CityReputationDataNotify) Reset() {
	*x = CityReputationDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationDataNotify) ProtoMessage() {}

func (x *CityReputationDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationDataNotify.ProtoReflect.Descriptor instead.
func (*CityReputationDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{21}
}

func (x *CityReputationDataNotify) GetSimpleInfoList() []*CityReputationSimpleInfo {
	if x != nil {
		return x.SimpleInfoList
	}
	return nil
}

type CityReputationRequestInfo_RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     uint32 `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	QuestId       uint32 `protobuf:"varint,9,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	IsTakenReward bool   `protobuf:"varint,6,opt,name=is_taken_reward,json=isTakenReward,proto3" json:"is_taken_reward,omitempty"`
}

func (x *CityReputationRequestInfo_RequestInfo) Reset() {
	*x = CityReputationRequestInfo_RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_reputation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityReputationRequestInfo_RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityReputationRequestInfo_RequestInfo) ProtoMessage() {}

func (x *CityReputationRequestInfo_RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_reputation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityReputationRequestInfo_RequestInfo.ProtoReflect.Descriptor instead.
func (*CityReputationRequestInfo_RequestInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_reputation_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CityReputationRequestInfo_RequestInfo) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *CityReputationRequestInfo_RequestInfo) GetQuestId() uint32 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *CityReputationRequestInfo_RequestInfo) GetIsTakenReward() bool {
	if x != nil {
		return x.IsTakenReward
	}
	return false
}

var File_cmd_cmd_reputation_proto protoreflect.FileDescriptor

var file_cmd_cmd_reputation_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb3, 0x01, 0x0a, 0x17, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x42, 0x0a, 0x1e, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x74, 0x61,
	0x6b, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x17, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x58, 0x0a, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x6f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x54, 0x61, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x43, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x65,
	0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x45,
	0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x22, 0x7f, 0x0a, 0x16, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x5f, 0x77, 0x65, 0x65,
	0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x63, 0x75, 0x72, 0x57, 0x65, 0x65, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0xdd, 0x03, 0x0a, 0x12, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x68, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x68, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x61, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x74, 0x61, 0x6b, 0x65, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x43, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x43,
	0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x12, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x20, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x54, 0x61, 0x6b,
	0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4c, 0x0a, 0x1b, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x67, 0x0a, 0x20, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a,
	0x20, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x58, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x58, 0x0a,
	0x1e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xe6, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x68,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x18, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x15, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x22, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x22, 0x54,
	0x61, 0x6b, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x18, 0x43,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x18, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x49, 0x0a, 0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76,
	0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_reputation_proto_rawDescOnce sync.Once
	file_cmd_cmd_reputation_proto_rawDescData = file_cmd_cmd_reputation_proto_rawDesc
)

func file_cmd_cmd_reputation_proto_rawDescGZIP() []byte {
	file_cmd_cmd_reputation_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_reputation_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_reputation_proto_rawDescData)
	})
	return file_cmd_cmd_reputation_proto_rawDescData
}

var file_cmd_cmd_reputation_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_cmd_cmd_reputation_proto_goTypes = []interface{}{
	(*CityReputationQuestInfo)(nil),               // 0: proto.CityReputationQuestInfo
	(*CityReputationRequestInfo)(nil),             // 1: proto.CityReputationRequestInfo
	(*CityReputationExploreInfo)(nil),             // 2: proto.CityReputationExploreInfo
	(*CityReputationHuntInfo)(nil),                // 3: proto.CityReputationHuntInfo
	(*CityReputationInfo)(nil),                    // 4: proto.CityReputationInfo
	(*GetCityReputationInfoReq)(nil),              // 5: proto.GetCityReputationInfoReq
	(*GetCityReputationInfoRsp)(nil),              // 6: proto.GetCityReputationInfoRsp
	(*TakeCityReputationLevelRewardReq)(nil),      // 7: proto.TakeCityReputationLevelRewardReq
	(*TakeCityReputationLevelRewardRsp)(nil),      // 8: proto.TakeCityReputationLevelRewardRsp
	(*CityReputationLevelupNotify)(nil),           // 9: proto.CityReputationLevelupNotify
	(*TakeCityReputationParentQuestReq)(nil),      // 10: proto.TakeCityReputationParentQuestReq
	(*TakeCityReputationParentQuestRsp)(nil),      // 11: proto.TakeCityReputationParentQuestRsp
	(*AcceptCityReputationRequestReq)(nil),        // 12: proto.AcceptCityReputationRequestReq
	(*AcceptCityReputationRequestRsp)(nil),        // 13: proto.AcceptCityReputationRequestRsp
	(*CancelCityReputationRequestReq)(nil),        // 14: proto.CancelCityReputationRequestReq
	(*CancelCityReputationRequestRsp)(nil),        // 15: proto.CancelCityReputationRequestRsp
	(*GetCityReputationMapInfoReq)(nil),           // 16: proto.GetCityReputationMapInfoReq
	(*GetCityReputationMapInfoRsp)(nil),           // 17: proto.GetCityReputationMapInfoRsp
	(*TakeCityReputationExploreRewardReq)(nil),    // 18: proto.TakeCityReputationExploreRewardReq
	(*TakeCityReputationExploreRewardRsp)(nil),    // 19: proto.TakeCityReputationExploreRewardRsp
	(*CityReputationSimpleInfo)(nil),              // 20: proto.CityReputationSimpleInfo
	(*CityReputationDataNotify)(nil),              // 21: proto.CityReputationDataNotify
	(*CityReputationRequestInfo_RequestInfo)(nil), // 22: proto.CityReputationRequestInfo.RequestInfo
	(*ItemParam)(nil),                             // 23: proto.ItemParam
}
var file_cmd_cmd_reputation_proto_depIdxs = []int32{
	22, // 0: proto.CityReputationRequestInfo.request_info_list:type_name -> proto.CityReputationRequestInfo.RequestInfo
	3,  // 1: proto.CityReputationInfo.hunt_info:type_name -> proto.CityReputationHuntInfo
	1,  // 2: proto.CityReputationInfo.request_info:type_name -> proto.CityReputationRequestInfo
	0,  // 3: proto.CityReputationInfo.quest_info:type_name -> proto.CityReputationQuestInfo
	2,  // 4: proto.CityReputationInfo.explore_info:type_name -> proto.CityReputationExploreInfo
	4,  // 5: proto.GetCityReputationInfoRsp.city_reputation_info:type_name -> proto.CityReputationInfo
	23, // 6: proto.TakeCityReputationLevelRewardRsp.item_list:type_name -> proto.ItemParam
	23, // 7: proto.TakeCityReputationParentQuestRsp.item_list:type_name -> proto.ItemParam
	23, // 8: proto.TakeCityReputationExploreRewardRsp.item_list:type_name -> proto.ItemParam
	20, // 9: proto.CityReputationDataNotify.simple_info_list:type_name -> proto.CityReputationSimpleInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cmd_cmd_reputation_proto_init() }
func file_cmd_cmd_reputation_proto_init() {
	if File_cmd_cmd_reputation_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_reputation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationQuestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationExploreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationHuntInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityReputationInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityReputationInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationLevelRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationLevelRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationLevelupNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationParentQuestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationParentQuestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptCityReputationRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptCityReputationRequestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCityReputationRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCityReputationRequestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityReputationMapInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCityReputationMapInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationExploreRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCityReputationExploreRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_reputation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityReputationRequestInfo_RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_reputation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_reputation_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_reputation_proto_depIdxs,
		MessageInfos:      file_cmd_cmd_reputation_proto_msgTypes,
	}.Build()
	File_cmd_cmd_reputation_proto = out.File
	file_cmd_cmd_reputation_proto_rawDesc = nil
	file_cmd_cmd_reputation_proto_goTypes = nil
	file_cmd_cmd_reputation_proto_depIdxs = nil
}
