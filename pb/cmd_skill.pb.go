// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_skill.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnlockAvatarTalentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalentId   uint32 `protobuf:"varint,13,opt,name=talent_id,json=talentId,proto3" json:"talent_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,3,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *UnlockAvatarTalentReq) Reset() {
	*x = UnlockAvatarTalentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAvatarTalentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAvatarTalentReq) ProtoMessage() {}

func (x *UnlockAvatarTalentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAvatarTalentReq.ProtoReflect.Descriptor instead.
func (*UnlockAvatarTalentReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{0}
}

func (x *UnlockAvatarTalentReq) GetTalentId() uint32 {
	if x != nil {
		return x.TalentId
	}
	return 0
}

func (x *UnlockAvatarTalentReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type UnlockAvatarTalentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalentId   uint32 `protobuf:"varint,2,opt,name=talent_id,json=talentId,proto3" json:"talent_id,omitempty"`
	Retcode    int32  `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *UnlockAvatarTalentRsp) Reset() {
	*x = UnlockAvatarTalentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAvatarTalentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAvatarTalentRsp) ProtoMessage() {}

func (x *UnlockAvatarTalentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAvatarTalentRsp.ProtoReflect.Descriptor instead.
func (*UnlockAvatarTalentRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{1}
}

func (x *UnlockAvatarTalentRsp) GetTalentId() uint32 {
	if x != nil {
		return x.TalentId
	}
	return 0
}

func (x *UnlockAvatarTalentRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UnlockAvatarTalentRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarUnlockTalentNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId     uint32 `protobuf:"varint,14,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	AvatarGuid   uint64 `protobuf:"varint,13,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	TalentId     uint32 `protobuf:"varint,10,opt,name=talent_id,json=talentId,proto3" json:"talent_id,omitempty"`
	SkillDepotId uint32 `protobuf:"varint,1,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
}

func (x *AvatarUnlockTalentNotify) Reset() {
	*x = AvatarUnlockTalentNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUnlockTalentNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUnlockTalentNotify) ProtoMessage() {}

func (x *AvatarUnlockTalentNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUnlockTalentNotify.ProtoReflect.Descriptor instead.
func (*AvatarUnlockTalentNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{2}
}

func (x *AvatarUnlockTalentNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AvatarUnlockTalentNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarUnlockTalentNotify) GetTalentId() uint32 {
	if x != nil {
		return x.TalentId
	}
	return 0
}

func (x *AvatarUnlockTalentNotify) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

type AvatarSkillDepotChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillDepotId            uint32            `protobuf:"varint,15,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
	ProudSkillExtraLevelMap map[uint32]uint32 `protobuf:"bytes,14,rep,name=proud_skill_extra_level_map,json=proudSkillExtraLevelMap,proto3" json:"proud_skill_extra_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TalentIdList            []uint32          `protobuf:"varint,9,rep,packed,name=talent_id_list,json=talentIdList,proto3" json:"talent_id_list,omitempty"`
	ProudSkillList          []uint32          `protobuf:"varint,4,rep,packed,name=proud_skill_list,json=proudSkillList,proto3" json:"proud_skill_list,omitempty"`
	CoreProudSkillLevel     uint32            `protobuf:"varint,2,opt,name=core_proud_skill_level,json=coreProudSkillLevel,proto3" json:"core_proud_skill_level,omitempty"`
	EntityId                uint32            `protobuf:"varint,7,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	AvatarGuid              uint64            `protobuf:"varint,12,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	SkillLevelMap           map[uint32]uint32 `protobuf:"bytes,3,rep,name=skill_level_map,json=skillLevelMap,proto3" json:"skill_level_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AvatarSkillDepotChangeNotify) Reset() {
	*x = AvatarSkillDepotChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillDepotChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillDepotChangeNotify) ProtoMessage() {}

func (x *AvatarSkillDepotChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillDepotChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarSkillDepotChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{3}
}

func (x *AvatarSkillDepotChangeNotify) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

func (x *AvatarSkillDepotChangeNotify) GetProudSkillExtraLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.ProudSkillExtraLevelMap
	}
	return nil
}

func (x *AvatarSkillDepotChangeNotify) GetTalentIdList() []uint32 {
	if x != nil {
		return x.TalentIdList
	}
	return nil
}

func (x *AvatarSkillDepotChangeNotify) GetProudSkillList() []uint32 {
	if x != nil {
		return x.ProudSkillList
	}
	return nil
}

func (x *AvatarSkillDepotChangeNotify) GetCoreProudSkillLevel() uint32 {
	if x != nil {
		return x.CoreProudSkillLevel
	}
	return 0
}

func (x *AvatarSkillDepotChangeNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AvatarSkillDepotChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSkillDepotChangeNotify) GetSkillLevelMap() map[uint32]uint32 {
	if x != nil {
		return x.SkillLevelMap
	}
	return nil
}

type BigTalentPointConvertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuidList []uint64 `protobuf:"varint,6,rep,packed,name=item_guid_list,json=itemGuidList,proto3" json:"item_guid_list,omitempty"`
	AvatarGuid   uint64   `protobuf:"varint,3,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *BigTalentPointConvertReq) Reset() {
	*x = BigTalentPointConvertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigTalentPointConvertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigTalentPointConvertReq) ProtoMessage() {}

func (x *BigTalentPointConvertReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigTalentPointConvertReq.ProtoReflect.Descriptor instead.
func (*BigTalentPointConvertReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{4}
}

func (x *BigTalentPointConvertReq) GetItemGuidList() []uint64 {
	if x != nil {
		return x.ItemGuidList
	}
	return nil
}

func (x *BigTalentPointConvertReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type BigTalentPointConvertRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,8,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *BigTalentPointConvertRsp) Reset() {
	*x = BigTalentPointConvertRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigTalentPointConvertRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigTalentPointConvertRsp) ProtoMessage() {}

func (x *BigTalentPointConvertRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigTalentPointConvertRsp.ProtoReflect.Descriptor instead.
func (*BigTalentPointConvertRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{5}
}

func (x *BigTalentPointConvertRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *BigTalentPointConvertRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarSkillMaxChargeCountNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId        uint32 `protobuf:"varint,6,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	MaxChargeCount uint32 `protobuf:"varint,11,opt,name=max_charge_count,json=maxChargeCount,proto3" json:"max_charge_count,omitempty"`
	AvatarGuid     uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarSkillMaxChargeCountNotify) Reset() {
	*x = AvatarSkillMaxChargeCountNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillMaxChargeCountNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillMaxChargeCountNotify) ProtoMessage() {}

func (x *AvatarSkillMaxChargeCountNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillMaxChargeCountNotify.ProtoReflect.Descriptor instead.
func (*AvatarSkillMaxChargeCountNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{6}
}

func (x *AvatarSkillMaxChargeCountNotify) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *AvatarSkillMaxChargeCountNotify) GetMaxChargeCount() uint32 {
	if x != nil {
		return x.MaxChargeCount
	}
	return 0
}

func (x *AvatarSkillMaxChargeCountNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarSkillInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillMap map[uint32]*AvatarSkillInfo `protobuf:"bytes,11,rep,name=skill_map,json=skillMap,proto3" json:"skill_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Guid     uint64                      `protobuf:"varint,4,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *AvatarSkillInfoNotify) Reset() {
	*x = AvatarSkillInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillInfoNotify) ProtoMessage() {}

func (x *AvatarSkillInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillInfoNotify.ProtoReflect.Descriptor instead.
func (*AvatarSkillInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{7}
}

func (x *AvatarSkillInfoNotify) GetSkillMap() map[uint32]*AvatarSkillInfo {
	if x != nil {
		return x.SkillMap
	}
	return nil
}

func (x *AvatarSkillInfoNotify) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type ProudSkillUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid         uint64 `protobuf:"varint,5,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	OldProudSkillLevel uint32 `protobuf:"varint,4,opt,name=old_proud_skill_level,json=oldProudSkillLevel,proto3" json:"old_proud_skill_level,omitempty"`
	ProudSkillId       uint32 `protobuf:"varint,14,opt,name=proud_skill_id,json=proudSkillId,proto3" json:"proud_skill_id,omitempty"`
}

func (x *ProudSkillUpgradeReq) Reset() {
	*x = ProudSkillUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProudSkillUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProudSkillUpgradeReq) ProtoMessage() {}

func (x *ProudSkillUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProudSkillUpgradeReq.ProtoReflect.Descriptor instead.
func (*ProudSkillUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{8}
}

func (x *ProudSkillUpgradeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *ProudSkillUpgradeReq) GetOldProudSkillLevel() uint32 {
	if x != nil {
		return x.OldProudSkillLevel
	}
	return 0
}

func (x *ProudSkillUpgradeReq) GetProudSkillId() uint32 {
	if x != nil {
		return x.ProudSkillId
	}
	return 0
}

type ProudSkillUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid   uint64 `protobuf:"varint,6,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	ProudSkillId uint32 `protobuf:"varint,10,opt,name=proud_skill_id,json=proudSkillId,proto3" json:"proud_skill_id,omitempty"`
	Retcode      int32  `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ProudSkillUpgradeRsp) Reset() {
	*x = ProudSkillUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProudSkillUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProudSkillUpgradeRsp) ProtoMessage() {}

func (x *ProudSkillUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProudSkillUpgradeRsp.ProtoReflect.Descriptor instead.
func (*ProudSkillUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{9}
}

func (x *ProudSkillUpgradeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *ProudSkillUpgradeRsp) GetProudSkillId() uint32 {
	if x != nil {
		return x.ProudSkillId
	}
	return 0
}

func (x *ProudSkillUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ProudSkillChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid     uint64   `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EntityId       uint32   `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	SkillDepotId   uint32   `protobuf:"varint,8,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
	ProudSkillList []uint32 `protobuf:"varint,12,rep,packed,name=proud_skill_list,json=proudSkillList,proto3" json:"proud_skill_list,omitempty"`
}

func (x *ProudSkillChangeNotify) Reset() {
	*x = ProudSkillChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProudSkillChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProudSkillChangeNotify) ProtoMessage() {}

func (x *ProudSkillChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProudSkillChangeNotify.ProtoReflect.Descriptor instead.
func (*ProudSkillChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{10}
}

func (x *ProudSkillChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *ProudSkillChangeNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *ProudSkillChangeNotify) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

func (x *ProudSkillChangeNotify) GetProudSkillList() []uint32 {
	if x != nil {
		return x.ProudSkillList
	}
	return nil
}

type AvatarSkillUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid    uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	OldLevel      uint32 `protobuf:"varint,3,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	AvatarSkillId uint32 `protobuf:"varint,4,opt,name=avatar_skill_id,json=avatarSkillId,proto3" json:"avatar_skill_id,omitempty"`
}

func (x *AvatarSkillUpgradeReq) Reset() {
	*x = AvatarSkillUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillUpgradeReq) ProtoMessage() {}

func (x *AvatarSkillUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillUpgradeReq.ProtoReflect.Descriptor instead.
func (*AvatarSkillUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{11}
}

func (x *AvatarSkillUpgradeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSkillUpgradeReq) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *AvatarSkillUpgradeReq) GetAvatarSkillId() uint32 {
	if x != nil {
		return x.AvatarSkillId
	}
	return 0
}

type AvatarSkillUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid    uint64 `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	CurLevel      uint32 `protobuf:"varint,14,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	AvatarSkillId uint32 `protobuf:"varint,9,opt,name=avatar_skill_id,json=avatarSkillId,proto3" json:"avatar_skill_id,omitempty"`
	OldLevel      uint32 `protobuf:"varint,3,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	Retcode       int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarSkillUpgradeRsp) Reset() {
	*x = AvatarSkillUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillUpgradeRsp) ProtoMessage() {}

func (x *AvatarSkillUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillUpgradeRsp.ProtoReflect.Descriptor instead.
func (*AvatarSkillUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{12}
}

func (x *AvatarSkillUpgradeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSkillUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *AvatarSkillUpgradeRsp) GetAvatarSkillId() uint32 {
	if x != nil {
		return x.AvatarSkillId
	}
	return 0
}

func (x *AvatarSkillUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *AvatarSkillUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarSkillChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel      uint32 `protobuf:"varint,11,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	AvatarGuid    uint64 `protobuf:"varint,2,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EntityId      uint32 `protobuf:"varint,7,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	SkillDepotId  uint32 `protobuf:"varint,13,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
	OldLevel      uint32 `protobuf:"varint,1,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	AvatarSkillId uint32 `protobuf:"varint,6,opt,name=avatar_skill_id,json=avatarSkillId,proto3" json:"avatar_skill_id,omitempty"`
}

func (x *AvatarSkillChangeNotify) Reset() {
	*x = AvatarSkillChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillChangeNotify) ProtoMessage() {}

func (x *AvatarSkillChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarSkillChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{13}
}

func (x *AvatarSkillChangeNotify) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *AvatarSkillChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSkillChangeNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AvatarSkillChangeNotify) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

func (x *AvatarSkillChangeNotify) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *AvatarSkillChangeNotify) GetAvatarSkillId() uint32 {
	if x != nil {
		return x.AvatarSkillId
	}
	return 0
}

type ProudSkillExtraLevelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalentType  uint32 `protobuf:"varint,11,opt,name=talent_type,json=talentType,proto3" json:"talent_type,omitempty"`
	TalentIndex uint32 `protobuf:"varint,8,opt,name=talent_index,json=talentIndex,proto3" json:"talent_index,omitempty"`
	AvatarGuid  uint64 `protobuf:"varint,15,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	ExtraLevel  uint32 `protobuf:"varint,3,opt,name=extra_level,json=extraLevel,proto3" json:"extra_level,omitempty"`
}

func (x *ProudSkillExtraLevelNotify) Reset() {
	*x = ProudSkillExtraLevelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProudSkillExtraLevelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProudSkillExtraLevelNotify) ProtoMessage() {}

func (x *ProudSkillExtraLevelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProudSkillExtraLevelNotify.ProtoReflect.Descriptor instead.
func (*ProudSkillExtraLevelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{14}
}

func (x *ProudSkillExtraLevelNotify) GetTalentType() uint32 {
	if x != nil {
		return x.TalentType
	}
	return 0
}

func (x *ProudSkillExtraLevelNotify) GetTalentIndex() uint32 {
	if x != nil {
		return x.TalentIndex
	}
	return 0
}

func (x *ProudSkillExtraLevelNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *ProudSkillExtraLevelNotify) GetExtraLevel() uint32 {
	if x != nil {
		return x.ExtraLevel
	}
	return 0
}

type CanUseSkillNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCanUseSkill bool `protobuf:"varint,2,opt,name=is_can_use_skill,json=isCanUseSkill,proto3" json:"is_can_use_skill,omitempty"`
}

func (x *CanUseSkillNotify) Reset() {
	*x = CanUseSkillNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanUseSkillNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanUseSkillNotify) ProtoMessage() {}

func (x *CanUseSkillNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanUseSkillNotify.ProtoReflect.Descriptor instead.
func (*CanUseSkillNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{15}
}

func (x *CanUseSkillNotify) GetIsCanUseSkill() bool {
	if x != nil {
		return x.IsCanUseSkill
	}
	return false
}

type AvatarTeamResonanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTeamResonanceIdList []uint32 `protobuf:"varint,5,rep,packed,name=add_team_resonance_id_list,json=addTeamResonanceIdList,proto3" json:"add_team_resonance_id_list,omitempty"`
	EntityId               uint32   `protobuf:"varint,11,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	AvatarGuid             uint64   `protobuf:"varint,3,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	DelTeamResonanceIdList []uint32 `protobuf:"varint,14,rep,packed,name=del_team_resonance_id_list,json=delTeamResonanceIdList,proto3" json:"del_team_resonance_id_list,omitempty"`
}

func (x *AvatarTeamResonanceInfo) Reset() {
	*x = AvatarTeamResonanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeamResonanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeamResonanceInfo) ProtoMessage() {}

func (x *AvatarTeamResonanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeamResonanceInfo.ProtoReflect.Descriptor instead.
func (*AvatarTeamResonanceInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{16}
}

func (x *AvatarTeamResonanceInfo) GetAddTeamResonanceIdList() []uint32 {
	if x != nil {
		return x.AddTeamResonanceIdList
	}
	return nil
}

func (x *AvatarTeamResonanceInfo) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *AvatarTeamResonanceInfo) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarTeamResonanceInfo) GetDelTeamResonanceIdList() []uint32 {
	if x != nil {
		return x.DelTeamResonanceIdList
	}
	return nil
}

type TeamResonanceChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*AvatarTeamResonanceInfo `protobuf:"bytes,1,rep,name=info_list,json=infoList,proto3" json:"info_list,omitempty"`
}

func (x *TeamResonanceChangeNotify) Reset() {
	*x = TeamResonanceChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_skill_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamResonanceChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamResonanceChangeNotify) ProtoMessage() {}

func (x *TeamResonanceChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_skill_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamResonanceChangeNotify.ProtoReflect.Descriptor instead.
func (*TeamResonanceChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_skill_proto_rawDescGZIP(), []int{17}
}

func (x *TeamResonanceChangeNotify) GetInfoList() []*AvatarTeamResonanceInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

var File_cmd_cmd_skill_proto protoreflect.FileDescriptor

var file_cmd_cmd_skill_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x22, 0x6f, 0x0a, 0x15, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x49, 0x64,
	0x22, 0xf5, 0x04, 0x0a, 0x1c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x7e, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x75, 0x64,
	0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17,
	0x70, 0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0c, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x5e, 0x0a, 0x0f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c, 0x50, 0x72,
	0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x18, 0x42, 0x69, 0x67, 0x54,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x74,
	0x65, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x18, 0x42,
	0x69, 0x67, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0xc9, 0x01, 0x0a,
	0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x1a, 0x53, 0x0a, 0x0d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x90, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x14, 0x50,
	0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7d, 0x0a,
	0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a,
	0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x75, 0x64, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3c, 0x0a, 0x11, 0x43, 0x61,
	0x6e, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x27, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x61, 0x64, 0x64, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x3a,
	0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x16, 0x64, 0x65, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x19, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x6f, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72,
	0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_skill_proto_rawDescOnce sync.Once
	file_cmd_cmd_skill_proto_rawDescData = file_cmd_cmd_skill_proto_rawDesc
)

func file_cmd_cmd_skill_proto_rawDescGZIP() []byte {
	file_cmd_cmd_skill_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_skill_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_skill_proto_rawDescData)
	})
	return file_cmd_cmd_skill_proto_rawDescData
}

var file_cmd_cmd_skill_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_cmd_cmd_skill_proto_goTypes = []interface{}{
	(*UnlockAvatarTalentReq)(nil),           // 0: proto.UnlockAvatarTalentReq
	(*UnlockAvatarTalentRsp)(nil),           // 1: proto.UnlockAvatarTalentRsp
	(*AvatarUnlockTalentNotify)(nil),        // 2: proto.AvatarUnlockTalentNotify
	(*AvatarSkillDepotChangeNotify)(nil),    // 3: proto.AvatarSkillDepotChangeNotify
	(*BigTalentPointConvertReq)(nil),        // 4: proto.BigTalentPointConvertReq
	(*BigTalentPointConvertRsp)(nil),        // 5: proto.BigTalentPointConvertRsp
	(*AvatarSkillMaxChargeCountNotify)(nil), // 6: proto.AvatarSkillMaxChargeCountNotify
	(*AvatarSkillInfoNotify)(nil),           // 7: proto.AvatarSkillInfoNotify
	(*ProudSkillUpgradeReq)(nil),            // 8: proto.ProudSkillUpgradeReq
	(*ProudSkillUpgradeRsp)(nil),            // 9: proto.ProudSkillUpgradeRsp
	(*ProudSkillChangeNotify)(nil),          // 10: proto.ProudSkillChangeNotify
	(*AvatarSkillUpgradeReq)(nil),           // 11: proto.AvatarSkillUpgradeReq
	(*AvatarSkillUpgradeRsp)(nil),           // 12: proto.AvatarSkillUpgradeRsp
	(*AvatarSkillChangeNotify)(nil),         // 13: proto.AvatarSkillChangeNotify
	(*ProudSkillExtraLevelNotify)(nil),      // 14: proto.ProudSkillExtraLevelNotify
	(*CanUseSkillNotify)(nil),               // 15: proto.CanUseSkillNotify
	(*AvatarTeamResonanceInfo)(nil),         // 16: proto.AvatarTeamResonanceInfo
	(*TeamResonanceChangeNotify)(nil),       // 17: proto.TeamResonanceChangeNotify
	nil,                                     // 18: proto.AvatarSkillDepotChangeNotify.ProudSkillExtraLevelMapEntry
	nil,                                     // 19: proto.AvatarSkillDepotChangeNotify.SkillLevelMapEntry
	nil,                                     // 20: proto.AvatarSkillInfoNotify.SkillMapEntry
	(*AvatarSkillInfo)(nil),                 // 21: proto.AvatarSkillInfo
}
var file_cmd_cmd_skill_proto_depIdxs = []int32{
	18, // 0: proto.AvatarSkillDepotChangeNotify.proud_skill_extra_level_map:type_name -> proto.AvatarSkillDepotChangeNotify.ProudSkillExtraLevelMapEntry
	19, // 1: proto.AvatarSkillDepotChangeNotify.skill_level_map:type_name -> proto.AvatarSkillDepotChangeNotify.SkillLevelMapEntry
	20, // 2: proto.AvatarSkillInfoNotify.skill_map:type_name -> proto.AvatarSkillInfoNotify.SkillMapEntry
	16, // 3: proto.TeamResonanceChangeNotify.info_list:type_name -> proto.AvatarTeamResonanceInfo
	21, // 4: proto.AvatarSkillInfoNotify.SkillMapEntry.value:type_name -> proto.AvatarSkillInfo
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cmd_cmd_skill_proto_init() }
func file_cmd_cmd_skill_proto_init() {
	if File_cmd_cmd_skill_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_skill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAvatarTalentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAvatarTalentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUnlockTalentNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillDepotChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigTalentPointConvertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigTalentPointConvertRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillMaxChargeCountNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProudSkillUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProudSkillUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProudSkillChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProudSkillExtraLevelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanUseSkillNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeamResonanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_skill_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamResonanceChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_skill_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_skill_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_skill_proto_depIdxs,
		MessageInfos:      file_cmd_cmd_skill_proto_msgTypes,
	}.Build()
	File_cmd_cmd_skill_proto = out.File
	file_cmd_cmd_skill_proto_rawDesc = nil
	file_cmd_cmd_skill_proto_goTypes = nil
	file_cmd_cmd_skill_proto_depIdxs = nil
}
