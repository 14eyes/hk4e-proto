// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/enum.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MysqlIndex int32

const (
	MysqlIndex_MYSQL_INDEX_NONE                      MysqlIndex = 0
	MysqlIndex_MYSQL_INDEX_PLAYER_UID                MysqlIndex = 1
	MysqlIndex_MYSQL_INDEX_PLAYER_ONLINE_ID_DATA     MysqlIndex = 2
	MysqlIndex_MYSQL_INDEX_PLAYER_PSN_ONLINE_ID_DATA MysqlIndex = 3
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_0             MysqlIndex = 101
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_1             MysqlIndex = 102
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_2             MysqlIndex = 103
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_3             MysqlIndex = 104
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_4             MysqlIndex = 105
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_5             MysqlIndex = 106
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_6             MysqlIndex = 107
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_7             MysqlIndex = 108
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_8             MysqlIndex = 109
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_9             MysqlIndex = 110
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_10            MysqlIndex = 111
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_11            MysqlIndex = 112
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_12            MysqlIndex = 113
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_13            MysqlIndex = 114
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_14            MysqlIndex = 115
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_15            MysqlIndex = 116
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_16            MysqlIndex = 117
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_17            MysqlIndex = 118
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_18            MysqlIndex = 119
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_19            MysqlIndex = 120
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_20            MysqlIndex = 121
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_21            MysqlIndex = 122
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_22            MysqlIndex = 123
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_23            MysqlIndex = 124
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_24            MysqlIndex = 125
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_25            MysqlIndex = 126
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_26            MysqlIndex = 127
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_27            MysqlIndex = 128
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_28            MysqlIndex = 129
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_29            MysqlIndex = 130
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_30            MysqlIndex = 131
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_31            MysqlIndex = 132
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_32            MysqlIndex = 133
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_33            MysqlIndex = 134
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_34            MysqlIndex = 135
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_35            MysqlIndex = 136
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_36            MysqlIndex = 137
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_37            MysqlIndex = 138
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_38            MysqlIndex = 139
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_39            MysqlIndex = 140
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_40            MysqlIndex = 141
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_41            MysqlIndex = 142
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_42            MysqlIndex = 143
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_43            MysqlIndex = 144
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_44            MysqlIndex = 145
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_45            MysqlIndex = 146
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_46            MysqlIndex = 147
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_47            MysqlIndex = 148
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_48            MysqlIndex = 149
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_49            MysqlIndex = 150
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_50            MysqlIndex = 151
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_51            MysqlIndex = 152
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_52            MysqlIndex = 153
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_53            MysqlIndex = 154
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_54            MysqlIndex = 155
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_55            MysqlIndex = 156
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_56            MysqlIndex = 157
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_57            MysqlIndex = 158
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_58            MysqlIndex = 159
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_59            MysqlIndex = 160
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_60            MysqlIndex = 161
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_61            MysqlIndex = 162
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_62            MysqlIndex = 163
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_63            MysqlIndex = 164
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_64            MysqlIndex = 165
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_65            MysqlIndex = 166
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_66            MysqlIndex = 167
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_67            MysqlIndex = 168
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_68            MysqlIndex = 169
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_69            MysqlIndex = 170
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_70            MysqlIndex = 171
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_71            MysqlIndex = 172
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_72            MysqlIndex = 173
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_73            MysqlIndex = 174
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_74            MysqlIndex = 175
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_75            MysqlIndex = 176
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_76            MysqlIndex = 177
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_77            MysqlIndex = 178
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_78            MysqlIndex = 179
	MysqlIndex_MYSQL_INDEX_PLAYER_DATA_79            MysqlIndex = 180
	MysqlIndex_MYSQL_INDEX_ORDER_DATA                MysqlIndex = 2001
	MysqlIndex_MYSQL_INDEX_CONFIG_LOCAL              MysqlIndex = 1001
	MysqlIndex_MYSQL_INDEX_CONFIG_GLOBAL             MysqlIndex = 1002
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_0              MysqlIndex = 3001
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_1              MysqlIndex = 3002
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_2              MysqlIndex = 3003
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_3              MysqlIndex = 3004
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_4              MysqlIndex = 3005
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_5              MysqlIndex = 3006
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_6              MysqlIndex = 3007
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_7              MysqlIndex = 3008
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_8              MysqlIndex = 3009
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_9              MysqlIndex = 3010
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_10             MysqlIndex = 3011
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_11             MysqlIndex = 3012
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_12             MysqlIndex = 3013
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_13             MysqlIndex = 3014
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_14             MysqlIndex = 3015
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_15             MysqlIndex = 3016
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_16             MysqlIndex = 3017
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_17             MysqlIndex = 3018
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_18             MysqlIndex = 3019
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_19             MysqlIndex = 3020
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_20             MysqlIndex = 3021
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_21             MysqlIndex = 3022
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_22             MysqlIndex = 3023
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_23             MysqlIndex = 3024
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_24             MysqlIndex = 3025
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_25             MysqlIndex = 3026
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_26             MysqlIndex = 3027
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_27             MysqlIndex = 3028
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_28             MysqlIndex = 3029
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_29             MysqlIndex = 3030
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_30             MysqlIndex = 3031
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_31             MysqlIndex = 3032
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_32             MysqlIndex = 3033
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_33             MysqlIndex = 3034
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_34             MysqlIndex = 3035
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_35             MysqlIndex = 3036
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_36             MysqlIndex = 3037
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_37             MysqlIndex = 3038
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_38             MysqlIndex = 3039
	MysqlIndex_MYSQL_INDEX_BLOCK_DATA_39             MysqlIndex = 3040
	MysqlIndex_MYSQL_INDEX_HOME_DATA_0               MysqlIndex = 4001
	MysqlIndex_MYSQL_INDEX_HOME_DATA_1               MysqlIndex = 4002
	MysqlIndex_MYSQL_INDEX_HOME_DATA_2               MysqlIndex = 4003
	MysqlIndex_MYSQL_INDEX_HOME_DATA_3               MysqlIndex = 4004
	MysqlIndex_MYSQL_INDEX_HOME_DATA_4               MysqlIndex = 4005
	MysqlIndex_MYSQL_INDEX_HOME_DATA_5               MysqlIndex = 4006
	MysqlIndex_MYSQL_INDEX_HOME_DATA_6               MysqlIndex = 4007
	MysqlIndex_MYSQL_INDEX_HOME_DATA_7               MysqlIndex = 4008
	MysqlIndex_MYSQL_INDEX_HOME_DATA_8               MysqlIndex = 4009
	MysqlIndex_MYSQL_INDEX_HOME_DATA_9               MysqlIndex = 4010
	MysqlIndex_MYSQL_INDEX_HOME_DATA_10              MysqlIndex = 4011
	MysqlIndex_MYSQL_INDEX_HOME_DATA_11              MysqlIndex = 4012
	MysqlIndex_MYSQL_INDEX_HOME_DATA_12              MysqlIndex = 4013
	MysqlIndex_MYSQL_INDEX_HOME_DATA_13              MysqlIndex = 4014
	MysqlIndex_MYSQL_INDEX_HOME_DATA_14              MysqlIndex = 4015
	MysqlIndex_MYSQL_INDEX_HOME_DATA_15              MysqlIndex = 4016
	MysqlIndex_MYSQL_INDEX_HOME_DATA_16              MysqlIndex = 4017
	MysqlIndex_MYSQL_INDEX_HOME_DATA_17              MysqlIndex = 4018
	MysqlIndex_MYSQL_INDEX_HOME_DATA_18              MysqlIndex = 4019
	MysqlIndex_MYSQL_INDEX_HOME_DATA_19              MysqlIndex = 4020
	MysqlIndex_MYSQL_INDEX_HOME_DATA_20              MysqlIndex = 4021
	MysqlIndex_MYSQL_INDEX_HOME_DATA_21              MysqlIndex = 4022
	MysqlIndex_MYSQL_INDEX_HOME_DATA_22              MysqlIndex = 4023
	MysqlIndex_MYSQL_INDEX_HOME_DATA_23              MysqlIndex = 4024
	MysqlIndex_MYSQL_INDEX_HOME_DATA_24              MysqlIndex = 4025
	MysqlIndex_MYSQL_INDEX_HOME_DATA_25              MysqlIndex = 4026
	MysqlIndex_MYSQL_INDEX_HOME_DATA_26              MysqlIndex = 4027
	MysqlIndex_MYSQL_INDEX_HOME_DATA_27              MysqlIndex = 4028
	MysqlIndex_MYSQL_INDEX_HOME_DATA_28              MysqlIndex = 4029
	MysqlIndex_MYSQL_INDEX_HOME_DATA_29              MysqlIndex = 4030
	MysqlIndex_MYSQL_INDEX_HOME_DATA_30              MysqlIndex = 4031
	MysqlIndex_MYSQL_INDEX_HOME_DATA_31              MysqlIndex = 4032
	MysqlIndex_MYSQL_INDEX_HOME_DATA_32              MysqlIndex = 4033
	MysqlIndex_MYSQL_INDEX_HOME_DATA_33              MysqlIndex = 4034
	MysqlIndex_MYSQL_INDEX_HOME_DATA_34              MysqlIndex = 4035
	MysqlIndex_MYSQL_INDEX_HOME_DATA_35              MysqlIndex = 4036
	MysqlIndex_MYSQL_INDEX_HOME_DATA_36              MysqlIndex = 4037
	MysqlIndex_MYSQL_INDEX_HOME_DATA_37              MysqlIndex = 4038
	MysqlIndex_MYSQL_INDEX_HOME_DATA_38              MysqlIndex = 4039
	MysqlIndex_MYSQL_INDEX_HOME_DATA_39              MysqlIndex = 4040
	MysqlIndex_MYSQL_INDEX_HOME_DATA_40              MysqlIndex = 4041
	MysqlIndex_MYSQL_INDEX_HOME_DATA_41              MysqlIndex = 4042
	MysqlIndex_MYSQL_INDEX_HOME_DATA_42              MysqlIndex = 4043
	MysqlIndex_MYSQL_INDEX_HOME_DATA_43              MysqlIndex = 4044
	MysqlIndex_MYSQL_INDEX_HOME_DATA_44              MysqlIndex = 4045
	MysqlIndex_MYSQL_INDEX_HOME_DATA_45              MysqlIndex = 4046
	MysqlIndex_MYSQL_INDEX_HOME_DATA_46              MysqlIndex = 4047
	MysqlIndex_MYSQL_INDEX_HOME_DATA_47              MysqlIndex = 4048
	MysqlIndex_MYSQL_INDEX_HOME_DATA_48              MysqlIndex = 4049
	MysqlIndex_MYSQL_INDEX_HOME_DATA_49              MysqlIndex = 4050
	MysqlIndex_MYSQL_INDEX_HOME_DATA_50              MysqlIndex = 4051
	MysqlIndex_MYSQL_INDEX_HOME_DATA_51              MysqlIndex = 4052
	MysqlIndex_MYSQL_INDEX_HOME_DATA_52              MysqlIndex = 4053
	MysqlIndex_MYSQL_INDEX_HOME_DATA_53              MysqlIndex = 4054
	MysqlIndex_MYSQL_INDEX_HOME_DATA_54              MysqlIndex = 4055
	MysqlIndex_MYSQL_INDEX_HOME_DATA_55              MysqlIndex = 4056
	MysqlIndex_MYSQL_INDEX_HOME_DATA_56              MysqlIndex = 4057
	MysqlIndex_MYSQL_INDEX_HOME_DATA_57              MysqlIndex = 4058
	MysqlIndex_MYSQL_INDEX_HOME_DATA_58              MysqlIndex = 4059
	MysqlIndex_MYSQL_INDEX_HOME_DATA_59              MysqlIndex = 4060
	MysqlIndex_MYSQL_INDEX_HOME_DATA_60              MysqlIndex = 4061
	MysqlIndex_MYSQL_INDEX_HOME_DATA_61              MysqlIndex = 4062
	MysqlIndex_MYSQL_INDEX_HOME_DATA_62              MysqlIndex = 4063
	MysqlIndex_MYSQL_INDEX_HOME_DATA_63              MysqlIndex = 4064
	MysqlIndex_MYSQL_INDEX_HOME_DATA_64              MysqlIndex = 4065
	MysqlIndex_MYSQL_INDEX_HOME_DATA_65              MysqlIndex = 4066
	MysqlIndex_MYSQL_INDEX_HOME_DATA_66              MysqlIndex = 4067
	MysqlIndex_MYSQL_INDEX_HOME_DATA_67              MysqlIndex = 4068
	MysqlIndex_MYSQL_INDEX_HOME_DATA_68              MysqlIndex = 4069
	MysqlIndex_MYSQL_INDEX_HOME_DATA_69              MysqlIndex = 4070
	MysqlIndex_MYSQL_INDEX_HOME_DATA_70              MysqlIndex = 4071
	MysqlIndex_MYSQL_INDEX_HOME_DATA_71              MysqlIndex = 4072
	MysqlIndex_MYSQL_INDEX_HOME_DATA_72              MysqlIndex = 4073
	MysqlIndex_MYSQL_INDEX_HOME_DATA_73              MysqlIndex = 4074
	MysqlIndex_MYSQL_INDEX_HOME_DATA_74              MysqlIndex = 4075
	MysqlIndex_MYSQL_INDEX_HOME_DATA_75              MysqlIndex = 4076
	MysqlIndex_MYSQL_INDEX_HOME_DATA_76              MysqlIndex = 4077
	MysqlIndex_MYSQL_INDEX_HOME_DATA_77              MysqlIndex = 4078
	MysqlIndex_MYSQL_INDEX_HOME_DATA_78              MysqlIndex = 4079
	MysqlIndex_MYSQL_INDEX_HOME_DATA_79              MysqlIndex = 4080
)

// Enum value maps for MysqlIndex.
var (
	MysqlIndex_name = map[int32]string{
		0:    "MYSQL_INDEX_NONE",
		1:    "MYSQL_INDEX_PLAYER_UID",
		2:    "MYSQL_INDEX_PLAYER_ONLINE_ID_DATA",
		3:    "MYSQL_INDEX_PLAYER_PSN_ONLINE_ID_DATA",
		101:  "MYSQL_INDEX_PLAYER_DATA_0",
		102:  "MYSQL_INDEX_PLAYER_DATA_1",
		103:  "MYSQL_INDEX_PLAYER_DATA_2",
		104:  "MYSQL_INDEX_PLAYER_DATA_3",
		105:  "MYSQL_INDEX_PLAYER_DATA_4",
		106:  "MYSQL_INDEX_PLAYER_DATA_5",
		107:  "MYSQL_INDEX_PLAYER_DATA_6",
		108:  "MYSQL_INDEX_PLAYER_DATA_7",
		109:  "MYSQL_INDEX_PLAYER_DATA_8",
		110:  "MYSQL_INDEX_PLAYER_DATA_9",
		111:  "MYSQL_INDEX_PLAYER_DATA_10",
		112:  "MYSQL_INDEX_PLAYER_DATA_11",
		113:  "MYSQL_INDEX_PLAYER_DATA_12",
		114:  "MYSQL_INDEX_PLAYER_DATA_13",
		115:  "MYSQL_INDEX_PLAYER_DATA_14",
		116:  "MYSQL_INDEX_PLAYER_DATA_15",
		117:  "MYSQL_INDEX_PLAYER_DATA_16",
		118:  "MYSQL_INDEX_PLAYER_DATA_17",
		119:  "MYSQL_INDEX_PLAYER_DATA_18",
		120:  "MYSQL_INDEX_PLAYER_DATA_19",
		121:  "MYSQL_INDEX_PLAYER_DATA_20",
		122:  "MYSQL_INDEX_PLAYER_DATA_21",
		123:  "MYSQL_INDEX_PLAYER_DATA_22",
		124:  "MYSQL_INDEX_PLAYER_DATA_23",
		125:  "MYSQL_INDEX_PLAYER_DATA_24",
		126:  "MYSQL_INDEX_PLAYER_DATA_25",
		127:  "MYSQL_INDEX_PLAYER_DATA_26",
		128:  "MYSQL_INDEX_PLAYER_DATA_27",
		129:  "MYSQL_INDEX_PLAYER_DATA_28",
		130:  "MYSQL_INDEX_PLAYER_DATA_29",
		131:  "MYSQL_INDEX_PLAYER_DATA_30",
		132:  "MYSQL_INDEX_PLAYER_DATA_31",
		133:  "MYSQL_INDEX_PLAYER_DATA_32",
		134:  "MYSQL_INDEX_PLAYER_DATA_33",
		135:  "MYSQL_INDEX_PLAYER_DATA_34",
		136:  "MYSQL_INDEX_PLAYER_DATA_35",
		137:  "MYSQL_INDEX_PLAYER_DATA_36",
		138:  "MYSQL_INDEX_PLAYER_DATA_37",
		139:  "MYSQL_INDEX_PLAYER_DATA_38",
		140:  "MYSQL_INDEX_PLAYER_DATA_39",
		141:  "MYSQL_INDEX_PLAYER_DATA_40",
		142:  "MYSQL_INDEX_PLAYER_DATA_41",
		143:  "MYSQL_INDEX_PLAYER_DATA_42",
		144:  "MYSQL_INDEX_PLAYER_DATA_43",
		145:  "MYSQL_INDEX_PLAYER_DATA_44",
		146:  "MYSQL_INDEX_PLAYER_DATA_45",
		147:  "MYSQL_INDEX_PLAYER_DATA_46",
		148:  "MYSQL_INDEX_PLAYER_DATA_47",
		149:  "MYSQL_INDEX_PLAYER_DATA_48",
		150:  "MYSQL_INDEX_PLAYER_DATA_49",
		151:  "MYSQL_INDEX_PLAYER_DATA_50",
		152:  "MYSQL_INDEX_PLAYER_DATA_51",
		153:  "MYSQL_INDEX_PLAYER_DATA_52",
		154:  "MYSQL_INDEX_PLAYER_DATA_53",
		155:  "MYSQL_INDEX_PLAYER_DATA_54",
		156:  "MYSQL_INDEX_PLAYER_DATA_55",
		157:  "MYSQL_INDEX_PLAYER_DATA_56",
		158:  "MYSQL_INDEX_PLAYER_DATA_57",
		159:  "MYSQL_INDEX_PLAYER_DATA_58",
		160:  "MYSQL_INDEX_PLAYER_DATA_59",
		161:  "MYSQL_INDEX_PLAYER_DATA_60",
		162:  "MYSQL_INDEX_PLAYER_DATA_61",
		163:  "MYSQL_INDEX_PLAYER_DATA_62",
		164:  "MYSQL_INDEX_PLAYER_DATA_63",
		165:  "MYSQL_INDEX_PLAYER_DATA_64",
		166:  "MYSQL_INDEX_PLAYER_DATA_65",
		167:  "MYSQL_INDEX_PLAYER_DATA_66",
		168:  "MYSQL_INDEX_PLAYER_DATA_67",
		169:  "MYSQL_INDEX_PLAYER_DATA_68",
		170:  "MYSQL_INDEX_PLAYER_DATA_69",
		171:  "MYSQL_INDEX_PLAYER_DATA_70",
		172:  "MYSQL_INDEX_PLAYER_DATA_71",
		173:  "MYSQL_INDEX_PLAYER_DATA_72",
		174:  "MYSQL_INDEX_PLAYER_DATA_73",
		175:  "MYSQL_INDEX_PLAYER_DATA_74",
		176:  "MYSQL_INDEX_PLAYER_DATA_75",
		177:  "MYSQL_INDEX_PLAYER_DATA_76",
		178:  "MYSQL_INDEX_PLAYER_DATA_77",
		179:  "MYSQL_INDEX_PLAYER_DATA_78",
		180:  "MYSQL_INDEX_PLAYER_DATA_79",
		2001: "MYSQL_INDEX_ORDER_DATA",
		1001: "MYSQL_INDEX_CONFIG_LOCAL",
		1002: "MYSQL_INDEX_CONFIG_GLOBAL",
		3001: "MYSQL_INDEX_BLOCK_DATA_0",
		3002: "MYSQL_INDEX_BLOCK_DATA_1",
		3003: "MYSQL_INDEX_BLOCK_DATA_2",
		3004: "MYSQL_INDEX_BLOCK_DATA_3",
		3005: "MYSQL_INDEX_BLOCK_DATA_4",
		3006: "MYSQL_INDEX_BLOCK_DATA_5",
		3007: "MYSQL_INDEX_BLOCK_DATA_6",
		3008: "MYSQL_INDEX_BLOCK_DATA_7",
		3009: "MYSQL_INDEX_BLOCK_DATA_8",
		3010: "MYSQL_INDEX_BLOCK_DATA_9",
		3011: "MYSQL_INDEX_BLOCK_DATA_10",
		3012: "MYSQL_INDEX_BLOCK_DATA_11",
		3013: "MYSQL_INDEX_BLOCK_DATA_12",
		3014: "MYSQL_INDEX_BLOCK_DATA_13",
		3015: "MYSQL_INDEX_BLOCK_DATA_14",
		3016: "MYSQL_INDEX_BLOCK_DATA_15",
		3017: "MYSQL_INDEX_BLOCK_DATA_16",
		3018: "MYSQL_INDEX_BLOCK_DATA_17",
		3019: "MYSQL_INDEX_BLOCK_DATA_18",
		3020: "MYSQL_INDEX_BLOCK_DATA_19",
		3021: "MYSQL_INDEX_BLOCK_DATA_20",
		3022: "MYSQL_INDEX_BLOCK_DATA_21",
		3023: "MYSQL_INDEX_BLOCK_DATA_22",
		3024: "MYSQL_INDEX_BLOCK_DATA_23",
		3025: "MYSQL_INDEX_BLOCK_DATA_24",
		3026: "MYSQL_INDEX_BLOCK_DATA_25",
		3027: "MYSQL_INDEX_BLOCK_DATA_26",
		3028: "MYSQL_INDEX_BLOCK_DATA_27",
		3029: "MYSQL_INDEX_BLOCK_DATA_28",
		3030: "MYSQL_INDEX_BLOCK_DATA_29",
		3031: "MYSQL_INDEX_BLOCK_DATA_30",
		3032: "MYSQL_INDEX_BLOCK_DATA_31",
		3033: "MYSQL_INDEX_BLOCK_DATA_32",
		3034: "MYSQL_INDEX_BLOCK_DATA_33",
		3035: "MYSQL_INDEX_BLOCK_DATA_34",
		3036: "MYSQL_INDEX_BLOCK_DATA_35",
		3037: "MYSQL_INDEX_BLOCK_DATA_36",
		3038: "MYSQL_INDEX_BLOCK_DATA_37",
		3039: "MYSQL_INDEX_BLOCK_DATA_38",
		3040: "MYSQL_INDEX_BLOCK_DATA_39",
		4001: "MYSQL_INDEX_HOME_DATA_0",
		4002: "MYSQL_INDEX_HOME_DATA_1",
		4003: "MYSQL_INDEX_HOME_DATA_2",
		4004: "MYSQL_INDEX_HOME_DATA_3",
		4005: "MYSQL_INDEX_HOME_DATA_4",
		4006: "MYSQL_INDEX_HOME_DATA_5",
		4007: "MYSQL_INDEX_HOME_DATA_6",
		4008: "MYSQL_INDEX_HOME_DATA_7",
		4009: "MYSQL_INDEX_HOME_DATA_8",
		4010: "MYSQL_INDEX_HOME_DATA_9",
		4011: "MYSQL_INDEX_HOME_DATA_10",
		4012: "MYSQL_INDEX_HOME_DATA_11",
		4013: "MYSQL_INDEX_HOME_DATA_12",
		4014: "MYSQL_INDEX_HOME_DATA_13",
		4015: "MYSQL_INDEX_HOME_DATA_14",
		4016: "MYSQL_INDEX_HOME_DATA_15",
		4017: "MYSQL_INDEX_HOME_DATA_16",
		4018: "MYSQL_INDEX_HOME_DATA_17",
		4019: "MYSQL_INDEX_HOME_DATA_18",
		4020: "MYSQL_INDEX_HOME_DATA_19",
		4021: "MYSQL_INDEX_HOME_DATA_20",
		4022: "MYSQL_INDEX_HOME_DATA_21",
		4023: "MYSQL_INDEX_HOME_DATA_22",
		4024: "MYSQL_INDEX_HOME_DATA_23",
		4025: "MYSQL_INDEX_HOME_DATA_24",
		4026: "MYSQL_INDEX_HOME_DATA_25",
		4027: "MYSQL_INDEX_HOME_DATA_26",
		4028: "MYSQL_INDEX_HOME_DATA_27",
		4029: "MYSQL_INDEX_HOME_DATA_28",
		4030: "MYSQL_INDEX_HOME_DATA_29",
		4031: "MYSQL_INDEX_HOME_DATA_30",
		4032: "MYSQL_INDEX_HOME_DATA_31",
		4033: "MYSQL_INDEX_HOME_DATA_32",
		4034: "MYSQL_INDEX_HOME_DATA_33",
		4035: "MYSQL_INDEX_HOME_DATA_34",
		4036: "MYSQL_INDEX_HOME_DATA_35",
		4037: "MYSQL_INDEX_HOME_DATA_36",
		4038: "MYSQL_INDEX_HOME_DATA_37",
		4039: "MYSQL_INDEX_HOME_DATA_38",
		4040: "MYSQL_INDEX_HOME_DATA_39",
		4041: "MYSQL_INDEX_HOME_DATA_40",
		4042: "MYSQL_INDEX_HOME_DATA_41",
		4043: "MYSQL_INDEX_HOME_DATA_42",
		4044: "MYSQL_INDEX_HOME_DATA_43",
		4045: "MYSQL_INDEX_HOME_DATA_44",
		4046: "MYSQL_INDEX_HOME_DATA_45",
		4047: "MYSQL_INDEX_HOME_DATA_46",
		4048: "MYSQL_INDEX_HOME_DATA_47",
		4049: "MYSQL_INDEX_HOME_DATA_48",
		4050: "MYSQL_INDEX_HOME_DATA_49",
		4051: "MYSQL_INDEX_HOME_DATA_50",
		4052: "MYSQL_INDEX_HOME_DATA_51",
		4053: "MYSQL_INDEX_HOME_DATA_52",
		4054: "MYSQL_INDEX_HOME_DATA_53",
		4055: "MYSQL_INDEX_HOME_DATA_54",
		4056: "MYSQL_INDEX_HOME_DATA_55",
		4057: "MYSQL_INDEX_HOME_DATA_56",
		4058: "MYSQL_INDEX_HOME_DATA_57",
		4059: "MYSQL_INDEX_HOME_DATA_58",
		4060: "MYSQL_INDEX_HOME_DATA_59",
		4061: "MYSQL_INDEX_HOME_DATA_60",
		4062: "MYSQL_INDEX_HOME_DATA_61",
		4063: "MYSQL_INDEX_HOME_DATA_62",
		4064: "MYSQL_INDEX_HOME_DATA_63",
		4065: "MYSQL_INDEX_HOME_DATA_64",
		4066: "MYSQL_INDEX_HOME_DATA_65",
		4067: "MYSQL_INDEX_HOME_DATA_66",
		4068: "MYSQL_INDEX_HOME_DATA_67",
		4069: "MYSQL_INDEX_HOME_DATA_68",
		4070: "MYSQL_INDEX_HOME_DATA_69",
		4071: "MYSQL_INDEX_HOME_DATA_70",
		4072: "MYSQL_INDEX_HOME_DATA_71",
		4073: "MYSQL_INDEX_HOME_DATA_72",
		4074: "MYSQL_INDEX_HOME_DATA_73",
		4075: "MYSQL_INDEX_HOME_DATA_74",
		4076: "MYSQL_INDEX_HOME_DATA_75",
		4077: "MYSQL_INDEX_HOME_DATA_76",
		4078: "MYSQL_INDEX_HOME_DATA_77",
		4079: "MYSQL_INDEX_HOME_DATA_78",
		4080: "MYSQL_INDEX_HOME_DATA_79",
	}
	MysqlIndex_value = map[string]int32{
		"MYSQL_INDEX_NONE":                      0,
		"MYSQL_INDEX_PLAYER_UID":                1,
		"MYSQL_INDEX_PLAYER_ONLINE_ID_DATA":     2,
		"MYSQL_INDEX_PLAYER_PSN_ONLINE_ID_DATA": 3,
		"MYSQL_INDEX_PLAYER_DATA_0":             101,
		"MYSQL_INDEX_PLAYER_DATA_1":             102,
		"MYSQL_INDEX_PLAYER_DATA_2":             103,
		"MYSQL_INDEX_PLAYER_DATA_3":             104,
		"MYSQL_INDEX_PLAYER_DATA_4":             105,
		"MYSQL_INDEX_PLAYER_DATA_5":             106,
		"MYSQL_INDEX_PLAYER_DATA_6":             107,
		"MYSQL_INDEX_PLAYER_DATA_7":             108,
		"MYSQL_INDEX_PLAYER_DATA_8":             109,
		"MYSQL_INDEX_PLAYER_DATA_9":             110,
		"MYSQL_INDEX_PLAYER_DATA_10":            111,
		"MYSQL_INDEX_PLAYER_DATA_11":            112,
		"MYSQL_INDEX_PLAYER_DATA_12":            113,
		"MYSQL_INDEX_PLAYER_DATA_13":            114,
		"MYSQL_INDEX_PLAYER_DATA_14":            115,
		"MYSQL_INDEX_PLAYER_DATA_15":            116,
		"MYSQL_INDEX_PLAYER_DATA_16":            117,
		"MYSQL_INDEX_PLAYER_DATA_17":            118,
		"MYSQL_INDEX_PLAYER_DATA_18":            119,
		"MYSQL_INDEX_PLAYER_DATA_19":            120,
		"MYSQL_INDEX_PLAYER_DATA_20":            121,
		"MYSQL_INDEX_PLAYER_DATA_21":            122,
		"MYSQL_INDEX_PLAYER_DATA_22":            123,
		"MYSQL_INDEX_PLAYER_DATA_23":            124,
		"MYSQL_INDEX_PLAYER_DATA_24":            125,
		"MYSQL_INDEX_PLAYER_DATA_25":            126,
		"MYSQL_INDEX_PLAYER_DATA_26":            127,
		"MYSQL_INDEX_PLAYER_DATA_27":            128,
		"MYSQL_INDEX_PLAYER_DATA_28":            129,
		"MYSQL_INDEX_PLAYER_DATA_29":            130,
		"MYSQL_INDEX_PLAYER_DATA_30":            131,
		"MYSQL_INDEX_PLAYER_DATA_31":            132,
		"MYSQL_INDEX_PLAYER_DATA_32":            133,
		"MYSQL_INDEX_PLAYER_DATA_33":            134,
		"MYSQL_INDEX_PLAYER_DATA_34":            135,
		"MYSQL_INDEX_PLAYER_DATA_35":            136,
		"MYSQL_INDEX_PLAYER_DATA_36":            137,
		"MYSQL_INDEX_PLAYER_DATA_37":            138,
		"MYSQL_INDEX_PLAYER_DATA_38":            139,
		"MYSQL_INDEX_PLAYER_DATA_39":            140,
		"MYSQL_INDEX_PLAYER_DATA_40":            141,
		"MYSQL_INDEX_PLAYER_DATA_41":            142,
		"MYSQL_INDEX_PLAYER_DATA_42":            143,
		"MYSQL_INDEX_PLAYER_DATA_43":            144,
		"MYSQL_INDEX_PLAYER_DATA_44":            145,
		"MYSQL_INDEX_PLAYER_DATA_45":            146,
		"MYSQL_INDEX_PLAYER_DATA_46":            147,
		"MYSQL_INDEX_PLAYER_DATA_47":            148,
		"MYSQL_INDEX_PLAYER_DATA_48":            149,
		"MYSQL_INDEX_PLAYER_DATA_49":            150,
		"MYSQL_INDEX_PLAYER_DATA_50":            151,
		"MYSQL_INDEX_PLAYER_DATA_51":            152,
		"MYSQL_INDEX_PLAYER_DATA_52":            153,
		"MYSQL_INDEX_PLAYER_DATA_53":            154,
		"MYSQL_INDEX_PLAYER_DATA_54":            155,
		"MYSQL_INDEX_PLAYER_DATA_55":            156,
		"MYSQL_INDEX_PLAYER_DATA_56":            157,
		"MYSQL_INDEX_PLAYER_DATA_57":            158,
		"MYSQL_INDEX_PLAYER_DATA_58":            159,
		"MYSQL_INDEX_PLAYER_DATA_59":            160,
		"MYSQL_INDEX_PLAYER_DATA_60":            161,
		"MYSQL_INDEX_PLAYER_DATA_61":            162,
		"MYSQL_INDEX_PLAYER_DATA_62":            163,
		"MYSQL_INDEX_PLAYER_DATA_63":            164,
		"MYSQL_INDEX_PLAYER_DATA_64":            165,
		"MYSQL_INDEX_PLAYER_DATA_65":            166,
		"MYSQL_INDEX_PLAYER_DATA_66":            167,
		"MYSQL_INDEX_PLAYER_DATA_67":            168,
		"MYSQL_INDEX_PLAYER_DATA_68":            169,
		"MYSQL_INDEX_PLAYER_DATA_69":            170,
		"MYSQL_INDEX_PLAYER_DATA_70":            171,
		"MYSQL_INDEX_PLAYER_DATA_71":            172,
		"MYSQL_INDEX_PLAYER_DATA_72":            173,
		"MYSQL_INDEX_PLAYER_DATA_73":            174,
		"MYSQL_INDEX_PLAYER_DATA_74":            175,
		"MYSQL_INDEX_PLAYER_DATA_75":            176,
		"MYSQL_INDEX_PLAYER_DATA_76":            177,
		"MYSQL_INDEX_PLAYER_DATA_77":            178,
		"MYSQL_INDEX_PLAYER_DATA_78":            179,
		"MYSQL_INDEX_PLAYER_DATA_79":            180,
		"MYSQL_INDEX_ORDER_DATA":                2001,
		"MYSQL_INDEX_CONFIG_LOCAL":              1001,
		"MYSQL_INDEX_CONFIG_GLOBAL":             1002,
		"MYSQL_INDEX_BLOCK_DATA_0":              3001,
		"MYSQL_INDEX_BLOCK_DATA_1":              3002,
		"MYSQL_INDEX_BLOCK_DATA_2":              3003,
		"MYSQL_INDEX_BLOCK_DATA_3":              3004,
		"MYSQL_INDEX_BLOCK_DATA_4":              3005,
		"MYSQL_INDEX_BLOCK_DATA_5":              3006,
		"MYSQL_INDEX_BLOCK_DATA_6":              3007,
		"MYSQL_INDEX_BLOCK_DATA_7":              3008,
		"MYSQL_INDEX_BLOCK_DATA_8":              3009,
		"MYSQL_INDEX_BLOCK_DATA_9":              3010,
		"MYSQL_INDEX_BLOCK_DATA_10":             3011,
		"MYSQL_INDEX_BLOCK_DATA_11":             3012,
		"MYSQL_INDEX_BLOCK_DATA_12":             3013,
		"MYSQL_INDEX_BLOCK_DATA_13":             3014,
		"MYSQL_INDEX_BLOCK_DATA_14":             3015,
		"MYSQL_INDEX_BLOCK_DATA_15":             3016,
		"MYSQL_INDEX_BLOCK_DATA_16":             3017,
		"MYSQL_INDEX_BLOCK_DATA_17":             3018,
		"MYSQL_INDEX_BLOCK_DATA_18":             3019,
		"MYSQL_INDEX_BLOCK_DATA_19":             3020,
		"MYSQL_INDEX_BLOCK_DATA_20":             3021,
		"MYSQL_INDEX_BLOCK_DATA_21":             3022,
		"MYSQL_INDEX_BLOCK_DATA_22":             3023,
		"MYSQL_INDEX_BLOCK_DATA_23":             3024,
		"MYSQL_INDEX_BLOCK_DATA_24":             3025,
		"MYSQL_INDEX_BLOCK_DATA_25":             3026,
		"MYSQL_INDEX_BLOCK_DATA_26":             3027,
		"MYSQL_INDEX_BLOCK_DATA_27":             3028,
		"MYSQL_INDEX_BLOCK_DATA_28":             3029,
		"MYSQL_INDEX_BLOCK_DATA_29":             3030,
		"MYSQL_INDEX_BLOCK_DATA_30":             3031,
		"MYSQL_INDEX_BLOCK_DATA_31":             3032,
		"MYSQL_INDEX_BLOCK_DATA_32":             3033,
		"MYSQL_INDEX_BLOCK_DATA_33":             3034,
		"MYSQL_INDEX_BLOCK_DATA_34":             3035,
		"MYSQL_INDEX_BLOCK_DATA_35":             3036,
		"MYSQL_INDEX_BLOCK_DATA_36":             3037,
		"MYSQL_INDEX_BLOCK_DATA_37":             3038,
		"MYSQL_INDEX_BLOCK_DATA_38":             3039,
		"MYSQL_INDEX_BLOCK_DATA_39":             3040,
		"MYSQL_INDEX_HOME_DATA_0":               4001,
		"MYSQL_INDEX_HOME_DATA_1":               4002,
		"MYSQL_INDEX_HOME_DATA_2":               4003,
		"MYSQL_INDEX_HOME_DATA_3":               4004,
		"MYSQL_INDEX_HOME_DATA_4":               4005,
		"MYSQL_INDEX_HOME_DATA_5":               4006,
		"MYSQL_INDEX_HOME_DATA_6":               4007,
		"MYSQL_INDEX_HOME_DATA_7":               4008,
		"MYSQL_INDEX_HOME_DATA_8":               4009,
		"MYSQL_INDEX_HOME_DATA_9":               4010,
		"MYSQL_INDEX_HOME_DATA_10":              4011,
		"MYSQL_INDEX_HOME_DATA_11":              4012,
		"MYSQL_INDEX_HOME_DATA_12":              4013,
		"MYSQL_INDEX_HOME_DATA_13":              4014,
		"MYSQL_INDEX_HOME_DATA_14":              4015,
		"MYSQL_INDEX_HOME_DATA_15":              4016,
		"MYSQL_INDEX_HOME_DATA_16":              4017,
		"MYSQL_INDEX_HOME_DATA_17":              4018,
		"MYSQL_INDEX_HOME_DATA_18":              4019,
		"MYSQL_INDEX_HOME_DATA_19":              4020,
		"MYSQL_INDEX_HOME_DATA_20":              4021,
		"MYSQL_INDEX_HOME_DATA_21":              4022,
		"MYSQL_INDEX_HOME_DATA_22":              4023,
		"MYSQL_INDEX_HOME_DATA_23":              4024,
		"MYSQL_INDEX_HOME_DATA_24":              4025,
		"MYSQL_INDEX_HOME_DATA_25":              4026,
		"MYSQL_INDEX_HOME_DATA_26":              4027,
		"MYSQL_INDEX_HOME_DATA_27":              4028,
		"MYSQL_INDEX_HOME_DATA_28":              4029,
		"MYSQL_INDEX_HOME_DATA_29":              4030,
		"MYSQL_INDEX_HOME_DATA_30":              4031,
		"MYSQL_INDEX_HOME_DATA_31":              4032,
		"MYSQL_INDEX_HOME_DATA_32":              4033,
		"MYSQL_INDEX_HOME_DATA_33":              4034,
		"MYSQL_INDEX_HOME_DATA_34":              4035,
		"MYSQL_INDEX_HOME_DATA_35":              4036,
		"MYSQL_INDEX_HOME_DATA_36":              4037,
		"MYSQL_INDEX_HOME_DATA_37":              4038,
		"MYSQL_INDEX_HOME_DATA_38":              4039,
		"MYSQL_INDEX_HOME_DATA_39":              4040,
		"MYSQL_INDEX_HOME_DATA_40":              4041,
		"MYSQL_INDEX_HOME_DATA_41":              4042,
		"MYSQL_INDEX_HOME_DATA_42":              4043,
		"MYSQL_INDEX_HOME_DATA_43":              4044,
		"MYSQL_INDEX_HOME_DATA_44":              4045,
		"MYSQL_INDEX_HOME_DATA_45":              4046,
		"MYSQL_INDEX_HOME_DATA_46":              4047,
		"MYSQL_INDEX_HOME_DATA_47":              4048,
		"MYSQL_INDEX_HOME_DATA_48":              4049,
		"MYSQL_INDEX_HOME_DATA_49":              4050,
		"MYSQL_INDEX_HOME_DATA_50":              4051,
		"MYSQL_INDEX_HOME_DATA_51":              4052,
		"MYSQL_INDEX_HOME_DATA_52":              4053,
		"MYSQL_INDEX_HOME_DATA_53":              4054,
		"MYSQL_INDEX_HOME_DATA_54":              4055,
		"MYSQL_INDEX_HOME_DATA_55":              4056,
		"MYSQL_INDEX_HOME_DATA_56":              4057,
		"MYSQL_INDEX_HOME_DATA_57":              4058,
		"MYSQL_INDEX_HOME_DATA_58":              4059,
		"MYSQL_INDEX_HOME_DATA_59":              4060,
		"MYSQL_INDEX_HOME_DATA_60":              4061,
		"MYSQL_INDEX_HOME_DATA_61":              4062,
		"MYSQL_INDEX_HOME_DATA_62":              4063,
		"MYSQL_INDEX_HOME_DATA_63":              4064,
		"MYSQL_INDEX_HOME_DATA_64":              4065,
		"MYSQL_INDEX_HOME_DATA_65":              4066,
		"MYSQL_INDEX_HOME_DATA_66":              4067,
		"MYSQL_INDEX_HOME_DATA_67":              4068,
		"MYSQL_INDEX_HOME_DATA_68":              4069,
		"MYSQL_INDEX_HOME_DATA_69":              4070,
		"MYSQL_INDEX_HOME_DATA_70":              4071,
		"MYSQL_INDEX_HOME_DATA_71":              4072,
		"MYSQL_INDEX_HOME_DATA_72":              4073,
		"MYSQL_INDEX_HOME_DATA_73":              4074,
		"MYSQL_INDEX_HOME_DATA_74":              4075,
		"MYSQL_INDEX_HOME_DATA_75":              4076,
		"MYSQL_INDEX_HOME_DATA_76":              4077,
		"MYSQL_INDEX_HOME_DATA_77":              4078,
		"MYSQL_INDEX_HOME_DATA_78":              4079,
		"MYSQL_INDEX_HOME_DATA_79":              4080,
	}
)

func (x MysqlIndex) Enum() *MysqlIndex {
	p := new(MysqlIndex)
	*p = x
	return p
}

func (x MysqlIndex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MysqlIndex) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[0].Descriptor()
}

func (MysqlIndex) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[0]
}

func (x MysqlIndex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MysqlIndex.Descriptor instead.
func (MysqlIndex) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{0}
}

type RedisIndex int32

const (
	RedisIndex_REDIS_INDEX_NONE                       RedisIndex = 0
	RedisIndex_REDIS_INDEX_PLAYER_STATUS              RedisIndex = 1
	RedisIndex_REDIS_INDEX_MAIL                       RedisIndex = 2
	RedisIndex_REDIS_INDEX_OFFLINE_MSG                RedisIndex = 3
	RedisIndex_REDIS_INDEX_PLAYER_FRIEND_SET          RedisIndex = 4
	RedisIndex_REDIS_INDEX_PLAYER_ASK_FRIEND_SET      RedisIndex = 5
	RedisIndex_REDIS_INDEX_PLAYER_BRIEF_DATA          RedisIndex = 6
	RedisIndex_REDIS_INDEX_PLAYER_BLACKLIST           RedisIndex = 7
	RedisIndex_REDIS_INDEX_PLAYER_PRIVATE_CHAT        RedisIndex = 8
	RedisIndex_REDIS_INDEX_PLAYER_RECENT_CHAT         RedisIndex = 9
	RedisIndex_REDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD RedisIndex = 10
	RedisIndex_REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL     RedisIndex = 11
	RedisIndex_REDIS_INDEX_HOME_STATUS                RedisIndex = 12
	RedisIndex_REDIS_INDEX_HOME_BRIEF_DATA            RedisIndex = 13
	RedisIndex_REDIS_INDEX_HOME_OFFLINE_MSG           RedisIndex = 14
	RedisIndex_REDIS_INDEX_OFFLINE_OP                 RedisIndex = 15
	RedisIndex_REDIS_INDEX_CUSTOM_DUNGEON             RedisIndex = 16
	RedisIndex_REDIS_INDEX_PLAYER_PSN_FRIEND_SET      RedisIndex = 17
	RedisIndex_REDIS_INDEX_PLAYER_PSN_BLACKLIST       RedisIndex = 18
	RedisIndex_REDIS_INDEX_HOME_BLUEPRINT             RedisIndex = 19
)

// Enum value maps for RedisIndex.
var (
	RedisIndex_name = map[int32]string{
		0:  "REDIS_INDEX_NONE",
		1:  "REDIS_INDEX_PLAYER_STATUS",
		2:  "REDIS_INDEX_MAIL",
		3:  "REDIS_INDEX_OFFLINE_MSG",
		4:  "REDIS_INDEX_PLAYER_FRIEND_SET",
		5:  "REDIS_INDEX_PLAYER_ASK_FRIEND_SET",
		6:  "REDIS_INDEX_PLAYER_BRIEF_DATA",
		7:  "REDIS_INDEX_PLAYER_BLACKLIST",
		8:  "REDIS_INDEX_PLAYER_PRIVATE_CHAT",
		9:  "REDIS_INDEX_PLAYER_RECENT_CHAT",
		10: "REDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD",
		11: "REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL",
		12: "REDIS_INDEX_HOME_STATUS",
		13: "REDIS_INDEX_HOME_BRIEF_DATA",
		14: "REDIS_INDEX_HOME_OFFLINE_MSG",
		15: "REDIS_INDEX_OFFLINE_OP",
		16: "REDIS_INDEX_CUSTOM_DUNGEON",
		17: "REDIS_INDEX_PLAYER_PSN_FRIEND_SET",
		18: "REDIS_INDEX_PLAYER_PSN_BLACKLIST",
		19: "REDIS_INDEX_HOME_BLUEPRINT",
	}
	RedisIndex_value = map[string]int32{
		"REDIS_INDEX_NONE":                       0,
		"REDIS_INDEX_PLAYER_STATUS":              1,
		"REDIS_INDEX_MAIL":                       2,
		"REDIS_INDEX_OFFLINE_MSG":                3,
		"REDIS_INDEX_PLAYER_FRIEND_SET":          4,
		"REDIS_INDEX_PLAYER_ASK_FRIEND_SET":      5,
		"REDIS_INDEX_PLAYER_BRIEF_DATA":          6,
		"REDIS_INDEX_PLAYER_BLACKLIST":           7,
		"REDIS_INDEX_PLAYER_PRIVATE_CHAT":        8,
		"REDIS_INDEX_PLAYER_RECENT_CHAT":         9,
		"REDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD": 10,
		"REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL":     11,
		"REDIS_INDEX_HOME_STATUS":                12,
		"REDIS_INDEX_HOME_BRIEF_DATA":            13,
		"REDIS_INDEX_HOME_OFFLINE_MSG":           14,
		"REDIS_INDEX_OFFLINE_OP":                 15,
		"REDIS_INDEX_CUSTOM_DUNGEON":             16,
		"REDIS_INDEX_PLAYER_PSN_FRIEND_SET":      17,
		"REDIS_INDEX_PLAYER_PSN_BLACKLIST":       18,
		"REDIS_INDEX_HOME_BLUEPRINT":             19,
	}
)

func (x RedisIndex) Enum() *RedisIndex {
	p := new(RedisIndex)
	*p = x
	return p
}

func (x RedisIndex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedisIndex) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[1].Descriptor()
}

func (RedisIndex) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[1]
}

func (x RedisIndex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedisIndex.Descriptor instead.
func (RedisIndex) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{1}
}

type EntityCompType int32

const (
	EntityCompType_ENTITY_COMP_NONE       EntityCompType = 0
	EntityCompType_ENTITY_COMP_ENV_ANIMAL EntityCompType = 1
	EntityCompType_ENTITY_COMP_ANIMATOR   EntityCompType = 2
)

// Enum value maps for EntityCompType.
var (
	EntityCompType_name = map[int32]string{
		0: "ENTITY_COMP_NONE",
		1: "ENTITY_COMP_ENV_ANIMAL",
		2: "ENTITY_COMP_ANIMATOR",
	}
	EntityCompType_value = map[string]int32{
		"ENTITY_COMP_NONE":       0,
		"ENTITY_COMP_ENV_ANIMAL": 1,
		"ENTITY_COMP_ANIMATOR":   2,
	}
)

func (x EntityCompType) Enum() *EntityCompType {
	p := new(EntityCompType)
	*p = x
	return p
}

func (x EntityCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[2].Descriptor()
}

func (EntityCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[2]
}

func (x EntityCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityCompType.Descriptor instead.
func (EntityCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{2}
}

type GadgetCompType int32

const (
	GadgetCompType_GADGET_COMP_NONE                      GadgetCompType = 0
	GadgetCompType_GADGET_COMP_INTERACT                  GadgetCompType = 4
	GadgetCompType_GADGET_COMP_GEAR                      GadgetCompType = 5
	GadgetCompType_GADGET_COMP_CRYSTAL                   GadgetCompType = 6
	GadgetCompType_GADGET_COMP_PLATFORM                  GadgetCompType = 7
	GadgetCompType_GADGET_COMP_WEAPON                    GadgetCompType = 8
	GadgetCompType_GADGET_COMP_WORKTOP                   GadgetCompType = 10
	GadgetCompType_GADGET_COMP_SEAL                      GadgetCompType = 11
	GadgetCompType_GADGET_COMP_CLIENT                    GadgetCompType = 12
	GadgetCompType_GADGET_COMP_ABILITY                   GadgetCompType = 13
	GadgetCompType_GADGET_COMP_PLAY                      GadgetCompType = 16
	GadgetCompType_GADGET_COMP_OFFERING                  GadgetCompType = 17
	GadgetCompType_GADGET_COMP_MIRACLE_RING              GadgetCompType = 18
	GadgetCompType_GADGET_COMP_FOUNDATION                GadgetCompType = 19
	GadgetCompType_GADGET_COMP_VEHICLE                   GadgetCompType = 20
	GadgetCompType_GADGET_COMP_SCREEN                    GadgetCompType = 21
	GadgetCompType_GADGET_COMP_FISH_POOL                 GadgetCompType = 22
	GadgetCompType_GADGET_COMP_CUSTOM_GADGET             GadgetCompType = 23
	GadgetCompType_GADGET_COMP_ROGUELIKE_OPERATOR_GADGET GadgetCompType = 24
	GadgetCompType_GADGET_COMP_WIDGET_GADGET             GadgetCompType = 25
	GadgetCompType_GADGET_COMP_NIGHT_CROW                GadgetCompType = 26
	GadgetCompType_GADGET_COMP_COIN_COLLECT_OPERATOR     GadgetCompType = 27
)

// Enum value maps for GadgetCompType.
var (
	GadgetCompType_name = map[int32]string{
		0:  "GADGET_COMP_NONE",
		4:  "GADGET_COMP_INTERACT",
		5:  "GADGET_COMP_GEAR",
		6:  "GADGET_COMP_CRYSTAL",
		7:  "GADGET_COMP_PLATFORM",
		8:  "GADGET_COMP_WEAPON",
		10: "GADGET_COMP_WORKTOP",
		11: "GADGET_COMP_SEAL",
		12: "GADGET_COMP_CLIENT",
		13: "GADGET_COMP_ABILITY",
		16: "GADGET_COMP_PLAY",
		17: "GADGET_COMP_OFFERING",
		18: "GADGET_COMP_MIRACLE_RING",
		19: "GADGET_COMP_FOUNDATION",
		20: "GADGET_COMP_VEHICLE",
		21: "GADGET_COMP_SCREEN",
		22: "GADGET_COMP_FISH_POOL",
		23: "GADGET_COMP_CUSTOM_GADGET",
		24: "GADGET_COMP_ROGUELIKE_OPERATOR_GADGET",
		25: "GADGET_COMP_WIDGET_GADGET",
		26: "GADGET_COMP_NIGHT_CROW",
		27: "GADGET_COMP_COIN_COLLECT_OPERATOR",
	}
	GadgetCompType_value = map[string]int32{
		"GADGET_COMP_NONE":                      0,
		"GADGET_COMP_INTERACT":                  4,
		"GADGET_COMP_GEAR":                      5,
		"GADGET_COMP_CRYSTAL":                   6,
		"GADGET_COMP_PLATFORM":                  7,
		"GADGET_COMP_WEAPON":                    8,
		"GADGET_COMP_WORKTOP":                   10,
		"GADGET_COMP_SEAL":                      11,
		"GADGET_COMP_CLIENT":                    12,
		"GADGET_COMP_ABILITY":                   13,
		"GADGET_COMP_PLAY":                      16,
		"GADGET_COMP_OFFERING":                  17,
		"GADGET_COMP_MIRACLE_RING":              18,
		"GADGET_COMP_FOUNDATION":                19,
		"GADGET_COMP_VEHICLE":                   20,
		"GADGET_COMP_SCREEN":                    21,
		"GADGET_COMP_FISH_POOL":                 22,
		"GADGET_COMP_CUSTOM_GADGET":             23,
		"GADGET_COMP_ROGUELIKE_OPERATOR_GADGET": 24,
		"GADGET_COMP_WIDGET_GADGET":             25,
		"GADGET_COMP_NIGHT_CROW":                26,
		"GADGET_COMP_COIN_COLLECT_OPERATOR":     27,
	}
)

func (x GadgetCompType) Enum() *GadgetCompType {
	p := new(GadgetCompType)
	*p = x
	return p
}

func (x GadgetCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GadgetCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[3].Descriptor()
}

func (GadgetCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[3]
}

func (x GadgetCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GadgetCompType.Descriptor instead.
func (GadgetCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{3}
}

type MonsterCompType int32

const (
	MonsterCompType_MONSTER_COMP_NONE       MonsterCompType = 0
	MonsterCompType_MONSTER_COMP_ENV_ANIMAL MonsterCompType = 1
	MonsterCompType_MONSTER_COMP_FISH       MonsterCompType = 2
	MonsterCompType_MONSTER_COMP_FISHTANK   MonsterCompType = 3
)

// Enum value maps for MonsterCompType.
var (
	MonsterCompType_name = map[int32]string{
		0: "MONSTER_COMP_NONE",
		1: "MONSTER_COMP_ENV_ANIMAL",
		2: "MONSTER_COMP_FISH",
		3: "MONSTER_COMP_FISHTANK",
	}
	MonsterCompType_value = map[string]int32{
		"MONSTER_COMP_NONE":       0,
		"MONSTER_COMP_ENV_ANIMAL": 1,
		"MONSTER_COMP_FISH":       2,
		"MONSTER_COMP_FISHTANK":   3,
	}
)

func (x MonsterCompType) Enum() *MonsterCompType {
	p := new(MonsterCompType)
	*p = x
	return p
}

func (x MonsterCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonsterCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[4].Descriptor()
}

func (MonsterCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[4]
}

func (x MonsterCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonsterCompType.Descriptor instead.
func (MonsterCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{4}
}

type SceneCompType int32

const (
	SceneCompType_SCENE_COMP_NONE            SceneCompType = 0
	SceneCompType_SCENE_COMP_ENV_ANIMAL      SceneCompType = 1
	SceneCompType_SCENE_COMP_GRID            SceneCompType = 2
	SceneCompType_SCENE_COMP_AREA            SceneCompType = 3
	SceneCompType_SCENE_COMP_BLOCK_GROUP     SceneCompType = 4
	SceneCompType_SCENE_COMP_MISC            SceneCompType = 5
	SceneCompType_SCENE_COMP_TEAM            SceneCompType = 6
	SceneCompType_SCENE_COMP_ENCOUNTER       SceneCompType = 7
	SceneCompType_SCENE_COMP_MULTISTAGE_PLAY SceneCompType = 8
	SceneCompType_SCENE_COMP_GALLERY         SceneCompType = 9
	SceneCompType_SCENE_COMP_HOME            SceneCompType = 10
	SceneCompType_SCENE_COMP_TRANSFER_GUARD  SceneCompType = 11
)

// Enum value maps for SceneCompType.
var (
	SceneCompType_name = map[int32]string{
		0:  "SCENE_COMP_NONE",
		1:  "SCENE_COMP_ENV_ANIMAL",
		2:  "SCENE_COMP_GRID",
		3:  "SCENE_COMP_AREA",
		4:  "SCENE_COMP_BLOCK_GROUP",
		5:  "SCENE_COMP_MISC",
		6:  "SCENE_COMP_TEAM",
		7:  "SCENE_COMP_ENCOUNTER",
		8:  "SCENE_COMP_MULTISTAGE_PLAY",
		9:  "SCENE_COMP_GALLERY",
		10: "SCENE_COMP_HOME",
		11: "SCENE_COMP_TRANSFER_GUARD",
	}
	SceneCompType_value = map[string]int32{
		"SCENE_COMP_NONE":            0,
		"SCENE_COMP_ENV_ANIMAL":      1,
		"SCENE_COMP_GRID":            2,
		"SCENE_COMP_AREA":            3,
		"SCENE_COMP_BLOCK_GROUP":     4,
		"SCENE_COMP_MISC":            5,
		"SCENE_COMP_TEAM":            6,
		"SCENE_COMP_ENCOUNTER":       7,
		"SCENE_COMP_MULTISTAGE_PLAY": 8,
		"SCENE_COMP_GALLERY":         9,
		"SCENE_COMP_HOME":            10,
		"SCENE_COMP_TRANSFER_GUARD":  11,
	}
)

func (x SceneCompType) Enum() *SceneCompType {
	p := new(SceneCompType)
	*p = x
	return p
}

func (x SceneCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[5].Descriptor()
}

func (SceneCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[5]
}

func (x SceneCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneCompType.Descriptor instead.
func (SceneCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{5}
}

type PlayerCompType int32

const (
	PlayerCompType_PLAYER_COMP_NONE               PlayerCompType = 0
	PlayerCompType_PLAYER_COMP_BASIC              PlayerCompType = 1
	PlayerCompType_PLAYER_COMP_AVATAR             PlayerCompType = 2
	PlayerCompType_PLAYER_COMP_GM                 PlayerCompType = 3
	PlayerCompType_PLAYER_COMP_QUEST              PlayerCompType = 4
	PlayerCompType_PLAYER_COMP_TALK               PlayerCompType = 5
	PlayerCompType_PLAYER_COMP_SHOP               PlayerCompType = 6
	PlayerCompType_PLAYER_COMP_ITEM               PlayerCompType = 7
	PlayerCompType_PLAYER_COMP_DUNGEON            PlayerCompType = 8
	PlayerCompType_PLAYER_COMP_SCENE              PlayerCompType = 9
	PlayerCompType_PLAYER_COMP_EVENT              PlayerCompType = 10
	PlayerCompType_PLAYER_COMP_BORED              PlayerCompType = 11
	PlayerCompType_PLAYER_COMP_MP                 PlayerCompType = 12
	PlayerCompType_PLAYER_COMP_COOK               PlayerCompType = 13
	PlayerCompType_PLAYER_COMP_COMPOUND           PlayerCompType = 14
	PlayerCompType_PLAYER_COMP_MAIL               PlayerCompType = 15
	PlayerCompType_PLAYER_COMP_LOGIN              PlayerCompType = 16
	PlayerCompType_PLAYER_COMP_OFFLINE_MSG        PlayerCompType = 17
	PlayerCompType_PLAYER_COMP_DAILY_TASK         PlayerCompType = 18
	PlayerCompType_PLAYER_COMP_RAND_TASK          PlayerCompType = 19
	PlayerCompType_PLAYER_COMP_GACHA              PlayerCompType = 20
	PlayerCompType_PLAYER_COMP_GIVING             PlayerCompType = 21
	PlayerCompType_PLAYER_COMP_FORGE              PlayerCompType = 22
	PlayerCompType_PLAYER_COMP_INVESTIGATION      PlayerCompType = 23
	PlayerCompType_PLAYER_COMP_ACTIVITY           PlayerCompType = 24
	PlayerCompType_PLAYER_COMP_WATCHER            PlayerCompType = 25
	PlayerCompType_PLAYER_COMP_SOCIAL             PlayerCompType = 26
	PlayerCompType_PLAYER_COMP_TOWER              PlayerCompType = 27
	PlayerCompType_PLAYER_COMP_SIGN_IN            PlayerCompType = 28
	PlayerCompType_PLAYER_COMP_BATTLE_PASS        PlayerCompType = 29
	PlayerCompType_PLAYER_COMP_BLOSSOM            PlayerCompType = 30
	PlayerCompType_PLAYER_COMP_RECHARGE           PlayerCompType = 31
	PlayerCompType_PLAYER_COMP_MATCH              PlayerCompType = 32
	PlayerCompType_PLAYER_COMP_MP_PLAY            PlayerCompType = 33
	PlayerCompType_PLAYER_COMP_tRIAL_AVATAR       PlayerCompType = 34
	PlayerCompType_PLAYER_COMP_CODEX              PlayerCompType = 35
	PlayerCompType_PLAYER_COMP_ACHIEVEMENT        PlayerCompType = 36
	PlayerCompType_PLAYER_COMP_PERSONAL_LINE      PlayerCompType = 37
	PlayerCompType_PLAYER_COMP_ABILITY_GROUP      PlayerCompType = 38
	PlayerCompType_PLAYER_COMP_REPUTATION         PlayerCompType = 39
	PlayerCompType_PLAYER_COMP_WIDGET             PlayerCompType = 40
	PlayerCompType_PLAYER_COMP_HUNTING            PlayerCompType = 41
	PlayerCompType_PLAYER_COMP_COOP               PlayerCompType = 42
	PlayerCompType_PLAYER_COMP_SCENE_PLAY         PlayerCompType = 43
	PlayerCompType_PLAYER_COMP_COMBINE            PlayerCompType = 44
	PlayerCompType_PLAYER_COMP_OFFERING           PlayerCompType = 45
	PlayerCompType_PLAYER_COMP_ROUTINE            PlayerCompType = 46
	PlayerCompType_PLAYER_COMP_REUNION            PlayerCompType = 47
	PlayerCompType_PLAYER_COMP_MIRACLE_RING       PlayerCompType = 48
	PlayerCompType_PLAYER_COMP_MECHANICUS         PlayerCompType = 49
	PlayerCompType_PLAYER_COMP_OP_ACTIVITY        PlayerCompType = 50
	PlayerCompType_PLAYER_COMP_DRAFT              PlayerCompType = 51
	PlayerCompType_PLAYER_COMP_GALLERY            PlayerCompType = 52
	PlayerCompType_PLAYER_COMP_REGION_SEARCH      PlayerCompType = 53
	PlayerCompType_PLAYER_COMP_HOME               PlayerCompType = 54
	PlayerCompType_PLAYER_COMP_OFFLINE_OP         PlayerCompType = 55
	PlayerCompType_PLAYER_COMP_H5_ACTIVITY        PlayerCompType = 56
	PlayerCompType_PLAYER_COMP_EXHIBITION         PlayerCompType = 57
	PlayerCompType_PLAYER_COMP_VEHICLE            PlayerCompType = 58
	PlayerCompType_PLAYER_COMP_LIVE               PlayerCompType = 59
	PlayerCompType_PLAYER_COMP_GROUP_LINK         PlayerCompType = 60
	PlayerCompType_PLAYER_COMP_FISHING            PlayerCompType = 61
	PlayerCompType_PLAYER_COMP_FIREWORKS          PlayerCompType = 62
	PlayerCompType_PLAYER_COMP_CITY               PlayerCompType = 63
	PlayerCompType_PLAYER_COMP_CUSTOM_DUNGEON     PlayerCompType = 64
	PlayerCompType_PLAYER_COMP_REGIONAL_PLAY      PlayerCompType = 65
	PlayerCompType_PLAYER_COMP_SHARE_CD           PlayerCompType = 66
	PlayerCompType_PLAYER_COMP_UGC                PlayerCompType = 67
	PlayerCompType_PLAYER_COMP_POLYGON            PlayerCompType = 68
	PlayerCompType_PLAYER_COMP_ARANARA_COLLECTION PlayerCompType = 69
	PlayerCompType_PLAYER_COMP_GCG                PlayerCompType = 70
)

// Enum value maps for PlayerCompType.
var (
	PlayerCompType_name = map[int32]string{
		0:  "PLAYER_COMP_NONE",
		1:  "PLAYER_COMP_BASIC",
		2:  "PLAYER_COMP_AVATAR",
		3:  "PLAYER_COMP_GM",
		4:  "PLAYER_COMP_QUEST",
		5:  "PLAYER_COMP_TALK",
		6:  "PLAYER_COMP_SHOP",
		7:  "PLAYER_COMP_ITEM",
		8:  "PLAYER_COMP_DUNGEON",
		9:  "PLAYER_COMP_SCENE",
		10: "PLAYER_COMP_EVENT",
		11: "PLAYER_COMP_BORED",
		12: "PLAYER_COMP_MP",
		13: "PLAYER_COMP_COOK",
		14: "PLAYER_COMP_COMPOUND",
		15: "PLAYER_COMP_MAIL",
		16: "PLAYER_COMP_LOGIN",
		17: "PLAYER_COMP_OFFLINE_MSG",
		18: "PLAYER_COMP_DAILY_TASK",
		19: "PLAYER_COMP_RAND_TASK",
		20: "PLAYER_COMP_GACHA",
		21: "PLAYER_COMP_GIVING",
		22: "PLAYER_COMP_FORGE",
		23: "PLAYER_COMP_INVESTIGATION",
		24: "PLAYER_COMP_ACTIVITY",
		25: "PLAYER_COMP_WATCHER",
		26: "PLAYER_COMP_SOCIAL",
		27: "PLAYER_COMP_TOWER",
		28: "PLAYER_COMP_SIGN_IN",
		29: "PLAYER_COMP_BATTLE_PASS",
		30: "PLAYER_COMP_BLOSSOM",
		31: "PLAYER_COMP_RECHARGE",
		32: "PLAYER_COMP_MATCH",
		33: "PLAYER_COMP_MP_PLAY",
		34: "PLAYER_COMP_tRIAL_AVATAR",
		35: "PLAYER_COMP_CODEX",
		36: "PLAYER_COMP_ACHIEVEMENT",
		37: "PLAYER_COMP_PERSONAL_LINE",
		38: "PLAYER_COMP_ABILITY_GROUP",
		39: "PLAYER_COMP_REPUTATION",
		40: "PLAYER_COMP_WIDGET",
		41: "PLAYER_COMP_HUNTING",
		42: "PLAYER_COMP_COOP",
		43: "PLAYER_COMP_SCENE_PLAY",
		44: "PLAYER_COMP_COMBINE",
		45: "PLAYER_COMP_OFFERING",
		46: "PLAYER_COMP_ROUTINE",
		47: "PLAYER_COMP_REUNION",
		48: "PLAYER_COMP_MIRACLE_RING",
		49: "PLAYER_COMP_MECHANICUS",
		50: "PLAYER_COMP_OP_ACTIVITY",
		51: "PLAYER_COMP_DRAFT",
		52: "PLAYER_COMP_GALLERY",
		53: "PLAYER_COMP_REGION_SEARCH",
		54: "PLAYER_COMP_HOME",
		55: "PLAYER_COMP_OFFLINE_OP",
		56: "PLAYER_COMP_H5_ACTIVITY",
		57: "PLAYER_COMP_EXHIBITION",
		58: "PLAYER_COMP_VEHICLE",
		59: "PLAYER_COMP_LIVE",
		60: "PLAYER_COMP_GROUP_LINK",
		61: "PLAYER_COMP_FISHING",
		62: "PLAYER_COMP_FIREWORKS",
		63: "PLAYER_COMP_CITY",
		64: "PLAYER_COMP_CUSTOM_DUNGEON",
		65: "PLAYER_COMP_REGIONAL_PLAY",
		66: "PLAYER_COMP_SHARE_CD",
		67: "PLAYER_COMP_UGC",
		68: "PLAYER_COMP_POLYGON",
		69: "PLAYER_COMP_ARANARA_COLLECTION",
		70: "PLAYER_COMP_GCG",
	}
	PlayerCompType_value = map[string]int32{
		"PLAYER_COMP_NONE":               0,
		"PLAYER_COMP_BASIC":              1,
		"PLAYER_COMP_AVATAR":             2,
		"PLAYER_COMP_GM":                 3,
		"PLAYER_COMP_QUEST":              4,
		"PLAYER_COMP_TALK":               5,
		"PLAYER_COMP_SHOP":               6,
		"PLAYER_COMP_ITEM":               7,
		"PLAYER_COMP_DUNGEON":            8,
		"PLAYER_COMP_SCENE":              9,
		"PLAYER_COMP_EVENT":              10,
		"PLAYER_COMP_BORED":              11,
		"PLAYER_COMP_MP":                 12,
		"PLAYER_COMP_COOK":               13,
		"PLAYER_COMP_COMPOUND":           14,
		"PLAYER_COMP_MAIL":               15,
		"PLAYER_COMP_LOGIN":              16,
		"PLAYER_COMP_OFFLINE_MSG":        17,
		"PLAYER_COMP_DAILY_TASK":         18,
		"PLAYER_COMP_RAND_TASK":          19,
		"PLAYER_COMP_GACHA":              20,
		"PLAYER_COMP_GIVING":             21,
		"PLAYER_COMP_FORGE":              22,
		"PLAYER_COMP_INVESTIGATION":      23,
		"PLAYER_COMP_ACTIVITY":           24,
		"PLAYER_COMP_WATCHER":            25,
		"PLAYER_COMP_SOCIAL":             26,
		"PLAYER_COMP_TOWER":              27,
		"PLAYER_COMP_SIGN_IN":            28,
		"PLAYER_COMP_BATTLE_PASS":        29,
		"PLAYER_COMP_BLOSSOM":            30,
		"PLAYER_COMP_RECHARGE":           31,
		"PLAYER_COMP_MATCH":              32,
		"PLAYER_COMP_MP_PLAY":            33,
		"PLAYER_COMP_tRIAL_AVATAR":       34,
		"PLAYER_COMP_CODEX":              35,
		"PLAYER_COMP_ACHIEVEMENT":        36,
		"PLAYER_COMP_PERSONAL_LINE":      37,
		"PLAYER_COMP_ABILITY_GROUP":      38,
		"PLAYER_COMP_REPUTATION":         39,
		"PLAYER_COMP_WIDGET":             40,
		"PLAYER_COMP_HUNTING":            41,
		"PLAYER_COMP_COOP":               42,
		"PLAYER_COMP_SCENE_PLAY":         43,
		"PLAYER_COMP_COMBINE":            44,
		"PLAYER_COMP_OFFERING":           45,
		"PLAYER_COMP_ROUTINE":            46,
		"PLAYER_COMP_REUNION":            47,
		"PLAYER_COMP_MIRACLE_RING":       48,
		"PLAYER_COMP_MECHANICUS":         49,
		"PLAYER_COMP_OP_ACTIVITY":        50,
		"PLAYER_COMP_DRAFT":              51,
		"PLAYER_COMP_GALLERY":            52,
		"PLAYER_COMP_REGION_SEARCH":      53,
		"PLAYER_COMP_HOME":               54,
		"PLAYER_COMP_OFFLINE_OP":         55,
		"PLAYER_COMP_H5_ACTIVITY":        56,
		"PLAYER_COMP_EXHIBITION":         57,
		"PLAYER_COMP_VEHICLE":            58,
		"PLAYER_COMP_LIVE":               59,
		"PLAYER_COMP_GROUP_LINK":         60,
		"PLAYER_COMP_FISHING":            61,
		"PLAYER_COMP_FIREWORKS":          62,
		"PLAYER_COMP_CITY":               63,
		"PLAYER_COMP_CUSTOM_DUNGEON":     64,
		"PLAYER_COMP_REGIONAL_PLAY":      65,
		"PLAYER_COMP_SHARE_CD":           66,
		"PLAYER_COMP_UGC":                67,
		"PLAYER_COMP_POLYGON":            68,
		"PLAYER_COMP_ARANARA_COLLECTION": 69,
		"PLAYER_COMP_GCG":                70,
	}
)

func (x PlayerCompType) Enum() *PlayerCompType {
	p := new(PlayerCompType)
	*p = x
	return p
}

func (x PlayerCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[6].Descriptor()
}

func (PlayerCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[6]
}

func (x PlayerCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerCompType.Descriptor instead.
func (PlayerCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{6}
}

type AvatarCompType int32

const (
	AvatarCompType_AVATAR_COMP_NONE       AvatarCompType = 0
	AvatarCompType_AVATAR_COMP_EQUIP      AvatarCompType = 1
	AvatarCompType_AVATAR_COMP_SKILL      AvatarCompType = 2
	AvatarCompType_AVATAR_COMP_BUFF       AvatarCompType = 3
	AvatarCompType_AVATAR_COMP_TALENT     AvatarCompType = 4
	AvatarCompType_AVATAR_COMP_FASHION    AvatarCompType = 5
	AvatarCompType_AVATAR_COMP_EXTRA_PROP AvatarCompType = 6
)

// Enum value maps for AvatarCompType.
var (
	AvatarCompType_name = map[int32]string{
		0: "AVATAR_COMP_NONE",
		1: "AVATAR_COMP_EQUIP",
		2: "AVATAR_COMP_SKILL",
		3: "AVATAR_COMP_BUFF",
		4: "AVATAR_COMP_TALENT",
		5: "AVATAR_COMP_FASHION",
		6: "AVATAR_COMP_EXTRA_PROP",
	}
	AvatarCompType_value = map[string]int32{
		"AVATAR_COMP_NONE":       0,
		"AVATAR_COMP_EQUIP":      1,
		"AVATAR_COMP_SKILL":      2,
		"AVATAR_COMP_BUFF":       3,
		"AVATAR_COMP_TALENT":     4,
		"AVATAR_COMP_FASHION":    5,
		"AVATAR_COMP_EXTRA_PROP": 6,
	}
)

func (x AvatarCompType) Enum() *AvatarCompType {
	p := new(AvatarCompType)
	*p = x
	return p
}

func (x AvatarCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[7].Descriptor()
}

func (AvatarCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[7]
}

func (x AvatarCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarCompType.Descriptor instead.
func (AvatarCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{7}
}

type AvatarSnapshotType int32

const (
	AvatarSnapshotType_AVATAR_SNAPSHOT_TYPE_NONE                AvatarSnapshotType = 0
	AvatarSnapshotType_AVATAR_SNAPSHOT_TYPE_ROGUE_ACTIVITY      AvatarSnapshotType = 1
	AvatarSnapshotType_AVATAR_SNAPSHOT_TYPE_MIST_TRIAL_ACTIVITY AvatarSnapshotType = 2
	AvatarSnapshotType_AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVITY AvatarSnapshotType = 3
)

// Enum value maps for AvatarSnapshotType.
var (
	AvatarSnapshotType_name = map[int32]string{
		0: "AVATAR_SNAPSHOT_TYPE_NONE",
		1: "AVATAR_SNAPSHOT_TYPE_ROGUE_ACTIVITY",
		2: "AVATAR_SNAPSHOT_TYPE_MIST_TRIAL_ACTIVITY",
		3: "AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVITY",
	}
	AvatarSnapshotType_value = map[string]int32{
		"AVATAR_SNAPSHOT_TYPE_NONE":                0,
		"AVATAR_SNAPSHOT_TYPE_ROGUE_ACTIVITY":      1,
		"AVATAR_SNAPSHOT_TYPE_MIST_TRIAL_ACTIVITY": 2,
		"AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVITY": 3,
	}
)

func (x AvatarSnapshotType) Enum() *AvatarSnapshotType {
	p := new(AvatarSnapshotType)
	*p = x
	return p
}

func (x AvatarSnapshotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarSnapshotType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[8].Descriptor()
}

func (AvatarSnapshotType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[8]
}

func (x AvatarSnapshotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarSnapshotType.Descriptor instead.
func (AvatarSnapshotType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{8}
}

type FormalAvatarCompType int32

const (
	FormalAvatarCompType_FORMAL_AVATAR_COMP_NONE       FormalAvatarCompType = 0
	FormalAvatarCompType_FORMAL_AVATAR_COMP_FETTER     FormalAvatarCompType = 1
	FormalAvatarCompType_FORMAL_AVATAR_COMP_EXPEDITION FormalAvatarCompType = 2
)

// Enum value maps for FormalAvatarCompType.
var (
	FormalAvatarCompType_name = map[int32]string{
		0: "FORMAL_AVATAR_COMP_NONE",
		1: "FORMAL_AVATAR_COMP_FETTER",
		2: "FORMAL_AVATAR_COMP_EXPEDITION",
	}
	FormalAvatarCompType_value = map[string]int32{
		"FORMAL_AVATAR_COMP_NONE":       0,
		"FORMAL_AVATAR_COMP_FETTER":     1,
		"FORMAL_AVATAR_COMP_EXPEDITION": 2,
	}
)

func (x FormalAvatarCompType) Enum() *FormalAvatarCompType {
	p := new(FormalAvatarCompType)
	*p = x
	return p
}

func (x FormalAvatarCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FormalAvatarCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[9].Descriptor()
}

func (FormalAvatarCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[9]
}

func (x FormalAvatarCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FormalAvatarCompType.Descriptor instead.
func (FormalAvatarCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{9}
}

type PacketHeadExtKeyType int32

const (
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID         PacketHeadExtKeyType = 0
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_PLAYER_RTT              PacketHeadExtKeyType = 1
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_IS_CALLBACK             PacketHeadExtKeyType = 2
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_WORD_FILTER_ACTION_TYPE PacketHeadExtKeyType = 3
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP  PacketHeadExtKeyType = 10001
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIMESTAMP  PacketHeadExtKeyType = 10002
	PacketHeadExtKeyType_PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP  PacketHeadExtKeyType = 10003
)

// Enum value maps for PacketHeadExtKeyType.
var (
	PacketHeadExtKeyType_name = map[int32]string{
		0:     "PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID",
		1:     "PACKET_HEAD_EXT_KEY_PLAYER_RTT",
		2:     "PACKET_HEAD_EXT_KEY_IS_CALLBACK",
		3:     "PACKET_HEAD_EXT_KEY_WORD_FILTER_ACTION_TYPE",
		10001: "PACKET_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP",
		10002: "PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIMESTAMP",
		10003: "PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP",
	}
	PacketHeadExtKeyType_value = map[string]int32{
		"PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID":         0,
		"PACKET_HEAD_EXT_KEY_PLAYER_RTT":              1,
		"PACKET_HEAD_EXT_KEY_IS_CALLBACK":             2,
		"PACKET_HEAD_EXT_KEY_WORD_FILTER_ACTION_TYPE": 3,
		"PACKET_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP":  10001,
		"PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIMESTAMP":  10002,
		"PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP":  10003,
	}
)

func (x PacketHeadExtKeyType) Enum() *PacketHeadExtKeyType {
	p := new(PacketHeadExtKeyType)
	*p = x
	return p
}

func (x PacketHeadExtKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketHeadExtKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[10].Descriptor()
}

func (PacketHeadExtKeyType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[10]
}

func (x PacketHeadExtKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketHeadExtKeyType.Descriptor instead.
func (PacketHeadExtKeyType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{10}
}

type MailAddOpType int32

const (
	MailAddOpType_MAIL_ADD_OP_NONE MailAddOpType = 0
	MailAddOpType_MAIL_ADD_OP_GAME MailAddOpType = 1
	MailAddOpType_MAIL_ADD_OP_MUIP MailAddOpType = 2
)

// Enum value maps for MailAddOpType.
var (
	MailAddOpType_name = map[int32]string{
		0: "MAIL_ADD_OP_NONE",
		1: "MAIL_ADD_OP_GAME",
		2: "MAIL_ADD_OP_MUIP",
	}
	MailAddOpType_value = map[string]int32{
		"MAIL_ADD_OP_NONE": 0,
		"MAIL_ADD_OP_GAME": 1,
		"MAIL_ADD_OP_MUIP": 2,
	}
)

func (x MailAddOpType) Enum() *MailAddOpType {
	p := new(MailAddOpType)
	*p = x
	return p
}

func (x MailAddOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailAddOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[11].Descriptor()
}

func (MailAddOpType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[11]
}

func (x MailAddOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailAddOpType.Descriptor instead.
func (MailAddOpType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{11}
}

type MailDelOpType int32

const (
	MailDelOpType_MAIL_DEL_OP_NONE           MailDelOpType = 0
	MailDelOpType_MAIL_DEL_OP_CLIENT         MailDelOpType = 1
	MailDelOpType_MAIL_DEL_OP_GAME           MailDelOpType = 2
	MailDelOpType_MAIL_DEL_OP_MUIP           MailDelOpType = 3
	MailDelOpType_MAIL_DEL_OP_MUIP_BY_TICKET MailDelOpType = 4
)

// Enum value maps for MailDelOpType.
var (
	MailDelOpType_name = map[int32]string{
		0: "MAIL_DEL_OP_NONE",
		1: "MAIL_DEL_OP_CLIENT",
		2: "MAIL_DEL_OP_GAME",
		3: "MAIL_DEL_OP_MUIP",
		4: "MAIL_DEL_OP_MUIP_BY_TICKET",
	}
	MailDelOpType_value = map[string]int32{
		"MAIL_DEL_OP_NONE":           0,
		"MAIL_DEL_OP_CLIENT":         1,
		"MAIL_DEL_OP_GAME":           2,
		"MAIL_DEL_OP_MUIP":           3,
		"MAIL_DEL_OP_MUIP_BY_TICKET": 4,
	}
)

func (x MailDelOpType) Enum() *MailDelOpType {
	p := new(MailDelOpType)
	*p = x
	return p
}

func (x MailDelOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailDelOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[12].Descriptor()
}

func (MailDelOpType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[12]
}

func (x MailDelOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailDelOpType.Descriptor instead.
func (MailDelOpType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{12}
}

type MailGetOPType int32

const (
	MailGetOPType_MAIL_GET_OP_NONE               MailGetOPType = 0
	MailGetOPType_MAIL_GET_OP_CLIENT             MailGetOPType = 1
	MailGetOPType_MAIL_GET_OP_TAKE_ATTACHMENT    MailGetOPType = 2
	MailGetOPType_MAIL_GET_OP_MUIP               MailGetOPType = 3
	MailGetOPType_MAIL_GET_OP_UNTREATED          MailGetOPType = 4
	MailGetOPType_MAIL_GET_OP_CLIENT_MULTI_BATCH MailGetOPType = 5
)

// Enum value maps for MailGetOPType.
var (
	MailGetOPType_name = map[int32]string{
		0: "MAIL_GET_OP_NONE",
		1: "MAIL_GET_OP_CLIENT",
		2: "MAIL_GET_OP_TAKE_ATTACHMENT",
		3: "MAIL_GET_OP_MUIP",
		4: "MAIL_GET_OP_UNTREATED",
		5: "MAIL_GET_OP_CLIENT_MULTI_BATCH",
	}
	MailGetOPType_value = map[string]int32{
		"MAIL_GET_OP_NONE":               0,
		"MAIL_GET_OP_CLIENT":             1,
		"MAIL_GET_OP_TAKE_ATTACHMENT":    2,
		"MAIL_GET_OP_MUIP":               3,
		"MAIL_GET_OP_UNTREATED":          4,
		"MAIL_GET_OP_CLIENT_MULTI_BATCH": 5,
	}
)

func (x MailGetOPType) Enum() *MailGetOPType {
	p := new(MailGetOPType)
	*p = x
	return p
}

func (x MailGetOPType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailGetOPType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[13].Descriptor()
}

func (MailGetOPType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[13]
}

func (x MailGetOPType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailGetOPType.Descriptor instead.
func (MailGetOPType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{13}
}

type MailGetType int32

const (
	MailGetType_MAIL_GET_NONE          MailGetType = 0
	MailGetType_MAIL_GET_BY_ID         MailGetType = 1
	MailGetType_MAIL_GET_ALL           MailGetType = 2
	MailGetType_MAIL_GET_ALL_COLLECTED MailGetType = 3
)

// Enum value maps for MailGetType.
var (
	MailGetType_name = map[int32]string{
		0: "MAIL_GET_NONE",
		1: "MAIL_GET_BY_ID",
		2: "MAIL_GET_ALL",
		3: "MAIL_GET_ALL_COLLECTED",
	}
	MailGetType_value = map[string]int32{
		"MAIL_GET_NONE":          0,
		"MAIL_GET_BY_ID":         1,
		"MAIL_GET_ALL":           2,
		"MAIL_GET_ALL_COLLECTED": 3,
	}
)

func (x MailGetType) Enum() *MailGetType {
	p := new(MailGetType)
	*p = x
	return p
}

func (x MailGetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailGetType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[14].Descriptor()
}

func (MailGetType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[14]
}

func (x MailGetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailGetType.Descriptor instead.
func (MailGetType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{14}
}

type MailUpdateOpType int32

const (
	MailUpdateOpType_MAIL_UPDATE_OP_NONE            MailUpdateOpType = 0
	MailUpdateOpType_MAIL_UPDATE_OP_MARK_READ       MailUpdateOpType = 1
	MailUpdateOpType_MAIL_UPDATE_OP_TAKE_ATTACHMENT MailUpdateOpType = 2
	MailUpdateOpType_MAIL_UPDATE_OP_STAR_MAIL       MailUpdateOpType = 3
	MailUpdateOpType_MAIL_UPDATE_OP_UNSTAR_MAIL     MailUpdateOpType = 4
)

// Enum value maps for MailUpdateOpType.
var (
	MailUpdateOpType_name = map[int32]string{
		0: "MAIL_UPDATE_OP_NONE",
		1: "MAIL_UPDATE_OP_MARK_READ",
		2: "MAIL_UPDATE_OP_TAKE_ATTACHMENT",
		3: "MAIL_UPDATE_OP_STAR_MAIL",
		4: "MAIL_UPDATE_OP_UNSTAR_MAIL",
	}
	MailUpdateOpType_value = map[string]int32{
		"MAIL_UPDATE_OP_NONE":            0,
		"MAIL_UPDATE_OP_MARK_READ":       1,
		"MAIL_UPDATE_OP_TAKE_ATTACHMENT": 2,
		"MAIL_UPDATE_OP_STAR_MAIL":       3,
		"MAIL_UPDATE_OP_UNSTAR_MAIL":     4,
	}
)

func (x MailUpdateOpType) Enum() *MailUpdateOpType {
	p := new(MailUpdateOpType)
	*p = x
	return p
}

func (x MailUpdateOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailUpdateOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[15].Descriptor()
}

func (MailUpdateOpType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[15]
}

func (x MailUpdateOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailUpdateOpType.Descriptor instead.
func (MailUpdateOpType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{15}
}

type MatchUnitRemoveOpType int32

const (
	MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_NONE           MatchUnitRemoveOpType = 0
	MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_PLAYER_CANCEL  MatchUnitRemoveOpType = 1
	MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_PLAYER_LOGOUT  MatchUnitRemoveOpType = 2
	MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_INTERRUPTED    MatchUnitRemoveOpType = 3
	MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE MatchUnitRemoveOpType = 4
)

// Enum value maps for MatchUnitRemoveOpType.
var (
	MatchUnitRemoveOpType_name = map[int32]string{
		0: "MATCH_UNIT_REMOVE_OP_NONE",
		1: "MATCH_UNIT_REMOVE_OP_PLAYER_CANCEL",
		2: "MATCH_UNIT_REMOVE_OP_PLAYER_LOGOUT",
		3: "MATCH_UNIT_REMOVE_OP_INTERRUPTED",
		4: "MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE",
	}
	MatchUnitRemoveOpType_value = map[string]int32{
		"MATCH_UNIT_REMOVE_OP_NONE":           0,
		"MATCH_UNIT_REMOVE_OP_PLAYER_CANCEL":  1,
		"MATCH_UNIT_REMOVE_OP_PLAYER_LOGOUT":  2,
		"MATCH_UNIT_REMOVE_OP_INTERRUPTED":    3,
		"MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE": 4,
	}
)

func (x MatchUnitRemoveOpType) Enum() *MatchUnitRemoveOpType {
	p := new(MatchUnitRemoveOpType)
	*p = x
	return p
}

func (x MatchUnitRemoveOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchUnitRemoveOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[16].Descriptor()
}

func (MatchUnitRemoveOpType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[16]
}

func (x MatchUnitRemoveOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchUnitRemoveOpType.Descriptor instead.
func (MatchUnitRemoveOpType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{16}
}

type MatchIdentity int32

const (
	MatchIdentity_MATCH_IDENTITY_NONE  MatchIdentity = 0
	MatchIdentity_MATCH_IDENTITY_HOST  MatchIdentity = 1
	MatchIdentity_MATCH_IDENTITY_GUEST MatchIdentity = 2
)

// Enum value maps for MatchIdentity.
var (
	MatchIdentity_name = map[int32]string{
		0: "MATCH_IDENTITY_NONE",
		1: "MATCH_IDENTITY_HOST",
		2: "MATCH_IDENTITY_GUEST",
	}
	MatchIdentity_value = map[string]int32{
		"MATCH_IDENTITY_NONE":  0,
		"MATCH_IDENTITY_HOST":  1,
		"MATCH_IDENTITY_GUEST": 2,
	}
)

func (x MatchIdentity) Enum() *MatchIdentity {
	p := new(MatchIdentity)
	*p = x
	return p
}

func (x MatchIdentity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchIdentity) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[17].Descriptor()
}

func (MatchIdentity) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[17]
}

func (x MatchIdentity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchIdentity.Descriptor instead.
func (MatchIdentity) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{17}
}

type ServiceMaxLoad int32

const (
	ServiceMaxLoad_SERVICE_MAX_LOAD_NONE ServiceMaxLoad = 0
	ServiceMaxLoad_SERVICE_MAX_LOAD_GAME ServiceMaxLoad = 10000
	ServiceMaxLoad_SERVICE_MAX_LOAD_GATE ServiceMaxLoad = 10000
)

// Enum value maps for ServiceMaxLoad.
var (
	ServiceMaxLoad_name = map[int32]string{
		0:     "SERVICE_MAX_LOAD_NONE",
		10000: "SERVICE_MAX_LOAD_GAME",
		// Duplicate value: 10000: "SERVICE_MAX_LOAD_GATE",
	}
	ServiceMaxLoad_value = map[string]int32{
		"SERVICE_MAX_LOAD_NONE": 0,
		"SERVICE_MAX_LOAD_GAME": 10000,
		"SERVICE_MAX_LOAD_GATE": 10000,
	}
)

func (x ServiceMaxLoad) Enum() *ServiceMaxLoad {
	p := new(ServiceMaxLoad)
	*p = x
	return p
}

func (x ServiceMaxLoad) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceMaxLoad) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[18].Descriptor()
}

func (ServiceMaxLoad) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[18]
}

func (x ServiceMaxLoad) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceMaxLoad.Descriptor instead.
func (ServiceMaxLoad) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{18}
}

type AsyncHttpType int32

const (
	AsyncHttpType_ASYNC_HTTP_DEFAULT                  AsyncHttpType = 0
	AsyncHttpType_ASYNC_HTTP_FIRST_LOGIN_NICKNAME     AsyncHttpType = 1
	AsyncHttpType_ASYNC_HTTP_SAFE_SERVER              AsyncHttpType = 2
	AsyncHttpType_ASYNC_HTTP_HOME_VERIFY              AsyncHttpType = 3
	AsyncHttpType_ASYNC_HTTP_OUTPUT_CONTROL_MONITOR   AsyncHttpType = 4
	AsyncHttpType_ASYNC_HTTP_NICKNAME_SIGNATURE_AUDIT AsyncHttpType = 5
	AsyncHttpType_ASYNC_HTTP_AVATAR_RENAME_AUDIT      AsyncHttpType = 6
	AsyncHttpType_ASYNC_HTTP_QUERY_IP_REGION          AsyncHttpType = 7
)

// Enum value maps for AsyncHttpType.
var (
	AsyncHttpType_name = map[int32]string{
		0: "ASYNC_HTTP_DEFAULT",
		1: "ASYNC_HTTP_FIRST_LOGIN_NICKNAME",
		2: "ASYNC_HTTP_SAFE_SERVER",
		3: "ASYNC_HTTP_HOME_VERIFY",
		4: "ASYNC_HTTP_OUTPUT_CONTROL_MONITOR",
		5: "ASYNC_HTTP_NICKNAME_SIGNATURE_AUDIT",
		6: "ASYNC_HTTP_AVATAR_RENAME_AUDIT",
		7: "ASYNC_HTTP_QUERY_IP_REGION",
	}
	AsyncHttpType_value = map[string]int32{
		"ASYNC_HTTP_DEFAULT":                  0,
		"ASYNC_HTTP_FIRST_LOGIN_NICKNAME":     1,
		"ASYNC_HTTP_SAFE_SERVER":              2,
		"ASYNC_HTTP_HOME_VERIFY":              3,
		"ASYNC_HTTP_OUTPUT_CONTROL_MONITOR":   4,
		"ASYNC_HTTP_NICKNAME_SIGNATURE_AUDIT": 5,
		"ASYNC_HTTP_AVATAR_RENAME_AUDIT":      6,
		"ASYNC_HTTP_QUERY_IP_REGION":          7,
	}
)

func (x AsyncHttpType) Enum() *AsyncHttpType {
	p := new(AsyncHttpType)
	*p = x
	return p
}

func (x AsyncHttpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AsyncHttpType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[19].Descriptor()
}

func (AsyncHttpType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[19]
}

func (x AsyncHttpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AsyncHttpType.Descriptor instead.
func (AsyncHttpType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{19}
}

type HomeCompType int32

const (
	HomeCompType_HOME_COMP_NONE             HomeCompType = 0
	HomeCompType_HOME_COMP_BASIC            HomeCompType = 1
	HomeCompType_HOME_COMP_SCENE            HomeCompType = 2
	HomeCompType_HOME_COMP_OFFLINE_MSG      HomeCompType = 3
	HomeCompType_HOME_COMP_FURNITURE_MAKE   HomeCompType = 4
	HomeCompType_HOME_COMP_LIMITED_SHOP     HomeCompType = 5
	HomeCompType_HOME_COMP_PLANT            HomeCompType = 6
	HomeCompType_HOME_COMP_FISH_FARMING     HomeCompType = 7
	HomeCompType_HOME_COMP_CUSTOM_FURNITURE HomeCompType = 8
	HomeCompType_HOME_PICTURE_FRAME         HomeCompType = 9
	HomeCompType_HOME_COMP_GROUP_RECORD     HomeCompType = 10
	HomeCompType_HOME_COMP_BLUEPRINT        HomeCompType = 11
)

// Enum value maps for HomeCompType.
var (
	HomeCompType_name = map[int32]string{
		0:  "HOME_COMP_NONE",
		1:  "HOME_COMP_BASIC",
		2:  "HOME_COMP_SCENE",
		3:  "HOME_COMP_OFFLINE_MSG",
		4:  "HOME_COMP_FURNITURE_MAKE",
		5:  "HOME_COMP_LIMITED_SHOP",
		6:  "HOME_COMP_PLANT",
		7:  "HOME_COMP_FISH_FARMING",
		8:  "HOME_COMP_CUSTOM_FURNITURE",
		9:  "HOME_PICTURE_FRAME",
		10: "HOME_COMP_GROUP_RECORD",
		11: "HOME_COMP_BLUEPRINT",
	}
	HomeCompType_value = map[string]int32{
		"HOME_COMP_NONE":             0,
		"HOME_COMP_BASIC":            1,
		"HOME_COMP_SCENE":            2,
		"HOME_COMP_OFFLINE_MSG":      3,
		"HOME_COMP_FURNITURE_MAKE":   4,
		"HOME_COMP_LIMITED_SHOP":     5,
		"HOME_COMP_PLANT":            6,
		"HOME_COMP_FISH_FARMING":     7,
		"HOME_COMP_CUSTOM_FURNITURE": 8,
		"HOME_PICTURE_FRAME":         9,
		"HOME_COMP_GROUP_RECORD":     10,
		"HOME_COMP_BLUEPRINT":        11,
	}
)

func (x HomeCompType) Enum() *HomeCompType {
	p := new(HomeCompType)
	*p = x
	return p
}

func (x HomeCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HomeCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[20].Descriptor()
}

func (HomeCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[20]
}

func (x HomeCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HomeCompType.Descriptor instead.
func (HomeCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{20}
}

type SceneMultistagePlayCompType int32

const (
	SceneMultistagePlayCompType_SCENE_MULTISTAGE_PLAY_COMP_NONE          SceneMultistagePlayCompType = 0
	SceneMultistagePlayCompType_SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE SceneMultistagePlayCompType = 1
)

// Enum value maps for SceneMultistagePlayCompType.
var (
	SceneMultistagePlayCompType_name = map[int32]string{
		0: "SCENE_MULTISTAGE_PLAY_COMP_NONE",
		1: "SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE",
	}
	SceneMultistagePlayCompType_value = map[string]int32{
		"SCENE_MULTISTAGE_PLAY_COMP_NONE":          0,
		"SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE": 1,
	}
)

func (x SceneMultistagePlayCompType) Enum() *SceneMultistagePlayCompType {
	p := new(SceneMultistagePlayCompType)
	*p = x
	return p
}

func (x SceneMultistagePlayCompType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneMultistagePlayCompType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[21].Descriptor()
}

func (SceneMultistagePlayCompType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[21]
}

func (x SceneMultistagePlayCompType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneMultistagePlayCompType.Descriptor instead.
func (SceneMultistagePlayCompType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{21}
}

type FeatureSwitchType int32

const (
	FeatureSwitchType_FEATURE_SWITCH_NONE                       FeatureSwitchType = 0
	FeatureSwitchType_FEATURE_SWITCH_FRIEND                     FeatureSwitchType = 1
	FeatureSwitchType_FEATURE_SWITCH_ASKFRINED                  FeatureSwitchType = 2
	FeatureSwitchType_FEATURE_SWITCH_TOWER_FLOOR                FeatureSwitchType = 3
	FeatureSwitchType_FEATURE_SWITCH_MP                         FeatureSwitchType = 4
	FeatureSwitchType_FEATURE_SWITCH_BLOSSOM                    FeatureSwitchType = 5
	FeatureSwitchType_FEATURE_SWITCH_BATTLE_PASS                FeatureSwitchType = 6
	FeatureSwitchType_FEATURE_SWITCH_DUNGEON                    FeatureSwitchType = 7
	FeatureSwitchType_FEATURE_SWITCH_PUSH_PLATFORM              FeatureSwitchType = 8
	FeatureSwitchType_FEATURE_SWITCH_RECHARGE                   FeatureSwitchType = 9
	FeatureSwitchType_FEATURE_SWITCH_SHOP                       FeatureSwitchType = 10
	FeatureSwitchType_FEATURE_SWITCH_DAILY_TASK                 FeatureSwitchType = 11
	FeatureSwitchType_FEATURE_SWITCH_RAND_TASK                  FeatureSwitchType = 12
	FeatureSwitchType_FEATURE_SWITCH_REWARD_ID                  FeatureSwitchType = 13
	FeatureSwitchType_FEATURE_SWITCH_DROP_ID                    FeatureSwitchType = 14
	FeatureSwitchType_FEATURE_SWITCH_GATHER                     FeatureSwitchType = 15
	FeatureSwitchType_FEATURE_SWITCH_GAME_TIME                  FeatureSwitchType = 16
	FeatureSwitchType_FEATURE_SWITCH_FORGE                      FeatureSwitchType = 17
	FeatureSwitchType_FEATURE_SWITCH_COOK                       FeatureSwitchType = 18
	FeatureSwitchType_FEATURE_SWITCH_COMBINE                    FeatureSwitchType = 19
	FeatureSwitchType_FEATURE_SWITCH_WEAPON                     FeatureSwitchType = 20
	FeatureSwitchType_FEATURE_SWITCH_RELIQUARY                  FeatureSwitchType = 21
	FeatureSwitchType_FEATURE_SWITCH_ITEM                       FeatureSwitchType = 22
	FeatureSwitchType_FEATURE_SWITCH_AVATAR                     FeatureSwitchType = 23
	FeatureSwitchType_FEATURE_SWITCH_CITY_REPUTATION            FeatureSwitchType = 24
	FeatureSwitchType_FEATURE_SWITCH_MP_PLAY                    FeatureSwitchType = 25
	FeatureSwitchType_FEATURE_SWITCH_SIGHT_GROUP                FeatureSwitchType = 26
	FeatureSwitchType_FEATURE_SWITCH_NOTIFY_EYE_POINT           FeatureSwitchType = 27
	FeatureSwitchType_FEATURE_SWITCH_EYE_POINT_AS_EYE           FeatureSwitchType = 28
	FeatureSwitchType_FEATURE_SWITCH_GROUP_VISION_TYPE          FeatureSwitchType = 29
	FeatureSwitchType_FEATURE_SWITCH_OFFERING                   FeatureSwitchType = 30
	FeatureSwitchType_FEATURE_SWITCH_ROUTINE                    FeatureSwitchType = 31
	FeatureSwitchType_FEATURE_SWITCH_ANCHOR_POINT               FeatureSwitchType = 32
	FeatureSwitchType_FEATURE_SWITCH_ACTIVITY_SALE              FeatureSwitchType = 33
	FeatureSwitchType_FEATURE_SWITCH_MECHANICUS                 FeatureSwitchType = 34
	FeatureSwitchType_FEATURE_SWITCH_MECHANICUS_PUNISH          FeatureSwitchType = 35
	FeatureSwitchType_FEATURE_SWITCH_WORLD_LEVEL_ADJUST         FeatureSwitchType = 36
	FeatureSwitchType_FEATURE_SWITCH_ENTER_HOME_WORLD           FeatureSwitchType = 37
	FeatureSwitchType_FEATURE_SWITCH_HOME_MP                    FeatureSwitchType = 38
	FeatureSwitchType_FEATURE_SWITCH_HOME_EDIT_MODE             FeatureSwitchType = 40
	FeatureSwitchType_FEATURE_SWITCH_HOME_MODULE                FeatureSwitchType = 41
	FeatureSwitchType_FEATURE_SWITCH_HOME_FURNITURE_MAKE        FeatureSwitchType = 42
	FeatureSwitchType_FEATURE_SWITCH_HOME_LIMITED_SHOP          FeatureSwitchType = 43
	FeatureSwitchType_FEATURE_SWITCH_GADGET_INTERACT            FeatureSwitchType = 44
	FeatureSwitchType_FEATURE_SWITCH_REUNION_CLOSE_WITH_MARK    FeatureSwitchType = 45
	FeatureSwitchType_FEATURE_SWITCH_RANDOM_QUEST_TEMPLATE      FeatureSwitchType = 46
	FeatureSwitchType_FEATURE_SWITCH_MINORS_RECHARGE_HINT       FeatureSwitchType = 47
	FeatureSwitchType_FEATURE_SWITCH_MINORS_GACHA_RESTRICT      FeatureSwitchType = 48
	FeatureSwitchType_FEATURE_SWITCH_CUSTOM_DUNGEON             FeatureSwitchType = 49
	FeatureSwitchType_FEATURE_SWITCH_MINORS_REGISTER            FeatureSwitchType = 50
	FeatureSwitchType_FEATURE_SWITCH_MATCH_LIMIT                FeatureSwitchType = 51
	FeatureSwitchType_FEATURE_SWITCH_CUSTOM_DUNGEON_ID          FeatureSwitchType = 52
	FeatureSwitchType_FEATURE_SWITCH_NICKNAME_AUDIT             FeatureSwitchType = 53
	FeatureSwitchType_FEATURE_SWITCH_SIGNATURE_AUDIT            FeatureSwitchType = 54
	FeatureSwitchType_FEATURE_SWITCH_MATCH_RULE_OPTIMIZE        FeatureSwitchType = 55
	FeatureSwitchType_FEATURE_SWITCH_RELIQUARY_GUARANTEE        FeatureSwitchType = 56
	FeatureSwitchType_FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHECK FeatureSwitchType = 57
	FeatureSwitchType_FEATURE_SWITCH_UGC                        FeatureSwitchType = 58
	FeatureSwitchType_FEATURE_SWITCH_UGC_PUBLISH                FeatureSwitchType = 59
	FeatureSwitchType_FEATURE_SWITCH_HOME_AUDIT_BEFORE_RELEASE  FeatureSwitchType = 60
	FeatureSwitchType_FEATURE_SWITCH_SAFE_SERVER_NOTIFY         FeatureSwitchType = 2801
	FeatureSwitchType_FEATURE_SWITCH_GENERAL_GACHA_RESTRICT     FeatureSwitchType = 3101
	FeatureSwitchType_FEATURE_SWITCH_HOME_BLUEPRINT             FeatureSwitchType = 3201
	FeatureSwitchType_FEATURE_SWITCH_ANTI_OFFLINE_KICK          FeatureSwitchType = 3202
	FeatureSwitchType_FEATURE_SWITCH_ENVIRONMENT_ERROR_KICK     FeatureSwitchType = 3203
	FeatureSwitchType_FEATURE_SWITCH_QUEST_AVATAR_RENAME_AUDIT  FeatureSwitchType = 3301
	FeatureSwitchType_FEATURE_SWITCH_ITEM_AVATAR_RENAME_AUDIT   FeatureSwitchType = 3302
	FeatureSwitchType_FEATURE_SWITCH_GCG_PREVIEW                FeatureSwitchType = 3303
	FeatureSwitchType_FEATURE_SWITCH_GCG_MATCH                  FeatureSwitchType = 3304
	FeatureSwitchType_FEATURE_SWITCH_GCG_PVP                    FeatureSwitchType = 3305
	FeatureSwitchType_FEATURE_SWITCH_GCG_PVE                    FeatureSwitchType = 3306
	FeatureSwitchType_FEATURE_SWITCH_GCG_BAN_CARD               FeatureSwitchType = 3307
	FeatureSwitchType_FEATURE_SWITCH_IP_REGION                  FeatureSwitchType = 3308
)

// Enum value maps for FeatureSwitchType.
var (
	FeatureSwitchType_name = map[int32]string{
		0:    "FEATURE_SWITCH_NONE",
		1:    "FEATURE_SWITCH_FRIEND",
		2:    "FEATURE_SWITCH_ASKFRINED",
		3:    "FEATURE_SWITCH_TOWER_FLOOR",
		4:    "FEATURE_SWITCH_MP",
		5:    "FEATURE_SWITCH_BLOSSOM",
		6:    "FEATURE_SWITCH_BATTLE_PASS",
		7:    "FEATURE_SWITCH_DUNGEON",
		8:    "FEATURE_SWITCH_PUSH_PLATFORM",
		9:    "FEATURE_SWITCH_RECHARGE",
		10:   "FEATURE_SWITCH_SHOP",
		11:   "FEATURE_SWITCH_DAILY_TASK",
		12:   "FEATURE_SWITCH_RAND_TASK",
		13:   "FEATURE_SWITCH_REWARD_ID",
		14:   "FEATURE_SWITCH_DROP_ID",
		15:   "FEATURE_SWITCH_GATHER",
		16:   "FEATURE_SWITCH_GAME_TIME",
		17:   "FEATURE_SWITCH_FORGE",
		18:   "FEATURE_SWITCH_COOK",
		19:   "FEATURE_SWITCH_COMBINE",
		20:   "FEATURE_SWITCH_WEAPON",
		21:   "FEATURE_SWITCH_RELIQUARY",
		22:   "FEATURE_SWITCH_ITEM",
		23:   "FEATURE_SWITCH_AVATAR",
		24:   "FEATURE_SWITCH_CITY_REPUTATION",
		25:   "FEATURE_SWITCH_MP_PLAY",
		26:   "FEATURE_SWITCH_SIGHT_GROUP",
		27:   "FEATURE_SWITCH_NOTIFY_EYE_POINT",
		28:   "FEATURE_SWITCH_EYE_POINT_AS_EYE",
		29:   "FEATURE_SWITCH_GROUP_VISION_TYPE",
		30:   "FEATURE_SWITCH_OFFERING",
		31:   "FEATURE_SWITCH_ROUTINE",
		32:   "FEATURE_SWITCH_ANCHOR_POINT",
		33:   "FEATURE_SWITCH_ACTIVITY_SALE",
		34:   "FEATURE_SWITCH_MECHANICUS",
		35:   "FEATURE_SWITCH_MECHANICUS_PUNISH",
		36:   "FEATURE_SWITCH_WORLD_LEVEL_ADJUST",
		37:   "FEATURE_SWITCH_ENTER_HOME_WORLD",
		38:   "FEATURE_SWITCH_HOME_MP",
		40:   "FEATURE_SWITCH_HOME_EDIT_MODE",
		41:   "FEATURE_SWITCH_HOME_MODULE",
		42:   "FEATURE_SWITCH_HOME_FURNITURE_MAKE",
		43:   "FEATURE_SWITCH_HOME_LIMITED_SHOP",
		44:   "FEATURE_SWITCH_GADGET_INTERACT",
		45:   "FEATURE_SWITCH_REUNION_CLOSE_WITH_MARK",
		46:   "FEATURE_SWITCH_RANDOM_QUEST_TEMPLATE",
		47:   "FEATURE_SWITCH_MINORS_RECHARGE_HINT",
		48:   "FEATURE_SWITCH_MINORS_GACHA_RESTRICT",
		49:   "FEATURE_SWITCH_CUSTOM_DUNGEON",
		50:   "FEATURE_SWITCH_MINORS_REGISTER",
		51:   "FEATURE_SWITCH_MATCH_LIMIT",
		52:   "FEATURE_SWITCH_CUSTOM_DUNGEON_ID",
		53:   "FEATURE_SWITCH_NICKNAME_AUDIT",
		54:   "FEATURE_SWITCH_SIGNATURE_AUDIT",
		55:   "FEATURE_SWITCH_MATCH_RULE_OPTIMIZE",
		56:   "FEATURE_SWITCH_RELIQUARY_GUARANTEE",
		57:   "FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHECK",
		58:   "FEATURE_SWITCH_UGC",
		59:   "FEATURE_SWITCH_UGC_PUBLISH",
		60:   "FEATURE_SWITCH_HOME_AUDIT_BEFORE_RELEASE",
		2801: "FEATURE_SWITCH_SAFE_SERVER_NOTIFY",
		3101: "FEATURE_SWITCH_GENERAL_GACHA_RESTRICT",
		3201: "FEATURE_SWITCH_HOME_BLUEPRINT",
		3202: "FEATURE_SWITCH_ANTI_OFFLINE_KICK",
		3203: "FEATURE_SWITCH_ENVIRONMENT_ERROR_KICK",
		3301: "FEATURE_SWITCH_QUEST_AVATAR_RENAME_AUDIT",
		3302: "FEATURE_SWITCH_ITEM_AVATAR_RENAME_AUDIT",
		3303: "FEATURE_SWITCH_GCG_PREVIEW",
		3304: "FEATURE_SWITCH_GCG_MATCH",
		3305: "FEATURE_SWITCH_GCG_PVP",
		3306: "FEATURE_SWITCH_GCG_PVE",
		3307: "FEATURE_SWITCH_GCG_BAN_CARD",
		3308: "FEATURE_SWITCH_IP_REGION",
	}
	FeatureSwitchType_value = map[string]int32{
		"FEATURE_SWITCH_NONE":                       0,
		"FEATURE_SWITCH_FRIEND":                     1,
		"FEATURE_SWITCH_ASKFRINED":                  2,
		"FEATURE_SWITCH_TOWER_FLOOR":                3,
		"FEATURE_SWITCH_MP":                         4,
		"FEATURE_SWITCH_BLOSSOM":                    5,
		"FEATURE_SWITCH_BATTLE_PASS":                6,
		"FEATURE_SWITCH_DUNGEON":                    7,
		"FEATURE_SWITCH_PUSH_PLATFORM":              8,
		"FEATURE_SWITCH_RECHARGE":                   9,
		"FEATURE_SWITCH_SHOP":                       10,
		"FEATURE_SWITCH_DAILY_TASK":                 11,
		"FEATURE_SWITCH_RAND_TASK":                  12,
		"FEATURE_SWITCH_REWARD_ID":                  13,
		"FEATURE_SWITCH_DROP_ID":                    14,
		"FEATURE_SWITCH_GATHER":                     15,
		"FEATURE_SWITCH_GAME_TIME":                  16,
		"FEATURE_SWITCH_FORGE":                      17,
		"FEATURE_SWITCH_COOK":                       18,
		"FEATURE_SWITCH_COMBINE":                    19,
		"FEATURE_SWITCH_WEAPON":                     20,
		"FEATURE_SWITCH_RELIQUARY":                  21,
		"FEATURE_SWITCH_ITEM":                       22,
		"FEATURE_SWITCH_AVATAR":                     23,
		"FEATURE_SWITCH_CITY_REPUTATION":            24,
		"FEATURE_SWITCH_MP_PLAY":                    25,
		"FEATURE_SWITCH_SIGHT_GROUP":                26,
		"FEATURE_SWITCH_NOTIFY_EYE_POINT":           27,
		"FEATURE_SWITCH_EYE_POINT_AS_EYE":           28,
		"FEATURE_SWITCH_GROUP_VISION_TYPE":          29,
		"FEATURE_SWITCH_OFFERING":                   30,
		"FEATURE_SWITCH_ROUTINE":                    31,
		"FEATURE_SWITCH_ANCHOR_POINT":               32,
		"FEATURE_SWITCH_ACTIVITY_SALE":              33,
		"FEATURE_SWITCH_MECHANICUS":                 34,
		"FEATURE_SWITCH_MECHANICUS_PUNISH":          35,
		"FEATURE_SWITCH_WORLD_LEVEL_ADJUST":         36,
		"FEATURE_SWITCH_ENTER_HOME_WORLD":           37,
		"FEATURE_SWITCH_HOME_MP":                    38,
		"FEATURE_SWITCH_HOME_EDIT_MODE":             40,
		"FEATURE_SWITCH_HOME_MODULE":                41,
		"FEATURE_SWITCH_HOME_FURNITURE_MAKE":        42,
		"FEATURE_SWITCH_HOME_LIMITED_SHOP":          43,
		"FEATURE_SWITCH_GADGET_INTERACT":            44,
		"FEATURE_SWITCH_REUNION_CLOSE_WITH_MARK":    45,
		"FEATURE_SWITCH_RANDOM_QUEST_TEMPLATE":      46,
		"FEATURE_SWITCH_MINORS_RECHARGE_HINT":       47,
		"FEATURE_SWITCH_MINORS_GACHA_RESTRICT":      48,
		"FEATURE_SWITCH_CUSTOM_DUNGEON":             49,
		"FEATURE_SWITCH_MINORS_REGISTER":            50,
		"FEATURE_SWITCH_MATCH_LIMIT":                51,
		"FEATURE_SWITCH_CUSTOM_DUNGEON_ID":          52,
		"FEATURE_SWITCH_NICKNAME_AUDIT":             53,
		"FEATURE_SWITCH_SIGNATURE_AUDIT":            54,
		"FEATURE_SWITCH_MATCH_RULE_OPTIMIZE":        55,
		"FEATURE_SWITCH_RELIQUARY_GUARANTEE":        56,
		"FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHECK": 57,
		"FEATURE_SWITCH_UGC":                        58,
		"FEATURE_SWITCH_UGC_PUBLISH":                59,
		"FEATURE_SWITCH_HOME_AUDIT_BEFORE_RELEASE":  60,
		"FEATURE_SWITCH_SAFE_SERVER_NOTIFY":         2801,
		"FEATURE_SWITCH_GENERAL_GACHA_RESTRICT":     3101,
		"FEATURE_SWITCH_HOME_BLUEPRINT":             3201,
		"FEATURE_SWITCH_ANTI_OFFLINE_KICK":          3202,
		"FEATURE_SWITCH_ENVIRONMENT_ERROR_KICK":     3203,
		"FEATURE_SWITCH_QUEST_AVATAR_RENAME_AUDIT":  3301,
		"FEATURE_SWITCH_ITEM_AVATAR_RENAME_AUDIT":   3302,
		"FEATURE_SWITCH_GCG_PREVIEW":                3303,
		"FEATURE_SWITCH_GCG_MATCH":                  3304,
		"FEATURE_SWITCH_GCG_PVP":                    3305,
		"FEATURE_SWITCH_GCG_PVE":                    3306,
		"FEATURE_SWITCH_GCG_BAN_CARD":               3307,
		"FEATURE_SWITCH_IP_REGION":                  3308,
	}
)

func (x FeatureSwitchType) Enum() *FeatureSwitchType {
	p := new(FeatureSwitchType)
	*p = x
	return p
}

func (x FeatureSwitchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureSwitchType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_enum_server_proto_enumTypes[22].Descriptor()
}

func (FeatureSwitchType) Type() protoreflect.EnumType {
	return &file_server_only_enum_server_proto_enumTypes[22]
}

func (x FeatureSwitchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureSwitchType.Descriptor instead.
func (FeatureSwitchType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_enum_server_proto_rawDescGZIP(), []int{22}
}

var File_server_only_enum_server_proto protoreflect.FileDescriptor

var file_server_only_enum_server_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xb3, 0x33, 0x0a, 0x0a, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x55, 0x49, 0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x29,
	0x0a, 0x25, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x50, 0x53, 0x4e, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x30, 0x10, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x31, 0x10, 0x66, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x32, 0x10, 0x67, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x33, 0x10, 0x68, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x34, 0x10, 0x69, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x35, 0x10, 0x6a, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36,
	0x10, 0x6b, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x10,
	0x6c, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x38, 0x10, 0x6d,
	0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x39, 0x10, 0x6e, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x30, 0x10, 0x6f, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x31, 0x10, 0x70, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x32, 0x10, 0x71, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x33, 0x10, 0x72, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x34, 0x10, 0x73, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x35, 0x10, 0x74, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x36, 0x10, 0x75, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x37, 0x10, 0x76, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x38, 0x10, 0x77, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x39, 0x10, 0x78, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x30, 0x10, 0x79, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x31, 0x10, 0x7a, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x32, 0x10, 0x7b, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x33, 0x10, 0x7c, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x34, 0x10, 0x7d, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x35, 0x10, 0x7e, 0x12,
	0x1e, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x36, 0x10, 0x7f, 0x12,
	0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x37, 0x10, 0x80, 0x01,
	0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x38, 0x10, 0x81,
	0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x39, 0x10,
	0x82, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x30,
	0x10, 0x83, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33,
	0x31, 0x10, 0x84, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x33, 0x32, 0x10, 0x85, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x33, 0x10, 0x86, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x33, 0x34, 0x10, 0x87, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x33, 0x35, 0x10, 0x88, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x33, 0x36, 0x10, 0x89, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x37, 0x10, 0x8a, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x38, 0x10, 0x8b, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x39, 0x10, 0x8c, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x30, 0x10, 0x8d, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x31, 0x10, 0x8e, 0x01, 0x12, 0x1f,
	0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x32, 0x10, 0x8f, 0x01, 0x12,
	0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x33, 0x10, 0x90, 0x01,
	0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x34, 0x10, 0x91,
	0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x35, 0x10,
	0x92, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x36,
	0x10, 0x93, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34,
	0x37, 0x10, 0x94, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x34, 0x38, 0x10, 0x95, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x34, 0x39, 0x10, 0x96, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x35, 0x30, 0x10, 0x97, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x35, 0x31, 0x10, 0x98, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x35, 0x32, 0x10, 0x99, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x33, 0x10, 0x9a, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x34, 0x10, 0x9b, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x35, 0x10, 0x9c, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x36, 0x10, 0x9d, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x37, 0x10, 0x9e, 0x01, 0x12, 0x1f,
	0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x38, 0x10, 0x9f, 0x01, 0x12,
	0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x39, 0x10, 0xa0, 0x01,
	0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x30, 0x10, 0xa1,
	0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x31, 0x10,
	0xa2, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x32,
	0x10, 0xa3, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36,
	0x33, 0x10, 0xa4, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x36, 0x34, 0x10, 0xa5, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x36, 0x35, 0x10, 0xa6, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x36, 0x36, 0x10, 0xa7, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x36, 0x37, 0x10, 0xa8, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x36, 0x38, 0x10, 0xa9, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x39, 0x10, 0xaa, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x30, 0x10, 0xab, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x31, 0x10, 0xac, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x32, 0x10, 0xad, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x33, 0x10, 0xae, 0x01, 0x12, 0x1f,
	0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x34, 0x10, 0xaf, 0x01, 0x12,
	0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x35, 0x10, 0xb0, 0x01,
	0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x36, 0x10, 0xb1,
	0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x37, 0x10,
	0xb2, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x38,
	0x10, 0xb3, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37,
	0x39, 0x10, 0xb4, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xd1,
	0x0f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0xe9, 0x07,
	0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0xea, 0x07,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x30, 0x10, 0xb9, 0x17, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x10, 0xba, 0x17, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x10, 0xbb, 0x17, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x10, 0xbc, 0x17, 0x12, 0x1d, 0x0a, 0x18,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x10, 0xbd, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x10, 0xbe, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x10, 0xbf, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x37, 0x10, 0xc0, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x38, 0x10, 0xc1, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x39, 0x10, 0xc2, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x30, 0x10, 0xc3, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x31, 0x10, 0xc4, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x32, 0x10, 0xc5, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x33, 0x10, 0xc6, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x34, 0x10, 0xc7, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x35, 0x10, 0xc8, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x36, 0x10, 0xc9, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x37, 0x10, 0xca, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x38, 0x10, 0xcb, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x31, 0x39, 0x10, 0xcc, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x30, 0x10, 0xcd, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x31, 0x10, 0xce, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x32, 0x10, 0xcf, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x33, 0x10, 0xd0, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x34, 0x10, 0xd1, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x35, 0x10, 0xd2, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x36, 0x10, 0xd3, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x37, 0x10, 0xd4, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x38, 0x10, 0xd5, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x39, 0x10, 0xd6, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x30, 0x10, 0xd7, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x31, 0x10, 0xd8, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x32, 0x10, 0xd9, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x33, 0x10, 0xda, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x34, 0x10, 0xdb, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x35, 0x10, 0xdc, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x36, 0x10, 0xdd, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x37, 0x10, 0xde, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x38, 0x10, 0xdf, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x39, 0x10, 0xe0, 0x17, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x30, 0x10, 0xa1, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x10,
	0xa2, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x10, 0xa3, 0x1f,
	0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x10, 0xa4, 0x1f, 0x12, 0x1c,
	0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x10, 0xa5, 0x1f, 0x12, 0x1c, 0x0a, 0x17,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x10, 0xa6, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x36, 0x10, 0xa7, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x37, 0x10, 0xa8, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x38, 0x10, 0xa9, 0x1f, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x39, 0x10,
	0xaa, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x30, 0x10, 0xab,
	0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x31, 0x10, 0xac, 0x1f,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x32, 0x10, 0xad, 0x1f, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x33, 0x10, 0xae, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x34, 0x10, 0xaf, 0x1f, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x35, 0x10, 0xb0, 0x1f, 0x12, 0x1d, 0x0a, 0x18,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x36, 0x10, 0xb1, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x31, 0x37, 0x10, 0xb2, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x31, 0x38, 0x10, 0xb3, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x31, 0x39, 0x10, 0xb4, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x32, 0x30, 0x10, 0xb5, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x32, 0x31, 0x10, 0xb6, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x32, 0x32, 0x10, 0xb7, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32,
	0x33, 0x10, 0xb8, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x34,
	0x10, 0xb9, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x35, 0x10,
	0xba, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x36, 0x10, 0xbb,
	0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x37, 0x10, 0xbc, 0x1f,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x38, 0x10, 0xbd, 0x1f, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x32, 0x39, 0x10, 0xbe, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x30, 0x10, 0xbf, 0x1f, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x31, 0x10, 0xc0, 0x1f, 0x12, 0x1d, 0x0a, 0x18,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x32, 0x10, 0xc1, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x33, 0x33, 0x10, 0xc2, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x33, 0x34, 0x10, 0xc3, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x33, 0x35, 0x10, 0xc4, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x33, 0x36, 0x10, 0xc5, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x33, 0x37, 0x10, 0xc6, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x33, 0x38, 0x10, 0xc7, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x33,
	0x39, 0x10, 0xc8, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x30,
	0x10, 0xc9, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x31, 0x10,
	0xca, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x32, 0x10, 0xcb,
	0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x33, 0x10, 0xcc, 0x1f,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x34, 0x10, 0xcd, 0x1f, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x35, 0x10, 0xce, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x36, 0x10, 0xcf, 0x1f, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x37, 0x10, 0xd0, 0x1f, 0x12, 0x1d, 0x0a, 0x18,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x38, 0x10, 0xd1, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x34, 0x39, 0x10, 0xd2, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x35, 0x30, 0x10, 0xd3, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x35, 0x31, 0x10, 0xd4, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x35, 0x32, 0x10, 0xd5, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x35, 0x33, 0x10, 0xd6, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x35, 0x34, 0x10, 0xd7, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35,
	0x35, 0x10, 0xd8, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x36,
	0x10, 0xd9, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x37, 0x10,
	0xda, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x38, 0x10, 0xdb,
	0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x35, 0x39, 0x10, 0xdc, 0x1f,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x30, 0x10, 0xdd, 0x1f, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x31, 0x10, 0xde, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x32, 0x10, 0xdf, 0x1f, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x33, 0x10, 0xe0, 0x1f, 0x12, 0x1d, 0x0a, 0x18,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x34, 0x10, 0xe1, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d,
	0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x36, 0x35, 0x10, 0xe2, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x36, 0x36, 0x10, 0xe3, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x36, 0x37, 0x10, 0xe4, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x36, 0x38, 0x10, 0xe5, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x36, 0x39, 0x10, 0xe6, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x37, 0x30, 0x10, 0xe7, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37,
	0x31, 0x10, 0xe8, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x32,
	0x10, 0xe9, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x33, 0x10,
	0xea, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x34, 0x10, 0xeb,
	0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x35, 0x10, 0xec, 0x1f,
	0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x36, 0x10, 0xed, 0x1f, 0x12,
	0x1d, 0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x37, 0x10, 0xee, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x38, 0x10, 0xef, 0x1f, 0x12, 0x1d, 0x0a,
	0x18, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x37, 0x39, 0x10, 0xf0, 0x1f, 0x2a, 0xa9, 0x05, 0x0a,
	0x0a, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x4d, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4d, 0x53,
	0x47, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x4b,
	0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x05, 0x12, 0x21, 0x0a,
	0x1d, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x06,
	0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x08, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x44, 0x49, 0x53,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x09, 0x12, 0x2a, 0x0a, 0x26, 0x52,
	0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55,
	0x4e, 0x52, 0x45, 0x41, 0x44, 0x10, 0x0a, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x44, 0x49, 0x53,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x0b, 0x12,
	0x1b, 0x0a, 0x17, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x0c, 0x12, 0x1f, 0x0a, 0x1b,
	0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x0d, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x0e, 0x12,
	0x1a, 0x0a, 0x16, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4f,
	0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4f, 0x50, 0x10, 0x0f, 0x12, 0x1e, 0x0a, 0x1a, 0x52,
	0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x10, 0x10, 0x12, 0x25, 0x0a, 0x21, 0x52,
	0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x50, 0x53, 0x4e, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x45, 0x54,
	0x10, 0x11, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x50, 0x53, 0x4e, 0x5f, 0x42, 0x4c, 0x41,
	0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x12, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x44, 0x49,
	0x53, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x42, 0x4c, 0x55,
	0x45, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x10, 0x13, 0x2a, 0x5c, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x45, 0x4e, 0x56, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x4e, 0x49, 0x4d,
	0x41, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x2a, 0xe3, 0x04, 0x0a, 0x0e, 0x47, 0x61, 0x64, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x45, 0x41, 0x52, 0x10, 0x05, 0x12,
	0x17, 0x0a, 0x13, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43,
	0x52, 0x59, 0x53, 0x54, 0x41, 0x4c, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x44, 0x47,
	0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41,
	0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x54, 0x4f,
	0x50, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x5f, 0x53, 0x45, 0x41, 0x4c, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x0c, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41,
	0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x10,
	0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4f, 0x46, 0x46, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x11, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x41,
	0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x49, 0x52, 0x41, 0x43, 0x4c,
	0x45, 0x5f, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x12, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x44, 0x47,
	0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x14, 0x12, 0x16, 0x0a,
	0x12, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x43, 0x52,
	0x45, 0x45, 0x4e, 0x10, 0x15, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x16,
	0x12, 0x1d, 0x0a, 0x19, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x10, 0x17, 0x12,
	0x29, 0x0a, 0x25, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52,
	0x4f, 0x47, 0x55, 0x45, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x10, 0x18, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x41,
	0x44, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54,
	0x5f, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x10, 0x19, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x43,
	0x52, 0x4f, 0x57, 0x10, 0x1a, 0x12, 0x25, 0x0a, 0x21, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x1b, 0x2a, 0x77, 0x0a, 0x0f,
	0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x4e, 0x56, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x53, 0x48, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4f,
	0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x53, 0x48, 0x54,
	0x41, 0x4e, 0x4b, 0x10, 0x03, 0x2a, 0xb5, 0x02, 0x0a, 0x0d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x4e, 0x56, 0x5f, 0x41,
	0x4e, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x52, 0x49, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x49, 0x53, 0x43,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10,
	0x08, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x0a, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x47, 0x55, 0x41, 0x52, 0x44, 0x10, 0x0b, 0x2a, 0x9f, 0x0e,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x56, 0x41,
	0x54, 0x41, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x4d, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x04,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x54, 0x41, 0x4c, 0x4b, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x42, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x0b,
	0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4d, 0x50, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x10, 0x0d, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10,
	0x10, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x11, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x44, 0x41,
	0x49, 0x4c, 0x59, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x12, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x41, 0x43, 0x48, 0x41, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x49, 0x56, 0x49,
	0x4e, 0x47, 0x10, 0x15, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x10, 0x16, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x53,
	0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x17, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x10, 0x18, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x57, 0x41, 0x54, 0x43, 0x48, 0x45, 0x52, 0x10, 0x19, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x4f, 0x43,
	0x49, 0x41, 0x4c, 0x10, 0x1a, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x1b, 0x12, 0x17, 0x0a, 0x13,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x5f, 0x49, 0x4e, 0x10, 0x1c, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x10, 0x1d, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x42, 0x4c, 0x4f, 0x53, 0x53, 0x4f, 0x4d, 0x10, 0x1e, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52, 0x45, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x10, 0x1f, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x20, 0x12, 0x17, 0x0a, 0x13,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x50, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x10, 0x21, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x74, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41,
	0x52, 0x10, 0x22, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x58, 0x10, 0x23, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x24, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x25, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x26, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x27, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x10, 0x28, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x48, 0x55, 0x4e, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x29, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x43, 0x4f, 0x4f, 0x50, 0x10, 0x2a, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x10, 0x2b, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x45, 0x10, 0x2c, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4f, 0x46, 0x46,
	0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x2d, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x45, 0x10, 0x2e,
	0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x52, 0x45, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x10, 0x2f, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x49, 0x52, 0x41, 0x43, 0x4c, 0x45,
	0x5f, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x30, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4d, 0x45, 0x43, 0x48, 0x41, 0x4e, 0x49, 0x43, 0x55,
	0x53, 0x10, 0x31, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x5f, 0x4f, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x32,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x33, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x10, 0x34,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x35, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x48,
	0x4f, 0x4d, 0x45, 0x10, 0x36, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4f, 0x50, 0x10,
	0x37, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x48, 0x35, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x38, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x58,
	0x48, 0x49, 0x42, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x39, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c,
	0x45, 0x10, 0x3a, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x3b, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4c,
	0x49, 0x4e, 0x4b, 0x10, 0x3c, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x3d, 0x12, 0x19,
	0x0a, 0x15, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x49,
	0x52, 0x45, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x10, 0x3e, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x49, 0x54, 0x59, 0x10, 0x3f, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x10, 0x40, 0x12,
	0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x52,
	0x45, 0x47, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x41, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53, 0x48,
	0x41, 0x52, 0x45, 0x5f, 0x43, 0x44, 0x10, 0x42, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x55, 0x47, 0x43, 0x10, 0x43, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x50, 0x4f, 0x4c,
	0x59, 0x47, 0x4f, 0x4e, 0x10, 0x44, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x41, 0x52, 0x41, 0x4e, 0x41, 0x52, 0x41, 0x5f, 0x43, 0x4f,
	0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x45, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x43, 0x47, 0x10, 0x46, 0x2a,
	0xb7, 0x01, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x56, 0x41, 0x54,
	0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x53,
	0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x54, 0x41, 0x4c, 0x45,
	0x4e, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x5f, 0x46, 0x41, 0x53, 0x48, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45, 0x58, 0x54,
	0x52, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x10, 0x06, 0x2a, 0xb8, 0x01, 0x0a, 0x12, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x19, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53,
	0x48, 0x4f, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x27, 0x0a, 0x23, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48,
	0x4f, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x56, 0x41, 0x54,
	0x41, 0x52, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52,
	0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x46, 0x45, 0x54, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x45,
	0x58, 0x50, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0xcc, 0x02, 0x0a, 0x14,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x45, 0x78, 0x74, 0x4b, 0x65, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48,
	0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x48, 0x54, 0x54, 0x50,
	0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x54, 0x54, 0x10,
	0x01, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x49, 0x53, 0x5f, 0x43, 0x41, 0x4c, 0x4c,
	0x42, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x57, 0x4f,
	0x52, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x12, 0x2f, 0x0a, 0x2a, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x56, 0x5f, 0x4d, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x91, 0x4e, 0x12, 0x2f, 0x0a, 0x2a, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x56, 0x5f, 0x4d, 0x53, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x92, 0x4e, 0x12, 0x2f, 0x0a, 0x2a, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x93, 0x4e, 0x2a, 0x51, 0x0a, 0x0d, 0x4d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x4f, 0x50,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x41, 0x44, 0x44, 0x5f, 0x4f, 0x50, 0x5f, 0x4d, 0x55, 0x49, 0x50, 0x10, 0x02, 0x2a, 0x89, 0x01,
	0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x6c, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45,
	0x4c, 0x5f, 0x4f, 0x50, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x5f,
	0x4f, 0x50, 0x5f, 0x4d, 0x55, 0x49, 0x50, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x5f, 0x4d, 0x55, 0x49, 0x50, 0x5f, 0x42, 0x59,
	0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x04, 0x2a, 0xb3, 0x01, 0x0a, 0x0d, 0x4d, 0x61,
	0x69, 0x6c, 0x47, 0x65, 0x74, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x4d, 0x55, 0x49, 0x50, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x5f,
	0x55, 0x4e, 0x54, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x50, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x10, 0x05, 0x2a,
	0x62, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x59,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x2a, 0xab, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x50, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x50, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x04, 0x2a, 0xd5, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d,
	0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x4f, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x4f, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x27, 0x0a, 0x23, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x4d, 0x50, 0x5f, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0x5b, 0x0a, 0x0d, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x47,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x2a, 0x67, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x78, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d,
	0x41, 0x58, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x90, 0x4e, 0x12,
	0x1a, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0x90, 0x4e, 0x1a, 0x02, 0x10, 0x01, 0x2a,
	0x98, 0x02, 0x0a, 0x0d, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x48, 0x74, 0x74, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x53, 0x41, 0x46,
	0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x59, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f,
	0x48, 0x54, 0x54, 0x50, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x52, 0x4f, 0x4c, 0x5f, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x27, 0x0a,
	0x23, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x4e, 0x49, 0x43, 0x4b,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41,
	0x55, 0x44, 0x49, 0x54, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f,
	0x48, 0x54, 0x54, 0x50, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x52, 0x45, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x49,
	0x50, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x2a, 0xbf, 0x02, 0x0a, 0x0c, 0x48,
	0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x48,
	0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x42, 0x41, 0x53,
	0x49, 0x43, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4d,
	0x53, 0x47, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x5f, 0x46, 0x55, 0x52, 0x4e, 0x49, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x4b, 0x45,
	0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x46, 0x41, 0x52, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12,
	0x1e, 0x0a, 0x1a, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x5f, 0x46, 0x55, 0x52, 0x4e, 0x49, 0x54, 0x55, 0x52, 0x45, 0x10, 0x08, 0x12,
	0x16, 0x0a, 0x12, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52,
	0x44, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x5f, 0x42, 0x4c, 0x55, 0x45, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x10, 0x0b, 0x2a, 0x70, 0x0a, 0x1b,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x2c, 0x0a, 0x28, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53,
	0x54, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x5f, 0x54,
	0x4f, 0x57, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x46, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x01, 0x2a, 0xab,
	0x13, 0x0a, 0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x53, 0x4b, 0x46, 0x52,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x54, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x46,
	0x4c, 0x4f, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x50, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x42, 0x4c, 0x4f, 0x53, 0x53, 0x4f, 0x4d, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x44, 0x55, 0x4e, 0x47,
	0x45, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x43, 0x48, 0x41, 0x52,
	0x47, 0x45, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x0a, 0x12, 0x1d, 0x0a,
	0x19, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x44, 0x41, 0x49, 0x4c, 0x59, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52,
	0x41, 0x4e, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x0c, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x49, 0x44, 0x10, 0x0e, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0f, 0x12,
	0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x10, 0x12, 0x18, 0x0a,
	0x14, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x46, 0x4f, 0x52, 0x47, 0x45, 0x10, 0x11, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x10, 0x12,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x45, 0x10, 0x13, 0x12, 0x19, 0x0a, 0x15,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x57,
	0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x14, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x51, 0x55,
	0x41, 0x52, 0x59, 0x10, 0x15, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x16, 0x12, 0x19,
	0x0a, 0x15, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x10, 0x17, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x49, 0x54, 0x59,
	0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x18, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x4d, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x19, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x1a, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4e, 0x4f, 0x54, 0x49,
	0x46, 0x59, 0x5f, 0x45, 0x59, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x1b, 0x12, 0x23,
	0x0a, 0x1f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x45, 0x59, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x5f, 0x45, 0x59,
	0x45, 0x10, 0x1c, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x1d, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4f, 0x46, 0x46, 0x45,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x1e, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x45,
	0x10, 0x1f, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52, 0x5f, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x10, 0x20, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53,
	0x41, 0x4c, 0x45, 0x10, 0x21, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x45, 0x43, 0x48, 0x41, 0x4e, 0x49, 0x43,
	0x55, 0x53, 0x10, 0x22, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x45, 0x43, 0x48, 0x41, 0x4e, 0x49, 0x43, 0x55,
	0x53, 0x5f, 0x50, 0x55, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x23, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x45,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x57, 0x4f, 0x52,
	0x4c, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x41, 0x44, 0x4a, 0x55, 0x53, 0x54, 0x10,
	0x24, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x57,
	0x4f, 0x52, 0x4c, 0x44, 0x10, 0x25, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x4d, 0x50,
	0x10, 0x26, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x10, 0x28, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x55, 0x4c, 0x45, 0x10, 0x29, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x46, 0x55, 0x52,
	0x4e, 0x49, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x10, 0x2a, 0x12, 0x24, 0x0a,
	0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x48, 0x4f,
	0x50, 0x10, 0x2b, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x41, 0x43, 0x54, 0x10, 0x2c, 0x12, 0x2a, 0x0a, 0x26, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x55, 0x4e, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x52,
	0x4b, 0x10, 0x2d, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x5f, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x2e, 0x12, 0x27, 0x0a,
	0x23, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f, 0x52, 0x45, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f,
	0x48, 0x49, 0x4e, 0x54, 0x10, 0x2f, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f,
	0x47, 0x41, 0x43, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x10, 0x30,
	0x12, 0x21, 0x0a, 0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f,
	0x4e, 0x10, 0x31, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x32, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x33, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d,
	0x5f, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x34, 0x12, 0x21, 0x0a,
	0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x35,
	0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x55, 0x44,
	0x49, 0x54, 0x10, 0x36, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x55, 0x4c,
	0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x37, 0x12, 0x26, 0x0a, 0x22,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x51, 0x55, 0x41, 0x52, 0x59, 0x5f, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54,
	0x45, 0x45, 0x10, 0x38, 0x12, 0x2d, 0x0a, 0x29, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x4d, 0x44, 0x35, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x10, 0x39, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x47, 0x43, 0x10, 0x3a, 0x12, 0x1e, 0x0a, 0x1a, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x47,
	0x43, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x3b, 0x12, 0x2c, 0x0a, 0x28, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x48, 0x4f,
	0x4d, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f,
	0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x3c, 0x12, 0x26, 0x0a, 0x21, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x41, 0x46, 0x45,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xf1,
	0x15, 0x12, 0x2a, 0x0a, 0x25, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x47, 0x41, 0x43, 0x48,
	0x41, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x10, 0x9d, 0x18, 0x12, 0x22, 0x0a,
	0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x10, 0x81,
	0x19, 0x12, 0x25, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x41, 0x4e, 0x54, 0x49, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45,
	0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x10, 0x82, 0x19, 0x12, 0x2a, 0x0a, 0x25, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52,
	0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x43,
	0x4b, 0x10, 0x83, 0x19, 0x12, 0x2d, 0x0a, 0x28, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x56, 0x41,
	0x54, 0x41, 0x52, 0x5f, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54,
	0x10, 0xe5, 0x19, 0x12, 0x2c, 0x0a, 0x27, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41,
	0x52, 0x5f, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0xe6,
	0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x47, 0x43, 0x47, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10,
	0xe7, 0x19, 0x12, 0x1d, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x43, 0x47, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0xe8,
	0x19, 0x12, 0x1b, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x47, 0x43, 0x47, 0x5f, 0x50, 0x56, 0x50, 0x10, 0xe9, 0x19, 0x12, 0x1b,
	0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x47, 0x43, 0x47, 0x5f, 0x50, 0x56, 0x45, 0x10, 0xea, 0x19, 0x12, 0x20, 0x0a, 0x1b, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x43,
	0x47, 0x5f, 0x42, 0x41, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0xeb, 0x19, 0x12, 0x1d, 0x0a,
	0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x49, 0x50, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x10, 0xec, 0x19, 0x42, 0x28, 0x5a, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61,
	0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_enum_server_proto_rawDescOnce sync.Once
	file_server_only_enum_server_proto_rawDescData = file_server_only_enum_server_proto_rawDesc
)

func file_server_only_enum_server_proto_rawDescGZIP() []byte {
	file_server_only_enum_server_proto_rawDescOnce.Do(func() {
		file_server_only_enum_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_enum_server_proto_rawDescData)
	})
	return file_server_only_enum_server_proto_rawDescData
}

var file_server_only_enum_server_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_server_only_enum_server_proto_goTypes = []interface{}{
	(MysqlIndex)(0),                  // 0: proto.MysqlIndex
	(RedisIndex)(0),                  // 1: proto.RedisIndex
	(EntityCompType)(0),              // 2: proto.EntityCompType
	(GadgetCompType)(0),              // 3: proto.GadgetCompType
	(MonsterCompType)(0),             // 4: proto.MonsterCompType
	(SceneCompType)(0),               // 5: proto.SceneCompType
	(PlayerCompType)(0),              // 6: proto.PlayerCompType
	(AvatarCompType)(0),              // 7: proto.AvatarCompType
	(AvatarSnapshotType)(0),          // 8: proto.AvatarSnapshotType
	(FormalAvatarCompType)(0),        // 9: proto.FormalAvatarCompType
	(PacketHeadExtKeyType)(0),        // 10: proto.PacketHeadExtKeyType
	(MailAddOpType)(0),               // 11: proto.MailAddOpType
	(MailDelOpType)(0),               // 12: proto.MailDelOpType
	(MailGetOPType)(0),               // 13: proto.MailGetOPType
	(MailGetType)(0),                 // 14: proto.MailGetType
	(MailUpdateOpType)(0),            // 15: proto.MailUpdateOpType
	(MatchUnitRemoveOpType)(0),       // 16: proto.MatchUnitRemoveOpType
	(MatchIdentity)(0),               // 17: proto.MatchIdentity
	(ServiceMaxLoad)(0),              // 18: proto.ServiceMaxLoad
	(AsyncHttpType)(0),               // 19: proto.AsyncHttpType
	(HomeCompType)(0),                // 20: proto.HomeCompType
	(SceneMultistagePlayCompType)(0), // 21: proto.SceneMultistagePlayCompType
	(FeatureSwitchType)(0),           // 22: proto.FeatureSwitchType
}
var file_server_only_enum_server_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_server_only_enum_server_proto_init() }
func file_server_only_enum_server_proto_init() {
	if File_server_only_enum_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_enum_server_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_enum_server_proto_goTypes,
		DependencyIndexes: file_server_only_enum_server_proto_depIdxs,
		EnumInfos:         file_server_only_enum_server_proto_enumTypes,
	}.Build()
	File_server_only_enum_server_proto = out.File
	file_server_only_enum_server_proto_rawDesc = nil
	file_server_only_enum_server_proto_goTypes = nil
	file_server_only_enum_server_proto_depIdxs = nil
}
