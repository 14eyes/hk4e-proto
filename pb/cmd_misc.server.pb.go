// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_misc.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StopServerConfigNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopServerConfigNotify) Reset() {
	*x = StopServerConfigNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerConfigNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerConfigNotify) ProtoMessage() {}

func (x *StopServerConfigNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerConfigNotify.ProtoReflect.Descriptor instead.
func (*StopServerConfigNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{0}
}

type NodeserverConnectedAndRegisteredNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeserverId uint32 `protobuf:"varint,1,opt,name=nodeserver_id,json=nodeserverId,proto3" json:"nodeserver_id,omitempty"`
}

func (x *NodeserverConnectedAndRegisteredNotify) Reset() {
	*x = NodeserverConnectedAndRegisteredNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeserverConnectedAndRegisteredNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeserverConnectedAndRegisteredNotify) ProtoMessage() {}

func (x *NodeserverConnectedAndRegisteredNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeserverConnectedAndRegisteredNotify.ProtoReflect.Descriptor instead.
func (*NodeserverConnectedAndRegisteredNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{1}
}

func (x *NodeserverConnectedAndRegisteredNotify) GetNodeserverId() uint32 {
	if x != nil {
		return x.NodeserverId
	}
	return 0
}

type MultiPlayerMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList  []uint32 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	ProtoBin []byte   `protobuf:"bytes,2,opt,name=proto_bin,json=protoBin,proto3" json:"proto_bin,omitempty"`
}

func (x *MultiPlayerMsg) Reset() {
	*x = MultiPlayerMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPlayerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPlayerMsg) ProtoMessage() {}

func (x *MultiPlayerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPlayerMsg.ProtoReflect.Descriptor instead.
func (*MultiPlayerMsg) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{2}
}

func (x *MultiPlayerMsg) GetUidList() []uint32 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *MultiPlayerMsg) GetProtoBin() []byte {
	if x != nil {
		return x.ProtoBin
	}
	return nil
}

type AddGateserverNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenPort    uint32 `protobuf:"varint,1,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	OuterIp       uint32 `protobuf:"varint,2,opt,name=outer_ip,json=outerIp,proto3" json:"outer_ip,omitempty"`
	UseDomainName bool   `protobuf:"varint,3,opt,name=use_domain_name,json=useDomainName,proto3" json:"use_domain_name,omitempty"`
	DomainName    string `protobuf:"bytes,4,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
}

func (x *AddGateserverNotify) Reset() {
	*x = AddGateserverNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGateserverNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGateserverNotify) ProtoMessage() {}

func (x *AddGateserverNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGateserverNotify.ProtoReflect.Descriptor instead.
func (*AddGateserverNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{3}
}

func (x *AddGateserverNotify) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *AddGateserverNotify) GetOuterIp() uint32 {
	if x != nil {
		return x.OuterIp
	}
	return 0
}

func (x *AddGateserverNotify) GetUseDomainName() bool {
	if x != nil {
		return x.UseDomainName
	}
	return false
}

func (x *AddGateserverNotify) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type RegisterServiceNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceTypeList []ServiceType `protobuf:"varint,1,rep,packed,name=service_type_list,json=serviceTypeList,proto3,enum=proto.ServiceType" json:"service_type_list,omitempty"`
}

func (x *RegisterServiceNotify) Reset() {
	*x = RegisterServiceNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceNotify) ProtoMessage() {}

func (x *RegisterServiceNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceNotify.ProtoReflect.Descriptor instead.
func (*RegisterServiceNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterServiceNotify) GetServiceTypeList() []ServiceType {
	if x != nil {
		return x.ServiceTypeList
	}
	return nil
}

type PlayerTransferNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferUid            uint32 `protobuf:"varint,1,opt,name=transfer_uid,json=transferUid,proto3" json:"transfer_uid,omitempty"`
	TargetUid              uint32 `protobuf:"varint,2,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	TargetHomeOwnerUid     uint32 `protobuf:"varint,3,opt,name=target_home_owner_uid,json=targetHomeOwnerUid,proto3" json:"target_home_owner_uid,omitempty"`
	TargetHomeGameserverId uint32 `protobuf:"varint,4,opt,name=target_home_gameserver_id,json=targetHomeGameserverId,proto3" json:"target_home_gameserver_id,omitempty"`
	TargetHomeParam        uint32 `protobuf:"varint,5,opt,name=target_home_param,json=targetHomeParam,proto3" json:"target_home_param,omitempty"`
}

func (x *PlayerTransferNotify) Reset() {
	*x = PlayerTransferNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerTransferNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTransferNotify) ProtoMessage() {}

func (x *PlayerTransferNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTransferNotify.ProtoReflect.Descriptor instead.
func (*PlayerTransferNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerTransferNotify) GetTransferUid() uint32 {
	if x != nil {
		return x.TransferUid
	}
	return 0
}

func (x *PlayerTransferNotify) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *PlayerTransferNotify) GetTargetHomeOwnerUid() uint32 {
	if x != nil {
		return x.TargetHomeOwnerUid
	}
	return 0
}

func (x *PlayerTransferNotify) GetTargetHomeGameserverId() uint32 {
	if x != nil {
		return x.TargetHomeGameserverId
	}
	return 0
}

func (x *PlayerTransferNotify) GetTargetHomeParam() uint32 {
	if x != nil {
		return x.TargetHomeParam
	}
	return 0
}

type PacketCountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId uint32 `protobuf:"varint,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PacketCountInfo) Reset() {
	*x = PacketCountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketCountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketCountInfo) ProtoMessage() {}

func (x *PacketCountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketCountInfo.ProtoReflect.Descriptor instead.
func (*PacketCountInfo) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{6}
}

func (x *PacketCountInfo) GetCmdId() uint32 {
	if x != nil {
		return x.CmdId
	}
	return 0
}

func (x *PacketCountInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PacketFreqencyExceedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketCount     uint32             `protobuf:"varint,1,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	Interval        uint32             `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	PacketCountList []*PacketCountInfo `protobuf:"bytes,3,rep,name=packet_count_list,json=packetCountList,proto3" json:"packet_count_list,omitempty"`
}

func (x *PacketFreqencyExceedNotify) Reset() {
	*x = PacketFreqencyExceedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFreqencyExceedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFreqencyExceedNotify) ProtoMessage() {}

func (x *PacketFreqencyExceedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFreqencyExceedNotify.ProtoReflect.Descriptor instead.
func (*PacketFreqencyExceedNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{7}
}

func (x *PacketFreqencyExceedNotify) GetPacketCount() uint32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *PacketFreqencyExceedNotify) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *PacketFreqencyExceedNotify) GetPacketCountList() []*PacketCountInfo {
	if x != nil {
		return x.PacketCountList
	}
	return nil
}

type SceneAsyncLoadGroupBatchNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SceneAsyncLoadGroupBatchNotify) Reset() {
	*x = SceneAsyncLoadGroupBatchNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneAsyncLoadGroupBatchNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneAsyncLoadGroupBatchNotify) ProtoMessage() {}

func (x *SceneAsyncLoadGroupBatchNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneAsyncLoadGroupBatchNotify.ProtoReflect.Descriptor instead.
func (*SceneAsyncLoadGroupBatchNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{8}
}

type CrcVersionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersionList []string `protobuf:"bytes,1,rep,name=client_version_list,json=clientVersionList,proto3" json:"client_version_list,omitempty"`
}

func (x *CrcVersionConfig) Reset() {
	*x = CrcVersionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrcVersionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrcVersionConfig) ProtoMessage() {}

func (x *CrcVersionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrcVersionConfig.ProtoReflect.Descriptor instead.
func (*CrcVersionConfig) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{9}
}

func (x *CrcVersionConfig) GetClientVersionList() []string {
	if x != nil {
		return x.ClientVersionList
	}
	return nil
}

type ClientVersionSyncNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataVersionConfig       *DataVersionConfig           `protobuf:"bytes,1,opt,name=data_version_config,json=dataVersionConfig,proto3" json:"data_version_config,omitempty"`
	ResVersionConfigMap     map[uint32]*ResVersionConfig `protobuf:"bytes,2,rep,name=res_version_config_map,json=resVersionConfigMap,proto3" json:"res_version_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CrcVersionConfigMap     map[uint32]*CrcVersionConfig `protobuf:"bytes,3,rep,name=crc_version_config_map,json=crcVersionConfigMap,proto3" json:"crc_version_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NextResVersionConfigMap map[uint32]*ResVersionConfig `protobuf:"bytes,4,rep,name=next_res_version_config_map,json=nextResVersionConfigMap,proto3" json:"next_res_version_config_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientVersionSyncNotify) Reset() {
	*x = ClientVersionSyncNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionSyncNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionSyncNotify) ProtoMessage() {}

func (x *ClientVersionSyncNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionSyncNotify.ProtoReflect.Descriptor instead.
func (*ClientVersionSyncNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{10}
}

func (x *ClientVersionSyncNotify) GetDataVersionConfig() *DataVersionConfig {
	if x != nil {
		return x.DataVersionConfig
	}
	return nil
}

func (x *ClientVersionSyncNotify) GetResVersionConfigMap() map[uint32]*ResVersionConfig {
	if x != nil {
		return x.ResVersionConfigMap
	}
	return nil
}

func (x *ClientVersionSyncNotify) GetCrcVersionConfigMap() map[uint32]*CrcVersionConfig {
	if x != nil {
		return x.CrcVersionConfigMap
	}
	return nil
}

func (x *ClientVersionSyncNotify) GetNextResVersionConfigMap() map[uint32]*ResVersionConfig {
	if x != nil {
		return x.NextResVersionConfigMap
	}
	return nil
}

type RegisterServiceSuccessNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterServiceSuccessNotify) Reset() {
	*x = RegisterServiceSuccessNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceSuccessNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceSuccessNotify) ProtoMessage() {}

func (x *RegisterServiceSuccessNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceSuccessNotify.ProtoReflect.Descriptor instead.
func (*RegisterServiceSuccessNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{11}
}

type ReloadConfigNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadConfigNotify) Reset() {
	*x = ReloadConfigNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadConfigNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadConfigNotify) ProtoMessage() {}

func (x *ReloadConfigNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadConfigNotify.ProtoReflect.Descriptor instead.
func (*ReloadConfigNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{12}
}

type MultiserverServiceTypeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceTypeList []ServiceType `protobuf:"varint,1,rep,packed,name=service_type_list,json=serviceTypeList,proto3,enum=proto.ServiceType" json:"service_type_list,omitempty"`
}

func (x *MultiserverServiceTypeNotify) Reset() {
	*x = MultiserverServiceTypeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiserverServiceTypeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiserverServiceTypeNotify) ProtoMessage() {}

func (x *MultiserverServiceTypeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiserverServiceTypeNotify.ProtoReflect.Descriptor instead.
func (*MultiserverServiceTypeNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{13}
}

func (x *MultiserverServiceTypeNotify) GetServiceTypeList() []ServiceType {
	if x != nil {
		return x.ServiceTypeList
	}
	return nil
}

type MatchServiceStopNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint32 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *MatchServiceStopNotify) Reset() {
	*x = MatchServiceStopNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchServiceStopNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchServiceStopNotify) ProtoMessage() {}

func (x *MatchServiceStopNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchServiceStopNotify.ProtoReflect.Descriptor instead.
func (*MatchServiceStopNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{14}
}

func (x *MatchServiceStopNotify) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type MatchServiceStopImplementNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *MatchServiceStopNotify `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MatchServiceStopImplementNotify) Reset() {
	*x = MatchServiceStopImplementNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchServiceStopImplementNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchServiceStopImplementNotify) ProtoMessage() {}

func (x *MatchServiceStopImplementNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchServiceStopImplementNotify.ProtoReflect.Descriptor instead.
func (*MatchServiceStopImplementNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{15}
}

func (x *MatchServiceStopImplementNotify) GetMsg() *MatchServiceStopNotify {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ServerBlockPlayerMpNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnlock bool   `protobuf:"varint,1,opt,name=is_unlock,json=isUnlock,proto3" json:"is_unlock,omitempty"`
	EndTime  uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ServerBlockPlayerMpNotify) Reset() {
	*x = ServerBlockPlayerMpNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerBlockPlayerMpNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerBlockPlayerMpNotify) ProtoMessage() {}

func (x *ServerBlockPlayerMpNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerBlockPlayerMpNotify.ProtoReflect.Descriptor instead.
func (*ServerBlockPlayerMpNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{16}
}

func (x *ServerBlockPlayerMpNotify) GetIsUnlock() bool {
	if x != nil {
		return x.IsUnlock
	}
	return false
}

func (x *ServerBlockPlayerMpNotify) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ServerBlockPlayerChatNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnlock bool   `protobuf:"varint,1,opt,name=is_unlock,json=isUnlock,proto3" json:"is_unlock,omitempty"`
	EndTime  uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ServerBlockPlayerChatNotify) Reset() {
	*x = ServerBlockPlayerChatNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerBlockPlayerChatNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerBlockPlayerChatNotify) ProtoMessage() {}

func (x *ServerBlockPlayerChatNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerBlockPlayerChatNotify.ProtoReflect.Descriptor instead.
func (*ServerBlockPlayerChatNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{17}
}

func (x *ServerBlockPlayerChatNotify) GetIsUnlock() bool {
	if x != nil {
		return x.IsUnlock
	}
	return false
}

func (x *ServerBlockPlayerChatNotify) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ServerCheckSegmentCrcNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerCheckSegmentCrcNotify) Reset() {
	*x = ServerCheckSegmentCrcNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_misc_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCheckSegmentCrcNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCheckSegmentCrcNotify) ProtoMessage() {}

func (x *ServerCheckSegmentCrcNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_misc_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCheckSegmentCrcNotify.ProtoReflect.Descriptor instead.
func (*ServerCheckSegmentCrcNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_misc_server_proto_rawDescGZIP(), []int{18}
}

var File_server_only_cmd_misc_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_misc_server_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x6d, 0x69, 0x73, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x74, 0x6f,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x22, 0x4d, 0x0a, 0x26, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x69, 0x6e, 0x22, 0x9a, 0x01, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x39, 0x0a, 0x19, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x3e, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x6d,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x42, 0x0a, 0x10, 0x43,
	0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xe1, 0x05, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x48, 0x0a, 0x13, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x11, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6c, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13,
	0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x12, 0x6c, 0x0a, 0x16, 0x63, 0x72, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63, 0x72,
	0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x12, 0x79, 0x0a, 0x1b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x1a, 0x5f, 0x0a, 0x18,
	0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a,
	0x18, 0x43, 0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63,
	0x0a, 0x1c, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x5e, 0x0a, 0x1c, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x16, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x1f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x53, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1b, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65,
	0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_server_only_cmd_misc_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_misc_server_proto_rawDescData = file_server_only_cmd_misc_server_proto_rawDesc
)

func file_server_only_cmd_misc_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_misc_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_misc_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_misc_server_proto_rawDescData)
	})
	return file_server_only_cmd_misc_server_proto_rawDescData
}

var file_server_only_cmd_misc_server_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_server_only_cmd_misc_server_proto_goTypes = []interface{}{
	(*StopServerConfigNotify)(nil),                 // 0: proto.StopServerConfigNotify
	(*NodeserverConnectedAndRegisteredNotify)(nil), // 1: proto.NodeserverConnectedAndRegisteredNotify
	(*MultiPlayerMsg)(nil),                         // 2: proto.MultiPlayerMsg
	(*AddGateserverNotify)(nil),                    // 3: proto.AddGateserverNotify
	(*RegisterServiceNotify)(nil),                  // 4: proto.RegisterServiceNotify
	(*PlayerTransferNotify)(nil),                   // 5: proto.PlayerTransferNotify
	(*PacketCountInfo)(nil),                        // 6: proto.PacketCountInfo
	(*PacketFreqencyExceedNotify)(nil),             // 7: proto.PacketFreqencyExceedNotify
	(*SceneAsyncLoadGroupBatchNotify)(nil),         // 8: proto.SceneAsyncLoadGroupBatchNotify
	(*CrcVersionConfig)(nil),                       // 9: proto.CrcVersionConfig
	(*ClientVersionSyncNotify)(nil),                // 10: proto.ClientVersionSyncNotify
	(*RegisterServiceSuccessNotify)(nil),           // 11: proto.RegisterServiceSuccessNotify
	(*ReloadConfigNotify)(nil),                     // 12: proto.ReloadConfigNotify
	(*MultiserverServiceTypeNotify)(nil),           // 13: proto.MultiserverServiceTypeNotify
	(*MatchServiceStopNotify)(nil),                 // 14: proto.MatchServiceStopNotify
	(*MatchServiceStopImplementNotify)(nil),        // 15: proto.MatchServiceStopImplementNotify
	(*ServerBlockPlayerMpNotify)(nil),              // 16: proto.ServerBlockPlayerMpNotify
	(*ServerBlockPlayerChatNotify)(nil),            // 17: proto.ServerBlockPlayerChatNotify
	(*ServerCheckSegmentCrcNotify)(nil),            // 18: proto.ServerCheckSegmentCrcNotify
	nil,                                            // 19: proto.ClientVersionSyncNotify.ResVersionConfigMapEntry
	nil,                                            // 20: proto.ClientVersionSyncNotify.CrcVersionConfigMapEntry
	nil,                                            // 21: proto.ClientVersionSyncNotify.NextResVersionConfigMapEntry
	(ServiceType)(0),                               // 22: proto.ServiceType
	(*DataVersionConfig)(nil),                      // 23: proto.DataVersionConfig
	(*ResVersionConfig)(nil),                       // 24: proto.ResVersionConfig
}
var file_server_only_cmd_misc_server_proto_depIdxs = []int32{
	22, // 0: proto.RegisterServiceNotify.service_type_list:type_name -> proto.ServiceType
	6,  // 1: proto.PacketFreqencyExceedNotify.packet_count_list:type_name -> proto.PacketCountInfo
	23, // 2: proto.ClientVersionSyncNotify.data_version_config:type_name -> proto.DataVersionConfig
	19, // 3: proto.ClientVersionSyncNotify.res_version_config_map:type_name -> proto.ClientVersionSyncNotify.ResVersionConfigMapEntry
	20, // 4: proto.ClientVersionSyncNotify.crc_version_config_map:type_name -> proto.ClientVersionSyncNotify.CrcVersionConfigMapEntry
	21, // 5: proto.ClientVersionSyncNotify.next_res_version_config_map:type_name -> proto.ClientVersionSyncNotify.NextResVersionConfigMapEntry
	22, // 6: proto.MultiserverServiceTypeNotify.service_type_list:type_name -> proto.ServiceType
	14, // 7: proto.MatchServiceStopImplementNotify.msg:type_name -> proto.MatchServiceStopNotify
	24, // 8: proto.ClientVersionSyncNotify.ResVersionConfigMapEntry.value:type_name -> proto.ResVersionConfig
	9,  // 9: proto.ClientVersionSyncNotify.CrcVersionConfigMapEntry.value:type_name -> proto.CrcVersionConfig
	24, // 10: proto.ClientVersionSyncNotify.NextResVersionConfigMapEntry.value:type_name -> proto.ResVersionConfig
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_server_only_cmd_misc_server_proto_init() }
func file_server_only_cmd_misc_server_proto_init() {
	if File_server_only_cmd_misc_server_proto != nil {
		return
	}
	file_define_proto_init()
	file_server_only_config_server_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_misc_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerConfigNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeserverConnectedAndRegisteredNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPlayerMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGateserverNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerTransferNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketCountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFreqencyExceedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneAsyncLoadGroupBatchNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrcVersionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionSyncNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceSuccessNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadConfigNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiserverServiceTypeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchServiceStopNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchServiceStopImplementNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerBlockPlayerMpNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerBlockPlayerChatNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_misc_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCheckSegmentCrcNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_misc_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_misc_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_misc_server_proto_depIdxs,
		MessageInfos:      file_server_only_cmd_misc_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_misc_server_proto = out.File
	file_server_only_cmd_misc_server_proto_rawDesc = nil
	file_server_only_cmd_misc_server_proto_goTypes = nil
	file_server_only_cmd_misc_server_proto_depIdxs = nil
}
