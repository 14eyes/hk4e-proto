// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_player.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompoundBoostTakeStatusType int32

const (
	CompoundBoostTakeStatusType_COMPOUND_BOOST_TAKE_STATUS_NONE           CompoundBoostTakeStatusType = 0
	CompoundBoostTakeStatusType_COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY     CompoundBoostTakeStatusType = 1
	CompoundBoostTakeStatusType_COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE CompoundBoostTakeStatusType = 2
	CompoundBoostTakeStatusType_COMPOUND_BOOST_TAKE_STATUS_BAG_FULL       CompoundBoostTakeStatusType = 3
)

// Enum value maps for CompoundBoostTakeStatusType.
var (
	CompoundBoostTakeStatusType_name = map[int32]string{
		0: "COMPOUND_BOOST_TAKE_STATUS_NONE",
		1: "COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY",
		2: "COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE",
		3: "COMPOUND_BOOST_TAKE_STATUS_BAG_FULL",
	}
	CompoundBoostTakeStatusType_value = map[string]int32{
		"COMPOUND_BOOST_TAKE_STATUS_NONE":           0,
		"COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY":     1,
		"COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE": 2,
		"COMPOUND_BOOST_TAKE_STATUS_BAG_FULL":       3,
	}
)

func (x CompoundBoostTakeStatusType) Enum() *CompoundBoostTakeStatusType {
	p := new(CompoundBoostTakeStatusType)
	*p = x
	return p
}

func (x CompoundBoostTakeStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompoundBoostTakeStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_player_proto_enumTypes[0].Descriptor()
}

func (CompoundBoostTakeStatusType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_player_proto_enumTypes[0]
}

func (x CompoundBoostTakeStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompoundBoostTakeStatusType.Descriptor instead.
func (CompoundBoostTakeStatusType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{0}
}

type PlayerLogoutReq_Reason int32

const (
	PlayerLogoutReq_DISCONNECT              PlayerLogoutReq_Reason = 0
	PlayerLogoutReq_CLIENT_REQ              PlayerLogoutReq_Reason = 1
	PlayerLogoutReq_TIMEOUT                 PlayerLogoutReq_Reason = 2
	PlayerLogoutReq_ADMIN_REQ               PlayerLogoutReq_Reason = 3
	PlayerLogoutReq_SERVER_CLOSE            PlayerLogoutReq_Reason = 4
	PlayerLogoutReq_GM_CLEAR                PlayerLogoutReq_Reason = 5
	PlayerLogoutReq_PLAYER_TRANSFER         PlayerLogoutReq_Reason = 6
	PlayerLogoutReq_CLIENT_CHECKSUM_INVALID PlayerLogoutReq_Reason = 7
)

// Enum value maps for PlayerLogoutReq_Reason.
var (
	PlayerLogoutReq_Reason_name = map[int32]string{
		0: "DISCONNECT",
		1: "CLIENT_REQ",
		2: "TIMEOUT",
		3: "ADMIN_REQ",
		4: "SERVER_CLOSE",
		5: "GM_CLEAR",
		6: "PLAYER_TRANSFER",
		7: "CLIENT_CHECKSUM_INVALID",
	}
	PlayerLogoutReq_Reason_value = map[string]int32{
		"DISCONNECT":              0,
		"CLIENT_REQ":              1,
		"TIMEOUT":                 2,
		"ADMIN_REQ":               3,
		"SERVER_CLOSE":            4,
		"GM_CLEAR":                5,
		"PLAYER_TRANSFER":         6,
		"CLIENT_CHECKSUM_INVALID": 7,
	}
)

func (x PlayerLogoutReq_Reason) Enum() *PlayerLogoutReq_Reason {
	p := new(PlayerLogoutReq_Reason)
	*p = x
	return p
}

func (x PlayerLogoutReq_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerLogoutReq_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_player_proto_enumTypes[1].Descriptor()
}

func (PlayerLogoutReq_Reason) Type() protoreflect.EnumType {
	return &file_cmd_cmd_player_proto_enumTypes[1]
}

func (x PlayerLogoutReq_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerLogoutReq_Reason.Descriptor instead.
func (PlayerLogoutReq_Reason) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{7, 0}
}

type DataResVersionNotify_DataResVersionOpType int32

const (
	DataResVersionNotify_OP_TYPE_NONE       DataResVersionNotify_DataResVersionOpType = 0
	DataResVersionNotify_OP_TYPE_RELOGIN    DataResVersionNotify_DataResVersionOpType = 1
	DataResVersionNotify_OP_TYPE_MP_RELOGIN DataResVersionNotify_DataResVersionOpType = 2
)

// Enum value maps for DataResVersionNotify_DataResVersionOpType.
var (
	DataResVersionNotify_DataResVersionOpType_name = map[int32]string{
		0: "OP_TYPE_NONE",
		1: "OP_TYPE_RELOGIN",
		2: "OP_TYPE_MP_RELOGIN",
	}
	DataResVersionNotify_DataResVersionOpType_value = map[string]int32{
		"OP_TYPE_NONE":       0,
		"OP_TYPE_RELOGIN":    1,
		"OP_TYPE_MP_RELOGIN": 2,
	}
)

func (x DataResVersionNotify_DataResVersionOpType) Enum() *DataResVersionNotify_DataResVersionOpType {
	p := new(DataResVersionNotify_DataResVersionOpType)
	*p = x
	return p
}

func (x DataResVersionNotify_DataResVersionOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataResVersionNotify_DataResVersionOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_player_proto_enumTypes[2].Descriptor()
}

func (DataResVersionNotify_DataResVersionOpType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_player_proto_enumTypes[2]
}

func (x DataResVersionNotify_DataResVersionOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataResVersionNotify_DataResVersionOpType.Descriptor instead.
func (DataResVersionNotify_DataResVersionOpType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{49, 0}
}

type RemoveRandTaskInfoNotify_FinishReason int32

const (
	RemoveRandTaskInfoNotify_DEFAULT  RemoveRandTaskInfoNotify_FinishReason = 0
	RemoveRandTaskInfoNotify_CLEAR    RemoveRandTaskInfoNotify_FinishReason = 1
	RemoveRandTaskInfoNotify_DISTANCE RemoveRandTaskInfoNotify_FinishReason = 2
	RemoveRandTaskInfoNotify_FINISH   RemoveRandTaskInfoNotify_FinishReason = 3
)

// Enum value maps for RemoveRandTaskInfoNotify_FinishReason.
var (
	RemoveRandTaskInfoNotify_FinishReason_name = map[int32]string{
		0: "DEFAULT",
		1: "CLEAR",
		2: "DISTANCE",
		3: "FINISH",
	}
	RemoveRandTaskInfoNotify_FinishReason_value = map[string]int32{
		"DEFAULT":  0,
		"CLEAR":    1,
		"DISTANCE": 2,
		"FINISH":   3,
	}
)

func (x RemoveRandTaskInfoNotify_FinishReason) Enum() *RemoveRandTaskInfoNotify_FinishReason {
	p := new(RemoveRandTaskInfoNotify_FinishReason)
	*p = x
	return p
}

func (x RemoveRandTaskInfoNotify_FinishReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveRandTaskInfoNotify_FinishReason) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_player_proto_enumTypes[3].Descriptor()
}

func (RemoveRandTaskInfoNotify_FinishReason) Type() protoreflect.EnumType {
	return &file_cmd_cmd_player_proto_enumTypes[3]
}

func (x RemoveRandTaskInfoNotify_FinishReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveRandTaskInfoNotify_FinishReason.Descriptor instead.
func (RemoveRandTaskInfoNotify_FinishReason) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{56, 0}
}

type ItemGivingReq_ItemGivingType int32

const (
	ItemGivingReq_QUEST  ItemGivingReq_ItemGivingType = 0
	ItemGivingReq_GADGET ItemGivingReq_ItemGivingType = 1
)

// Enum value maps for ItemGivingReq_ItemGivingType.
var (
	ItemGivingReq_ItemGivingType_name = map[int32]string{
		0: "QUEST",
		1: "GADGET",
	}
	ItemGivingReq_ItemGivingType_value = map[string]int32{
		"QUEST":  0,
		"GADGET": 1,
	}
)

func (x ItemGivingReq_ItemGivingType) Enum() *ItemGivingReq_ItemGivingType {
	p := new(ItemGivingReq_ItemGivingType)
	*p = x
	return p
}

func (x ItemGivingReq_ItemGivingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemGivingReq_ItemGivingType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_player_proto_enumTypes[4].Descriptor()
}

func (ItemGivingReq_ItemGivingType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_player_proto_enumTypes[4]
}

func (x ItemGivingReq_ItemGivingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemGivingReq_ItemGivingType.Descriptor instead.
func (ItemGivingReq_ItemGivingType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{63, 0}
}

type GetPlayerTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountExt      string `protobuf:"bytes,9,opt,name=account_ext,json=accountExt,proto3" json:"account_ext,omitempty"`
	AccountToken    string `protobuf:"bytes,10,opt,name=account_token,json=accountToken,proto3" json:"account_token,omitempty"`
	ChannelId       uint32 `protobuf:"varint,15,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	IsGuest         bool   `protobuf:"varint,6,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	PsnRegion       string `protobuf:"bytes,4,opt,name=psn_region,json=psnRegion,proto3" json:"psn_region,omitempty"`
	SubChannelId    uint32 `protobuf:"varint,8,opt,name=sub_channel_id,json=subChannelId,proto3" json:"sub_channel_id,omitempty"`
	AccountUid      string `protobuf:"bytes,11,opt,name=account_uid,json=accountUid,proto3" json:"account_uid,omitempty"`
	KeyId           uint32 `protobuf:"varint,1787,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	AccountType     uint32 `protobuf:"varint,1,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	CloudClientIp   uint32 `protobuf:"varint,14,opt,name=cloud_client_ip,json=cloudClientIp,proto3" json:"cloud_client_ip,omitempty"`
	MinorsRegMinAge uint32 `protobuf:"varint,995,opt,name=minors_reg_min_age,json=minorsRegMinAge,proto3" json:"minors_reg_min_age,omitempty"`
	Uid             uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	OnlineId        string `protobuf:"bytes,7,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	Birthday        string `protobuf:"bytes,1718,opt,name=birthday,proto3" json:"birthday,omitempty"`
	ClientIpStr     string `protobuf:"bytes,3,opt,name=client_ip_str,json=clientIpStr,proto3" json:"client_ip_str,omitempty"`
	PlatformType    uint32 `protobuf:"varint,12,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	ClientRandKey   string `protobuf:"bytes,760,opt,name=client_rand_key,json=clientRandKey,proto3" json:"client_rand_key,omitempty"`
	CountryCode     string `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Lang            uint32 `protobuf:"varint,892,opt,name=lang,proto3" json:"lang,omitempty"`
	PsnId           string `protobuf:"bytes,13,opt,name=psn_id,json=psnId,proto3" json:"psn_id,omitempty"`
}

func (x *GetPlayerTokenReq) Reset() {
	*x = GetPlayerTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerTokenReq) ProtoMessage() {}

func (x *GetPlayerTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerTokenReq.ProtoReflect.Descriptor instead.
func (*GetPlayerTokenReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlayerTokenReq) GetAccountExt() string {
	if x != nil {
		return x.AccountExt
	}
	return ""
}

func (x *GetPlayerTokenReq) GetAccountToken() string {
	if x != nil {
		return x.AccountToken
	}
	return ""
}

func (x *GetPlayerTokenReq) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetPlayerTokenReq) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *GetPlayerTokenReq) GetPsnRegion() string {
	if x != nil {
		return x.PsnRegion
	}
	return ""
}

func (x *GetPlayerTokenReq) GetSubChannelId() uint32 {
	if x != nil {
		return x.SubChannelId
	}
	return 0
}

func (x *GetPlayerTokenReq) GetAccountUid() string {
	if x != nil {
		return x.AccountUid
	}
	return ""
}

func (x *GetPlayerTokenReq) GetKeyId() uint32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *GetPlayerTokenReq) GetAccountType() uint32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *GetPlayerTokenReq) GetCloudClientIp() uint32 {
	if x != nil {
		return x.CloudClientIp
	}
	return 0
}

func (x *GetPlayerTokenReq) GetMinorsRegMinAge() uint32 {
	if x != nil {
		return x.MinorsRegMinAge
	}
	return 0
}

func (x *GetPlayerTokenReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetPlayerTokenReq) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *GetPlayerTokenReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetPlayerTokenReq) GetClientIpStr() string {
	if x != nil {
		return x.ClientIpStr
	}
	return ""
}

func (x *GetPlayerTokenReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *GetPlayerTokenReq) GetClientRandKey() string {
	if x != nil {
		return x.ClientRandKey
	}
	return ""
}

func (x *GetPlayerTokenReq) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetPlayerTokenReq) GetLang() uint32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

func (x *GetPlayerTokenReq) GetPsnId() string {
	if x != nil {
		return x.PsnId
	}
	return ""
}

type GetPlayerTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinorsRegMinAge        uint32          `protobuf:"varint,1561,opt,name=minors_reg_min_age,json=minorsRegMinAge,proto3" json:"minors_reg_min_age,omitempty"`
	ChannelId              uint32          `protobuf:"varint,896,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	PlatformType           uint32          `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	AccountUid             string          `protobuf:"bytes,12,opt,name=account_uid,json=accountUid,proto3" json:"account_uid,omitempty"`
	IsLoginWhiteList       bool            `protobuf:"varint,573,opt,name=is_login_white_list,json=isLoginWhiteList,proto3" json:"is_login_white_list,omitempty"`
	IsGuest                bool            `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	BlackUidEndTime        uint32          `protobuf:"varint,14,opt,name=black_uid_end_time,json=blackUidEndTime,proto3" json:"black_uid_end_time,omitempty"`
	IsWatchdogUid          bool            `protobuf:"varint,2028,opt,name=is_watchdog_uid,json=isWatchdogUid,proto3" json:"is_watchdog_uid,omitempty"`
	PsnId                  string          `protobuf:"bytes,1811,opt,name=psn_id,json=psnId,proto3" json:"psn_id,omitempty"`
	Tag                    uint32          `protobuf:"varint,1635,opt,name=tag,proto3" json:"tag,omitempty"`
	CountryCode            string          `protobuf:"bytes,2013,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Token                  string          `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`
	SubChannelId           uint32          `protobuf:"varint,1802,opt,name=sub_channel_id,json=subChannelId,proto3" json:"sub_channel_id,omitempty"`
	SecurityCmdBuffer      []byte          `protobuf:"bytes,6,opt,name=security_cmd_buffer,json=securityCmdBuffer,proto3" json:"security_cmd_buffer,omitempty"`
	ClientVersionRandomKey string          `protobuf:"bytes,1529,opt,name=client_version_random_key,json=clientVersionRandomKey,proto3" json:"client_version_random_key,omitempty"`
	Birthday               string          `protobuf:"bytes,937,opt,name=birthday,proto3" json:"birthday,omitempty"`
	SecretKeySeed          uint64          `protobuf:"varint,13,opt,name=secret_key_seed,json=secretKeySeed,proto3" json:"secret_key_seed,omitempty"`
	AccountType            uint32          `protobuf:"varint,5,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Msg                    string          `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	FinishCollectionIdList []uint32        `protobuf:"varint,1640,rep,packed,name=finish_collection_id_list,json=finishCollectionIdList,proto3" json:"finish_collection_id_list,omitempty"`
	Sign                   string          `protobuf:"bytes,1140,opt,name=sign,proto3" json:"sign,omitempty"`
	SecretKey              string          `protobuf:"bytes,15,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	StopServer             *StopServerInfo `protobuf:"bytes,1382,opt,name=stop_server,json=stopServer,proto3" json:"stop_server,omitempty"`
	Retcode                int32           `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Uid                    uint32          `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	IsProficientPlayer     bool            `protobuf:"varint,9,opt,name=is_proficient_player,json=isProficientPlayer,proto3" json:"is_proficient_player,omitempty"`
	RegPlatform            uint32          `protobuf:"varint,1112,opt,name=reg_platform,json=regPlatform,proto3" json:"reg_platform,omitempty"`
	ServerRandKey          string          `protobuf:"bytes,1493,opt,name=server_rand_key,json=serverRandKey,proto3" json:"server_rand_key,omitempty"`
	ExtraBinData           []byte          `protobuf:"bytes,3,opt,name=extra_bin_data,json=extraBinData,proto3" json:"extra_bin_data,omitempty"`
	ClientIpStr            string          `protobuf:"bytes,860,opt,name=client_ip_str,json=clientIpStr,proto3" json:"client_ip_str,omitempty"`
	GmUid                  uint32          `protobuf:"varint,10,opt,name=gm_uid,json=gmUid,proto3" json:"gm_uid,omitempty"`
	KeyId                  uint32          `protobuf:"varint,1172,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetPlayerTokenRsp) Reset() {
	*x = GetPlayerTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerTokenRsp) ProtoMessage() {}

func (x *GetPlayerTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerTokenRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerTokenRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlayerTokenRsp) GetMinorsRegMinAge() uint32 {
	if x != nil {
		return x.MinorsRegMinAge
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetAccountUid() string {
	if x != nil {
		return x.AccountUid
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetIsLoginWhiteList() bool {
	if x != nil {
		return x.IsLoginWhiteList
	}
	return false
}

func (x *GetPlayerTokenRsp) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *GetPlayerTokenRsp) GetBlackUidEndTime() uint32 {
	if x != nil {
		return x.BlackUidEndTime
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetIsWatchdogUid() bool {
	if x != nil {
		return x.IsWatchdogUid
	}
	return false
}

func (x *GetPlayerTokenRsp) GetPsnId() string {
	if x != nil {
		return x.PsnId
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetSubChannelId() uint32 {
	if x != nil {
		return x.SubChannelId
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetSecurityCmdBuffer() []byte {
	if x != nil {
		return x.SecurityCmdBuffer
	}
	return nil
}

func (x *GetPlayerTokenRsp) GetClientVersionRandomKey() string {
	if x != nil {
		return x.ClientVersionRandomKey
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetSecretKeySeed() uint64 {
	if x != nil {
		return x.SecretKeySeed
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetAccountType() uint32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetFinishCollectionIdList() []uint32 {
	if x != nil {
		return x.FinishCollectionIdList
	}
	return nil
}

func (x *GetPlayerTokenRsp) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetStopServer() *StopServerInfo {
	if x != nil {
		return x.StopServer
	}
	return nil
}

func (x *GetPlayerTokenRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetIsProficientPlayer() bool {
	if x != nil {
		return x.IsProficientPlayer
	}
	return false
}

func (x *GetPlayerTokenRsp) GetRegPlatform() uint32 {
	if x != nil {
		return x.RegPlatform
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetServerRandKey() string {
	if x != nil {
		return x.ServerRandKey
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetExtraBinData() []byte {
	if x != nil {
		return x.ExtraBinData
	}
	return nil
}

func (x *GetPlayerTokenRsp) GetClientIpStr() string {
	if x != nil {
		return x.ClientIpStr
	}
	return ""
}

func (x *GetPlayerTokenRsp) GetGmUid() uint32 {
	if x != nil {
		return x.GmUid
	}
	return 0
}

func (x *GetPlayerTokenRsp) GetKeyId() uint32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type TrackingIOInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rydevicetype string `protobuf:"bytes,11,opt,name=rydevicetype,proto3" json:"rydevicetype,omitempty"`
	Mac          string `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	Deviceid     string `protobuf:"bytes,9,opt,name=deviceid,proto3" json:"deviceid,omitempty"`
	ClientTz     string `protobuf:"bytes,5,opt,name=client_tz,json=clientTz,proto3" json:"client_tz,omitempty"`
	CurrentCaid  string `protobuf:"bytes,7,opt,name=current_caid,json=currentCaid,proto3" json:"current_caid,omitempty"`
	CachedCaid   string `protobuf:"bytes,15,opt,name=cached_caid,json=cachedCaid,proto3" json:"cached_caid,omitempty"`
	Appid        string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
}

func (x *TrackingIOInfo) Reset() {
	*x = TrackingIOInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingIOInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingIOInfo) ProtoMessage() {}

func (x *TrackingIOInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingIOInfo.ProtoReflect.Descriptor instead.
func (*TrackingIOInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{2}
}

func (x *TrackingIOInfo) GetRydevicetype() string {
	if x != nil {
		return x.Rydevicetype
	}
	return ""
}

func (x *TrackingIOInfo) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *TrackingIOInfo) GetDeviceid() string {
	if x != nil {
		return x.Deviceid
	}
	return ""
}

func (x *TrackingIOInfo) GetClientTz() string {
	if x != nil {
		return x.ClientTz
	}
	return ""
}

func (x *TrackingIOInfo) GetCurrentCaid() string {
	if x != nil {
		return x.CurrentCaid
	}
	return ""
}

func (x *TrackingIOInfo) GetCachedCaid() string {
	if x != nil {
		return x.CachedCaid
	}
	return ""
}

func (x *TrackingIOInfo) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

type AdjustTrackingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventToken string `protobuf:"bytes,9,opt,name=event_token,json=eventToken,proto3" json:"event_token,omitempty"`
	Adid       string `protobuf:"bytes,4,opt,name=adid,proto3" json:"adid,omitempty"`
	Idfa       string `protobuf:"bytes,2,opt,name=idfa,proto3" json:"idfa,omitempty"`
	AppToken   string `protobuf:"bytes,14,opt,name=app_token,json=appToken,proto3" json:"app_token,omitempty"`
	GpsAdid    string `protobuf:"bytes,3,opt,name=gps_adid,json=gpsAdid,proto3" json:"gps_adid,omitempty"`
	FireAdid   string `protobuf:"bytes,13,opt,name=fire_adid,json=fireAdid,proto3" json:"fire_adid,omitempty"`
}

func (x *AdjustTrackingInfo) Reset() {
	*x = AdjustTrackingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustTrackingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustTrackingInfo) ProtoMessage() {}

func (x *AdjustTrackingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustTrackingInfo.ProtoReflect.Descriptor instead.
func (*AdjustTrackingInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{3}
}

func (x *AdjustTrackingInfo) GetEventToken() string {
	if x != nil {
		return x.EventToken
	}
	return ""
}

func (x *AdjustTrackingInfo) GetAdid() string {
	if x != nil {
		return x.Adid
	}
	return ""
}

func (x *AdjustTrackingInfo) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *AdjustTrackingInfo) GetAppToken() string {
	if x != nil {
		return x.AppToken
	}
	return ""
}

func (x *AdjustTrackingInfo) GetGpsAdid() string {
	if x != nil {
		return x.GpsAdid
	}
	return ""
}

func (x *AdjustTrackingInfo) GetFireAdid() string {
	if x != nil {
		return x.FireAdid
	}
	return ""
}

type PlayerLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageType           uint32              `protobuf:"varint,6,opt,name=language_type,json=languageType,proto3" json:"language_type,omitempty"`
	RegPlatform            uint32              `protobuf:"varint,615,opt,name=reg_platform,json=regPlatform,proto3" json:"reg_platform,omitempty"`
	TrackingIoInfo         *TrackingIOInfo     `protobuf:"bytes,1660,opt,name=tracking_io_info,json=trackingIoInfo,proto3" json:"tracking_io_info,omitempty"`
	AccountType            uint32              `protobuf:"varint,13,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Token                  string              `protobuf:"bytes,15,opt,name=token,proto3" json:"token,omitempty"`
	ExtraBinData           []byte              `protobuf:"bytes,1458,opt,name=extra_bin_data,json=extraBinData,proto3" json:"extra_bin_data,omitempty"`
	ChannelId              uint32              `protobuf:"varint,1314,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ClientDataVersion      uint32              `protobuf:"varint,688,opt,name=client_data_version,json=clientDataVersion,proto3" json:"client_data_version,omitempty"`
	AccountUid             string              `protobuf:"bytes,2,opt,name=account_uid,json=accountUid,proto3" json:"account_uid,omitempty"`
	ClientVersion          string              `protobuf:"bytes,12,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	SecurityLibraryMd5     string              `protobuf:"bytes,772,opt,name=security_library_md5,json=securityLibraryMd5,proto3" json:"security_library_md5,omitempty"`
	CountryCode            string              `protobuf:"bytes,2000,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	PsnId                  string              `protobuf:"bytes,1268,opt,name=psn_id,json=psnId,proto3" json:"psn_id,omitempty"`
	ClientPort             uint32              `protobuf:"varint,431,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	DeviceName             string              `protobuf:"bytes,9,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Cps                    string              `protobuf:"bytes,1163,opt,name=cps,proto3" json:"cps,omitempty"`
	LoginRand              uint64              `protobuf:"varint,3,opt,name=login_rand,json=loginRand,proto3" json:"login_rand,omitempty"`
	TargetHomeParam        uint32              `protobuf:"varint,984,opt,name=target_home_param,json=targetHomeParam,proto3" json:"target_home_param,omitempty"`
	AdjustTrackingInfo     *AdjustTrackingInfo `protobuf:"bytes,1816,opt,name=adjust_tracking_info,json=adjustTrackingInfo,proto3" json:"adjust_tracking_info,omitempty"`
	IsTransfer             bool                `protobuf:"varint,908,opt,name=is_transfer,json=isTransfer,proto3" json:"is_transfer,omitempty"`
	Tag                    uint32              `protobuf:"varint,1787,opt,name=tag,proto3" json:"tag,omitempty"`
	IsGuest                bool                `protobuf:"varint,5,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	EnvironmentErrorCode   []byte              `protobuf:"bytes,2026,opt,name=environment_error_code,json=environmentErrorCode,proto3" json:"environment_error_code,omitempty"`
	OnlineId               string              `protobuf:"bytes,903,opt,name=online_id,json=onlineId,proto3" json:"online_id,omitempty"`
	IsEditor               bool                `protobuf:"varint,8,opt,name=is_editor,json=isEditor,proto3" json:"is_editor,omitempty"`
	ChecksumClientVersion  string              `protobuf:"bytes,861,opt,name=checksum_client_version,json=checksumClientVersion,proto3" json:"checksum_client_version,omitempty"`
	SecurityCmdReply       []byte              `protobuf:"bytes,1995,opt,name=security_cmd_reply,json=securityCmdReply,proto3" json:"security_cmd_reply,omitempty"`
	SecurityLibraryVersion string              `protobuf:"bytes,1213,opt,name=security_library_version,json=securityLibraryVersion,proto3" json:"security_library_version,omitempty"`
	Birthday               string              `protobuf:"bytes,1652,opt,name=birthday,proto3" json:"birthday,omitempty"`
	DeviceUuid             string              `protobuf:"bytes,4,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	ClientToken            uint32              `protobuf:"varint,1546,opt,name=client_token,json=clientToken,proto3" json:"client_token,omitempty"`
	SubChannelId           uint32              `protobuf:"varint,23,opt,name=sub_channel_id,json=subChannelId,proto3" json:"sub_channel_id,omitempty"`
	TargetUid              uint32              `protobuf:"varint,11,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	DeviceInfo             string              `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	ClientVerisonHash      string              `protobuf:"bytes,1707,opt,name=client_verison_hash,json=clientVerisonHash,proto3" json:"client_verison_hash,omitempty"`
	Checksum               string              `protobuf:"bytes,1532,opt,name=checksum,proto3" json:"checksum,omitempty"`
	PlatformType           uint32              `protobuf:"varint,14,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	TargetHomeOwnerUid     uint32              `protobuf:"varint,1864,opt,name=target_home_owner_uid,json=targetHomeOwnerUid,proto3" json:"target_home_owner_uid,omitempty"`
	CloudClientIp          uint32              `protobuf:"varint,1335,opt,name=cloud_client_ip,json=cloudClientIp,proto3" json:"cloud_client_ip,omitempty"`
	GmUid                  uint32              `protobuf:"varint,612,opt,name=gm_uid,json=gmUid,proto3" json:"gm_uid,omitempty"`
	SystemVersion          string              `protobuf:"bytes,10,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	Platform               string              `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *PlayerLoginReq) Reset() {
	*x = PlayerLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginReq) ProtoMessage() {}

func (x *PlayerLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginReq.ProtoReflect.Descriptor instead.
func (*PlayerLoginReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerLoginReq) GetLanguageType() uint32 {
	if x != nil {
		return x.LanguageType
	}
	return 0
}

func (x *PlayerLoginReq) GetRegPlatform() uint32 {
	if x != nil {
		return x.RegPlatform
	}
	return 0
}

func (x *PlayerLoginReq) GetTrackingIoInfo() *TrackingIOInfo {
	if x != nil {
		return x.TrackingIoInfo
	}
	return nil
}

func (x *PlayerLoginReq) GetAccountType() uint32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *PlayerLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PlayerLoginReq) GetExtraBinData() []byte {
	if x != nil {
		return x.ExtraBinData
	}
	return nil
}

func (x *PlayerLoginReq) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *PlayerLoginReq) GetClientDataVersion() uint32 {
	if x != nil {
		return x.ClientDataVersion
	}
	return 0
}

func (x *PlayerLoginReq) GetAccountUid() string {
	if x != nil {
		return x.AccountUid
	}
	return ""
}

func (x *PlayerLoginReq) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetSecurityLibraryMd5() string {
	if x != nil {
		return x.SecurityLibraryMd5
	}
	return ""
}

func (x *PlayerLoginReq) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *PlayerLoginReq) GetPsnId() string {
	if x != nil {
		return x.PsnId
	}
	return ""
}

func (x *PlayerLoginReq) GetClientPort() uint32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *PlayerLoginReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *PlayerLoginReq) GetCps() string {
	if x != nil {
		return x.Cps
	}
	return ""
}

func (x *PlayerLoginReq) GetLoginRand() uint64 {
	if x != nil {
		return x.LoginRand
	}
	return 0
}

func (x *PlayerLoginReq) GetTargetHomeParam() uint32 {
	if x != nil {
		return x.TargetHomeParam
	}
	return 0
}

func (x *PlayerLoginReq) GetAdjustTrackingInfo() *AdjustTrackingInfo {
	if x != nil {
		return x.AdjustTrackingInfo
	}
	return nil
}

func (x *PlayerLoginReq) GetIsTransfer() bool {
	if x != nil {
		return x.IsTransfer
	}
	return false
}

func (x *PlayerLoginReq) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *PlayerLoginReq) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *PlayerLoginReq) GetEnvironmentErrorCode() []byte {
	if x != nil {
		return x.EnvironmentErrorCode
	}
	return nil
}

func (x *PlayerLoginReq) GetOnlineId() string {
	if x != nil {
		return x.OnlineId
	}
	return ""
}

func (x *PlayerLoginReq) GetIsEditor() bool {
	if x != nil {
		return x.IsEditor
	}
	return false
}

func (x *PlayerLoginReq) GetChecksumClientVersion() string {
	if x != nil {
		return x.ChecksumClientVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetSecurityCmdReply() []byte {
	if x != nil {
		return x.SecurityCmdReply
	}
	return nil
}

func (x *PlayerLoginReq) GetSecurityLibraryVersion() string {
	if x != nil {
		return x.SecurityLibraryVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PlayerLoginReq) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *PlayerLoginReq) GetClientToken() uint32 {
	if x != nil {
		return x.ClientToken
	}
	return 0
}

func (x *PlayerLoginReq) GetSubChannelId() uint32 {
	if x != nil {
		return x.SubChannelId
	}
	return 0
}

func (x *PlayerLoginReq) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *PlayerLoginReq) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *PlayerLoginReq) GetClientVerisonHash() string {
	if x != nil {
		return x.ClientVerisonHash
	}
	return ""
}

func (x *PlayerLoginReq) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PlayerLoginReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *PlayerLoginReq) GetTargetHomeOwnerUid() uint32 {
	if x != nil {
		return x.TargetHomeOwnerUid
	}
	return 0
}

func (x *PlayerLoginReq) GetCloudClientIp() uint32 {
	if x != nil {
		return x.CloudClientIp
	}
	return 0
}

func (x *PlayerLoginReq) GetGmUid() uint32 {
	if x != nil {
		return x.GmUid
	}
	return 0
}

func (x *PlayerLoginReq) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *PlayerLoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ShortAbilityHashPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityConfigHash int32 `protobuf:"fixed32,15,opt,name=ability_config_hash,json=abilityConfigHash,proto3" json:"ability_config_hash,omitempty"`
	AbilityNameHash   int32 `protobuf:"fixed32,1,opt,name=ability_name_hash,json=abilityNameHash,proto3" json:"ability_name_hash,omitempty"`
}

func (x *ShortAbilityHashPair) Reset() {
	*x = ShortAbilityHashPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortAbilityHashPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortAbilityHashPair) ProtoMessage() {}

func (x *ShortAbilityHashPair) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortAbilityHashPair.ProtoReflect.Descriptor instead.
func (*ShortAbilityHashPair) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{5}
}

func (x *ShortAbilityHashPair) GetAbilityConfigHash() int32 {
	if x != nil {
		return x.AbilityConfigHash
	}
	return 0
}

func (x *ShortAbilityHashPair) GetAbilityNameHash() int32 {
	if x != nil {
		return x.AbilityNameHash
	}
	return 0
}

type PlayerLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientDataVersion          uint32                  `protobuf:"varint,1,opt,name=client_data_version,json=clientDataVersion,proto3" json:"client_data_version,omitempty"`
	IsScOpen                   bool                    `protobuf:"varint,1429,opt,name=is_sc_open,json=isScOpen,proto3" json:"is_sc_open,omitempty"`
	Retcode                    int32                   `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	BlockInfoMap               map[uint32]*BlockInfo   `protobuf:"bytes,571,rep,name=block_info_map,json=blockInfoMap,proto3" json:"block_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsAudit                    bool                    `protobuf:"varint,1685,opt,name=is_audit,json=isAudit,proto3" json:"is_audit,omitempty"`
	IsTransfer                 bool                    `protobuf:"varint,2018,opt,name=is_transfer,json=isTransfer,proto3" json:"is_transfer,omitempty"`
	ClientSilenceMd5           string                  `protobuf:"bytes,1746,opt,name=client_silence_md5,json=clientSilenceMd5,proto3" json:"client_silence_md5,omitempty"`
	NextResVersionConfig       *ResVersionConfig       `protobuf:"bytes,1573,opt,name=next_res_version_config,json=nextResVersionConfig,proto3" json:"next_res_version_config,omitempty"`
	ClientSilenceDataVersion   uint32                  `protobuf:"varint,6,opt,name=client_silence_data_version,json=clientSilenceDataVersion,proto3" json:"client_silence_data_version,omitempty"`
	LoginRand                  uint64                  `protobuf:"varint,4,opt,name=login_rand,json=loginRand,proto3" json:"login_rand,omitempty"`
	IsNewPlayer                bool                    `protobuf:"varint,8,opt,name=is_new_player,json=isNewPlayer,proto3" json:"is_new_player,omitempty"`
	ClientVersionSuffix        string                  `protobuf:"bytes,1047,opt,name=client_version_suffix,json=clientVersionSuffix,proto3" json:"client_version_suffix,omitempty"`
	GameBiz                    string                  `protobuf:"bytes,5,opt,name=game_biz,json=gameBiz,proto3" json:"game_biz,omitempty"`
	NextResourceUrl            string                  `protobuf:"bytes,621,opt,name=next_resource_url,json=nextResourceUrl,proto3" json:"next_resource_url,omitempty"`
	IsRelogin                  bool                    `protobuf:"varint,10,opt,name=is_relogin,json=isRelogin,proto3" json:"is_relogin,omitempty"`
	TotalTickTime              float64                 `protobuf:"fixed64,125,opt,name=total_tick_time,json=totalTickTime,proto3" json:"total_tick_time,omitempty"`
	IsEnableClientHashDebug    bool                    `protobuf:"varint,932,opt,name=is_enable_client_hash_debug,json=isEnableClientHashDebug,proto3" json:"is_enable_client_hash_debug,omitempty"`
	ScInfo                     []byte                  `protobuf:"bytes,2024,opt,name=sc_info,json=scInfo,proto3" json:"sc_info,omitempty"`
	AbilityHashCode            int32                   `protobuf:"varint,12,opt,name=ability_hash_code,json=abilityHashCode,proto3" json:"ability_hash_code,omitempty"`
	RegisterCps                string                  `protobuf:"bytes,2040,opt,name=register_cps,json=registerCps,proto3" json:"register_cps,omitempty"`
	IsLoginRspSplit            bool                    `protobuf:"varint,1649,opt,name=is_login_rsp_split,json=isLoginRspSplit,proto3" json:"is_login_rsp_split,omitempty"`
	IsUseAbilityHash           bool                    `protobuf:"varint,2,opt,name=is_use_ability_hash,json=isUseAbilityHash,proto3" json:"is_use_ability_hash,omitempty"`
	AbilityHashMap             map[string]int32        `protobuf:"bytes,11,rep,name=ability_hash_map,json=abilityHashMap,proto3" json:"ability_hash_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ShortAbilityHashMap        []*ShortAbilityHashPair `protobuf:"bytes,250,rep,name=short_ability_hash_map,json=shortAbilityHashMap,proto3" json:"short_ability_hash_map,omitempty"`
	ClientMd5                  string                  `protobuf:"bytes,1830,opt,name=client_md5,json=clientMd5,proto3" json:"client_md5,omitempty"`
	CountryCode                string                  `protobuf:"bytes,1900,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	IsDataNeedRelogin          bool                    `protobuf:"varint,951,opt,name=is_data_need_relogin,json=isDataNeedRelogin,proto3" json:"is_data_need_relogin,omitempty"`
	ResVersionConfig           *ResVersionConfig       `protobuf:"bytes,1969,opt,name=res_version_config,json=resVersionConfig,proto3" json:"res_version_config,omitempty"`
	FeatureBlockInfoList       []*FeatureBlockInfo     `protobuf:"bytes,1352,rep,name=feature_block_info_list,json=featureBlockInfoList,proto3" json:"feature_block_info_list,omitempty"`
	Birthday                   string                  `protobuf:"bytes,624,opt,name=birthday,proto3" json:"birthday,omitempty"`
	TargetUid                  uint32                  `protobuf:"varint,14,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	PlayerData                 []byte                  `protobuf:"bytes,13,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
	ClientSilenceVersionSuffix string                  `protobuf:"bytes,1299,opt,name=client_silence_version_suffix,json=clientSilenceVersionSuffix,proto3" json:"client_silence_version_suffix,omitempty"`
	TargetHomeOwnerUid         uint32                  `protobuf:"varint,553,opt,name=target_home_owner_uid,json=targetHomeOwnerUid,proto3" json:"target_home_owner_uid,omitempty"`
	PlayerDataVersion          uint32                  `protobuf:"varint,7,opt,name=player_data_version,json=playerDataVersion,proto3" json:"player_data_version,omitempty"`
}

func (x *PlayerLoginRsp) Reset() {
	*x = PlayerLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginRsp) ProtoMessage() {}

func (x *PlayerLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginRsp.ProtoReflect.Descriptor instead.
func (*PlayerLoginRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerLoginRsp) GetClientDataVersion() uint32 {
	if x != nil {
		return x.ClientDataVersion
	}
	return 0
}

func (x *PlayerLoginRsp) GetIsScOpen() bool {
	if x != nil {
		return x.IsScOpen
	}
	return false
}

func (x *PlayerLoginRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerLoginRsp) GetBlockInfoMap() map[uint32]*BlockInfo {
	if x != nil {
		return x.BlockInfoMap
	}
	return nil
}

func (x *PlayerLoginRsp) GetIsAudit() bool {
	if x != nil {
		return x.IsAudit
	}
	return false
}

func (x *PlayerLoginRsp) GetIsTransfer() bool {
	if x != nil {
		return x.IsTransfer
	}
	return false
}

func (x *PlayerLoginRsp) GetClientSilenceMd5() string {
	if x != nil {
		return x.ClientSilenceMd5
	}
	return ""
}

func (x *PlayerLoginRsp) GetNextResVersionConfig() *ResVersionConfig {
	if x != nil {
		return x.NextResVersionConfig
	}
	return nil
}

func (x *PlayerLoginRsp) GetClientSilenceDataVersion() uint32 {
	if x != nil {
		return x.ClientSilenceDataVersion
	}
	return 0
}

func (x *PlayerLoginRsp) GetLoginRand() uint64 {
	if x != nil {
		return x.LoginRand
	}
	return 0
}

func (x *PlayerLoginRsp) GetIsNewPlayer() bool {
	if x != nil {
		return x.IsNewPlayer
	}
	return false
}

func (x *PlayerLoginRsp) GetClientVersionSuffix() string {
	if x != nil {
		return x.ClientVersionSuffix
	}
	return ""
}

func (x *PlayerLoginRsp) GetGameBiz() string {
	if x != nil {
		return x.GameBiz
	}
	return ""
}

func (x *PlayerLoginRsp) GetNextResourceUrl() string {
	if x != nil {
		return x.NextResourceUrl
	}
	return ""
}

func (x *PlayerLoginRsp) GetIsRelogin() bool {
	if x != nil {
		return x.IsRelogin
	}
	return false
}

func (x *PlayerLoginRsp) GetTotalTickTime() float64 {
	if x != nil {
		return x.TotalTickTime
	}
	return 0
}

func (x *PlayerLoginRsp) GetIsEnableClientHashDebug() bool {
	if x != nil {
		return x.IsEnableClientHashDebug
	}
	return false
}

func (x *PlayerLoginRsp) GetScInfo() []byte {
	if x != nil {
		return x.ScInfo
	}
	return nil
}

func (x *PlayerLoginRsp) GetAbilityHashCode() int32 {
	if x != nil {
		return x.AbilityHashCode
	}
	return 0
}

func (x *PlayerLoginRsp) GetRegisterCps() string {
	if x != nil {
		return x.RegisterCps
	}
	return ""
}

func (x *PlayerLoginRsp) GetIsLoginRspSplit() bool {
	if x != nil {
		return x.IsLoginRspSplit
	}
	return false
}

func (x *PlayerLoginRsp) GetIsUseAbilityHash() bool {
	if x != nil {
		return x.IsUseAbilityHash
	}
	return false
}

func (x *PlayerLoginRsp) GetAbilityHashMap() map[string]int32 {
	if x != nil {
		return x.AbilityHashMap
	}
	return nil
}

func (x *PlayerLoginRsp) GetShortAbilityHashMap() []*ShortAbilityHashPair {
	if x != nil {
		return x.ShortAbilityHashMap
	}
	return nil
}

func (x *PlayerLoginRsp) GetClientMd5() string {
	if x != nil {
		return x.ClientMd5
	}
	return ""
}

func (x *PlayerLoginRsp) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *PlayerLoginRsp) GetIsDataNeedRelogin() bool {
	if x != nil {
		return x.IsDataNeedRelogin
	}
	return false
}

func (x *PlayerLoginRsp) GetResVersionConfig() *ResVersionConfig {
	if x != nil {
		return x.ResVersionConfig
	}
	return nil
}

func (x *PlayerLoginRsp) GetFeatureBlockInfoList() []*FeatureBlockInfo {
	if x != nil {
		return x.FeatureBlockInfoList
	}
	return nil
}

func (x *PlayerLoginRsp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PlayerLoginRsp) GetTargetUid() uint32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *PlayerLoginRsp) GetPlayerData() []byte {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *PlayerLoginRsp) GetClientSilenceVersionSuffix() string {
	if x != nil {
		return x.ClientSilenceVersionSuffix
	}
	return ""
}

func (x *PlayerLoginRsp) GetTargetHomeOwnerUid() uint32 {
	if x != nil {
		return x.TargetHomeOwnerUid
	}
	return 0
}

func (x *PlayerLoginRsp) GetPlayerDataVersion() uint32 {
	if x != nil {
		return x.PlayerDataVersion
	}
	return 0
}

type PlayerLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason PlayerLogoutReq_Reason `protobuf:"varint,6,opt,name=reason,proto3,enum=proto.PlayerLogoutReq_Reason" json:"reason,omitempty"`
}

func (x *PlayerLogoutReq) Reset() {
	*x = PlayerLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLogoutReq) ProtoMessage() {}

func (x *PlayerLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLogoutReq.ProtoReflect.Descriptor instead.
func (*PlayerLogoutReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerLogoutReq) GetReason() PlayerLogoutReq_Reason {
	if x != nil {
		return x.Reason
	}
	return PlayerLogoutReq_DISCONNECT
}

type PlayerLogoutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerLogoutRsp) Reset() {
	*x = PlayerLogoutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLogoutRsp) ProtoMessage() {}

func (x *PlayerLogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLogoutRsp.ProtoReflect.Descriptor instead.
func (*PlayerLogoutRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerLogoutRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerLogoutNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerLogoutNotify) Reset() {
	*x = PlayerLogoutNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLogoutNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLogoutNotify) ProtoMessage() {}

func (x *PlayerLogoutNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLogoutNotify.ProtoReflect.Descriptor instead.
func (*PlayerLogoutNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerLogoutNotify) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime        uint64                `protobuf:"varint,7,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	NickName          string                `protobuf:"bytes,8,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	IsFirstLoginToday bool                  `protobuf:"varint,12,opt,name=is_first_login_today,json=isFirstLoginToday,proto3" json:"is_first_login_today,omitempty"`
	RegionId          uint32                `protobuf:"varint,6,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	PropMap           map[uint32]*PropValue `protobuf:"bytes,15,rep,name=prop_map,json=propMap,proto3" json:"prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerDataNotify) Reset() {
	*x = PlayerDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDataNotify) ProtoMessage() {}

func (x *PlayerDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDataNotify.ProtoReflect.Descriptor instead.
func (*PlayerDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerDataNotify) GetServerTime() uint64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *PlayerDataNotify) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *PlayerDataNotify) GetIsFirstLoginToday() bool {
	if x != nil {
		return x.IsFirstLoginToday
	}
	return false
}

func (x *PlayerDataNotify) GetRegionId() uint32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *PlayerDataNotify) GetPropMap() map[uint32]*PropValue {
	if x != nil {
		return x.PropMap
	}
	return nil
}

type ChangeGameTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTime   uint32 `protobuf:"varint,6,opt,name=game_time,json=gameTime,proto3" json:"game_time,omitempty"`
	IsForceSet bool   `protobuf:"varint,11,opt,name=is_force_set,json=isForceSet,proto3" json:"is_force_set,omitempty"`
	ExtraDays  uint32 `protobuf:"varint,12,opt,name=extra_days,json=extraDays,proto3" json:"extra_days,omitempty"`
}

func (x *ChangeGameTimeReq) Reset() {
	*x = ChangeGameTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeGameTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeGameTimeReq) ProtoMessage() {}

func (x *ChangeGameTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeGameTimeReq.ProtoReflect.Descriptor instead.
func (*ChangeGameTimeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeGameTimeReq) GetGameTime() uint32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *ChangeGameTimeReq) GetIsForceSet() bool {
	if x != nil {
		return x.IsForceSet
	}
	return false
}

func (x *ChangeGameTimeReq) GetExtraDays() uint32 {
	if x != nil {
		return x.ExtraDays
	}
	return 0
}

type ChangeGameTimeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ExtraDays   uint32 `protobuf:"varint,5,opt,name=extra_days,json=extraDays,proto3" json:"extra_days,omitempty"`
	CurGameTime uint32 `protobuf:"varint,14,opt,name=cur_game_time,json=curGameTime,proto3" json:"cur_game_time,omitempty"`
}

func (x *ChangeGameTimeRsp) Reset() {
	*x = ChangeGameTimeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeGameTimeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeGameTimeRsp) ProtoMessage() {}

func (x *ChangeGameTimeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeGameTimeRsp.ProtoReflect.Descriptor instead.
func (*ChangeGameTimeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeGameTimeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeGameTimeRsp) GetExtraDays() uint32 {
	if x != nil {
		return x.ExtraDays
	}
	return 0
}

func (x *ChangeGameTimeRsp) GetCurGameTime() uint32 {
	if x != nil {
		return x.CurGameTime
	}
	return 0
}

type PlayerGameTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	GameTime uint32 `protobuf:"varint,3,opt,name=game_time,json=gameTime,proto3" json:"game_time,omitempty"`
	IsHome   bool   `protobuf:"varint,13,opt,name=is_home,json=isHome,proto3" json:"is_home,omitempty"`
}

func (x *PlayerGameTimeNotify) Reset() {
	*x = PlayerGameTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameTimeNotify) ProtoMessage() {}

func (x *PlayerGameTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameTimeNotify.ProtoReflect.Descriptor instead.
func (*PlayerGameTimeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{13}
}

func (x *PlayerGameTimeNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerGameTimeNotify) GetGameTime() uint32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *PlayerGameTimeNotify) GetIsHome() bool {
	if x != nil {
		return x.IsHome
	}
	return false
}

type PlayerPropNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropMap map[uint32]*PropValue `protobuf:"bytes,13,rep,name=prop_map,json=propMap,proto3" json:"prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerPropNotify) Reset() {
	*x = PlayerPropNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPropNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPropNotify) ProtoMessage() {}

func (x *PlayerPropNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPropNotify.ProtoReflect.Descriptor instead.
func (*PlayerPropNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerPropNotify) GetPropMap() map[uint32]*PropValue {
	if x != nil {
		return x.PropMap
	}
	return nil
}

type ClientTriggerEventNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceId   uint32           `protobuf:"varint,3,opt,name=force_id,json=forceId,proto3" json:"force_id,omitempty"`
	EventType EventTriggerType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=proto.EventTriggerType" json:"event_type,omitempty"`
}

func (x *ClientTriggerEventNotify) Reset() {
	*x = ClientTriggerEventNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientTriggerEventNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientTriggerEventNotify) ProtoMessage() {}

func (x *ClientTriggerEventNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientTriggerEventNotify.ProtoReflect.Descriptor instead.
func (*ClientTriggerEventNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{15}
}

func (x *ClientTriggerEventNotify) GetForceId() uint32 {
	if x != nil {
		return x.ForceId
	}
	return 0
}

func (x *ClientTriggerEventNotify) GetEventType() EventTriggerType {
	if x != nil {
		return x.EventType
	}
	return EventTriggerType_EVENT_TRIGGER_NONE
}

type SetPlayerPropReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropList []*PropValue `protobuf:"bytes,7,rep,name=prop_list,json=propList,proto3" json:"prop_list,omitempty"`
}

func (x *SetPlayerPropReq) Reset() {
	*x = SetPlayerPropReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerPropReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerPropReq) ProtoMessage() {}

func (x *SetPlayerPropReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerPropReq.ProtoReflect.Descriptor instead.
func (*SetPlayerPropReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{16}
}

func (x *SetPlayerPropReq) GetPropList() []*PropValue {
	if x != nil {
		return x.PropList
	}
	return nil
}

type SetPlayerPropRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetPlayerPropRsp) Reset() {
	*x = SetPlayerPropRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerPropRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerPropRsp) ProtoMessage() {}

func (x *SetPlayerPropRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerPropRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerPropRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{17}
}

func (x *SetPlayerPropRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SetPlayerBornDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId uint32 `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	NickName string `protobuf:"bytes,13,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
}

func (x *SetPlayerBornDataReq) Reset() {
	*x = SetPlayerBornDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerBornDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerBornDataReq) ProtoMessage() {}

func (x *SetPlayerBornDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerBornDataReq.ProtoReflect.Descriptor instead.
func (*SetPlayerBornDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{18}
}

func (x *SetPlayerBornDataReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *SetPlayerBornDataReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type SetPlayerBornDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SetPlayerBornDataRsp) Reset() {
	*x = SetPlayerBornDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerBornDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerBornDataRsp) ProtoMessage() {}

func (x *SetPlayerBornDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerBornDataRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerBornDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{19}
}

func (x *SetPlayerBornDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DoSetPlayerBornDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoSetPlayerBornDataNotify) Reset() {
	*x = DoSetPlayerBornDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSetPlayerBornDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSetPlayerBornDataNotify) ProtoMessage() {}

func (x *DoSetPlayerBornDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSetPlayerBornDataNotify.ProtoReflect.Descriptor instead.
func (*DoSetPlayerBornDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{20}
}

type PlayerPropChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropDelta uint32 `protobuf:"varint,13,opt,name=prop_delta,json=propDelta,proto3" json:"prop_delta,omitempty"`
	PropType  uint32 `protobuf:"varint,12,opt,name=prop_type,json=propType,proto3" json:"prop_type,omitempty"`
}

func (x *PlayerPropChangeNotify) Reset() {
	*x = PlayerPropChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPropChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPropChangeNotify) ProtoMessage() {}

func (x *PlayerPropChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPropChangeNotify.ProtoReflect.Descriptor instead.
func (*PlayerPropChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerPropChangeNotify) GetPropDelta() uint32 {
	if x != nil {
		return x.PropDelta
	}
	return 0
}

func (x *PlayerPropChangeNotify) GetPropType() uint32 {
	if x != nil {
		return x.PropType
	}
	return 0
}

type SetPlayerNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
}

func (x *SetPlayerNameReq) Reset() {
	*x = SetPlayerNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerNameReq) ProtoMessage() {}

func (x *SetPlayerNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerNameReq.ProtoReflect.Descriptor instead.
func (*SetPlayerNameReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{22}
}

func (x *SetPlayerNameReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type SetPlayerNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	NickName string `protobuf:"bytes,14,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
}

func (x *SetPlayerNameRsp) Reset() {
	*x = SetPlayerNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerNameRsp) ProtoMessage() {}

func (x *SetPlayerNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerNameRsp.ProtoReflect.Descriptor instead.
func (*SetPlayerNameRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{23}
}

func (x *SetPlayerNameRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetPlayerNameRsp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type SetOpenStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,12,opt,name=key,proto3" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetOpenStateReq) Reset() {
	*x = SetOpenStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOpenStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOpenStateReq) ProtoMessage() {}

func (x *SetOpenStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOpenStateReq.ProtoReflect.Descriptor instead.
func (*SetOpenStateReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{24}
}

func (x *SetOpenStateReq) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *SetOpenStateReq) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetOpenStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     uint32 `protobuf:"varint,9,opt,name=key,proto3" json:"key,omitempty"`
	Retcode int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Value   uint32 `protobuf:"varint,15,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetOpenStateRsp) Reset() {
	*x = SetOpenStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOpenStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOpenStateRsp) ProtoMessage() {}

func (x *SetOpenStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOpenStateRsp.ProtoReflect.Descriptor instead.
func (*SetOpenStateRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{25}
}

func (x *SetOpenStateRsp) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *SetOpenStateRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetOpenStateRsp) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type OpenStateUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenStateMap map[uint32]uint32 `protobuf:"bytes,6,rep,name=open_state_map,json=openStateMap,proto3" json:"open_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OpenStateUpdateNotify) Reset() {
	*x = OpenStateUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStateUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStateUpdateNotify) ProtoMessage() {}

func (x *OpenStateUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStateUpdateNotify.ProtoReflect.Descriptor instead.
func (*OpenStateUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{26}
}

func (x *OpenStateUpdateNotify) GetOpenStateMap() map[uint32]uint32 {
	if x != nil {
		return x.OpenStateMap
	}
	return nil
}

type OpenStateChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenStateMap map[uint32]uint32 `protobuf:"bytes,4,rep,name=open_state_map,json=openStateMap,proto3" json:"open_state_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OpenStateChangeNotify) Reset() {
	*x = OpenStateChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStateChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStateChangeNotify) ProtoMessage() {}

func (x *OpenStateChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStateChangeNotify.ProtoReflect.Descriptor instead.
func (*OpenStateChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{27}
}

func (x *OpenStateChangeNotify) GetOpenStateMap() map[uint32]uint32 {
	if x != nil {
		return x.OpenStateMap
	}
	return nil
}

type PlayerCookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CookCount    uint32 `protobuf:"varint,1,opt,name=cook_count,json=cookCount,proto3" json:"cook_count,omitempty"`
	QteQuality   uint32 `protobuf:"varint,12,opt,name=qte_quality,json=qteQuality,proto3" json:"qte_quality,omitempty"`
	RecipeId     uint32 `protobuf:"varint,8,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	AssistAvatar uint32 `protobuf:"varint,14,opt,name=assist_avatar,json=assistAvatar,proto3" json:"assist_avatar,omitempty"`
}

func (x *PlayerCookReq) Reset() {
	*x = PlayerCookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCookReq) ProtoMessage() {}

func (x *PlayerCookReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCookReq.ProtoReflect.Descriptor instead.
func (*PlayerCookReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{28}
}

func (x *PlayerCookReq) GetCookCount() uint32 {
	if x != nil {
		return x.CookCount
	}
	return 0
}

func (x *PlayerCookReq) GetQteQuality() uint32 {
	if x != nil {
		return x.QteQuality
	}
	return 0
}

func (x *PlayerCookReq) GetRecipeId() uint32 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

func (x *PlayerCookReq) GetAssistAvatar() uint32 {
	if x != nil {
		return x.AssistAvatar
	}
	return 0
}

type PlayerCookRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtralItemList []*ItemParam    `protobuf:"bytes,15,rep,name=extral_item_list,json=extralItemList,proto3" json:"extral_item_list,omitempty"`
	CookCount      uint32          `protobuf:"varint,12,opt,name=cook_count,json=cookCount,proto3" json:"cook_count,omitempty"`
	ItemList       []*ItemParam    `protobuf:"bytes,11,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Retcode        int32           `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	QteQuality     uint32          `protobuf:"varint,5,opt,name=qte_quality,json=qteQuality,proto3" json:"qte_quality,omitempty"`
	RecipeData     *CookRecipeData `protobuf:"bytes,7,opt,name=recipe_data,json=recipeData,proto3" json:"recipe_data,omitempty"`
}

func (x *PlayerCookRsp) Reset() {
	*x = PlayerCookRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCookRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCookRsp) ProtoMessage() {}

func (x *PlayerCookRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCookRsp.ProtoReflect.Descriptor instead.
func (*PlayerCookRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{29}
}

func (x *PlayerCookRsp) GetExtralItemList() []*ItemParam {
	if x != nil {
		return x.ExtralItemList
	}
	return nil
}

func (x *PlayerCookRsp) GetCookCount() uint32 {
	if x != nil {
		return x.CookCount
	}
	return 0
}

func (x *PlayerCookRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *PlayerCookRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerCookRsp) GetQteQuality() uint32 {
	if x != nil {
		return x.QteQuality
	}
	return 0
}

func (x *PlayerCookRsp) GetRecipeData() *CookRecipeData {
	if x != nil {
		return x.RecipeData
	}
	return nil
}

type PlayerRandomCookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialList []*ItemParam `protobuf:"bytes,13,rep,name=material_list,json=materialList,proto3" json:"material_list,omitempty"`
}

func (x *PlayerRandomCookReq) Reset() {
	*x = PlayerRandomCookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRandomCookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRandomCookReq) ProtoMessage() {}

func (x *PlayerRandomCookReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRandomCookReq.ProtoReflect.Descriptor instead.
func (*PlayerRandomCookReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{30}
}

func (x *PlayerRandomCookReq) GetMaterialList() []*ItemParam {
	if x != nil {
		return x.MaterialList
	}
	return nil
}

type PlayerRandomCookRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerRandomCookRsp) Reset() {
	*x = PlayerRandomCookRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRandomCookRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRandomCookRsp) ProtoMessage() {}

func (x *PlayerRandomCookRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRandomCookRsp.ProtoReflect.Descriptor instead.
func (*PlayerRandomCookRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{31}
}

func (x *PlayerRandomCookRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CookRecipeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proficiency uint32 `protobuf:"varint,13,opt,name=proficiency,proto3" json:"proficiency,omitempty"`
	RecipeId    uint32 `protobuf:"varint,9,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
}

func (x *CookRecipeData) Reset() {
	*x = CookRecipeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookRecipeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookRecipeData) ProtoMessage() {}

func (x *CookRecipeData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookRecipeData.ProtoReflect.Descriptor instead.
func (*CookRecipeData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{32}
}

func (x *CookRecipeData) GetProficiency() uint32 {
	if x != nil {
		return x.Proficiency
	}
	return 0
}

func (x *CookRecipeData) GetRecipeId() uint32 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

type CookDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeDataList []*CookRecipeData `protobuf:"bytes,2,rep,name=recipe_data_list,json=recipeDataList,proto3" json:"recipe_data_list,omitempty"`
	Grade          uint32            `protobuf:"varint,11,opt,name=grade,proto3" json:"grade,omitempty"`
}

func (x *CookDataNotify) Reset() {
	*x = CookDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookDataNotify) ProtoMessage() {}

func (x *CookDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookDataNotify.ProtoReflect.Descriptor instead.
func (*CookDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{33}
}

func (x *CookDataNotify) GetRecipeDataList() []*CookRecipeData {
	if x != nil {
		return x.RecipeDataList
	}
	return nil
}

func (x *CookDataNotify) GetGrade() uint32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

type CookRecipeDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeData *CookRecipeData `protobuf:"bytes,4,opt,name=recipe_data,json=recipeData,proto3" json:"recipe_data,omitempty"`
}

func (x *CookRecipeDataNotify) Reset() {
	*x = CookRecipeDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookRecipeDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookRecipeDataNotify) ProtoMessage() {}

func (x *CookRecipeDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookRecipeDataNotify.ProtoReflect.Descriptor instead.
func (*CookRecipeDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{34}
}

func (x *CookRecipeDataNotify) GetRecipeData() *CookRecipeData {
	if x != nil {
		return x.RecipeData
	}
	return nil
}

type CookGradeDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grade uint32 `protobuf:"varint,12,opt,name=grade,proto3" json:"grade,omitempty"`
}

func (x *CookGradeDataNotify) Reset() {
	*x = CookGradeDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookGradeDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookGradeDataNotify) ProtoMessage() {}

func (x *CookGradeDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookGradeDataNotify.ProtoReflect.Descriptor instead.
func (*CookGradeDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{35}
}

func (x *CookGradeDataNotify) GetGrade() uint32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

type PlayerCompoundMaterialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count      uint32 `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	CompoundId uint32 `protobuf:"varint,3,opt,name=compound_id,json=compoundId,proto3" json:"compound_id,omitempty"`
}

func (x *PlayerCompoundMaterialReq) Reset() {
	*x = PlayerCompoundMaterialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCompoundMaterialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCompoundMaterialReq) ProtoMessage() {}

func (x *PlayerCompoundMaterialReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCompoundMaterialReq.ProtoReflect.Descriptor instead.
func (*PlayerCompoundMaterialReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{36}
}

func (x *PlayerCompoundMaterialReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PlayerCompoundMaterialReq) GetCompoundId() uint32 {
	if x != nil {
		return x.CompoundId
	}
	return 0
}

type CompoundQueueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputCount uint32 `protobuf:"varint,1,opt,name=output_count,json=outputCount,proto3" json:"output_count,omitempty"`
	CompoundId  uint32 `protobuf:"varint,4,opt,name=compound_id,json=compoundId,proto3" json:"compound_id,omitempty"`
	OutputTime  uint32 `protobuf:"varint,14,opt,name=output_time,json=outputTime,proto3" json:"output_time,omitempty"`
	WaitCount   uint32 `protobuf:"varint,8,opt,name=wait_count,json=waitCount,proto3" json:"wait_count,omitempty"`
}

func (x *CompoundQueueData) Reset() {
	*x = CompoundQueueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompoundQueueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundQueueData) ProtoMessage() {}

func (x *CompoundQueueData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundQueueData.ProtoReflect.Descriptor instead.
func (*CompoundQueueData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{37}
}

func (x *CompoundQueueData) GetOutputCount() uint32 {
	if x != nil {
		return x.OutputCount
	}
	return 0
}

func (x *CompoundQueueData) GetCompoundId() uint32 {
	if x != nil {
		return x.CompoundId
	}
	return 0
}

func (x *CompoundQueueData) GetOutputTime() uint32 {
	if x != nil {
		return x.OutputTime
	}
	return 0
}

func (x *CompoundQueueData) GetWaitCount() uint32 {
	if x != nil {
		return x.WaitCount
	}
	return 0
}

type PlayerCompoundMaterialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompoundQueData *CompoundQueueData `protobuf:"bytes,5,opt,name=compound_que_data,json=compoundQueData,proto3" json:"compound_que_data,omitempty"`
	Retcode         int32              `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerCompoundMaterialRsp) Reset() {
	*x = PlayerCompoundMaterialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCompoundMaterialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCompoundMaterialRsp) ProtoMessage() {}

func (x *PlayerCompoundMaterialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCompoundMaterialRsp.ProtoReflect.Descriptor instead.
func (*PlayerCompoundMaterialRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{38}
}

func (x *PlayerCompoundMaterialRsp) GetCompoundQueData() *CompoundQueueData {
	if x != nil {
		return x.CompoundQueData
	}
	return nil
}

func (x *PlayerCompoundMaterialRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type TakeCompoundOutputReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompoundGroupId uint32 `protobuf:"varint,3,opt,name=compound_group_id,json=compoundGroupId,proto3" json:"compound_group_id,omitempty"`
	CompoundId      uint32 `protobuf:"varint,10,opt,name=compound_id,json=compoundId,proto3" json:"compound_id,omitempty"`
}

func (x *TakeCompoundOutputReq) Reset() {
	*x = TakeCompoundOutputReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCompoundOutputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCompoundOutputReq) ProtoMessage() {}

func (x *TakeCompoundOutputReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCompoundOutputReq.ProtoReflect.Descriptor instead.
func (*TakeCompoundOutputReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{39}
}

func (x *TakeCompoundOutputReq) GetCompoundGroupId() uint32 {
	if x != nil {
		return x.CompoundGroupId
	}
	return 0
}

func (x *TakeCompoundOutputReq) GetCompoundId() uint32 {
	if x != nil {
		return x.CompoundId
	}
	return 0
}

type TakeCompoundOutputRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*ItemParam `protobuf:"bytes,6,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Retcode  int32        `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeCompoundOutputRsp) Reset() {
	*x = TakeCompoundOutputRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeCompoundOutputRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCompoundOutputRsp) ProtoMessage() {}

func (x *TakeCompoundOutputRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCompoundOutputRsp.ProtoReflect.Descriptor instead.
func (*TakeCompoundOutputRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{40}
}

func (x *TakeCompoundOutputRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TakeCompoundOutputRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type CompoundDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockCompoundList  []uint32             `protobuf:"varint,1,rep,packed,name=unlock_compound_list,json=unlockCompoundList,proto3" json:"unlock_compound_list,omitempty"`
	CompoundQueDataList []*CompoundQueueData `protobuf:"bytes,9,rep,name=compound_que_data_list,json=compoundQueDataList,proto3" json:"compound_que_data_list,omitempty"`
}

func (x *CompoundDataNotify) Reset() {
	*x = CompoundDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompoundDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundDataNotify) ProtoMessage() {}

func (x *CompoundDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundDataNotify.ProtoReflect.Descriptor instead.
func (*CompoundDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{41}
}

func (x *CompoundDataNotify) GetUnlockCompoundList() []uint32 {
	if x != nil {
		return x.UnlockCompoundList
	}
	return nil
}

func (x *CompoundDataNotify) GetCompoundQueDataList() []*CompoundQueueData {
	if x != nil {
		return x.CompoundQueDataList
	}
	return nil
}

type GetCompoundDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCompoundDataReq) Reset() {
	*x = GetCompoundDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompoundDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompoundDataReq) ProtoMessage() {}

func (x *GetCompoundDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompoundDataReq.ProtoReflect.Descriptor instead.
func (*GetCompoundDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{42}
}

type GetCompoundDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode             int32                `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UnlockCompoundList  []uint32             `protobuf:"varint,11,rep,packed,name=unlock_compound_list,json=unlockCompoundList,proto3" json:"unlock_compound_list,omitempty"`
	CompoundQueDataList []*CompoundQueueData `protobuf:"bytes,7,rep,name=compound_que_data_list,json=compoundQueDataList,proto3" json:"compound_que_data_list,omitempty"`
}

func (x *GetCompoundDataRsp) Reset() {
	*x = GetCompoundDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompoundDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompoundDataRsp) ProtoMessage() {}

func (x *GetCompoundDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompoundDataRsp.ProtoReflect.Descriptor instead.
func (*GetCompoundDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{43}
}

func (x *GetCompoundDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetCompoundDataRsp) GetUnlockCompoundList() []uint32 {
	if x != nil {
		return x.UnlockCompoundList
	}
	return nil
}

func (x *GetCompoundDataRsp) GetCompoundQueDataList() []*CompoundQueueData {
	if x != nil {
		return x.CompoundQueDataList
	}
	return nil
}

type PlayerTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime uint64 `protobuf:"varint,5,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	PlayerTime uint64 `protobuf:"varint,11,opt,name=player_time,json=playerTime,proto3" json:"player_time,omitempty"`
	IsPaused   bool   `protobuf:"varint,14,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
}

func (x *PlayerTimeNotify) Reset() {
	*x = PlayerTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTimeNotify) ProtoMessage() {}

func (x *PlayerTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTimeNotify.ProtoReflect.Descriptor instead.
func (*PlayerTimeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{44}
}

func (x *PlayerTimeNotify) GetServerTime() uint64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *PlayerTimeNotify) GetPlayerTime() uint64 {
	if x != nil {
		return x.PlayerTime
	}
	return 0
}

func (x *PlayerTimeNotify) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

type PlayerSetPauseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPaused bool `protobuf:"varint,1,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
}

func (x *PlayerSetPauseReq) Reset() {
	*x = PlayerSetPauseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSetPauseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSetPauseReq) ProtoMessage() {}

func (x *PlayerSetPauseReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSetPauseReq.ProtoReflect.Descriptor instead.
func (*PlayerSetPauseReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{45}
}

func (x *PlayerSetPauseReq) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

type PlayerSetPauseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerSetPauseRsp) Reset() {
	*x = PlayerSetPauseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSetPauseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSetPauseRsp) ProtoMessage() {}

func (x *PlayerSetPauseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSetPauseRsp.ProtoReflect.Descriptor instead.
func (*PlayerSetPauseRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{46}
}

func (x *PlayerSetPauseRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerSetLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageType uint32 `protobuf:"varint,5,opt,name=language_type,json=languageType,proto3" json:"language_type,omitempty"`
}

func (x *PlayerSetLanguageReq) Reset() {
	*x = PlayerSetLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSetLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSetLanguageReq) ProtoMessage() {}

func (x *PlayerSetLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSetLanguageReq.ProtoReflect.Descriptor instead.
func (*PlayerSetLanguageReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{47}
}

func (x *PlayerSetLanguageReq) GetLanguageType() uint32 {
	if x != nil {
		return x.LanguageType
	}
	return 0
}

type PlayerSetLanguageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerSetLanguageRsp) Reset() {
	*x = PlayerSetLanguageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSetLanguageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSetLanguageRsp) ProtoMessage() {}

func (x *PlayerSetLanguageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSetLanguageRsp.ProtoReflect.Descriptor instead.
func (*PlayerSetLanguageRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{48}
}

func (x *PlayerSetLanguageRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DataResVersionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSilenceMd5           string                                    `protobuf:"bytes,10,opt,name=client_silence_md5,json=clientSilenceMd5,proto3" json:"client_silence_md5,omitempty"`
	ClientSilenceVersionSuffix string                                    `protobuf:"bytes,15,opt,name=client_silence_version_suffix,json=clientSilenceVersionSuffix,proto3" json:"client_silence_version_suffix,omitempty"`
	ResVersionConfig           *ResVersionConfig                         `protobuf:"bytes,9,opt,name=res_version_config,json=resVersionConfig,proto3" json:"res_version_config,omitempty"`
	IsDataNeedRelogin          bool                                      `protobuf:"varint,7,opt,name=is_data_need_relogin,json=isDataNeedRelogin,proto3" json:"is_data_need_relogin,omitempty"`
	OpType                     DataResVersionNotify_DataResVersionOpType `protobuf:"varint,12,opt,name=op_type,json=opType,proto3,enum=proto.DataResVersionNotify_DataResVersionOpType" json:"op_type,omitempty"`
	ClientDataVersion          uint32                                    `protobuf:"varint,2,opt,name=client_data_version,json=clientDataVersion,proto3" json:"client_data_version,omitempty"`
	ClientVersionSuffix        string                                    `protobuf:"bytes,5,opt,name=client_version_suffix,json=clientVersionSuffix,proto3" json:"client_version_suffix,omitempty"`
	ClientSilenceDataVersion   uint32                                    `protobuf:"varint,1,opt,name=client_silence_data_version,json=clientSilenceDataVersion,proto3" json:"client_silence_data_version,omitempty"`
	ClientMd5                  string                                    `protobuf:"bytes,14,opt,name=client_md5,json=clientMd5,proto3" json:"client_md5,omitempty"`
}

func (x *DataResVersionNotify) Reset() {
	*x = DataResVersionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataResVersionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResVersionNotify) ProtoMessage() {}

func (x *DataResVersionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResVersionNotify.ProtoReflect.Descriptor instead.
func (*DataResVersionNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{49}
}

func (x *DataResVersionNotify) GetClientSilenceMd5() string {
	if x != nil {
		return x.ClientSilenceMd5
	}
	return ""
}

func (x *DataResVersionNotify) GetClientSilenceVersionSuffix() string {
	if x != nil {
		return x.ClientSilenceVersionSuffix
	}
	return ""
}

func (x *DataResVersionNotify) GetResVersionConfig() *ResVersionConfig {
	if x != nil {
		return x.ResVersionConfig
	}
	return nil
}

func (x *DataResVersionNotify) GetIsDataNeedRelogin() bool {
	if x != nil {
		return x.IsDataNeedRelogin
	}
	return false
}

func (x *DataResVersionNotify) GetOpType() DataResVersionNotify_DataResVersionOpType {
	if x != nil {
		return x.OpType
	}
	return DataResVersionNotify_OP_TYPE_NONE
}

func (x *DataResVersionNotify) GetClientDataVersion() uint32 {
	if x != nil {
		return x.ClientDataVersion
	}
	return 0
}

func (x *DataResVersionNotify) GetClientVersionSuffix() string {
	if x != nil {
		return x.ClientVersionSuffix
	}
	return ""
}

func (x *DataResVersionNotify) GetClientSilenceDataVersion() uint32 {
	if x != nil {
		return x.ClientSilenceDataVersion
	}
	return 0
}

func (x *DataResVersionNotify) GetClientMd5() string {
	if x != nil {
		return x.ClientMd5
	}
	return ""
}

type DailyTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId       uint32 `protobuf:"varint,3,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Progress       uint32 `protobuf:"varint,13,opt,name=progress,proto3" json:"progress,omitempty"`
	FinishProgress uint32 `protobuf:"varint,10,opt,name=finish_progress,json=finishProgress,proto3" json:"finish_progress,omitempty"`
	DailyTaskId    uint32 `protobuf:"varint,4,opt,name=daily_task_id,json=dailyTaskId,proto3" json:"daily_task_id,omitempty"`
	IsFinished     bool   `protobuf:"varint,14,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
}

func (x *DailyTaskInfo) Reset() {
	*x = DailyTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskInfo) ProtoMessage() {}

func (x *DailyTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskInfo.ProtoReflect.Descriptor instead.
func (*DailyTaskInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{50}
}

func (x *DailyTaskInfo) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *DailyTaskInfo) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *DailyTaskInfo) GetFinishProgress() uint32 {
	if x != nil {
		return x.FinishProgress
	}
	return 0
}

func (x *DailyTaskInfo) GetDailyTaskId() uint32 {
	if x != nil {
		return x.DailyTaskId
	}
	return 0
}

func (x *DailyTaskInfo) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type DailyTaskDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreRewardId      uint32 `protobuf:"varint,11,opt,name=score_reward_id,json=scoreRewardId,proto3" json:"score_reward_id,omitempty"`
	FinishedNum        uint32 `protobuf:"varint,4,opt,name=finished_num,json=finishedNum,proto3" json:"finished_num,omitempty"`
	IsTakenScoreReward bool   `protobuf:"varint,9,opt,name=is_taken_score_reward,json=isTakenScoreReward,proto3" json:"is_taken_score_reward,omitempty"`
}

func (x *DailyTaskDataNotify) Reset() {
	*x = DailyTaskDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskDataNotify) ProtoMessage() {}

func (x *DailyTaskDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskDataNotify.ProtoReflect.Descriptor instead.
func (*DailyTaskDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{51}
}

func (x *DailyTaskDataNotify) GetScoreRewardId() uint32 {
	if x != nil {
		return x.ScoreRewardId
	}
	return 0
}

func (x *DailyTaskDataNotify) GetFinishedNum() uint32 {
	if x != nil {
		return x.FinishedNum
	}
	return 0
}

func (x *DailyTaskDataNotify) GetIsTakenScoreReward() bool {
	if x != nil {
		return x.IsTakenScoreReward
	}
	return false
}

type DailyTaskProgressNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DailyTaskInfo `protobuf:"bytes,12,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DailyTaskProgressNotify) Reset() {
	*x = DailyTaskProgressNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskProgressNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskProgressNotify) ProtoMessage() {}

func (x *DailyTaskProgressNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskProgressNotify.ProtoReflect.Descriptor instead.
func (*DailyTaskProgressNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{52}
}

func (x *DailyTaskProgressNotify) GetInfo() *DailyTaskInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DailyTaskScoreRewardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId uint32 `protobuf:"varint,14,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
}

func (x *DailyTaskScoreRewardNotify) Reset() {
	*x = DailyTaskScoreRewardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskScoreRewardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskScoreRewardNotify) ProtoMessage() {}

func (x *DailyTaskScoreRewardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskScoreRewardNotify.ProtoReflect.Descriptor instead.
func (*DailyTaskScoreRewardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{53}
}

func (x *DailyTaskScoreRewardNotify) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

type WorldOwnerDailyTaskNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList             []*DailyTaskInfo `protobuf:"bytes,1,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
	FinishedDailyTaskNum uint32           `protobuf:"varint,5,opt,name=finished_daily_task_num,json=finishedDailyTaskNum,proto3" json:"finished_daily_task_num,omitempty"`
	FilterCityId         uint32           `protobuf:"varint,2,opt,name=filter_city_id,json=filterCityId,proto3" json:"filter_city_id,omitempty"`
}

func (x *WorldOwnerDailyTaskNotify) Reset() {
	*x = WorldOwnerDailyTaskNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOwnerDailyTaskNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOwnerDailyTaskNotify) ProtoMessage() {}

func (x *WorldOwnerDailyTaskNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOwnerDailyTaskNotify.ProtoReflect.Descriptor instead.
func (*WorldOwnerDailyTaskNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{54}
}

func (x *WorldOwnerDailyTaskNotify) GetTaskList() []*DailyTaskInfo {
	if x != nil {
		return x.TaskList
	}
	return nil
}

func (x *WorldOwnerDailyTaskNotify) GetFinishedDailyTaskNum() uint32 {
	if x != nil {
		return x.FinishedDailyTaskNum
	}
	return 0
}

func (x *WorldOwnerDailyTaskNotify) GetFilterCityId() uint32 {
	if x != nil {
		return x.FilterCityId
	}
	return 0
}

type AddRandTaskInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandTaskId uint32  `protobuf:"varint,5,opt,name=rand_task_id,json=randTaskId,proto3" json:"rand_task_id,omitempty"`
	Pos        *Vector `protobuf:"bytes,13,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *AddRandTaskInfoNotify) Reset() {
	*x = AddRandTaskInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRandTaskInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRandTaskInfoNotify) ProtoMessage() {}

func (x *AddRandTaskInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRandTaskInfoNotify.ProtoReflect.Descriptor instead.
func (*AddRandTaskInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{55}
}

func (x *AddRandTaskInfoNotify) GetRandTaskId() uint32 {
	if x != nil {
		return x.RandTaskId
	}
	return 0
}

func (x *AddRandTaskInfoNotify) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type RemoveRandTaskInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSucc     bool                                  `protobuf:"varint,9,opt,name=is_succ,json=isSucc,proto3" json:"is_succ,omitempty"`
	Reason     RemoveRandTaskInfoNotify_FinishReason `protobuf:"varint,10,opt,name=reason,proto3,enum=proto.RemoveRandTaskInfoNotify_FinishReason" json:"reason,omitempty"`
	RandTaskId uint32                                `protobuf:"varint,13,opt,name=rand_task_id,json=randTaskId,proto3" json:"rand_task_id,omitempty"`
}

func (x *RemoveRandTaskInfoNotify) Reset() {
	*x = RemoveRandTaskInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRandTaskInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRandTaskInfoNotify) ProtoMessage() {}

func (x *RemoveRandTaskInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRandTaskInfoNotify.ProtoReflect.Descriptor instead.
func (*RemoveRandTaskInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{56}
}

func (x *RemoveRandTaskInfoNotify) GetIsSucc() bool {
	if x != nil {
		return x.IsSucc
	}
	return false
}

func (x *RemoveRandTaskInfoNotify) GetReason() RemoveRandTaskInfoNotify_FinishReason {
	if x != nil {
		return x.Reason
	}
	return RemoveRandTaskInfoNotify_DEFAULT
}

func (x *RemoveRandTaskInfoNotify) GetRandTaskId() uint32 {
	if x != nil {
		return x.RandTaskId
	}
	return 0
}

type TakePlayerLevelRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *TakePlayerLevelRewardReq) Reset() {
	*x = TakePlayerLevelRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakePlayerLevelRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakePlayerLevelRewardReq) ProtoMessage() {}

func (x *TakePlayerLevelRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakePlayerLevelRewardReq.ProtoReflect.Descriptor instead.
func (*TakePlayerLevelRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{57}
}

func (x *TakePlayerLevelRewardReq) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type TakePlayerLevelRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId uint32 `protobuf:"varint,9,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Retcode  int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Level    uint32 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *TakePlayerLevelRewardRsp) Reset() {
	*x = TakePlayerLevelRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakePlayerLevelRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakePlayerLevelRewardRsp) ProtoMessage() {}

func (x *TakePlayerLevelRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakePlayerLevelRewardRsp.ProtoReflect.Descriptor instead.
func (*TakePlayerLevelRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{58}
}

func (x *TakePlayerLevelRewardRsp) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *TakePlayerLevelRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *TakePlayerLevelRewardRsp) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type PlayerLevelRewardUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelList []uint32 `protobuf:"varint,9,rep,packed,name=level_list,json=levelList,proto3" json:"level_list,omitempty"`
}

func (x *PlayerLevelRewardUpdateNotify) Reset() {
	*x = PlayerLevelRewardUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLevelRewardUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLevelRewardUpdateNotify) ProtoMessage() {}

func (x *PlayerLevelRewardUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLevelRewardUpdateNotify.ProtoReflect.Descriptor instead.
func (*PlayerLevelRewardUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{59}
}

func (x *PlayerLevelRewardUpdateNotify) GetLevelList() []uint32 {
	if x != nil {
		return x.LevelList
	}
	return nil
}

type GivingRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFinished     bool              `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	GroupId        uint32            `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsGadgetGiving bool              `protobuf:"varint,8,opt,name=is_gadget_giving,json=isGadgetGiving,proto3" json:"is_gadget_giving,omitempty"`
	GivingId       uint32            `protobuf:"varint,3,opt,name=giving_id,json=givingId,proto3" json:"giving_id,omitempty"`
	LastGroupId    uint32            `protobuf:"varint,6,opt,name=last_group_id,json=lastGroupId,proto3" json:"last_group_id,omitempty"`
	ConfigId       uint32            `protobuf:"varint,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	MaterialCntMap map[uint32]uint32 `protobuf:"bytes,15,rep,name=material_cnt_map,json=materialCntMap,proto3" json:"material_cnt_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GivingRecord) Reset() {
	*x = GivingRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GivingRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GivingRecord) ProtoMessage() {}

func (x *GivingRecord) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GivingRecord.ProtoReflect.Descriptor instead.
func (*GivingRecord) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{60}
}

func (x *GivingRecord) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *GivingRecord) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GivingRecord) GetIsGadgetGiving() bool {
	if x != nil {
		return x.IsGadgetGiving
	}
	return false
}

func (x *GivingRecord) GetGivingId() uint32 {
	if x != nil {
		return x.GivingId
	}
	return 0
}

func (x *GivingRecord) GetLastGroupId() uint32 {
	if x != nil {
		return x.LastGroupId
	}
	return 0
}

func (x *GivingRecord) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *GivingRecord) GetMaterialCntMap() map[uint32]uint32 {
	if x != nil {
		return x.MaterialCntMap
	}
	return nil
}

type GivingRecordNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivingRecordList []*GivingRecord `protobuf:"bytes,14,rep,name=giving_record_list,json=givingRecordList,proto3" json:"giving_record_list,omitempty"`
}

func (x *GivingRecordNotify) Reset() {
	*x = GivingRecordNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GivingRecordNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GivingRecordNotify) ProtoMessage() {}

func (x *GivingRecordNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GivingRecordNotify.ProtoReflect.Descriptor instead.
func (*GivingRecordNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{61}
}

func (x *GivingRecordNotify) GetGivingRecordList() []*GivingRecord {
	if x != nil {
		return x.GivingRecordList
	}
	return nil
}

type GivingRecordChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeactive   bool          `protobuf:"varint,11,opt,name=is_deactive,json=isDeactive,proto3" json:"is_deactive,omitempty"`
	GivingRecord *GivingRecord `protobuf:"bytes,15,opt,name=giving_record,json=givingRecord,proto3" json:"giving_record,omitempty"`
}

func (x *GivingRecordChangeNotify) Reset() {
	*x = GivingRecordChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GivingRecordChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GivingRecordChangeNotify) ProtoMessage() {}

func (x *GivingRecordChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GivingRecordChangeNotify.ProtoReflect.Descriptor instead.
func (*GivingRecordChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{62}
}

func (x *GivingRecordChangeNotify) GetIsDeactive() bool {
	if x != nil {
		return x.IsDeactive
	}
	return false
}

func (x *GivingRecordChangeNotify) GetGivingRecord() *GivingRecord {
	if x != nil {
		return x.GivingRecord
	}
	return nil
}

type ItemGivingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemGuidCountMap map[uint64]uint32            `protobuf:"bytes,15,rep,name=item_guid_count_map,json=itemGuidCountMap,proto3" json:"item_guid_count_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	GivingId         uint32                       `protobuf:"varint,13,opt,name=giving_id,json=givingId,proto3" json:"giving_id,omitempty"`
	ItemParamList    []*ItemParam                 `protobuf:"bytes,4,rep,name=item_param_list,json=itemParamList,proto3" json:"item_param_list,omitempty"`
	ItemGivingType   ItemGivingReq_ItemGivingType `protobuf:"varint,2,opt,name=item_giving_type,json=itemGivingType,proto3,enum=proto.ItemGivingReq_ItemGivingType" json:"item_giving_type,omitempty"`
}

func (x *ItemGivingReq) Reset() {
	*x = ItemGivingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGivingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGivingReq) ProtoMessage() {}

func (x *ItemGivingReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGivingReq.ProtoReflect.Descriptor instead.
func (*ItemGivingReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{63}
}

func (x *ItemGivingReq) GetItemGuidCountMap() map[uint64]uint32 {
	if x != nil {
		return x.ItemGuidCountMap
	}
	return nil
}

func (x *ItemGivingReq) GetGivingId() uint32 {
	if x != nil {
		return x.GivingId
	}
	return 0
}

func (x *ItemGivingReq) GetItemParamList() []*ItemParam {
	if x != nil {
		return x.ItemParamList
	}
	return nil
}

func (x *ItemGivingReq) GetItemGivingType() ItemGivingReq_ItemGivingType {
	if x != nil {
		return x.ItemGivingType
	}
	return ItemGivingReq_QUEST
}

type ItemGivingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivingGroupId uint32 `protobuf:"varint,1,opt,name=giving_group_id,json=givingGroupId,proto3" json:"giving_group_id,omitempty"`
	GivingId      uint32 `protobuf:"varint,13,opt,name=giving_id,json=givingId,proto3" json:"giving_id,omitempty"`
	Retcode       int32  `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ItemGivingRsp) Reset() {
	*x = ItemGivingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGivingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGivingRsp) ProtoMessage() {}

func (x *ItemGivingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGivingRsp.ProtoReflect.Descriptor instead.
func (*ItemGivingRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{64}
}

func (x *ItemGivingRsp) GetGivingGroupId() uint32 {
	if x != nil {
		return x.GivingGroupId
	}
	return 0
}

func (x *ItemGivingRsp) GetGivingId() uint32 {
	if x != nil {
		return x.GivingId
	}
	return 0
}

func (x *ItemGivingRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerCookArgsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistAvatar uint32 `protobuf:"varint,10,opt,name=assist_avatar,json=assistAvatar,proto3" json:"assist_avatar,omitempty"`
	RecipeId     uint32 `protobuf:"varint,11,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
}

func (x *PlayerCookArgsReq) Reset() {
	*x = PlayerCookArgsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCookArgsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCookArgsReq) ProtoMessage() {}

func (x *PlayerCookArgsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCookArgsReq.ProtoReflect.Descriptor instead.
func (*PlayerCookArgsReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{65}
}

func (x *PlayerCookArgsReq) GetAssistAvatar() uint32 {
	if x != nil {
		return x.AssistAvatar
	}
	return 0
}

func (x *PlayerCookArgsReq) GetRecipeId() uint32 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

type PlayerCookArgsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode       int32   `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	QteRangeRatio float32 `protobuf:"fixed32,12,opt,name=qte_range_ratio,json=qteRangeRatio,proto3" json:"qte_range_ratio,omitempty"`
}

func (x *PlayerCookArgsRsp) Reset() {
	*x = PlayerCookArgsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCookArgsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCookArgsRsp) ProtoMessage() {}

func (x *PlayerCookArgsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCookArgsRsp.ProtoReflect.Descriptor instead.
func (*PlayerCookArgsRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{66}
}

func (x *PlayerCookArgsRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerCookArgsRsp) GetQteRangeRatio() float32 {
	if x != nil {
		return x.QteRangeRatio
	}
	return 0
}

type PlayerLuaShellNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShellType LuaShellType `protobuf:"varint,7,opt,name=shell_type,json=shellType,proto3,enum=proto.LuaShellType" json:"shell_type,omitempty"`
	Id        uint32       `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	LuaShell  []byte       `protobuf:"bytes,12,opt,name=lua_shell,json=luaShell,proto3" json:"lua_shell,omitempty"`
	UseType   uint32       `protobuf:"varint,10,opt,name=use_type,json=useType,proto3" json:"use_type,omitempty"`
}

func (x *PlayerLuaShellNotify) Reset() {
	*x = PlayerLuaShellNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLuaShellNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLuaShellNotify) ProtoMessage() {}

func (x *PlayerLuaShellNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLuaShellNotify.ProtoReflect.Descriptor instead.
func (*PlayerLuaShellNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{67}
}

func (x *PlayerLuaShellNotify) GetShellType() LuaShellType {
	if x != nil {
		return x.ShellType
	}
	return LuaShellType_LUASHELL_NONE
}

func (x *PlayerLuaShellNotify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerLuaShellNotify) GetLuaShell() []byte {
	if x != nil {
		return x.LuaShell
	}
	return nil
}

func (x *PlayerLuaShellNotify) GetUseType() uint32 {
	if x != nil {
		return x.UseType
	}
	return 0
}

type ServerDisconnectClientNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data uint32 `protobuf:"varint,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ServerDisconnectClientNotify) Reset() {
	*x = ServerDisconnectClientNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDisconnectClientNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDisconnectClientNotify) ProtoMessage() {}

func (x *ServerDisconnectClientNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDisconnectClientNotify.ProtoReflect.Descriptor instead.
func (*ServerDisconnectClientNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{68}
}

func (x *ServerDisconnectClientNotify) GetData() uint32 {
	if x != nil {
		return x.Data
	}
	return 0
}

type AntiAddictNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType int32  `protobuf:"varint,6,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Level   string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *AntiAddictNotify) Reset() {
	*x = AntiAddictNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntiAddictNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiAddictNotify) ProtoMessage() {}

func (x *AntiAddictNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiAddictNotify.ProtoReflect.Descriptor instead.
func (*AntiAddictNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{69}
}

func (x *AntiAddictNotify) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *AntiAddictNotify) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AntiAddictNotify) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type PlayerForceExitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerForceExitReq) Reset() {
	*x = PlayerForceExitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerForceExitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerForceExitReq) ProtoMessage() {}

func (x *PlayerForceExitReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerForceExitReq.ProtoReflect.Descriptor instead.
func (*PlayerForceExitReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{70}
}

type PlayerForceExitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *PlayerForceExitRsp) Reset() {
	*x = PlayerForceExitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerForceExitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerForceExitRsp) ProtoMessage() {}

func (x *PlayerForceExitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerForceExitRsp.ProtoReflect.Descriptor instead.
func (*PlayerForceExitRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{71}
}

func (x *PlayerForceExitRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerInjectFixNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,13,opt,name=id,proto3" json:"id,omitempty"`
	InjectFix []byte `protobuf:"bytes,10,opt,name=inject_fix,json=injectFix,proto3" json:"inject_fix,omitempty"`
}

func (x *PlayerInjectFixNotify) Reset() {
	*x = PlayerInjectFixNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInjectFixNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInjectFixNotify) ProtoMessage() {}

func (x *PlayerInjectFixNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInjectFixNotify.ProtoReflect.Descriptor instead.
func (*PlayerInjectFixNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{72}
}

func (x *PlayerInjectFixNotify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerInjectFixNotify) GetInjectFix() []byte {
	if x != nil {
		return x.InjectFix
	}
	return nil
}

type TaskVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       uint32  `protobuf:"varint,8,opt,name=key,proto3" json:"key,omitempty"`
	ValueList []int32 `protobuf:"varint,6,rep,packed,name=value_list,json=valueList,proto3" json:"value_list,omitempty"`
}

func (x *TaskVar) Reset() {
	*x = TaskVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskVar) ProtoMessage() {}

func (x *TaskVar) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskVar.ProtoReflect.Descriptor instead.
func (*TaskVar) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{73}
}

func (x *TaskVar) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *TaskVar) GetValueList() []int32 {
	if x != nil {
		return x.ValueList
	}
	return nil
}

type TaskVarNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskVarList []*TaskVar `protobuf:"bytes,7,rep,name=task_var_list,json=taskVarList,proto3" json:"task_var_list,omitempty"`
}

func (x *TaskVarNotify) Reset() {
	*x = TaskVarNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskVarNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskVarNotify) ProtoMessage() {}

func (x *TaskVarNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskVarNotify.ProtoReflect.Descriptor instead.
func (*TaskVarNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{74}
}

func (x *TaskVarNotify) GetTaskVarList() []*TaskVar {
	if x != nil {
		return x.TaskVarList
	}
	return nil
}

type ClientLockGameTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLock bool `protobuf:"varint,5,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`
}

func (x *ClientLockGameTimeNotify) Reset() {
	*x = ClientLockGameTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientLockGameTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLockGameTimeNotify) ProtoMessage() {}

func (x *ClientLockGameTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLockGameTimeNotify.ProtoReflect.Descriptor instead.
func (*ClientLockGameTimeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{75}
}

func (x *ClientLockGameTimeNotify) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

type GetNextResourceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNextResourceInfoReq) Reset() {
	*x = GetNextResourceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextResourceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextResourceInfoReq) ProtoMessage() {}

func (x *GetNextResourceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextResourceInfoReq.ProtoReflect.Descriptor instead.
func (*GetNextResourceInfoReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{76}
}

type GetNextResourceInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextResourceUrl      string            `protobuf:"bytes,14,opt,name=next_resource_url,json=nextResourceUrl,proto3" json:"next_resource_url,omitempty"`
	NextResVersionConfig *ResVersionConfig `protobuf:"bytes,2,opt,name=next_res_version_config,json=nextResVersionConfig,proto3" json:"next_res_version_config,omitempty"`
	Retcode              int32             `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *GetNextResourceInfoRsp) Reset() {
	*x = GetNextResourceInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextResourceInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextResourceInfoRsp) ProtoMessage() {}

func (x *GetNextResourceInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextResourceInfoRsp.ProtoReflect.Descriptor instead.
func (*GetNextResourceInfoRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{77}
}

func (x *GetNextResourceInfoRsp) GetNextResourceUrl() string {
	if x != nil {
		return x.NextResourceUrl
	}
	return ""
}

func (x *GetNextResourceInfoRsp) GetNextResVersionConfig() *ResVersionConfig {
	if x != nil {
		return x.NextResVersionConfig
	}
	return nil
}

func (x *GetNextResourceInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AdjustWorldLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpectWorldLevel uint32 `protobuf:"varint,8,opt,name=expect_world_level,json=expectWorldLevel,proto3" json:"expect_world_level,omitempty"`
	CurWorldLevel    uint32 `protobuf:"varint,9,opt,name=cur_world_level,json=curWorldLevel,proto3" json:"cur_world_level,omitempty"`
}

func (x *AdjustWorldLevelReq) Reset() {
	*x = AdjustWorldLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustWorldLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustWorldLevelReq) ProtoMessage() {}

func (x *AdjustWorldLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustWorldLevelReq.ProtoReflect.Descriptor instead.
func (*AdjustWorldLevelReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{78}
}

func (x *AdjustWorldLevelReq) GetExpectWorldLevel() uint32 {
	if x != nil {
		return x.ExpectWorldLevel
	}
	return 0
}

func (x *AdjustWorldLevelReq) GetCurWorldLevel() uint32 {
	if x != nil {
		return x.CurWorldLevel
	}
	return 0
}

type AdjustWorldLevelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CdOverTime      uint32 `protobuf:"varint,15,opt,name=cd_over_time,json=cdOverTime,proto3" json:"cd_over_time,omitempty"`
	AfterWorldLevel uint32 `protobuf:"varint,14,opt,name=after_world_level,json=afterWorldLevel,proto3" json:"after_world_level,omitempty"`
}

func (x *AdjustWorldLevelRsp) Reset() {
	*x = AdjustWorldLevelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustWorldLevelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustWorldLevelRsp) ProtoMessage() {}

func (x *AdjustWorldLevelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustWorldLevelRsp.ProtoReflect.Descriptor instead.
func (*AdjustWorldLevelRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{79}
}

func (x *AdjustWorldLevelRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AdjustWorldLevelRsp) GetCdOverTime() uint32 {
	if x != nil {
		return x.CdOverTime
	}
	return 0
}

func (x *AdjustWorldLevelRsp) GetAfterWorldLevel() uint32 {
	if x != nil {
		return x.AfterWorldLevel
	}
	return 0
}

type DailyTaskFilterCityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId uint32 `protobuf:"varint,8,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *DailyTaskFilterCityReq) Reset() {
	*x = DailyTaskFilterCityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskFilterCityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskFilterCityReq) ProtoMessage() {}

func (x *DailyTaskFilterCityReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskFilterCityReq.ProtoReflect.Descriptor instead.
func (*DailyTaskFilterCityReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{80}
}

func (x *DailyTaskFilterCityReq) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type DailyTaskFilterCityRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CityId  uint32 `protobuf:"varint,9,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *DailyTaskFilterCityRsp) Reset() {
	*x = DailyTaskFilterCityRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskFilterCityRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskFilterCityRsp) ProtoMessage() {}

func (x *DailyTaskFilterCityRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskFilterCityRsp.ProtoReflect.Descriptor instead.
func (*DailyTaskFilterCityRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{81}
}

func (x *DailyTaskFilterCityRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *DailyTaskFilterCityRsp) GetCityId() uint32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type DailyTaskUnlockedCitiesNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockedCityList []uint32 `protobuf:"varint,12,rep,packed,name=unlocked_city_list,json=unlockedCityList,proto3" json:"unlocked_city_list,omitempty"`
}

func (x *DailyTaskUnlockedCitiesNotify) Reset() {
	*x = DailyTaskUnlockedCitiesNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskUnlockedCitiesNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskUnlockedCitiesNotify) ProtoMessage() {}

func (x *DailyTaskUnlockedCitiesNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskUnlockedCitiesNotify.ProtoReflect.Descriptor instead.
func (*DailyTaskUnlockedCitiesNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{82}
}

func (x *DailyTaskUnlockedCitiesNotify) GetUnlockedCityList() []uint32 {
	if x != nil {
		return x.UnlockedCityList
	}
	return nil
}

type ExclusiveRuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdList []uint32 `protobuf:"varint,1,rep,packed,name=object_id_list,json=objectIdList,proto3" json:"object_id_list,omitempty"`
	RuleType     uint32   `protobuf:"varint,10,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
}

func (x *ExclusiveRuleInfo) Reset() {
	*x = ExclusiveRuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExclusiveRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExclusiveRuleInfo) ProtoMessage() {}

func (x *ExclusiveRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExclusiveRuleInfo.ProtoReflect.Descriptor instead.
func (*ExclusiveRuleInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{83}
}

func (x *ExclusiveRuleInfo) GetObjectIdList() []uint32 {
	if x != nil {
		return x.ObjectIdList
	}
	return nil
}

func (x *ExclusiveRuleInfo) GetRuleType() uint32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type ExclusiveRuleNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleInfoList []*ExclusiveRuleInfo `protobuf:"bytes,5,rep,name=rule_info_list,json=ruleInfoList,proto3" json:"rule_info_list,omitempty"`
}

func (x *ExclusiveRuleNotify) Reset() {
	*x = ExclusiveRuleNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExclusiveRuleNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExclusiveRuleNotify) ProtoMessage() {}

func (x *ExclusiveRuleNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExclusiveRuleNotify.ProtoReflect.Descriptor instead.
func (*ExclusiveRuleNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{84}
}

func (x *ExclusiveRuleNotify) GetRuleInfoList() []*ExclusiveRuleInfo {
	if x != nil {
		return x.RuleInfoList
	}
	return nil
}

type CompoundUnlockNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompoundId uint32 `protobuf:"varint,3,opt,name=compound_id,json=compoundId,proto3" json:"compound_id,omitempty"`
}

func (x *CompoundUnlockNotify) Reset() {
	*x = CompoundUnlockNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompoundUnlockNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundUnlockNotify) ProtoMessage() {}

func (x *CompoundUnlockNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundUnlockNotify.ProtoReflect.Descriptor instead.
func (*CompoundUnlockNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{85}
}

func (x *CompoundUnlockNotify) GetCompoundId() uint32 {
	if x != nil {
		return x.CompoundId
	}
	return 0
}

type GameplayRecommendationSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillDepotId uint32 `protobuf:"varint,1,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
}

func (x *GameplayRecommendationSkillRequest) Reset() {
	*x = GameplayRecommendationSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationSkillRequest) ProtoMessage() {}

func (x *GameplayRecommendationSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationSkillRequest.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationSkillRequest) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{86}
}

func (x *GameplayRecommendationSkillRequest) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

type GameplayRecommendationReliquaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipType uint32 `protobuf:"varint,6,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
}

func (x *GameplayRecommendationReliquaryRequest) Reset() {
	*x = GameplayRecommendationReliquaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryRequest) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryRequest.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryRequest) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{87}
}

func (x *GameplayRecommendationReliquaryRequest) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

type GameplayRecommendationElementReliquaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipType   uint32 `protobuf:"varint,9,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
	ElementType uint32 `protobuf:"varint,12,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
}

func (x *GameplayRecommendationElementReliquaryRequest) Reset() {
	*x = GameplayRecommendationElementReliquaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationElementReliquaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationElementReliquaryRequest) ProtoMessage() {}

func (x *GameplayRecommendationElementReliquaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationElementReliquaryRequest.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationElementReliquaryRequest) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{88}
}

func (x *GameplayRecommendationElementReliquaryRequest) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

func (x *GameplayRecommendationElementReliquaryRequest) GetElementType() uint32 {
	if x != nil {
		return x.ElementType
	}
	return 0
}

type GetGameplayRecommendationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId uint32 `protobuf:"varint,9,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*GetGameplayRecommendationReq_SkillRequest
	//	*GetGameplayRecommendationReq_ReliquaryRequest
	//	*GetGameplayRecommendationReq_ElementReliquaryRequest
	Detail isGetGameplayRecommendationReq_Detail `protobuf_oneof:"detail"`
}

func (x *GetGameplayRecommendationReq) Reset() {
	*x = GetGameplayRecommendationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameplayRecommendationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameplayRecommendationReq) ProtoMessage() {}

func (x *GetGameplayRecommendationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameplayRecommendationReq.ProtoReflect.Descriptor instead.
func (*GetGameplayRecommendationReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{89}
}

func (x *GetGameplayRecommendationReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (m *GetGameplayRecommendationReq) GetDetail() isGetGameplayRecommendationReq_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *GetGameplayRecommendationReq) GetSkillRequest() *GameplayRecommendationSkillRequest {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationReq_SkillRequest); ok {
		return x.SkillRequest
	}
	return nil
}

func (x *GetGameplayRecommendationReq) GetReliquaryRequest() *GameplayRecommendationReliquaryRequest {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationReq_ReliquaryRequest); ok {
		return x.ReliquaryRequest
	}
	return nil
}

func (x *GetGameplayRecommendationReq) GetElementReliquaryRequest() *GameplayRecommendationElementReliquaryRequest {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationReq_ElementReliquaryRequest); ok {
		return x.ElementReliquaryRequest
	}
	return nil
}

type isGetGameplayRecommendationReq_Detail interface {
	isGetGameplayRecommendationReq_Detail()
}

type GetGameplayRecommendationReq_SkillRequest struct {
	SkillRequest *GameplayRecommendationSkillRequest `protobuf:"bytes,553,opt,name=skill_request,json=skillRequest,proto3,oneof"`
}

type GetGameplayRecommendationReq_ReliquaryRequest struct {
	ReliquaryRequest *GameplayRecommendationReliquaryRequest `protobuf:"bytes,1993,opt,name=reliquary_request,json=reliquaryRequest,proto3,oneof"`
}

type GetGameplayRecommendationReq_ElementReliquaryRequest struct {
	ElementReliquaryRequest *GameplayRecommendationElementReliquaryRequest `protobuf:"bytes,1489,opt,name=element_reliquary_request,json=elementReliquaryRequest,proto3,oneof"`
}

func (*GetGameplayRecommendationReq_SkillRequest) isGetGameplayRecommendationReq_Detail() {}

func (*GetGameplayRecommendationReq_ReliquaryRequest) isGetGameplayRecommendationReq_Detail() {}

func (*GetGameplayRecommendationReq_ElementReliquaryRequest) isGetGameplayRecommendationReq_Detail() {
}

type GameplayRecommendationSkillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillDepotId uint32   `protobuf:"varint,13,opt,name=skill_depot_id,json=skillDepotId,proto3" json:"skill_depot_id,omitempty"`
	SkillIdList  []uint32 `protobuf:"varint,9,rep,packed,name=skill_id_list,json=skillIdList,proto3" json:"skill_id_list,omitempty"`
}

func (x *GameplayRecommendationSkillResponse) Reset() {
	*x = GameplayRecommendationSkillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationSkillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationSkillResponse) ProtoMessage() {}

func (x *GameplayRecommendationSkillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationSkillResponse.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationSkillResponse) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{90}
}

func (x *GameplayRecommendationSkillResponse) GetSkillDepotId() uint32 {
	if x != nil {
		return x.SkillDepotId
	}
	return 0
}

func (x *GameplayRecommendationSkillResponse) GetSkillIdList() []uint32 {
	if x != nil {
		return x.SkillIdList
	}
	return nil
}

type GameplayRecommendationReliquaryMainPropData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permillage uint32 `protobuf:"varint,1,opt,name=permillage,proto3" json:"permillage,omitempty"`
	MainPropId uint32 `protobuf:"varint,12,opt,name=main_prop_id,json=mainPropId,proto3" json:"main_prop_id,omitempty"`
}

func (x *GameplayRecommendationReliquaryMainPropData) Reset() {
	*x = GameplayRecommendationReliquaryMainPropData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryMainPropData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryMainPropData) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryMainPropData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryMainPropData.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryMainPropData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{91}
}

func (x *GameplayRecommendationReliquaryMainPropData) GetPermillage() uint32 {
	if x != nil {
		return x.Permillage
	}
	return 0
}

func (x *GameplayRecommendationReliquaryMainPropData) GetMainPropId() uint32 {
	if x != nil {
		return x.MainPropId
	}
	return 0
}

type GameplayRecommendationReliquaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainPropDataList []*GameplayRecommendationReliquaryMainPropData `protobuf:"bytes,8,rep,name=main_prop_data_list,json=mainPropDataList,proto3" json:"main_prop_data_list,omitempty"`
	EquipType        uint32                                         `protobuf:"varint,3,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
}

func (x *GameplayRecommendationReliquaryResponse) Reset() {
	*x = GameplayRecommendationReliquaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationReliquaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationReliquaryResponse) ProtoMessage() {}

func (x *GameplayRecommendationReliquaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationReliquaryResponse.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationReliquaryResponse) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{92}
}

func (x *GameplayRecommendationReliquaryResponse) GetMainPropDataList() []*GameplayRecommendationReliquaryMainPropData {
	if x != nil {
		return x.MainPropDataList
	}
	return nil
}

func (x *GameplayRecommendationReliquaryResponse) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

type GameplayRecommendationElementReliquaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElementType      uint32                                         `protobuf:"varint,11,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
	MainPropDataList []*GameplayRecommendationReliquaryMainPropData `protobuf:"bytes,5,rep,name=main_prop_data_list,json=mainPropDataList,proto3" json:"main_prop_data_list,omitempty"`
	EquipType        uint32                                         `protobuf:"varint,15,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
}

func (x *GameplayRecommendationElementReliquaryResponse) Reset() {
	*x = GameplayRecommendationElementReliquaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameplayRecommendationElementReliquaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameplayRecommendationElementReliquaryResponse) ProtoMessage() {}

func (x *GameplayRecommendationElementReliquaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameplayRecommendationElementReliquaryResponse.ProtoReflect.Descriptor instead.
func (*GameplayRecommendationElementReliquaryResponse) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{93}
}

func (x *GameplayRecommendationElementReliquaryResponse) GetElementType() uint32 {
	if x != nil {
		return x.ElementType
	}
	return 0
}

func (x *GameplayRecommendationElementReliquaryResponse) GetMainPropDataList() []*GameplayRecommendationReliquaryMainPropData {
	if x != nil {
		return x.MainPropDataList
	}
	return nil
}

func (x *GameplayRecommendationElementReliquaryResponse) GetEquipType() uint32 {
	if x != nil {
		return x.EquipType
	}
	return 0
}

type GetGameplayRecommendationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarId uint32 `protobuf:"varint,15,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*GetGameplayRecommendationRsp_SkillResponse
	//	*GetGameplayRecommendationRsp_ReliquaryResponse
	//	*GetGameplayRecommendationRsp_ElementReliquaryResponse
	Detail isGetGameplayRecommendationRsp_Detail `protobuf_oneof:"detail"`
}

func (x *GetGameplayRecommendationRsp) Reset() {
	*x = GetGameplayRecommendationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameplayRecommendationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameplayRecommendationRsp) ProtoMessage() {}

func (x *GetGameplayRecommendationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameplayRecommendationRsp.ProtoReflect.Descriptor instead.
func (*GetGameplayRecommendationRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{94}
}

func (x *GetGameplayRecommendationRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetGameplayRecommendationRsp) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (m *GetGameplayRecommendationRsp) GetDetail() isGetGameplayRecommendationRsp_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *GetGameplayRecommendationRsp) GetSkillResponse() *GameplayRecommendationSkillResponse {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationRsp_SkillResponse); ok {
		return x.SkillResponse
	}
	return nil
}

func (x *GetGameplayRecommendationRsp) GetReliquaryResponse() *GameplayRecommendationReliquaryResponse {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationRsp_ReliquaryResponse); ok {
		return x.ReliquaryResponse
	}
	return nil
}

func (x *GetGameplayRecommendationRsp) GetElementReliquaryResponse() *GameplayRecommendationElementReliquaryResponse {
	if x, ok := x.GetDetail().(*GetGameplayRecommendationRsp_ElementReliquaryResponse); ok {
		return x.ElementReliquaryResponse
	}
	return nil
}

type isGetGameplayRecommendationRsp_Detail interface {
	isGetGameplayRecommendationRsp_Detail()
}

type GetGameplayRecommendationRsp_SkillResponse struct {
	SkillResponse *GameplayRecommendationSkillResponse `protobuf:"bytes,1022,opt,name=skill_response,json=skillResponse,proto3,oneof"`
}

type GetGameplayRecommendationRsp_ReliquaryResponse struct {
	ReliquaryResponse *GameplayRecommendationReliquaryResponse `protobuf:"bytes,196,opt,name=reliquary_response,json=reliquaryResponse,proto3,oneof"`
}

type GetGameplayRecommendationRsp_ElementReliquaryResponse struct {
	ElementReliquaryResponse *GameplayRecommendationElementReliquaryResponse `protobuf:"bytes,167,opt,name=element_reliquary_response,json=elementReliquaryResponse,proto3,oneof"`
}

func (*GetGameplayRecommendationRsp_SkillResponse) isGetGameplayRecommendationRsp_Detail() {}

func (*GetGameplayRecommendationRsp_ReliquaryResponse) isGetGameplayRecommendationRsp_Detail() {}

func (*GetGameplayRecommendationRsp_ElementReliquaryResponse) isGetGameplayRecommendationRsp_Detail() {
}

type TakeBackGivingItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivingId uint32 `protobuf:"varint,4,opt,name=giving_id,json=givingId,proto3" json:"giving_id,omitempty"`
}

func (x *TakeBackGivingItemReq) Reset() {
	*x = TakeBackGivingItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeBackGivingItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeBackGivingItemReq) ProtoMessage() {}

func (x *TakeBackGivingItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeBackGivingItemReq.ProtoReflect.Descriptor instead.
func (*TakeBackGivingItemReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{95}
}

func (x *TakeBackGivingItemReq) GetGivingId() uint32 {
	if x != nil {
		return x.GivingId
	}
	return 0
}

type TakeBackGivingItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivingId uint32 `protobuf:"varint,10,opt,name=giving_id,json=givingId,proto3" json:"giving_id,omitempty"`
	Retcode  int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *TakeBackGivingItemRsp) Reset() {
	*x = TakeBackGivingItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeBackGivingItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeBackGivingItemRsp) ProtoMessage() {}

func (x *TakeBackGivingItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeBackGivingItemRsp.ProtoReflect.Descriptor instead.
func (*TakeBackGivingItemRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{96}
}

func (x *TakeBackGivingItemRsp) GetGivingId() uint32 {
	if x != nil {
		return x.GivingId
	}
	return 0
}

func (x *TakeBackGivingItemRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerNicknameAuditDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ContentAuditInfo `protobuf:"bytes,13,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PlayerNicknameAuditDataNotify) Reset() {
	*x = PlayerNicknameAuditDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerNicknameAuditDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerNicknameAuditDataNotify) ProtoMessage() {}

func (x *PlayerNicknameAuditDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerNicknameAuditDataNotify.ProtoReflect.Descriptor instead.
func (*PlayerNicknameAuditDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{97}
}

func (x *PlayerNicknameAuditDataNotify) GetInfo() *ContentAuditInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PlayerNicknameNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *PlayerNicknameNotify) Reset() {
	*x = PlayerNicknameNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerNicknameNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerNicknameNotify) ProtoMessage() {}

func (x *PlayerNicknameNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerNicknameNotify.ProtoReflect.Descriptor instead.
func (*PlayerNicknameNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{98}
}

func (x *PlayerNicknameNotify) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type NicknameAuditConfigNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen      bool   `protobuf:"varint,8,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	SubmitLimit uint32 `protobuf:"varint,12,opt,name=submit_limit,json=submitLimit,proto3" json:"submit_limit,omitempty"`
}

func (x *NicknameAuditConfigNotify) Reset() {
	*x = NicknameAuditConfigNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicknameAuditConfigNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicknameAuditConfigNotify) ProtoMessage() {}

func (x *NicknameAuditConfigNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicknameAuditConfigNotify.ProtoReflect.Descriptor instead.
func (*NicknameAuditConfigNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{99}
}

func (x *NicknameAuditConfigNotify) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *NicknameAuditConfigNotify) GetSubmitLimit() uint32 {
	if x != nil {
		return x.SubmitLimit
	}
	return 0
}

type ReadNicknameAuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadNicknameAuditReq) Reset() {
	*x = ReadNicknameAuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNicknameAuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNicknameAuditReq) ProtoMessage() {}

func (x *ReadNicknameAuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNicknameAuditReq.ProtoReflect.Descriptor instead.
func (*ReadNicknameAuditReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{100}
}

type ReadNicknameAuditRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ReadNicknameAuditRsp) Reset() {
	*x = ReadNicknameAuditRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNicknameAuditRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNicknameAuditRsp) ProtoMessage() {}

func (x *ReadNicknameAuditRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNicknameAuditRsp.ProtoReflect.Descriptor instead.
func (*ReadNicknameAuditRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{101}
}

func (x *ReadNicknameAuditRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type PlayerCompoundMaterialBoostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBoostAll            bool   `protobuf:"varint,8,opt,name=is_boost_all,json=isBoostAll,proto3" json:"is_boost_all,omitempty"`
	TargetCompoundGroupId uint32 `protobuf:"varint,14,opt,name=target_compound_group_id,json=targetCompoundGroupId,proto3" json:"target_compound_group_id,omitempty"`
	ConsumeMaterialId     uint32 `protobuf:"varint,9,opt,name=consume_material_id,json=consumeMaterialId,proto3" json:"consume_material_id,omitempty"`
	ConsumeMaterialCount  uint32 `protobuf:"varint,1,opt,name=consume_material_count,json=consumeMaterialCount,proto3" json:"consume_material_count,omitempty"`
}

func (x *PlayerCompoundMaterialBoostReq) Reset() {
	*x = PlayerCompoundMaterialBoostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCompoundMaterialBoostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCompoundMaterialBoostReq) ProtoMessage() {}

func (x *PlayerCompoundMaterialBoostReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCompoundMaterialBoostReq.ProtoReflect.Descriptor instead.
func (*PlayerCompoundMaterialBoostReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{102}
}

func (x *PlayerCompoundMaterialBoostReq) GetIsBoostAll() bool {
	if x != nil {
		return x.IsBoostAll
	}
	return false
}

func (x *PlayerCompoundMaterialBoostReq) GetTargetCompoundGroupId() uint32 {
	if x != nil {
		return x.TargetCompoundGroupId
	}
	return 0
}

func (x *PlayerCompoundMaterialBoostReq) GetConsumeMaterialId() uint32 {
	if x != nil {
		return x.ConsumeMaterialId
	}
	return 0
}

func (x *PlayerCompoundMaterialBoostReq) GetConsumeMaterialCount() uint32 {
	if x != nil {
		return x.ConsumeMaterialCount
	}
	return 0
}

type PlayerCompoundMaterialBoostRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakeItemList        []*ItemParam                `protobuf:"bytes,2,rep,name=take_item_list,json=takeItemList,proto3" json:"take_item_list,omitempty"`
	TakeStatus          CompoundBoostTakeStatusType `protobuf:"varint,6,opt,name=take_status,json=takeStatus,proto3,enum=proto.CompoundBoostTakeStatusType" json:"take_status,omitempty"`
	Retcode             int32                       `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CompoundQueDataList []*CompoundQueueData        `protobuf:"bytes,1,rep,name=compound_que_data_list,json=compoundQueDataList,proto3" json:"compound_que_data_list,omitempty"`
}

func (x *PlayerCompoundMaterialBoostRsp) Reset() {
	*x = PlayerCompoundMaterialBoostRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCompoundMaterialBoostRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCompoundMaterialBoostRsp) ProtoMessage() {}

func (x *PlayerCompoundMaterialBoostRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCompoundMaterialBoostRsp.ProtoReflect.Descriptor instead.
func (*PlayerCompoundMaterialBoostRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{103}
}

func (x *PlayerCompoundMaterialBoostRsp) GetTakeItemList() []*ItemParam {
	if x != nil {
		return x.TakeItemList
	}
	return nil
}

func (x *PlayerCompoundMaterialBoostRsp) GetTakeStatus() CompoundBoostTakeStatusType {
	if x != nil {
		return x.TakeStatus
	}
	return CompoundBoostTakeStatusType_COMPOUND_BOOST_TAKE_STATUS_NONE
}

func (x *PlayerCompoundMaterialBoostRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerCompoundMaterialBoostRsp) GetCompoundQueDataList() []*CompoundQueueData {
	if x != nil {
		return x.CompoundQueDataList
	}
	return nil
}

type PlayerGameTimeByLuaNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32 `protobuf:"varint,13,opt,name=uid,proto3" json:"uid,omitempty"`
	SimSpeed uint32 `protobuf:"varint,9,opt,name=sim_speed,json=simSpeed,proto3" json:"sim_speed,omitempty"`
	GameTime uint32 `protobuf:"varint,10,opt,name=game_time,json=gameTime,proto3" json:"game_time,omitempty"`
}

func (x *PlayerGameTimeByLuaNotify) Reset() {
	*x = PlayerGameTimeByLuaNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameTimeByLuaNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameTimeByLuaNotify) ProtoMessage() {}

func (x *PlayerGameTimeByLuaNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameTimeByLuaNotify.ProtoReflect.Descriptor instead.
func (*PlayerGameTimeByLuaNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{104}
}

func (x *PlayerGameTimeByLuaNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerGameTimeByLuaNotify) GetSimSpeed() uint32 {
	if x != nil {
		return x.SimSpeed
	}
	return 0
}

func (x *PlayerGameTimeByLuaNotify) GetGameTime() uint32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

type PlayerIpRegionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpCode string `protobuf:"bytes,9,opt,name=ip_code,json=ipCode,proto3" json:"ip_code,omitempty"`
}

func (x *PlayerIpRegionNotify) Reset() {
	*x = PlayerIpRegionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_player_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIpRegionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIpRegionNotify) ProtoMessage() {}

func (x *PlayerIpRegionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_player_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIpRegionNotify.ProtoReflect.Descriptor instead.
func (*PlayerIpRegionNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_player_proto_rawDescGZIP(), []int{105}
}

func (x *PlayerIpRegionNotify) GetIpCode() string {
	if x != nil {
		return x.IpCode
	}
	return ""
}

var File_cmd_cmd_player_proto protoreflect.FileDescriptor

var file_cmd_cmd_player_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x05, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x73, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x73, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0xfb, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65,
	0x18, 0xe3, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x67, 0x4d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0xb6, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x70, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x53, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0xf8, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0xfc, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x73, 0x6e, 0x49, 0x64, 0x22, 0x88, 0x09, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x69, 0x6e, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67,
	0x65, 0x18, 0x99, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x67, 0x4d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x80, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xbd, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x69, 0x64,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0xec, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x55, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x93, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x12, 0x11, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0xe3, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xdd, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x8a, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6d, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0xf9, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0xa9, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x3a, 0x0a, 0x19, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0xe8, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0xf4, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0xe6, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0xd8, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x65, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0xd5, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x62, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x18, 0xdc, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x53, 0x74,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x94, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x79, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x79, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x7a, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x63, 0x61, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x43, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a,
	0x12, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x73,
	0x5f, 0x61, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x73,
	0x41, 0x64, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x72, 0x65, 0x41, 0x64, 0x69,
	0x64, 0x22, 0xcb, 0x0c, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0xe7, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x65, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x40, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xfc, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xb2, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0xa2, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xb0, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x84, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x64, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xd0, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x73, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0xf4, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x73, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0xaf, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x63, 0x70,
	0x73, 0x18, 0x8b, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0xd8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x98, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x12, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x8c, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0xfb, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0xea, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x87, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x17, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0xdd, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0xcb, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x39, 0x0a, 0x18, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xbd, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0xf4, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x8a, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0xab, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0xfc, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0xc8, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0xb7,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0xe4,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x72, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0f, 0x52, 0x11, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0f, 0x52, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x22, 0xa5, 0x0e, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x63, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x95, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53,
	0x63, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x4e, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0xbb, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x95, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0xe2, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0xd2, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x4f, 0x0a, 0x17,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xa5, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a,
	0x1b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x97, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x62, 0x69, 0x7a,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x42, 0x69, 0x7a, 0x12,
	0x2b, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0xed, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x7d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x18, 0xa4, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x70, 0x73, 0x18, 0xf8, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x73, 0x70, 0x5f, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x18, 0xf1, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x55, 0x73, 0x65, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x53, 0x0a, 0x10, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x12, 0x51,
	0x0a, 0x16, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0xfa, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x50, 0x61, 0x69, 0x72, 0x52, 0x13, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x64, 0x35, 0x18,
	0xa6, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x64,
	0x35, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0xec, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0xb7, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xb1, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x4f, 0x0a, 0x17, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xc8, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0xf0, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a,
	0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x93,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0xa9, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x51, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x0f,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x35, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x47, 0x4d, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x53, 0x55, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x07, 0x22,
	0x2b, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x12,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xad, 0x02, 0x0a,
	0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69,
	0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x64, 0x61, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x1a, 0x4c,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x79, 0x73, 0x22,
	0x70, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x5e, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x68,
	0x6f, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d,
	0x65, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x1a, 0x4c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x6f, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x6f, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x6f, 0x53,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6f, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x54, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2f, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x54, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3f, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x54, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3f, 0x0a, 0x11, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71,
	0x74, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x71, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x8c,
	0x02, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x73, 0x70,
	0x12, 0x3a, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x74, 0x65, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a,
	0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x6b, 0x52,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4f, 0x0a, 0x0e,
	0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x67, 0x0a,
	0x0e, 0x43, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x3f, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x36,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x6f, 0x6f, 0x6b, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x7b, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x64,
	0x0a, 0x15, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x15, 0x54, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x30, 0x0a,
	0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4d, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a, 0x14, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x04, 0x0a, 0x14, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x64, 0x35,
	0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x12, 0x45, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x49, 0x0a, 0x07, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x64, 0x35, 0x22, 0x55, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x50, 0x5f, 0x52, 0x45, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x22,
	0xb6, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x15, 0x69,
	0x73, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x54, 0x61,
	0x6b, 0x65, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x43,
	0x0a, 0x17, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x1a, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xab,
	0x01, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x31, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x15,
	0x41, 0x64, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x61, 0x6e,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x12, 0x44,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x61, 0x6e,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x03, 0x22, 0x30, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x67, 0x0a, 0x18, 0x54, 0x61,
	0x6b, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x3e, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xe8, 0x02, 0x0a, 0x0c, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x67, 0x61, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x47, 0x61,
	0x64, 0x67, 0x65, 0x74, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x43, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x41, 0x0a, 0x13, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57,
	0x0a, 0x12, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a, 0x12, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x10, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x18, 0x47, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x0c, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xfe,
	0x02, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x59, 0x0a, 0x13, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x47,
	0x75, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x43, 0x0a, 0x15, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x41, 0x44, 0x47, 0x45, 0x54, 0x10, 0x01, 0x22,
	0x6e, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x55, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6f, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x71, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x75, 0x61, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x75, 0x61, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x75,
	0x61, 0x5f, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c,
	0x75, 0x61, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x32, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x10, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x64,
	0x64, 0x69, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x14, 0x0a,
	0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x45, 0x78, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x2e, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x45, 0x78, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x69, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x78, 0x22, 0x3a, 0x0a, 0x07, 0x54,
	0x61, 0x73, 0x6b, 0x56, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x56,
	0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x76, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x61, 0x72, 0x52,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x18,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xae, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x4e, 0x0a, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x6e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6b, 0x0a, 0x13,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7d, 0x0a, 0x13, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x64,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x31, 0x0a, 0x16, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x69,
	0x74, 0x79, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1d, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x55, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3e, 0x0a, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x22, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x26, 0x47,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x71, 0x0a, 0x2d, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa9, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x69,
	0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc9, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x19, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0xd1, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x17, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69,
	0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x6f, 0x0a, 0x23, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x2b, 0x47, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x6c,
	0x6c, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x27, 0x47, 0x61, 0x6d,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x61, 0x0a, 0x13,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d,
	0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8f,
	0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xfe, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x12,
	0x72, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0xc4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x6c,
	0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x1a, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x71, 0x75,
	0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa7, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x71, 0x75, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x34, 0x0a, 0x15, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x69, 0x76, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x47, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x22, 0x30, 0x0a, 0x14, 0x52, 0x65, 0x61,
	0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x1e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c,
	0x12, 0x37, 0x0a, 0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x86, 0x02, 0x0a, 0x1e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x74, 0x61,
	0x6b, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x61,
	0x6b, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64,
	0x42, 0x6f, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x4c, 0x75, 0x61, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x6d, 0x5f, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x69, 0x6d, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x2f, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x70, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x2a, 0xc5, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x42,
	0x6f, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x42,
	0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4d, 0x50, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59,
	0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x42,
	0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x10,
	0x02, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x42, 0x4f,
	0x4f, 0x53, 0x54, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x42, 0x41, 0x47, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d,
	0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_player_proto_rawDescOnce sync.Once
	file_cmd_cmd_player_proto_rawDescData = file_cmd_cmd_player_proto_rawDesc
)

func file_cmd_cmd_player_proto_rawDescGZIP() []byte {
	file_cmd_cmd_player_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_player_proto_rawDescData)
	})
	return file_cmd_cmd_player_proto_rawDescData
}

var file_cmd_cmd_player_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_cmd_cmd_player_proto_msgTypes = make([]protoimpl.MessageInfo, 114)
var file_cmd_cmd_player_proto_goTypes = []interface{}{
	(CompoundBoostTakeStatusType)(0),                       // 0: proto.CompoundBoostTakeStatusType
	(PlayerLogoutReq_Reason)(0),                            // 1: proto.PlayerLogoutReq.Reason
	(DataResVersionNotify_DataResVersionOpType)(0),         // 2: proto.DataResVersionNotify.DataResVersionOpType
	(RemoveRandTaskInfoNotify_FinishReason)(0),             // 3: proto.RemoveRandTaskInfoNotify.FinishReason
	(ItemGivingReq_ItemGivingType)(0),                      // 4: proto.ItemGivingReq.ItemGivingType
	(*GetPlayerTokenReq)(nil),                              // 5: proto.GetPlayerTokenReq
	(*GetPlayerTokenRsp)(nil),                              // 6: proto.GetPlayerTokenRsp
	(*TrackingIOInfo)(nil),                                 // 7: proto.TrackingIOInfo
	(*AdjustTrackingInfo)(nil),                             // 8: proto.AdjustTrackingInfo
	(*PlayerLoginReq)(nil),                                 // 9: proto.PlayerLoginReq
	(*ShortAbilityHashPair)(nil),                           // 10: proto.ShortAbilityHashPair
	(*PlayerLoginRsp)(nil),                                 // 11: proto.PlayerLoginRsp
	(*PlayerLogoutReq)(nil),                                // 12: proto.PlayerLogoutReq
	(*PlayerLogoutRsp)(nil),                                // 13: proto.PlayerLogoutRsp
	(*PlayerLogoutNotify)(nil),                             // 14: proto.PlayerLogoutNotify
	(*PlayerDataNotify)(nil),                               // 15: proto.PlayerDataNotify
	(*ChangeGameTimeReq)(nil),                              // 16: proto.ChangeGameTimeReq
	(*ChangeGameTimeRsp)(nil),                              // 17: proto.ChangeGameTimeRsp
	(*PlayerGameTimeNotify)(nil),                           // 18: proto.PlayerGameTimeNotify
	(*PlayerPropNotify)(nil),                               // 19: proto.PlayerPropNotify
	(*ClientTriggerEventNotify)(nil),                       // 20: proto.ClientTriggerEventNotify
	(*SetPlayerPropReq)(nil),                               // 21: proto.SetPlayerPropReq
	(*SetPlayerPropRsp)(nil),                               // 22: proto.SetPlayerPropRsp
	(*SetPlayerBornDataReq)(nil),                           // 23: proto.SetPlayerBornDataReq
	(*SetPlayerBornDataRsp)(nil),                           // 24: proto.SetPlayerBornDataRsp
	(*DoSetPlayerBornDataNotify)(nil),                      // 25: proto.DoSetPlayerBornDataNotify
	(*PlayerPropChangeNotify)(nil),                         // 26: proto.PlayerPropChangeNotify
	(*SetPlayerNameReq)(nil),                               // 27: proto.SetPlayerNameReq
	(*SetPlayerNameRsp)(nil),                               // 28: proto.SetPlayerNameRsp
	(*SetOpenStateReq)(nil),                                // 29: proto.SetOpenStateReq
	(*SetOpenStateRsp)(nil),                                // 30: proto.SetOpenStateRsp
	(*OpenStateUpdateNotify)(nil),                          // 31: proto.OpenStateUpdateNotify
	(*OpenStateChangeNotify)(nil),                          // 32: proto.OpenStateChangeNotify
	(*PlayerCookReq)(nil),                                  // 33: proto.PlayerCookReq
	(*PlayerCookRsp)(nil),                                  // 34: proto.PlayerCookRsp
	(*PlayerRandomCookReq)(nil),                            // 35: proto.PlayerRandomCookReq
	(*PlayerRandomCookRsp)(nil),                            // 36: proto.PlayerRandomCookRsp
	(*CookRecipeData)(nil),                                 // 37: proto.CookRecipeData
	(*CookDataNotify)(nil),                                 // 38: proto.CookDataNotify
	(*CookRecipeDataNotify)(nil),                           // 39: proto.CookRecipeDataNotify
	(*CookGradeDataNotify)(nil),                            // 40: proto.CookGradeDataNotify
	(*PlayerCompoundMaterialReq)(nil),                      // 41: proto.PlayerCompoundMaterialReq
	(*CompoundQueueData)(nil),                              // 42: proto.CompoundQueueData
	(*PlayerCompoundMaterialRsp)(nil),                      // 43: proto.PlayerCompoundMaterialRsp
	(*TakeCompoundOutputReq)(nil),                          // 44: proto.TakeCompoundOutputReq
	(*TakeCompoundOutputRsp)(nil),                          // 45: proto.TakeCompoundOutputRsp
	(*CompoundDataNotify)(nil),                             // 46: proto.CompoundDataNotify
	(*GetCompoundDataReq)(nil),                             // 47: proto.GetCompoundDataReq
	(*GetCompoundDataRsp)(nil),                             // 48: proto.GetCompoundDataRsp
	(*PlayerTimeNotify)(nil),                               // 49: proto.PlayerTimeNotify
	(*PlayerSetPauseReq)(nil),                              // 50: proto.PlayerSetPauseReq
	(*PlayerSetPauseRsp)(nil),                              // 51: proto.PlayerSetPauseRsp
	(*PlayerSetLanguageReq)(nil),                           // 52: proto.PlayerSetLanguageReq
	(*PlayerSetLanguageRsp)(nil),                           // 53: proto.PlayerSetLanguageRsp
	(*DataResVersionNotify)(nil),                           // 54: proto.DataResVersionNotify
	(*DailyTaskInfo)(nil),                                  // 55: proto.DailyTaskInfo
	(*DailyTaskDataNotify)(nil),                            // 56: proto.DailyTaskDataNotify
	(*DailyTaskProgressNotify)(nil),                        // 57: proto.DailyTaskProgressNotify
	(*DailyTaskScoreRewardNotify)(nil),                     // 58: proto.DailyTaskScoreRewardNotify
	(*WorldOwnerDailyTaskNotify)(nil),                      // 59: proto.WorldOwnerDailyTaskNotify
	(*AddRandTaskInfoNotify)(nil),                          // 60: proto.AddRandTaskInfoNotify
	(*RemoveRandTaskInfoNotify)(nil),                       // 61: proto.RemoveRandTaskInfoNotify
	(*TakePlayerLevelRewardReq)(nil),                       // 62: proto.TakePlayerLevelRewardReq
	(*TakePlayerLevelRewardRsp)(nil),                       // 63: proto.TakePlayerLevelRewardRsp
	(*PlayerLevelRewardUpdateNotify)(nil),                  // 64: proto.PlayerLevelRewardUpdateNotify
	(*GivingRecord)(nil),                                   // 65: proto.GivingRecord
	(*GivingRecordNotify)(nil),                             // 66: proto.GivingRecordNotify
	(*GivingRecordChangeNotify)(nil),                       // 67: proto.GivingRecordChangeNotify
	(*ItemGivingReq)(nil),                                  // 68: proto.ItemGivingReq
	(*ItemGivingRsp)(nil),                                  // 69: proto.ItemGivingRsp
	(*PlayerCookArgsReq)(nil),                              // 70: proto.PlayerCookArgsReq
	(*PlayerCookArgsRsp)(nil),                              // 71: proto.PlayerCookArgsRsp
	(*PlayerLuaShellNotify)(nil),                           // 72: proto.PlayerLuaShellNotify
	(*ServerDisconnectClientNotify)(nil),                   // 73: proto.ServerDisconnectClientNotify
	(*AntiAddictNotify)(nil),                               // 74: proto.AntiAddictNotify
	(*PlayerForceExitReq)(nil),                             // 75: proto.PlayerForceExitReq
	(*PlayerForceExitRsp)(nil),                             // 76: proto.PlayerForceExitRsp
	(*PlayerInjectFixNotify)(nil),                          // 77: proto.PlayerInjectFixNotify
	(*TaskVar)(nil),                                        // 78: proto.TaskVar
	(*TaskVarNotify)(nil),                                  // 79: proto.TaskVarNotify
	(*ClientLockGameTimeNotify)(nil),                       // 80: proto.ClientLockGameTimeNotify
	(*GetNextResourceInfoReq)(nil),                         // 81: proto.GetNextResourceInfoReq
	(*GetNextResourceInfoRsp)(nil),                         // 82: proto.GetNextResourceInfoRsp
	(*AdjustWorldLevelReq)(nil),                            // 83: proto.AdjustWorldLevelReq
	(*AdjustWorldLevelRsp)(nil),                            // 84: proto.AdjustWorldLevelRsp
	(*DailyTaskFilterCityReq)(nil),                         // 85: proto.DailyTaskFilterCityReq
	(*DailyTaskFilterCityRsp)(nil),                         // 86: proto.DailyTaskFilterCityRsp
	(*DailyTaskUnlockedCitiesNotify)(nil),                  // 87: proto.DailyTaskUnlockedCitiesNotify
	(*ExclusiveRuleInfo)(nil),                              // 88: proto.ExclusiveRuleInfo
	(*ExclusiveRuleNotify)(nil),                            // 89: proto.ExclusiveRuleNotify
	(*CompoundUnlockNotify)(nil),                           // 90: proto.CompoundUnlockNotify
	(*GameplayRecommendationSkillRequest)(nil),             // 91: proto.GameplayRecommendationSkillRequest
	(*GameplayRecommendationReliquaryRequest)(nil),         // 92: proto.GameplayRecommendationReliquaryRequest
	(*GameplayRecommendationElementReliquaryRequest)(nil),  // 93: proto.GameplayRecommendationElementReliquaryRequest
	(*GetGameplayRecommendationReq)(nil),                   // 94: proto.GetGameplayRecommendationReq
	(*GameplayRecommendationSkillResponse)(nil),            // 95: proto.GameplayRecommendationSkillResponse
	(*GameplayRecommendationReliquaryMainPropData)(nil),    // 96: proto.GameplayRecommendationReliquaryMainPropData
	(*GameplayRecommendationReliquaryResponse)(nil),        // 97: proto.GameplayRecommendationReliquaryResponse
	(*GameplayRecommendationElementReliquaryResponse)(nil), // 98: proto.GameplayRecommendationElementReliquaryResponse
	(*GetGameplayRecommendationRsp)(nil),                   // 99: proto.GetGameplayRecommendationRsp
	(*TakeBackGivingItemReq)(nil),                          // 100: proto.TakeBackGivingItemReq
	(*TakeBackGivingItemRsp)(nil),                          // 101: proto.TakeBackGivingItemRsp
	(*PlayerNicknameAuditDataNotify)(nil),                  // 102: proto.PlayerNicknameAuditDataNotify
	(*PlayerNicknameNotify)(nil),                           // 103: proto.PlayerNicknameNotify
	(*NicknameAuditConfigNotify)(nil),                      // 104: proto.NicknameAuditConfigNotify
	(*ReadNicknameAuditReq)(nil),                           // 105: proto.ReadNicknameAuditReq
	(*ReadNicknameAuditRsp)(nil),                           // 106: proto.ReadNicknameAuditRsp
	(*PlayerCompoundMaterialBoostReq)(nil),                 // 107: proto.PlayerCompoundMaterialBoostReq
	(*PlayerCompoundMaterialBoostRsp)(nil),                 // 108: proto.PlayerCompoundMaterialBoostRsp
	(*PlayerGameTimeByLuaNotify)(nil),                      // 109: proto.PlayerGameTimeByLuaNotify
	(*PlayerIpRegionNotify)(nil),                           // 110: proto.PlayerIpRegionNotify
	nil,                                                    // 111: proto.PlayerLoginRsp.BlockInfoMapEntry
	nil,                                                    // 112: proto.PlayerLoginRsp.AbilityHashMapEntry
	nil,                                                    // 113: proto.PlayerDataNotify.PropMapEntry
	nil,                                                    // 114: proto.PlayerPropNotify.PropMapEntry
	nil,                                                    // 115: proto.OpenStateUpdateNotify.OpenStateMapEntry
	nil,                                                    // 116: proto.OpenStateChangeNotify.OpenStateMapEntry
	nil,                                                    // 117: proto.GivingRecord.MaterialCntMapEntry
	nil,                                                    // 118: proto.ItemGivingReq.ItemGuidCountMapEntry
	(*StopServerInfo)(nil),                                 // 119: proto.StopServerInfo
	(*ResVersionConfig)(nil),                               // 120: proto.ResVersionConfig
	(*FeatureBlockInfo)(nil),                               // 121: proto.FeatureBlockInfo
	(EventTriggerType)(0),                                  // 122: proto.EventTriggerType
	(*PropValue)(nil),                                      // 123: proto.PropValue
	(*ItemParam)(nil),                                      // 124: proto.ItemParam
	(*Vector)(nil),                                         // 125: proto.Vector
	(LuaShellType)(0),                                      // 126: proto.LuaShellType
	(*ContentAuditInfo)(nil),                               // 127: proto.ContentAuditInfo
	(*BlockInfo)(nil),                                      // 128: proto.BlockInfo
}
var file_cmd_cmd_player_proto_depIdxs = []int32{
	119, // 0: proto.GetPlayerTokenRsp.stop_server:type_name -> proto.StopServerInfo
	7,   // 1: proto.PlayerLoginReq.tracking_io_info:type_name -> proto.TrackingIOInfo
	8,   // 2: proto.PlayerLoginReq.adjust_tracking_info:type_name -> proto.AdjustTrackingInfo
	111, // 3: proto.PlayerLoginRsp.block_info_map:type_name -> proto.PlayerLoginRsp.BlockInfoMapEntry
	120, // 4: proto.PlayerLoginRsp.next_res_version_config:type_name -> proto.ResVersionConfig
	112, // 5: proto.PlayerLoginRsp.ability_hash_map:type_name -> proto.PlayerLoginRsp.AbilityHashMapEntry
	10,  // 6: proto.PlayerLoginRsp.short_ability_hash_map:type_name -> proto.ShortAbilityHashPair
	120, // 7: proto.PlayerLoginRsp.res_version_config:type_name -> proto.ResVersionConfig
	121, // 8: proto.PlayerLoginRsp.feature_block_info_list:type_name -> proto.FeatureBlockInfo
	1,   // 9: proto.PlayerLogoutReq.reason:type_name -> proto.PlayerLogoutReq.Reason
	113, // 10: proto.PlayerDataNotify.prop_map:type_name -> proto.PlayerDataNotify.PropMapEntry
	114, // 11: proto.PlayerPropNotify.prop_map:type_name -> proto.PlayerPropNotify.PropMapEntry
	122, // 12: proto.ClientTriggerEventNotify.event_type:type_name -> proto.EventTriggerType
	123, // 13: proto.SetPlayerPropReq.prop_list:type_name -> proto.PropValue
	115, // 14: proto.OpenStateUpdateNotify.open_state_map:type_name -> proto.OpenStateUpdateNotify.OpenStateMapEntry
	116, // 15: proto.OpenStateChangeNotify.open_state_map:type_name -> proto.OpenStateChangeNotify.OpenStateMapEntry
	124, // 16: proto.PlayerCookRsp.extral_item_list:type_name -> proto.ItemParam
	124, // 17: proto.PlayerCookRsp.item_list:type_name -> proto.ItemParam
	37,  // 18: proto.PlayerCookRsp.recipe_data:type_name -> proto.CookRecipeData
	124, // 19: proto.PlayerRandomCookReq.material_list:type_name -> proto.ItemParam
	37,  // 20: proto.CookDataNotify.recipe_data_list:type_name -> proto.CookRecipeData
	37,  // 21: proto.CookRecipeDataNotify.recipe_data:type_name -> proto.CookRecipeData
	42,  // 22: proto.PlayerCompoundMaterialRsp.compound_que_data:type_name -> proto.CompoundQueueData
	124, // 23: proto.TakeCompoundOutputRsp.item_list:type_name -> proto.ItemParam
	42,  // 24: proto.CompoundDataNotify.compound_que_data_list:type_name -> proto.CompoundQueueData
	42,  // 25: proto.GetCompoundDataRsp.compound_que_data_list:type_name -> proto.CompoundQueueData
	120, // 26: proto.DataResVersionNotify.res_version_config:type_name -> proto.ResVersionConfig
	2,   // 27: proto.DataResVersionNotify.op_type:type_name -> proto.DataResVersionNotify.DataResVersionOpType
	55,  // 28: proto.DailyTaskProgressNotify.info:type_name -> proto.DailyTaskInfo
	55,  // 29: proto.WorldOwnerDailyTaskNotify.task_list:type_name -> proto.DailyTaskInfo
	125, // 30: proto.AddRandTaskInfoNotify.pos:type_name -> proto.Vector
	3,   // 31: proto.RemoveRandTaskInfoNotify.reason:type_name -> proto.RemoveRandTaskInfoNotify.FinishReason
	117, // 32: proto.GivingRecord.material_cnt_map:type_name -> proto.GivingRecord.MaterialCntMapEntry
	65,  // 33: proto.GivingRecordNotify.giving_record_list:type_name -> proto.GivingRecord
	65,  // 34: proto.GivingRecordChangeNotify.giving_record:type_name -> proto.GivingRecord
	118, // 35: proto.ItemGivingReq.item_guid_count_map:type_name -> proto.ItemGivingReq.ItemGuidCountMapEntry
	124, // 36: proto.ItemGivingReq.item_param_list:type_name -> proto.ItemParam
	4,   // 37: proto.ItemGivingReq.item_giving_type:type_name -> proto.ItemGivingReq.ItemGivingType
	126, // 38: proto.PlayerLuaShellNotify.shell_type:type_name -> proto.LuaShellType
	78,  // 39: proto.TaskVarNotify.task_var_list:type_name -> proto.TaskVar
	120, // 40: proto.GetNextResourceInfoRsp.next_res_version_config:type_name -> proto.ResVersionConfig
	88,  // 41: proto.ExclusiveRuleNotify.rule_info_list:type_name -> proto.ExclusiveRuleInfo
	91,  // 42: proto.GetGameplayRecommendationReq.skill_request:type_name -> proto.GameplayRecommendationSkillRequest
	92,  // 43: proto.GetGameplayRecommendationReq.reliquary_request:type_name -> proto.GameplayRecommendationReliquaryRequest
	93,  // 44: proto.GetGameplayRecommendationReq.element_reliquary_request:type_name -> proto.GameplayRecommendationElementReliquaryRequest
	96,  // 45: proto.GameplayRecommendationReliquaryResponse.main_prop_data_list:type_name -> proto.GameplayRecommendationReliquaryMainPropData
	96,  // 46: proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list:type_name -> proto.GameplayRecommendationReliquaryMainPropData
	95,  // 47: proto.GetGameplayRecommendationRsp.skill_response:type_name -> proto.GameplayRecommendationSkillResponse
	97,  // 48: proto.GetGameplayRecommendationRsp.reliquary_response:type_name -> proto.GameplayRecommendationReliquaryResponse
	98,  // 49: proto.GetGameplayRecommendationRsp.element_reliquary_response:type_name -> proto.GameplayRecommendationElementReliquaryResponse
	127, // 50: proto.PlayerNicknameAuditDataNotify.info:type_name -> proto.ContentAuditInfo
	124, // 51: proto.PlayerCompoundMaterialBoostRsp.take_item_list:type_name -> proto.ItemParam
	0,   // 52: proto.PlayerCompoundMaterialBoostRsp.take_status:type_name -> proto.CompoundBoostTakeStatusType
	42,  // 53: proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list:type_name -> proto.CompoundQueueData
	128, // 54: proto.PlayerLoginRsp.BlockInfoMapEntry.value:type_name -> proto.BlockInfo
	123, // 55: proto.PlayerDataNotify.PropMapEntry.value:type_name -> proto.PropValue
	123, // 56: proto.PlayerPropNotify.PropMapEntry.value:type_name -> proto.PropValue
	57,  // [57:57] is the sub-list for method output_type
	57,  // [57:57] is the sub-list for method input_type
	57,  // [57:57] is the sub-list for extension type_name
	57,  // [57:57] is the sub-list for extension extendee
	0,   // [0:57] is the sub-list for field type_name
}

func init() { file_cmd_cmd_player_proto_init() }
func file_cmd_cmd_player_proto_init() {
	if File_cmd_cmd_player_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingIOInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustTrackingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortAbilityHashPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLogoutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLogoutNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeGameTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeGameTimeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPropNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientTriggerEventNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerPropReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerPropRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerBornDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerBornDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSetPlayerBornDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPropChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOpenStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOpenStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStateUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStateChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCookRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRandomCookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRandomCookRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookRecipeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookRecipeDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookGradeDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCompoundMaterialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompoundQueueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCompoundMaterialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCompoundOutputReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeCompoundOutputRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompoundDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompoundDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompoundDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSetPauseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSetPauseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSetLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSetLanguageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataResVersionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskProgressNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskScoreRewardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOwnerDailyTaskNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRandTaskInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRandTaskInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakePlayerLevelRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakePlayerLevelRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLevelRewardUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GivingRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GivingRecordNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GivingRecordChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGivingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGivingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCookArgsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCookArgsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLuaShellNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDisconnectClientNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntiAddictNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerForceExitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerForceExitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInjectFixNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskVarNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientLockGameTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextResourceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextResourceInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustWorldLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustWorldLevelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskFilterCityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskFilterCityRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskUnlockedCitiesNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExclusiveRuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExclusiveRuleNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompoundUnlockNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationElementReliquaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameplayRecommendationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationSkillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryMainPropData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationReliquaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameplayRecommendationElementReliquaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameplayRecommendationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeBackGivingItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeBackGivingItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerNicknameAuditDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerNicknameNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicknameAuditConfigNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNicknameAuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNicknameAuditRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCompoundMaterialBoostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCompoundMaterialBoostRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameTimeByLuaNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_player_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIpRegionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_cmd_player_proto_msgTypes[89].OneofWrappers = []interface{}{
		(*GetGameplayRecommendationReq_SkillRequest)(nil),
		(*GetGameplayRecommendationReq_ReliquaryRequest)(nil),
		(*GetGameplayRecommendationReq_ElementReliquaryRequest)(nil),
	}
	file_cmd_cmd_player_proto_msgTypes[94].OneofWrappers = []interface{}{
		(*GetGameplayRecommendationRsp_SkillResponse)(nil),
		(*GetGameplayRecommendationRsp_ReliquaryResponse)(nil),
		(*GetGameplayRecommendationRsp_ElementReliquaryResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_player_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   114,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_player_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_player_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_player_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_player_proto_msgTypes,
	}.Build()
	File_cmd_cmd_player_proto = out.File
	file_cmd_cmd_player_proto_rawDesc = nil
	file_cmd_cmd_player_proto_goTypes = nil
	file_cmd_cmd_player_proto_depIdxs = nil
}
