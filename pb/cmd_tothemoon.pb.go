// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_tothemoon.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToTheMoonQueryPathReq_CmdId int32

const (
	ToTheMoonQueryPathReq_NONE             ToTheMoonQueryPathReq_CmdId = 0
	ToTheMoonQueryPathReq_CMD_ID           ToTheMoonQueryPathReq_CmdId = 6172
	ToTheMoonQueryPathReq_ENET_CHANNEL_ID  ToTheMoonQueryPathReq_CmdId = 0
	ToTheMoonQueryPathReq_ENET_IS_RELIABLE ToTheMoonQueryPathReq_CmdId = 1
	ToTheMoonQueryPathReq_IS_ALLOW_CLIENT  ToTheMoonQueryPathReq_CmdId = 1
)

// Enum value maps for ToTheMoonQueryPathReq_CmdId.
var (
	ToTheMoonQueryPathReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6172: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonQueryPathReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6172,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonQueryPathReq_CmdId) Enum() *ToTheMoonQueryPathReq_CmdId {
	p := new(ToTheMoonQueryPathReq_CmdId)
	*p = x
	return p
}

func (x ToTheMoonQueryPathReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[0].Descriptor()
}

func (ToTheMoonQueryPathReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[0]
}

func (x ToTheMoonQueryPathReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathReq_CmdId.Descriptor instead.
func (ToTheMoonQueryPathReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{0, 0}
}

type ToTheMoonQueryPathReq_OptionType int32

const (
	ToTheMoonQueryPathReq_OPTION_NONE   ToTheMoonQueryPathReq_OptionType = 0
	ToTheMoonQueryPathReq_OPTION_NORMAL ToTheMoonQueryPathReq_OptionType = 1
)

// Enum value maps for ToTheMoonQueryPathReq_OptionType.
var (
	ToTheMoonQueryPathReq_OptionType_name = map[int32]string{
		0: "OPTION_NONE",
		1: "OPTION_NORMAL",
	}
	ToTheMoonQueryPathReq_OptionType_value = map[string]int32{
		"OPTION_NONE":   0,
		"OPTION_NORMAL": 1,
	}
)

func (x ToTheMoonQueryPathReq_OptionType) Enum() *ToTheMoonQueryPathReq_OptionType {
	p := new(ToTheMoonQueryPathReq_OptionType)
	*p = x
	return p
}

func (x ToTheMoonQueryPathReq_OptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathReq_OptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[1].Descriptor()
}

func (ToTheMoonQueryPathReq_OptionType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[1]
}

func (x ToTheMoonQueryPathReq_OptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathReq_OptionType.Descriptor instead.
func (ToTheMoonQueryPathReq_OptionType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{0, 1}
}

type ToTheMoonQueryPathReq_AStarMethod int32

const (
	ToTheMoonQueryPathReq_Classic    ToTheMoonQueryPathReq_AStarMethod = 0
	ToTheMoonQueryPathReq_Tendency   ToTheMoonQueryPathReq_AStarMethod = 1
	ToTheMoonQueryPathReq_Adaptive   ToTheMoonQueryPathReq_AStarMethod = 2
	ToTheMoonQueryPathReq_Inflection ToTheMoonQueryPathReq_AStarMethod = 3
)

// Enum value maps for ToTheMoonQueryPathReq_AStarMethod.
var (
	ToTheMoonQueryPathReq_AStarMethod_name = map[int32]string{
		0: "Classic",
		1: "Tendency",
		2: "Adaptive",
		3: "Inflection",
	}
	ToTheMoonQueryPathReq_AStarMethod_value = map[string]int32{
		"Classic":    0,
		"Tendency":   1,
		"Adaptive":   2,
		"Inflection": 3,
	}
)

func (x ToTheMoonQueryPathReq_AStarMethod) Enum() *ToTheMoonQueryPathReq_AStarMethod {
	p := new(ToTheMoonQueryPathReq_AStarMethod)
	*p = x
	return p
}

func (x ToTheMoonQueryPathReq_AStarMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathReq_AStarMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[2].Descriptor()
}

func (ToTheMoonQueryPathReq_AStarMethod) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[2]
}

func (x ToTheMoonQueryPathReq_AStarMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathReq_AStarMethod.Descriptor instead.
func (ToTheMoonQueryPathReq_AStarMethod) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{0, 2}
}

type ToTheMoonQueryPathReq_FilterType int32

const (
	ToTheMoonQueryPathReq_All   ToTheMoonQueryPathReq_FilterType = 0
	ToTheMoonQueryPathReq_Air   ToTheMoonQueryPathReq_FilterType = 1
	ToTheMoonQueryPathReq_Water ToTheMoonQueryPathReq_FilterType = 2
)

// Enum value maps for ToTheMoonQueryPathReq_FilterType.
var (
	ToTheMoonQueryPathReq_FilterType_name = map[int32]string{
		0: "All",
		1: "Air",
		2: "Water",
	}
	ToTheMoonQueryPathReq_FilterType_value = map[string]int32{
		"All":   0,
		"Air":   1,
		"Water": 2,
	}
)

func (x ToTheMoonQueryPathReq_FilterType) Enum() *ToTheMoonQueryPathReq_FilterType {
	p := new(ToTheMoonQueryPathReq_FilterType)
	*p = x
	return p
}

func (x ToTheMoonQueryPathReq_FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathReq_FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[3].Descriptor()
}

func (ToTheMoonQueryPathReq_FilterType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[3]
}

func (x ToTheMoonQueryPathReq_FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathReq_FilterType.Descriptor instead.
func (ToTheMoonQueryPathReq_FilterType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{0, 3}
}

type ToTheMoonQueryPathRsp_CmdId int32

const (
	ToTheMoonQueryPathRsp_NONE             ToTheMoonQueryPathRsp_CmdId = 0
	ToTheMoonQueryPathRsp_CMD_ID           ToTheMoonQueryPathRsp_CmdId = 6198
	ToTheMoonQueryPathRsp_ENET_CHANNEL_ID  ToTheMoonQueryPathRsp_CmdId = 0
	ToTheMoonQueryPathRsp_ENET_IS_RELIABLE ToTheMoonQueryPathRsp_CmdId = 1
)

// Enum value maps for ToTheMoonQueryPathRsp_CmdId.
var (
	ToTheMoonQueryPathRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6198: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ToTheMoonQueryPathRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6198,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ToTheMoonQueryPathRsp_CmdId) Enum() *ToTheMoonQueryPathRsp_CmdId {
	p := new(ToTheMoonQueryPathRsp_CmdId)
	*p = x
	return p
}

func (x ToTheMoonQueryPathRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[4].Descriptor()
}

func (ToTheMoonQueryPathRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[4]
}

func (x ToTheMoonQueryPathRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathRsp_CmdId.Descriptor instead.
func (ToTheMoonQueryPathRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{1, 0}
}

type ToTheMoonQueryPathRsp_PathStatusType int32

const (
	ToTheMoonQueryPathRsp_STATUS_FAIL    ToTheMoonQueryPathRsp_PathStatusType = 0
	ToTheMoonQueryPathRsp_STATUS_SUCC    ToTheMoonQueryPathRsp_PathStatusType = 1
	ToTheMoonQueryPathRsp_STATUS_PARTIAL ToTheMoonQueryPathRsp_PathStatusType = 2
)

// Enum value maps for ToTheMoonQueryPathRsp_PathStatusType.
var (
	ToTheMoonQueryPathRsp_PathStatusType_name = map[int32]string{
		0: "STATUS_FAIL",
		1: "STATUS_SUCC",
		2: "STATUS_PARTIAL",
	}
	ToTheMoonQueryPathRsp_PathStatusType_value = map[string]int32{
		"STATUS_FAIL":    0,
		"STATUS_SUCC":    1,
		"STATUS_PARTIAL": 2,
	}
)

func (x ToTheMoonQueryPathRsp_PathStatusType) Enum() *ToTheMoonQueryPathRsp_PathStatusType {
	p := new(ToTheMoonQueryPathRsp_PathStatusType)
	*p = x
	return p
}

func (x ToTheMoonQueryPathRsp_PathStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonQueryPathRsp_PathStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[5].Descriptor()
}

func (ToTheMoonQueryPathRsp_PathStatusType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[5]
}

func (x ToTheMoonQueryPathRsp_PathStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonQueryPathRsp_PathStatusType.Descriptor instead.
func (ToTheMoonQueryPathRsp_PathStatusType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{1, 1}
}

type ToTheMoonPingNotify_CmdId int32

const (
	ToTheMoonPingNotify_NONE             ToTheMoonPingNotify_CmdId = 0
	ToTheMoonPingNotify_CMD_ID           ToTheMoonPingNotify_CmdId = 6112
	ToTheMoonPingNotify_ENET_CHANNEL_ID  ToTheMoonPingNotify_CmdId = 0
	ToTheMoonPingNotify_ENET_IS_RELIABLE ToTheMoonPingNotify_CmdId = 1
	ToTheMoonPingNotify_IS_ALLOW_CLIENT  ToTheMoonPingNotify_CmdId = 1
)

// Enum value maps for ToTheMoonPingNotify_CmdId.
var (
	ToTheMoonPingNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		6112: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonPingNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6112,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonPingNotify_CmdId) Enum() *ToTheMoonPingNotify_CmdId {
	p := new(ToTheMoonPingNotify_CmdId)
	*p = x
	return p
}

func (x ToTheMoonPingNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonPingNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[6].Descriptor()
}

func (ToTheMoonPingNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[6]
}

func (x ToTheMoonPingNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonPingNotify_CmdId.Descriptor instead.
func (ToTheMoonPingNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{2, 0}
}

type ToTheMoonEnterSceneReq_CmdId int32

const (
	ToTheMoonEnterSceneReq_NONE             ToTheMoonEnterSceneReq_CmdId = 0
	ToTheMoonEnterSceneReq_CMD_ID           ToTheMoonEnterSceneReq_CmdId = 6135
	ToTheMoonEnterSceneReq_ENET_CHANNEL_ID  ToTheMoonEnterSceneReq_CmdId = 0
	ToTheMoonEnterSceneReq_ENET_IS_RELIABLE ToTheMoonEnterSceneReq_CmdId = 1
	ToTheMoonEnterSceneReq_IS_ALLOW_CLIENT  ToTheMoonEnterSceneReq_CmdId = 1
)

// Enum value maps for ToTheMoonEnterSceneReq_CmdId.
var (
	ToTheMoonEnterSceneReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6135: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonEnterSceneReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6135,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonEnterSceneReq_CmdId) Enum() *ToTheMoonEnterSceneReq_CmdId {
	p := new(ToTheMoonEnterSceneReq_CmdId)
	*p = x
	return p
}

func (x ToTheMoonEnterSceneReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonEnterSceneReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[7].Descriptor()
}

func (ToTheMoonEnterSceneReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[7]
}

func (x ToTheMoonEnterSceneReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonEnterSceneReq_CmdId.Descriptor instead.
func (ToTheMoonEnterSceneReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{3, 0}
}

type ToTheMoonEnterSceneRsp_CmdId int32

const (
	ToTheMoonEnterSceneRsp_NONE             ToTheMoonEnterSceneRsp_CmdId = 0
	ToTheMoonEnterSceneRsp_CMD_ID           ToTheMoonEnterSceneRsp_CmdId = 6107
	ToTheMoonEnterSceneRsp_ENET_CHANNEL_ID  ToTheMoonEnterSceneRsp_CmdId = 0
	ToTheMoonEnterSceneRsp_ENET_IS_RELIABLE ToTheMoonEnterSceneRsp_CmdId = 1
)

// Enum value maps for ToTheMoonEnterSceneRsp_CmdId.
var (
	ToTheMoonEnterSceneRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6107: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ToTheMoonEnterSceneRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6107,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ToTheMoonEnterSceneRsp_CmdId) Enum() *ToTheMoonEnterSceneRsp_CmdId {
	p := new(ToTheMoonEnterSceneRsp_CmdId)
	*p = x
	return p
}

func (x ToTheMoonEnterSceneRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonEnterSceneRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[8].Descriptor()
}

func (ToTheMoonEnterSceneRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[8]
}

func (x ToTheMoonEnterSceneRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonEnterSceneRsp_CmdId.Descriptor instead.
func (ToTheMoonEnterSceneRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{4, 0}
}

type ToTheMoonObstacleInfo_ShapeType int32

const (
	ToTheMoonObstacleInfo_OBSTACLE_SHAPE_CAPSULE ToTheMoonObstacleInfo_ShapeType = 0
	ToTheMoonObstacleInfo_OBSTACLE_SHAPE_BOX     ToTheMoonObstacleInfo_ShapeType = 1
)

// Enum value maps for ToTheMoonObstacleInfo_ShapeType.
var (
	ToTheMoonObstacleInfo_ShapeType_name = map[int32]string{
		0: "OBSTACLE_SHAPE_CAPSULE",
		1: "OBSTACLE_SHAPE_BOX",
	}
	ToTheMoonObstacleInfo_ShapeType_value = map[string]int32{
		"OBSTACLE_SHAPE_CAPSULE": 0,
		"OBSTACLE_SHAPE_BOX":     1,
	}
)

func (x ToTheMoonObstacleInfo_ShapeType) Enum() *ToTheMoonObstacleInfo_ShapeType {
	p := new(ToTheMoonObstacleInfo_ShapeType)
	*p = x
	return p
}

func (x ToTheMoonObstacleInfo_ShapeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonObstacleInfo_ShapeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[9].Descriptor()
}

func (ToTheMoonObstacleInfo_ShapeType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[9]
}

func (x ToTheMoonObstacleInfo_ShapeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonObstacleInfo_ShapeType.Descriptor instead.
func (ToTheMoonObstacleInfo_ShapeType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{5, 0}
}

type ToTheMoonAddObstacleReq_CmdId int32

const (
	ToTheMoonAddObstacleReq_NONE             ToTheMoonAddObstacleReq_CmdId = 0
	ToTheMoonAddObstacleReq_CMD_ID           ToTheMoonAddObstacleReq_CmdId = 6121
	ToTheMoonAddObstacleReq_ENET_CHANNEL_ID  ToTheMoonAddObstacleReq_CmdId = 0
	ToTheMoonAddObstacleReq_ENET_IS_RELIABLE ToTheMoonAddObstacleReq_CmdId = 1
	ToTheMoonAddObstacleReq_IS_ALLOW_CLIENT  ToTheMoonAddObstacleReq_CmdId = 1
)

// Enum value maps for ToTheMoonAddObstacleReq_CmdId.
var (
	ToTheMoonAddObstacleReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6121: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonAddObstacleReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6121,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonAddObstacleReq_CmdId) Enum() *ToTheMoonAddObstacleReq_CmdId {
	p := new(ToTheMoonAddObstacleReq_CmdId)
	*p = x
	return p
}

func (x ToTheMoonAddObstacleReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonAddObstacleReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[10].Descriptor()
}

func (ToTheMoonAddObstacleReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[10]
}

func (x ToTheMoonAddObstacleReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonAddObstacleReq_CmdId.Descriptor instead.
func (ToTheMoonAddObstacleReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{6, 0}
}

type ToTheMoonAddObstacleRsp_CmdId int32

const (
	ToTheMoonAddObstacleRsp_NONE             ToTheMoonAddObstacleRsp_CmdId = 0
	ToTheMoonAddObstacleRsp_CMD_ID           ToTheMoonAddObstacleRsp_CmdId = 6103
	ToTheMoonAddObstacleRsp_ENET_CHANNEL_ID  ToTheMoonAddObstacleRsp_CmdId = 0
	ToTheMoonAddObstacleRsp_ENET_IS_RELIABLE ToTheMoonAddObstacleRsp_CmdId = 1
)

// Enum value maps for ToTheMoonAddObstacleRsp_CmdId.
var (
	ToTheMoonAddObstacleRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6103: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ToTheMoonAddObstacleRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6103,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ToTheMoonAddObstacleRsp_CmdId) Enum() *ToTheMoonAddObstacleRsp_CmdId {
	p := new(ToTheMoonAddObstacleRsp_CmdId)
	*p = x
	return p
}

func (x ToTheMoonAddObstacleRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonAddObstacleRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[11].Descriptor()
}

func (ToTheMoonAddObstacleRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[11]
}

func (x ToTheMoonAddObstacleRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonAddObstacleRsp_CmdId.Descriptor instead.
func (ToTheMoonAddObstacleRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{10, 0}
}

type ToTheMoonRemoveObstacleReq_CmdId int32

const (
	ToTheMoonRemoveObstacleReq_NONE             ToTheMoonRemoveObstacleReq_CmdId = 0
	ToTheMoonRemoveObstacleReq_CMD_ID           ToTheMoonRemoveObstacleReq_CmdId = 6190
	ToTheMoonRemoveObstacleReq_ENET_CHANNEL_ID  ToTheMoonRemoveObstacleReq_CmdId = 0
	ToTheMoonRemoveObstacleReq_ENET_IS_RELIABLE ToTheMoonRemoveObstacleReq_CmdId = 1
	ToTheMoonRemoveObstacleReq_IS_ALLOW_CLIENT  ToTheMoonRemoveObstacleReq_CmdId = 1
)

// Enum value maps for ToTheMoonRemoveObstacleReq_CmdId.
var (
	ToTheMoonRemoveObstacleReq_CmdId_name = map[int32]string{
		0:    "NONE",
		6190: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonRemoveObstacleReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6190,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonRemoveObstacleReq_CmdId) Enum() *ToTheMoonRemoveObstacleReq_CmdId {
	p := new(ToTheMoonRemoveObstacleReq_CmdId)
	*p = x
	return p
}

func (x ToTheMoonRemoveObstacleReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonRemoveObstacleReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[12].Descriptor()
}

func (ToTheMoonRemoveObstacleReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[12]
}

func (x ToTheMoonRemoveObstacleReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonRemoveObstacleReq_CmdId.Descriptor instead.
func (ToTheMoonRemoveObstacleReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{11, 0}
}

type ToTheMoonRemoveObstacleReq_ObstacleType int32

const (
	ToTheMoonRemoveObstacleReq_Box     ToTheMoonRemoveObstacleReq_ObstacleType = 0
	ToTheMoonRemoveObstacleReq_Capsule ToTheMoonRemoveObstacleReq_ObstacleType = 1
)

// Enum value maps for ToTheMoonRemoveObstacleReq_ObstacleType.
var (
	ToTheMoonRemoveObstacleReq_ObstacleType_name = map[int32]string{
		0: "Box",
		1: "Capsule",
	}
	ToTheMoonRemoveObstacleReq_ObstacleType_value = map[string]int32{
		"Box":     0,
		"Capsule": 1,
	}
)

func (x ToTheMoonRemoveObstacleReq_ObstacleType) Enum() *ToTheMoonRemoveObstacleReq_ObstacleType {
	p := new(ToTheMoonRemoveObstacleReq_ObstacleType)
	*p = x
	return p
}

func (x ToTheMoonRemoveObstacleReq_ObstacleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonRemoveObstacleReq_ObstacleType) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[13].Descriptor()
}

func (ToTheMoonRemoveObstacleReq_ObstacleType) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[13]
}

func (x ToTheMoonRemoveObstacleReq_ObstacleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonRemoveObstacleReq_ObstacleType.Descriptor instead.
func (ToTheMoonRemoveObstacleReq_ObstacleType) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{11, 1}
}

type ToTheMoonRemoveObstacleRsp_CmdId int32

const (
	ToTheMoonRemoveObstacleRsp_NONE             ToTheMoonRemoveObstacleRsp_CmdId = 0
	ToTheMoonRemoveObstacleRsp_CMD_ID           ToTheMoonRemoveObstacleRsp_CmdId = 6173
	ToTheMoonRemoveObstacleRsp_ENET_CHANNEL_ID  ToTheMoonRemoveObstacleRsp_CmdId = 0
	ToTheMoonRemoveObstacleRsp_ENET_IS_RELIABLE ToTheMoonRemoveObstacleRsp_CmdId = 1
)

// Enum value maps for ToTheMoonRemoveObstacleRsp_CmdId.
var (
	ToTheMoonRemoveObstacleRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		6173: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ToTheMoonRemoveObstacleRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6173,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ToTheMoonRemoveObstacleRsp_CmdId) Enum() *ToTheMoonRemoveObstacleRsp_CmdId {
	p := new(ToTheMoonRemoveObstacleRsp_CmdId)
	*p = x
	return p
}

func (x ToTheMoonRemoveObstacleRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonRemoveObstacleRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[14].Descriptor()
}

func (ToTheMoonRemoveObstacleRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[14]
}

func (x ToTheMoonRemoveObstacleRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonRemoveObstacleRsp_CmdId.Descriptor instead.
func (ToTheMoonRemoveObstacleRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{12, 0}
}

type ToTheMoonObstaclesModifyNotify_CmdId int32

const (
	ToTheMoonObstaclesModifyNotify_NONE             ToTheMoonObstaclesModifyNotify_CmdId = 0
	ToTheMoonObstaclesModifyNotify_CMD_ID           ToTheMoonObstaclesModifyNotify_CmdId = 6199
	ToTheMoonObstaclesModifyNotify_ENET_CHANNEL_ID  ToTheMoonObstaclesModifyNotify_CmdId = 0
	ToTheMoonObstaclesModifyNotify_ENET_IS_RELIABLE ToTheMoonObstaclesModifyNotify_CmdId = 1
	ToTheMoonObstaclesModifyNotify_IS_ALLOW_CLIENT  ToTheMoonObstaclesModifyNotify_CmdId = 1
)

// Enum value maps for ToTheMoonObstaclesModifyNotify_CmdId.
var (
	ToTheMoonObstaclesModifyNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		6199: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ToTheMoonObstaclesModifyNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           6199,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ToTheMoonObstaclesModifyNotify_CmdId) Enum() *ToTheMoonObstaclesModifyNotify_CmdId {
	p := new(ToTheMoonObstaclesModifyNotify_CmdId)
	*p = x
	return p
}

func (x ToTheMoonObstaclesModifyNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToTheMoonObstaclesModifyNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_tothemoon_proto_enumTypes[15].Descriptor()
}

func (ToTheMoonObstaclesModifyNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_tothemoon_proto_enumTypes[15]
}

func (x ToTheMoonObstaclesModifyNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToTheMoonObstaclesModifyNotify_CmdId.Descriptor instead.
func (ToTheMoonObstaclesModifyNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{13, 0}
}

type ToTheMoonQueryPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationPos  *Vector                           `protobuf:"bytes,9,opt,name=destination_pos,json=destinationPos,proto3" json:"destination_pos,omitempty"`
	FuzzyRange      int32                             `protobuf:"varint,15,opt,name=fuzzy_range,json=fuzzyRange,proto3" json:"fuzzy_range,omitempty"`
	QueryType       ToTheMoonQueryPathReq_OptionType  `protobuf:"varint,8,opt,name=query_type,json=queryType,proto3,enum=proto.ToTheMoonQueryPathReq_OptionType" json:"query_type,omitempty"`
	AstarMethod     ToTheMoonQueryPathReq_AStarMethod `protobuf:"varint,1,opt,name=astar_method,json=astarMethod,proto3,enum=proto.ToTheMoonQueryPathReq_AStarMethod" json:"astar_method,omitempty"`
	SceneId         uint32                            `protobuf:"varint,6,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	QueryId         int32                             `protobuf:"varint,11,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	FilterType      ToTheMoonQueryPathReq_FilterType  `protobuf:"varint,3,opt,name=filter_type,json=filterType,proto3,enum=proto.ToTheMoonQueryPathReq_FilterType" json:"filter_type,omitempty"`
	Refined         bool                              `protobuf:"varint,13,opt,name=refined,proto3" json:"refined,omitempty"`
	UseFullNeighbor bool                              `protobuf:"varint,5,opt,name=use_full_neighbor,json=useFullNeighbor,proto3" json:"use_full_neighbor,omitempty"`
	SourcePos       *Vector                           `protobuf:"bytes,10,opt,name=source_pos,json=sourcePos,proto3" json:"source_pos,omitempty"`
}

func (x *ToTheMoonQueryPathReq) Reset() {
	*x = ToTheMoonQueryPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonQueryPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonQueryPathReq) ProtoMessage() {}

func (x *ToTheMoonQueryPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonQueryPathReq.ProtoReflect.Descriptor instead.
func (*ToTheMoonQueryPathReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{0}
}

func (x *ToTheMoonQueryPathReq) GetDestinationPos() *Vector {
	if x != nil {
		return x.DestinationPos
	}
	return nil
}

func (x *ToTheMoonQueryPathReq) GetFuzzyRange() int32 {
	if x != nil {
		return x.FuzzyRange
	}
	return 0
}

func (x *ToTheMoonQueryPathReq) GetQueryType() ToTheMoonQueryPathReq_OptionType {
	if x != nil {
		return x.QueryType
	}
	return ToTheMoonQueryPathReq_OPTION_NONE
}

func (x *ToTheMoonQueryPathReq) GetAstarMethod() ToTheMoonQueryPathReq_AStarMethod {
	if x != nil {
		return x.AstarMethod
	}
	return ToTheMoonQueryPathReq_Classic
}

func (x *ToTheMoonQueryPathReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *ToTheMoonQueryPathReq) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *ToTheMoonQueryPathReq) GetFilterType() ToTheMoonQueryPathReq_FilterType {
	if x != nil {
		return x.FilterType
	}
	return ToTheMoonQueryPathReq_All
}

func (x *ToTheMoonQueryPathReq) GetRefined() bool {
	if x != nil {
		return x.Refined
	}
	return false
}

func (x *ToTheMoonQueryPathReq) GetUseFullNeighbor() bool {
	if x != nil {
		return x.UseFullNeighbor
	}
	return false
}

func (x *ToTheMoonQueryPathReq) GetSourcePos() *Vector {
	if x != nil {
		return x.SourcePos
	}
	return nil
}

type ToTheMoonQueryPathRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryStatus ToTheMoonQueryPathRsp_PathStatusType `protobuf:"varint,7,opt,name=query_status,json=queryStatus,proto3,enum=proto.ToTheMoonQueryPathRsp_PathStatusType" json:"query_status,omitempty"`
	Index       []int64                              `protobuf:"varint,3,rep,packed,name=index,proto3" json:"index,omitempty"`
	Corners     []*Vector                            `protobuf:"bytes,14,rep,name=corners,proto3" json:"corners,omitempty"`
	Level       []int32                              `protobuf:"varint,1,rep,packed,name=level,proto3" json:"level,omitempty"`
	Retcode     int32                                `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	QueryId     int32                                `protobuf:"varint,9,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
}

func (x *ToTheMoonQueryPathRsp) Reset() {
	*x = ToTheMoonQueryPathRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonQueryPathRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonQueryPathRsp) ProtoMessage() {}

func (x *ToTheMoonQueryPathRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonQueryPathRsp.ProtoReflect.Descriptor instead.
func (*ToTheMoonQueryPathRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{1}
}

func (x *ToTheMoonQueryPathRsp) GetQueryStatus() ToTheMoonQueryPathRsp_PathStatusType {
	if x != nil {
		return x.QueryStatus
	}
	return ToTheMoonQueryPathRsp_STATUS_FAIL
}

func (x *ToTheMoonQueryPathRsp) GetIndex() []int64 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *ToTheMoonQueryPathRsp) GetCorners() []*Vector {
	if x != nil {
		return x.Corners
	}
	return nil
}

func (x *ToTheMoonQueryPathRsp) GetLevel() []int32 {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *ToTheMoonQueryPathRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ToTheMoonQueryPathRsp) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

type ToTheMoonPingNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToTheMoonPingNotify) Reset() {
	*x = ToTheMoonPingNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonPingNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonPingNotify) ProtoMessage() {}

func (x *ToTheMoonPingNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonPingNotify.ProtoReflect.Descriptor instead.
func (*ToTheMoonPingNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{2}
}

type ToTheMoonEnterSceneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	SceneId uint32 `protobuf:"varint,15,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *ToTheMoonEnterSceneReq) Reset() {
	*x = ToTheMoonEnterSceneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonEnterSceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonEnterSceneReq) ProtoMessage() {}

func (x *ToTheMoonEnterSceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonEnterSceneReq.ProtoReflect.Descriptor instead.
func (*ToTheMoonEnterSceneReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{3}
}

func (x *ToTheMoonEnterSceneReq) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ToTheMoonEnterSceneReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type ToTheMoonEnterSceneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ToTheMoonEnterSceneRsp) Reset() {
	*x = ToTheMoonEnterSceneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonEnterSceneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonEnterSceneRsp) ProtoMessage() {}

func (x *ToTheMoonEnterSceneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonEnterSceneRsp.ProtoReflect.Descriptor instead.
func (*ToTheMoonEnterSceneRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{4}
}

func (x *ToTheMoonEnterSceneRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ToTheMoonObstacleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        ToTheMoonObstacleInfo_ShapeType `protobuf:"varint,2,opt,name=type,proto3,enum=proto.ToTheMoonObstacleInfo_ShapeType" json:"type,omitempty"`
	HandleId    int32                           `protobuf:"varint,11,opt,name=handle_id,json=handleId,proto3" json:"handle_id,omitempty"`
	Rotation    *MathQuaternion                 `protobuf:"bytes,7,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Center      *Vector                         `protobuf:"bytes,13,opt,name=center,proto3" json:"center,omitempty"`
	HalfExtents *Vector                         `protobuf:"bytes,14,opt,name=half_extents,json=halfExtents,proto3" json:"half_extents,omitempty"`
}

func (x *ToTheMoonObstacleInfo) Reset() {
	*x = ToTheMoonObstacleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonObstacleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonObstacleInfo) ProtoMessage() {}

func (x *ToTheMoonObstacleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonObstacleInfo.ProtoReflect.Descriptor instead.
func (*ToTheMoonObstacleInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{5}
}

func (x *ToTheMoonObstacleInfo) GetType() ToTheMoonObstacleInfo_ShapeType {
	if x != nil {
		return x.Type
	}
	return ToTheMoonObstacleInfo_OBSTACLE_SHAPE_CAPSULE
}

func (x *ToTheMoonObstacleInfo) GetHandleId() int32 {
	if x != nil {
		return x.HandleId
	}
	return 0
}

func (x *ToTheMoonObstacleInfo) GetRotation() *MathQuaternion {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *ToTheMoonObstacleInfo) GetCenter() *Vector {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *ToTheMoonObstacleInfo) GetHalfExtents() *Vector {
	if x != nil {
		return x.HalfExtents
	}
	return nil
}

type ToTheMoonAddObstacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseEdge  bool                   `protobuf:"varint,12,opt,name=use_edge,json=useEdge,proto3" json:"use_edge,omitempty"`
	Obstacle *ToTheMoonObstacleInfo `protobuf:"bytes,13,opt,name=obstacle,proto3" json:"obstacle,omitempty"`
	QueryId  int32                  `protobuf:"varint,9,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	SceneId  uint32                 `protobuf:"varint,3,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *ToTheMoonAddObstacleReq) Reset() {
	*x = ToTheMoonAddObstacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonAddObstacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonAddObstacleReq) ProtoMessage() {}

func (x *ToTheMoonAddObstacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonAddObstacleReq.ProtoReflect.Descriptor instead.
func (*ToTheMoonAddObstacleReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{6}
}

func (x *ToTheMoonAddObstacleReq) GetUseEdge() bool {
	if x != nil {
		return x.UseEdge
	}
	return false
}

func (x *ToTheMoonAddObstacleReq) GetObstacle() *ToTheMoonObstacleInfo {
	if x != nil {
		return x.Obstacle
	}
	return nil
}

func (x *ToTheMoonAddObstacleReq) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *ToTheMoonAddObstacleReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type DynamicSVONode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int64   `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Area     int32   `protobuf:"varint,5,opt,name=area,proto3" json:"area,omitempty"`
	ReferPos *Vector `protobuf:"bytes,1,opt,name=refer_pos,json=referPos,proto3" json:"refer_pos,omitempty"`
}

func (x *DynamicSVONode) Reset() {
	*x = DynamicSVONode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSVONode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSVONode) ProtoMessage() {}

func (x *DynamicSVONode) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSVONode.ProtoReflect.Descriptor instead.
func (*DynamicSVONode) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{7}
}

func (x *DynamicSVONode) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DynamicSVONode) GetArea() int32 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *DynamicSVONode) GetReferPos() *Vector {
	if x != nil {
		return x.ReferPos
	}
	return nil
}

type DynamicLayerNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32             `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	Nodes []*DynamicSVONode `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *DynamicLayerNodes) Reset() {
	*x = DynamicLayerNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicLayerNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicLayerNodes) ProtoMessage() {}

func (x *DynamicLayerNodes) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicLayerNodes.ProtoReflect.Descriptor instead.
func (*DynamicLayerNodes) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{8}
}

func (x *DynamicLayerNodes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *DynamicLayerNodes) GetNodes() []*DynamicSVONode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type DynamicNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*DynamicLayerNodes `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *DynamicNodes) Reset() {
	*x = DynamicNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicNodes) ProtoMessage() {}

func (x *DynamicNodes) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicNodes.ProtoReflect.Descriptor instead.
func (*DynamicNodes) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{9}
}

func (x *DynamicNodes) GetNodes() []*DynamicLayerNodes {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ToTheMoonAddObstacleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicNodes *DynamicNodes `protobuf:"bytes,2,opt,name=dynamic_nodes,json=dynamicNodes,proto3" json:"dynamic_nodes,omitempty"`
	QueryId      int32         `protobuf:"varint,13,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Retcode      int32         `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ToTheMoonAddObstacleRsp) Reset() {
	*x = ToTheMoonAddObstacleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonAddObstacleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonAddObstacleRsp) ProtoMessage() {}

func (x *ToTheMoonAddObstacleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonAddObstacleRsp.ProtoReflect.Descriptor instead.
func (*ToTheMoonAddObstacleRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{10}
}

func (x *ToTheMoonAddObstacleRsp) GetDynamicNodes() *DynamicNodes {
	if x != nil {
		return x.DynamicNodes
	}
	return nil
}

func (x *ToTheMoonAddObstacleRsp) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *ToTheMoonAddObstacleRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ToTheMoonRemoveObstacleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle  int32  `protobuf:"varint,12,opt,name=handle,proto3" json:"handle,omitempty"`
	SceneId uint32 `protobuf:"varint,10,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	QueryId int32  `protobuf:"varint,11,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
}

func (x *ToTheMoonRemoveObstacleReq) Reset() {
	*x = ToTheMoonRemoveObstacleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonRemoveObstacleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonRemoveObstacleReq) ProtoMessage() {}

func (x *ToTheMoonRemoveObstacleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonRemoveObstacleReq.ProtoReflect.Descriptor instead.
func (*ToTheMoonRemoveObstacleReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{11}
}

func (x *ToTheMoonRemoveObstacleReq) GetHandle() int32 {
	if x != nil {
		return x.Handle
	}
	return 0
}

func (x *ToTheMoonRemoveObstacleReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *ToTheMoonRemoveObstacleReq) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

type ToTheMoonRemoveObstacleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId      int32         `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Retcode      int32         `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DynamicNodes *DynamicNodes `protobuf:"bytes,8,opt,name=dynamic_nodes,json=dynamicNodes,proto3" json:"dynamic_nodes,omitempty"`
}

func (x *ToTheMoonRemoveObstacleRsp) Reset() {
	*x = ToTheMoonRemoveObstacleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonRemoveObstacleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonRemoveObstacleRsp) ProtoMessage() {}

func (x *ToTheMoonRemoveObstacleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonRemoveObstacleRsp.ProtoReflect.Descriptor instead.
func (*ToTheMoonRemoveObstacleRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{12}
}

func (x *ToTheMoonRemoveObstacleRsp) GetQueryId() int32 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *ToTheMoonRemoveObstacleRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ToTheMoonRemoveObstacleRsp) GetDynamicNodes() *DynamicNodes {
	if x != nil {
		return x.DynamicNodes
	}
	return nil
}

type ToTheMoonObstaclesModifyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddObstacles      []*ToTheMoonObstacleInfo `protobuf:"bytes,4,rep,name=add_obstacles,json=addObstacles,proto3" json:"add_obstacles,omitempty"`
	RemoveObstacleIds []int32                  `protobuf:"varint,13,rep,packed,name=remove_obstacle_ids,json=removeObstacleIds,proto3" json:"remove_obstacle_ids,omitempty"`
	SceneId           uint32                   `protobuf:"varint,15,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	UseEdge           bool                     `protobuf:"varint,1,opt,name=use_edge,json=useEdge,proto3" json:"use_edge,omitempty"`
}

func (x *ToTheMoonObstaclesModifyNotify) Reset() {
	*x = ToTheMoonObstaclesModifyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_tothemoon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTheMoonObstaclesModifyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTheMoonObstaclesModifyNotify) ProtoMessage() {}

func (x *ToTheMoonObstaclesModifyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_tothemoon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTheMoonObstaclesModifyNotify.ProtoReflect.Descriptor instead.
func (*ToTheMoonObstaclesModifyNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_tothemoon_proto_rawDescGZIP(), []int{13}
}

func (x *ToTheMoonObstaclesModifyNotify) GetAddObstacles() []*ToTheMoonObstacleInfo {
	if x != nil {
		return x.AddObstacles
	}
	return nil
}

func (x *ToTheMoonObstaclesModifyNotify) GetRemoveObstacleIds() []int32 {
	if x != nil {
		return x.RemoveObstacleIds
	}
	return nil
}

func (x *ToTheMoonObstaclesModifyNotify) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *ToTheMoonObstaclesModifyNotify) GetUseEdge() bool {
	if x != nil {
		return x.UseEdge
	}
	return false
}

var File_cmd_cmd_tothemoon_proto protoreflect.FileDescriptor

var file_cmd_cmd_tothemoon_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x68, 0x65, 0x6d,
	0x6f, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82,
	0x06, 0x0a, 0x15, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x46, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f,
	0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x61, 0x73, 0x74,
	0x61, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x53,
	0x74, 0x61, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x61, 0x73, 0x74, 0x61, 0x72,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d,
	0x6f, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9c, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x30,
	0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01,
	0x22, 0x46, 0x0a, 0x0b, 0x41, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x22, 0x29, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x69, 0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x10, 0x02, 0x22, 0x88, 0x03, 0x0a, 0x15, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x54, 0x68,
	0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x73,
	0x70, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb6, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x22, 0x79,
	0x0a, 0x13, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xe0, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x16, 0x54, 0x6f,
	0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf7, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x81, 0x01,
	0x0a, 0x16, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xdb, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xbd, 0x02, 0x0a, 0x15, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x4f,
	0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x68, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x0c, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0b, 0x68, 0x61, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x3f, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x4f, 0x42, 0x53, 0x54, 0x41, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f,
	0x43, 0x41, 0x50, 0x53, 0x55, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x42, 0x53,
	0x54, 0x41, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x58, 0x10,
	0x01, 0x22, 0x88, 0x02, 0x0a, 0x17, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x45, 0x64, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6f, 0x62, 0x73, 0x74,
	0x61, 0x63, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74,
	0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe9, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x66, 0x0a, 0x0e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x56, 0x4f, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x22, 0x56, 0x0a, 0x11, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2b, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x56,
	0x4f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x0c,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd7, 0x01, 0x0a,
	0x17, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x4f, 0x62, 0x73,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xd7, 0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x54, 0x6f, 0x54, 0x68, 0x65,
	0x4d, 0x6f, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xae, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x24, 0x0a, 0x0c, 0x4f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x10, 0x01, 0x22, 0xda, 0x01,
	0x0a, 0x1a, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0c, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9d, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xad, 0x02, 0x0a, 0x1e, 0x54,
	0x6f, 0x54, 0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a,
	0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x54,
	0x68, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x61,
	0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x45, 0x64, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xb7, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d,
	0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_tothemoon_proto_rawDescOnce sync.Once
	file_cmd_cmd_tothemoon_proto_rawDescData = file_cmd_cmd_tothemoon_proto_rawDesc
)

func file_cmd_cmd_tothemoon_proto_rawDescGZIP() []byte {
	file_cmd_cmd_tothemoon_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_tothemoon_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_tothemoon_proto_rawDescData)
	})
	return file_cmd_cmd_tothemoon_proto_rawDescData
}

var file_cmd_cmd_tothemoon_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_cmd_cmd_tothemoon_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cmd_cmd_tothemoon_proto_goTypes = []interface{}{
	(ToTheMoonQueryPathReq_CmdId)(0),             // 0: proto.ToTheMoonQueryPathReq.CmdId
	(ToTheMoonQueryPathReq_OptionType)(0),        // 1: proto.ToTheMoonQueryPathReq.OptionType
	(ToTheMoonQueryPathReq_AStarMethod)(0),       // 2: proto.ToTheMoonQueryPathReq.AStarMethod
	(ToTheMoonQueryPathReq_FilterType)(0),        // 3: proto.ToTheMoonQueryPathReq.FilterType
	(ToTheMoonQueryPathRsp_CmdId)(0),             // 4: proto.ToTheMoonQueryPathRsp.CmdId
	(ToTheMoonQueryPathRsp_PathStatusType)(0),    // 5: proto.ToTheMoonQueryPathRsp.PathStatusType
	(ToTheMoonPingNotify_CmdId)(0),               // 6: proto.ToTheMoonPingNotify.CmdId
	(ToTheMoonEnterSceneReq_CmdId)(0),            // 7: proto.ToTheMoonEnterSceneReq.CmdId
	(ToTheMoonEnterSceneRsp_CmdId)(0),            // 8: proto.ToTheMoonEnterSceneRsp.CmdId
	(ToTheMoonObstacleInfo_ShapeType)(0),         // 9: proto.ToTheMoonObstacleInfo.ShapeType
	(ToTheMoonAddObstacleReq_CmdId)(0),           // 10: proto.ToTheMoonAddObstacleReq.CmdId
	(ToTheMoonAddObstacleRsp_CmdId)(0),           // 11: proto.ToTheMoonAddObstacleRsp.CmdId
	(ToTheMoonRemoveObstacleReq_CmdId)(0),        // 12: proto.ToTheMoonRemoveObstacleReq.CmdId
	(ToTheMoonRemoveObstacleReq_ObstacleType)(0), // 13: proto.ToTheMoonRemoveObstacleReq.ObstacleType
	(ToTheMoonRemoveObstacleRsp_CmdId)(0),        // 14: proto.ToTheMoonRemoveObstacleRsp.CmdId
	(ToTheMoonObstaclesModifyNotify_CmdId)(0),    // 15: proto.ToTheMoonObstaclesModifyNotify.CmdId
	(*ToTheMoonQueryPathReq)(nil),                // 16: proto.ToTheMoonQueryPathReq
	(*ToTheMoonQueryPathRsp)(nil),                // 17: proto.ToTheMoonQueryPathRsp
	(*ToTheMoonPingNotify)(nil),                  // 18: proto.ToTheMoonPingNotify
	(*ToTheMoonEnterSceneReq)(nil),               // 19: proto.ToTheMoonEnterSceneReq
	(*ToTheMoonEnterSceneRsp)(nil),               // 20: proto.ToTheMoonEnterSceneRsp
	(*ToTheMoonObstacleInfo)(nil),                // 21: proto.ToTheMoonObstacleInfo
	(*ToTheMoonAddObstacleReq)(nil),              // 22: proto.ToTheMoonAddObstacleReq
	(*DynamicSVONode)(nil),                       // 23: proto.DynamicSVONode
	(*DynamicLayerNodes)(nil),                    // 24: proto.DynamicLayerNodes
	(*DynamicNodes)(nil),                         // 25: proto.DynamicNodes
	(*ToTheMoonAddObstacleRsp)(nil),              // 26: proto.ToTheMoonAddObstacleRsp
	(*ToTheMoonRemoveObstacleReq)(nil),           // 27: proto.ToTheMoonRemoveObstacleReq
	(*ToTheMoonRemoveObstacleRsp)(nil),           // 28: proto.ToTheMoonRemoveObstacleRsp
	(*ToTheMoonObstaclesModifyNotify)(nil),       // 29: proto.ToTheMoonObstaclesModifyNotify
	(*Vector)(nil),                               // 30: proto.Vector
	(*MathQuaternion)(nil),                       // 31: proto.MathQuaternion
}
var file_cmd_cmd_tothemoon_proto_depIdxs = []int32{
	30, // 0: proto.ToTheMoonQueryPathReq.destination_pos:type_name -> proto.Vector
	1,  // 1: proto.ToTheMoonQueryPathReq.query_type:type_name -> proto.ToTheMoonQueryPathReq.OptionType
	2,  // 2: proto.ToTheMoonQueryPathReq.astar_method:type_name -> proto.ToTheMoonQueryPathReq.AStarMethod
	3,  // 3: proto.ToTheMoonQueryPathReq.filter_type:type_name -> proto.ToTheMoonQueryPathReq.FilterType
	30, // 4: proto.ToTheMoonQueryPathReq.source_pos:type_name -> proto.Vector
	5,  // 5: proto.ToTheMoonQueryPathRsp.query_status:type_name -> proto.ToTheMoonQueryPathRsp.PathStatusType
	30, // 6: proto.ToTheMoonQueryPathRsp.corners:type_name -> proto.Vector
	9,  // 7: proto.ToTheMoonObstacleInfo.type:type_name -> proto.ToTheMoonObstacleInfo.ShapeType
	31, // 8: proto.ToTheMoonObstacleInfo.rotation:type_name -> proto.MathQuaternion
	30, // 9: proto.ToTheMoonObstacleInfo.center:type_name -> proto.Vector
	30, // 10: proto.ToTheMoonObstacleInfo.half_extents:type_name -> proto.Vector
	21, // 11: proto.ToTheMoonAddObstacleReq.obstacle:type_name -> proto.ToTheMoonObstacleInfo
	30, // 12: proto.DynamicSVONode.refer_pos:type_name -> proto.Vector
	23, // 13: proto.DynamicLayerNodes.nodes:type_name -> proto.DynamicSVONode
	24, // 14: proto.DynamicNodes.nodes:type_name -> proto.DynamicLayerNodes
	25, // 15: proto.ToTheMoonAddObstacleRsp.dynamic_nodes:type_name -> proto.DynamicNodes
	25, // 16: proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes:type_name -> proto.DynamicNodes
	21, // 17: proto.ToTheMoonObstaclesModifyNotify.add_obstacles:type_name -> proto.ToTheMoonObstacleInfo
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_cmd_cmd_tothemoon_proto_init() }
func file_cmd_cmd_tothemoon_proto_init() {
	if File_cmd_cmd_tothemoon_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_tothemoon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonQueryPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonQueryPathRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonPingNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonEnterSceneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonEnterSceneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonObstacleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonAddObstacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSVONode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicLayerNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonAddObstacleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonRemoveObstacleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonRemoveObstacleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_tothemoon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTheMoonObstaclesModifyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_tothemoon_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_tothemoon_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_tothemoon_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_tothemoon_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_tothemoon_proto_msgTypes,
	}.Build()
	File_cmd_cmd_tothemoon_proto = out.File
	file_cmd_cmd_tothemoon_proto_rawDesc = nil
	file_cmd_cmd_tothemoon_proto_goTypes = nil
	file_cmd_cmd_tothemoon_proto_depIdxs = nil
}
