// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_mail.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRedisMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType      MailAddOpType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=proto.MailAddOpType" json:"op_type,omitempty"`
	MailBin     *MailBin      `protobuf:"bytes,2,opt,name=mail_bin,json=mailBin,proto3" json:"mail_bin,omitempty"`
	Ticket      string        `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Transaction string        `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *AddRedisMailReq) Reset() {
	*x = AddRedisMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRedisMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRedisMailReq) ProtoMessage() {}

func (x *AddRedisMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRedisMailReq.ProtoReflect.Descriptor instead.
func (*AddRedisMailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{0}
}

func (x *AddRedisMailReq) GetOpType() MailAddOpType {
	if x != nil {
		return x.OpType
	}
	return MailAddOpType_MAIL_ADD_OP_NONE
}

func (x *AddRedisMailReq) GetMailBin() *MailBin {
	if x != nil {
		return x.MailBin
	}
	return nil
}

func (x *AddRedisMailReq) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *AddRedisMailReq) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

type AddRedisMailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OpType      MailAddOpType `protobuf:"varint,2,opt,name=op_type,json=opType,proto3,enum=proto.MailAddOpType" json:"op_type,omitempty"`
	Ticket      string        `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Transaction string        `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *AddRedisMailRsp) Reset() {
	*x = AddRedisMailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRedisMailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRedisMailRsp) ProtoMessage() {}

func (x *AddRedisMailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRedisMailRsp.ProtoReflect.Descriptor instead.
func (*AddRedisMailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{1}
}

func (x *AddRedisMailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AddRedisMailRsp) GetOpType() MailAddOpType {
	if x != nil {
		return x.OpType
	}
	return MailAddOpType_MAIL_ADD_OP_NONE
}

func (x *AddRedisMailRsp) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *AddRedisMailRsp) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

type DelRedisMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType     MailDelOpType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=proto.MailDelOpType" json:"op_type,omitempty"`
	MailIdList []uint32      `protobuf:"varint,2,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
	TicketList []string      `protobuf:"bytes,3,rep,name=ticket_list,json=ticketList,proto3" json:"ticket_list,omitempty"`
}

func (x *DelRedisMailReq) Reset() {
	*x = DelRedisMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRedisMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRedisMailReq) ProtoMessage() {}

func (x *DelRedisMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRedisMailReq.ProtoReflect.Descriptor instead.
func (*DelRedisMailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{2}
}

func (x *DelRedisMailReq) GetOpType() MailDelOpType {
	if x != nil {
		return x.OpType
	}
	return MailDelOpType_MAIL_DEL_OP_NONE
}

func (x *DelRedisMailReq) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

func (x *DelRedisMailReq) GetTicketList() []string {
	if x != nil {
		return x.TicketList
	}
	return nil
}

type DelRedisMailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OpType     MailDelOpType `protobuf:"varint,2,opt,name=op_type,json=opType,proto3,enum=proto.MailDelOpType" json:"op_type,omitempty"`
	MailIdList []uint32      `protobuf:"varint,3,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
}

func (x *DelRedisMailRsp) Reset() {
	*x = DelRedisMailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRedisMailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRedisMailRsp) ProtoMessage() {}

func (x *DelRedisMailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRedisMailRsp.ProtoReflect.Descriptor instead.
func (*DelRedisMailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{3}
}

func (x *DelRedisMailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *DelRedisMailRsp) GetOpType() MailDelOpType {
	if x != nil {
		return x.OpType
	}
	return MailDelOpType_MAIL_DEL_OP_NONE
}

func (x *DelRedisMailRsp) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

type GetRedisMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType                      MailGetOPType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=proto.MailGetOPType" json:"op_type,omitempty"`
	GetType                     MailGetType   `protobuf:"varint,2,opt,name=get_type,json=getType,proto3,enum=proto.MailGetType" json:"get_type,omitempty"`
	MailIdList                  []uint32      `protobuf:"varint,3,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
	IsCollectibleMailTransfered bool          `protobuf:"varint,4,opt,name=is_collectible_mail_transfered,json=isCollectibleMailTransfered,proto3" json:"is_collectible_mail_transfered,omitempty"`
}

func (x *GetRedisMailReq) Reset() {
	*x = GetRedisMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisMailReq) ProtoMessage() {}

func (x *GetRedisMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisMailReq.ProtoReflect.Descriptor instead.
func (*GetRedisMailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{4}
}

func (x *GetRedisMailReq) GetOpType() MailGetOPType {
	if x != nil {
		return x.OpType
	}
	return MailGetOPType_MAIL_GET_OP_NONE
}

func (x *GetRedisMailReq) GetGetType() MailGetType {
	if x != nil {
		return x.GetType
	}
	return MailGetType_MAIL_GET_NONE
}

func (x *GetRedisMailReq) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

func (x *GetRedisMailReq) GetIsCollectibleMailTransfered() bool {
	if x != nil {
		return x.IsCollectibleMailTransfered
	}
	return false
}

type GetRedisMailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                     int32         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MailStrList                 [][]byte      `protobuf:"bytes,2,rep,name=mail_str_list,json=mailStrList,proto3" json:"mail_str_list,omitempty"`
	OpType                      MailGetOPType `protobuf:"varint,3,opt,name=op_type,json=opType,proto3,enum=proto.MailGetOPType" json:"op_type,omitempty"`
	IsTruncated                 bool          `protobuf:"varint,4,opt,name=is_truncated,json=isTruncated,proto3" json:"is_truncated,omitempty"`
	GetType                     MailGetType   `protobuf:"varint,5,opt,name=get_type,json=getType,proto3,enum=proto.MailGetType" json:"get_type,omitempty"`
	IsCollectibleMailTransfered bool          `protobuf:"varint,6,opt,name=is_collectible_mail_transfered,json=isCollectibleMailTransfered,proto3" json:"is_collectible_mail_transfered,omitempty"`
	Transaction                 string        `protobuf:"bytes,7,opt,name=transaction,proto3" json:"transaction,omitempty"`
	PageIndex                   uint32        `protobuf:"varint,8,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	TotalPageCount              uint32        `protobuf:"varint,9,opt,name=total_page_count,json=totalPageCount,proto3" json:"total_page_count,omitempty"`
}

func (x *GetRedisMailRsp) Reset() {
	*x = GetRedisMailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisMailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisMailRsp) ProtoMessage() {}

func (x *GetRedisMailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisMailRsp.ProtoReflect.Descriptor instead.
func (*GetRedisMailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{5}
}

func (x *GetRedisMailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetRedisMailRsp) GetMailStrList() [][]byte {
	if x != nil {
		return x.MailStrList
	}
	return nil
}

func (x *GetRedisMailRsp) GetOpType() MailGetOPType {
	if x != nil {
		return x.OpType
	}
	return MailGetOPType_MAIL_GET_OP_NONE
}

func (x *GetRedisMailRsp) GetIsTruncated() bool {
	if x != nil {
		return x.IsTruncated
	}
	return false
}

func (x *GetRedisMailRsp) GetGetType() MailGetType {
	if x != nil {
		return x.GetType
	}
	return MailGetType_MAIL_GET_NONE
}

func (x *GetRedisMailRsp) GetIsCollectibleMailTransfered() bool {
	if x != nil {
		return x.IsCollectibleMailTransfered
	}
	return false
}

func (x *GetRedisMailRsp) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *GetRedisMailRsp) GetPageIndex() uint32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetRedisMailRsp) GetTotalPageCount() uint32 {
	if x != nil {
		return x.TotalPageCount
	}
	return 0
}

type RedisMailChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateMailList []*MailRedisData `protobuf:"bytes,1,rep,name=update_mail_list,json=updateMailList,proto3" json:"update_mail_list,omitempty"`
	DelMailIdList  []uint32         `protobuf:"varint,2,rep,packed,name=del_mail_id_list,json=delMailIdList,proto3" json:"del_mail_id_list,omitempty"`
}

func (x *RedisMailChangeNotify) Reset() {
	*x = RedisMailChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisMailChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisMailChangeNotify) ProtoMessage() {}

func (x *RedisMailChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisMailChangeNotify.ProtoReflect.Descriptor instead.
func (*RedisMailChangeNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{6}
}

func (x *RedisMailChangeNotify) GetUpdateMailList() []*MailRedisData {
	if x != nil {
		return x.UpdateMailList
	}
	return nil
}

func (x *RedisMailChangeNotify) GetDelMailIdList() []uint32 {
	if x != nil {
		return x.DelMailIdList
	}
	return nil
}

type SendOfflineMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *OfflineMsgBin `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendOfflineMsgReq) Reset() {
	*x = SendOfflineMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfflineMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfflineMsgReq) ProtoMessage() {}

func (x *SendOfflineMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfflineMsgReq.ProtoReflect.Descriptor instead.
func (*SendOfflineMsgReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{7}
}

func (x *SendOfflineMsgReq) GetMsg() *OfflineMsgBin {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendOfflineMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Ticket  string `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *SendOfflineMsgRsp) Reset() {
	*x = SendOfflineMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfflineMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfflineMsgRsp) ProtoMessage() {}

func (x *SendOfflineMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfflineMsgRsp.ProtoReflect.Descriptor instead.
func (*SendOfflineMsgRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{8}
}

func (x *SendOfflineMsgRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SendOfflineMsgRsp) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

type NewOfflineMsgNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewOfflineMsgNotify) Reset() {
	*x = NewOfflineMsgNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOfflineMsgNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOfflineMsgNotify) ProtoMessage() {}

func (x *NewOfflineMsgNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOfflineMsgNotify.ProtoReflect.Descriptor instead.
func (*NewOfflineMsgNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{9}
}

type GetOfflineMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	IsLogin bool   `protobuf:"varint,2,opt,name=is_login,json=isLogin,proto3" json:"is_login,omitempty"`
}

func (x *GetOfflineMsgReq) Reset() {
	*x = GetOfflineMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfflineMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfflineMsgReq) ProtoMessage() {}

func (x *GetOfflineMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfflineMsgReq.ProtoReflect.Descriptor instead.
func (*GetOfflineMsgReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{10}
}

func (x *GetOfflineMsgReq) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetOfflineMsgReq) GetIsLogin() bool {
	if x != nil {
		return x.IsLogin
	}
	return false
}

type GetOfflineMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32            `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	LastIndex      uint32           `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	OfflineMsgList []*OfflineMsgBin `protobuf:"bytes,3,rep,name=offline_msg_list,json=offlineMsgList,proto3" json:"offline_msg_list,omitempty"`
	IsLogin        bool             `protobuf:"varint,4,opt,name=is_login,json=isLogin,proto3" json:"is_login,omitempty"`
}

func (x *GetOfflineMsgRsp) Reset() {
	*x = GetOfflineMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfflineMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfflineMsgRsp) ProtoMessage() {}

func (x *GetOfflineMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfflineMsgRsp.ProtoReflect.Descriptor instead.
func (*GetOfflineMsgRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{11}
}

func (x *GetOfflineMsgRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetOfflineMsgRsp) GetLastIndex() uint32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *GetOfflineMsgRsp) GetOfflineMsgList() []*OfflineMsgBin {
	if x != nil {
		return x.OfflineMsgList
	}
	return nil
}

func (x *GetOfflineMsgRsp) GetIsLogin() bool {
	if x != nil {
		return x.IsLogin
	}
	return false
}

type RemoveOfflineMsgNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *RemoveOfflineMsgNotify) Reset() {
	*x = RemoveOfflineMsgNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOfflineMsgNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOfflineMsgNotify) ProtoMessage() {}

func (x *RemoveOfflineMsgNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOfflineMsgNotify.ProtoReflect.Descriptor instead.
func (*RemoveOfflineMsgNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveOfflineMsgNotify) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ClearOfflineMsgNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearOfflineMsgNotify) Reset() {
	*x = ClearOfflineMsgNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearOfflineMsgNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearOfflineMsgNotify) ProtoMessage() {}

func (x *ClearOfflineMsgNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearOfflineMsgNotify.ProtoReflect.Descriptor instead.
func (*ClearOfflineMsgNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{13}
}

type UpdateRedisMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType     MailUpdateOpType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=proto.MailUpdateOpType" json:"op_type,omitempty"`
	MailIdList []uint32         `protobuf:"varint,2,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
}

func (x *UpdateRedisMailReq) Reset() {
	*x = UpdateRedisMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRedisMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRedisMailReq) ProtoMessage() {}

func (x *UpdateRedisMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRedisMailReq.ProtoReflect.Descriptor instead.
func (*UpdateRedisMailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRedisMailReq) GetOpType() MailUpdateOpType {
	if x != nil {
		return x.OpType
	}
	return MailUpdateOpType_MAIL_UPDATE_OP_NONE
}

func (x *UpdateRedisMailReq) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

type UpdateRedisMailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32            `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OpType     MailUpdateOpType `protobuf:"varint,2,opt,name=op_type,json=opType,proto3,enum=proto.MailUpdateOpType" json:"op_type,omitempty"`
	MailIdList []uint32         `protobuf:"varint,3,rep,packed,name=mail_id_list,json=mailIdList,proto3" json:"mail_id_list,omitempty"`
}

func (x *UpdateRedisMailRsp) Reset() {
	*x = UpdateRedisMailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRedisMailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRedisMailRsp) ProtoMessage() {}

func (x *UpdateRedisMailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRedisMailRsp.ProtoReflect.Descriptor instead.
func (*UpdateRedisMailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRedisMailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *UpdateRedisMailRsp) GetOpType() MailUpdateOpType {
	if x != nil {
		return x.OpType
	}
	return MailUpdateOpType_MAIL_UPDATE_OP_NONE
}

func (x *UpdateRedisMailRsp) GetMailIdList() []uint32 {
	if x != nil {
		return x.MailIdList
	}
	return nil
}

type GetRedisMailTransactionStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionList []string `protobuf:"bytes,2,rep,name=transaction_list,json=transactionList,proto3" json:"transaction_list,omitempty"`
}

func (x *GetRedisMailTransactionStatusReq) Reset() {
	*x = GetRedisMailTransactionStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisMailTransactionStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisMailTransactionStatusReq) ProtoMessage() {}

func (x *GetRedisMailTransactionStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisMailTransactionStatusReq.ProtoReflect.Descriptor instead.
func (*GetRedisMailTransactionStatusReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{16}
}

func (x *GetRedisMailTransactionStatusReq) GetTransactionList() []string {
	if x != nil {
		return x.TransactionList
	}
	return nil
}

type GetRedisMailTransactionStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32           `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TransactionStatusMap map[string]bool `protobuf:"bytes,2,rep,name=transaction_status_map,json=transactionStatusMap,proto3" json:"transaction_status_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetRedisMailTransactionStatusRsp) Reset() {
	*x = GetRedisMailTransactionStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisMailTransactionStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisMailTransactionStatusRsp) ProtoMessage() {}

func (x *GetRedisMailTransactionStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisMailTransactionStatusRsp.ProtoReflect.Descriptor instead.
func (*GetRedisMailTransactionStatusRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{17}
}

func (x *GetRedisMailTransactionStatusRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetRedisMailTransactionStatusRsp) GetTransactionStatusMap() map[string]bool {
	if x != nil {
		return x.TransactionStatusMap
	}
	return nil
}

type ClearUpRedisMailNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearUpRedisMailNotify) Reset() {
	*x = ClearUpRedisMailNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUpRedisMailNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUpRedisMailNotify) ProtoMessage() {}

func (x *ClearUpRedisMailNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUpRedisMailNotify.ProtoReflect.Descriptor instead.
func (*ClearUpRedisMailNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{18}
}

type CleanRedisMailNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CleanRedisMailNotify) Reset() {
	*x = CleanRedisMailNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanRedisMailNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanRedisMailNotify) ProtoMessage() {}

func (x *CleanRedisMailNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanRedisMailNotify.ProtoReflect.Descriptor instead.
func (*CleanRedisMailNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{19}
}

type ResendRedisMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailBinMap map[string]*MailBin `protobuf:"bytes,1,rep,name=mail_bin_map,json=mailBinMap,proto3" json:"mail_bin_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResendRedisMailReq) Reset() {
	*x = ResendRedisMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendRedisMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendRedisMailReq) ProtoMessage() {}

func (x *ResendRedisMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendRedisMailReq.ProtoReflect.Descriptor instead.
func (*ResendRedisMailReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{20}
}

func (x *ResendRedisMailReq) GetMailBinMap() map[string]*MailBin {
	if x != nil {
		return x.MailBinMap
	}
	return nil
}

type ResendRedisMailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode         int32           `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ResendStatusMap map[string]bool `protobuf:"bytes,2,rep,name=resend_status_map,json=resendStatusMap,proto3" json:"resend_status_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ResendRedisMailRsp) Reset() {
	*x = ResendRedisMailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_mail_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendRedisMailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendRedisMailRsp) ProtoMessage() {}

func (x *ResendRedisMailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_mail_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendRedisMailRsp.ProtoReflect.Descriptor instead.
func (*ResendRedisMailRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_mail_server_proto_rawDescGZIP(), []int{21}
}

func (x *ResendRedisMailRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ResendRedisMailRsp) GetResendStatusMap() map[string]bool {
	if x != nil {
		return x.ResendStatusMap
	}
	return nil
}

var File_server_only_cmd_mail_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_mail_server_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x62, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x69,
	0x6e, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c,
	0x41, 0x64, 0x64, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x6c,
	0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x7c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69,
	0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x6c, 0x4f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xd6, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x47, 0x65, 0x74, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x69, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x22, 0x80, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6d,
	0x61, 0x69, 0x6c, 0x53, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x4f, 0x50, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x08,
	0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x15,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3e, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0d, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b,
	0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x45, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0xa6,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3e, 0x0a, 0x10,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x52, 0x0e, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x22, 0x68, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfe,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x77, 0x0a,
	0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61,
	0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x47, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x18, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x70, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d,
	0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x69,
	0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x69, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x4d, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x69, 0x6e,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61,
	0x70, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_cmd_mail_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_mail_server_proto_rawDescData = file_server_only_cmd_mail_server_proto_rawDesc
)

func file_server_only_cmd_mail_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_mail_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_mail_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_mail_server_proto_rawDescData)
	})
	return file_server_only_cmd_mail_server_proto_rawDescData
}

var file_server_only_cmd_mail_server_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_server_only_cmd_mail_server_proto_goTypes = []interface{}{
	(*AddRedisMailReq)(nil),                  // 0: proto.AddRedisMailReq
	(*AddRedisMailRsp)(nil),                  // 1: proto.AddRedisMailRsp
	(*DelRedisMailReq)(nil),                  // 2: proto.DelRedisMailReq
	(*DelRedisMailRsp)(nil),                  // 3: proto.DelRedisMailRsp
	(*GetRedisMailReq)(nil),                  // 4: proto.GetRedisMailReq
	(*GetRedisMailRsp)(nil),                  // 5: proto.GetRedisMailRsp
	(*RedisMailChangeNotify)(nil),            // 6: proto.RedisMailChangeNotify
	(*SendOfflineMsgReq)(nil),                // 7: proto.SendOfflineMsgReq
	(*SendOfflineMsgRsp)(nil),                // 8: proto.SendOfflineMsgRsp
	(*NewOfflineMsgNotify)(nil),              // 9: proto.NewOfflineMsgNotify
	(*GetOfflineMsgReq)(nil),                 // 10: proto.GetOfflineMsgReq
	(*GetOfflineMsgRsp)(nil),                 // 11: proto.GetOfflineMsgRsp
	(*RemoveOfflineMsgNotify)(nil),           // 12: proto.RemoveOfflineMsgNotify
	(*ClearOfflineMsgNotify)(nil),            // 13: proto.ClearOfflineMsgNotify
	(*UpdateRedisMailReq)(nil),               // 14: proto.UpdateRedisMailReq
	(*UpdateRedisMailRsp)(nil),               // 15: proto.UpdateRedisMailRsp
	(*GetRedisMailTransactionStatusReq)(nil), // 16: proto.GetRedisMailTransactionStatusReq
	(*GetRedisMailTransactionStatusRsp)(nil), // 17: proto.GetRedisMailTransactionStatusRsp
	(*ClearUpRedisMailNotify)(nil),           // 18: proto.ClearUpRedisMailNotify
	(*CleanRedisMailNotify)(nil),             // 19: proto.CleanRedisMailNotify
	(*ResendRedisMailReq)(nil),               // 20: proto.ResendRedisMailReq
	(*ResendRedisMailRsp)(nil),               // 21: proto.ResendRedisMailRsp
	nil,                                      // 22: proto.GetRedisMailTransactionStatusRsp.TransactionStatusMapEntry
	nil,                                      // 23: proto.ResendRedisMailReq.MailBinMapEntry
	nil,                                      // 24: proto.ResendRedisMailRsp.ResendStatusMapEntry
	(MailAddOpType)(0),                       // 25: proto.MailAddOpType
	(*MailBin)(nil),                          // 26: proto.MailBin
	(MailDelOpType)(0),                       // 27: proto.MailDelOpType
	(MailGetOPType)(0),                       // 28: proto.MailGetOPType
	(MailGetType)(0),                         // 29: proto.MailGetType
	(*MailRedisData)(nil),                    // 30: proto.MailRedisData
	(*OfflineMsgBin)(nil),                    // 31: proto.OfflineMsgBin
	(MailUpdateOpType)(0),                    // 32: proto.MailUpdateOpType
}
var file_server_only_cmd_mail_server_proto_depIdxs = []int32{
	25, // 0: proto.AddRedisMailReq.op_type:type_name -> proto.MailAddOpType
	26, // 1: proto.AddRedisMailReq.mail_bin:type_name -> proto.MailBin
	25, // 2: proto.AddRedisMailRsp.op_type:type_name -> proto.MailAddOpType
	27, // 3: proto.DelRedisMailReq.op_type:type_name -> proto.MailDelOpType
	27, // 4: proto.DelRedisMailRsp.op_type:type_name -> proto.MailDelOpType
	28, // 5: proto.GetRedisMailReq.op_type:type_name -> proto.MailGetOPType
	29, // 6: proto.GetRedisMailReq.get_type:type_name -> proto.MailGetType
	28, // 7: proto.GetRedisMailRsp.op_type:type_name -> proto.MailGetOPType
	29, // 8: proto.GetRedisMailRsp.get_type:type_name -> proto.MailGetType
	30, // 9: proto.RedisMailChangeNotify.update_mail_list:type_name -> proto.MailRedisData
	31, // 10: proto.SendOfflineMsgReq.msg:type_name -> proto.OfflineMsgBin
	31, // 11: proto.GetOfflineMsgRsp.offline_msg_list:type_name -> proto.OfflineMsgBin
	32, // 12: proto.UpdateRedisMailReq.op_type:type_name -> proto.MailUpdateOpType
	32, // 13: proto.UpdateRedisMailRsp.op_type:type_name -> proto.MailUpdateOpType
	22, // 14: proto.GetRedisMailTransactionStatusRsp.transaction_status_map:type_name -> proto.GetRedisMailTransactionStatusRsp.TransactionStatusMapEntry
	23, // 15: proto.ResendRedisMailReq.mail_bin_map:type_name -> proto.ResendRedisMailReq.MailBinMapEntry
	24, // 16: proto.ResendRedisMailRsp.resend_status_map:type_name -> proto.ResendRedisMailRsp.ResendStatusMapEntry
	26, // 17: proto.ResendRedisMailReq.MailBinMapEntry.value:type_name -> proto.MailBin
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_server_only_cmd_mail_server_proto_init() }
func file_server_only_cmd_mail_server_proto_init() {
	if File_server_only_cmd_mail_server_proto != nil {
		return
	}
	file_server_only_bin_common_server_proto_init()
	file_server_only_redis_data_proto_init()
	file_server_only_enum_server_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_mail_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRedisMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRedisMailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRedisMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRedisMailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisMailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisMailChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfflineMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfflineMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOfflineMsgNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfflineMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfflineMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOfflineMsgNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearOfflineMsgNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRedisMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRedisMailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisMailTransactionStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisMailTransactionStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUpRedisMailNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanRedisMailNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendRedisMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_mail_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendRedisMailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_mail_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_mail_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_mail_server_proto_depIdxs,
		MessageInfos:      file_server_only_cmd_mail_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_mail_server_proto = out.File
	file_server_only_cmd_mail_server_proto_rawDesc = nil
	file_server_only_cmd_mail_server_proto_goTypes = nil
	file_server_only_cmd_mail_server_proto_depIdxs = nil
}
