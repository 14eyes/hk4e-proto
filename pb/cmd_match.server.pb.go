// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_match.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddMatchUnitReq_CmdId int32

const (
	AddMatchUnitReq_NONE   AddMatchUnitReq_CmdId = 0
	AddMatchUnitReq_CMD_ID AddMatchUnitReq_CmdId = 10926
)

// Enum value maps for AddMatchUnitReq_CmdId.
var (
	AddMatchUnitReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10926: "CMD_ID",
	}
	AddMatchUnitReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10926,
	}
)

func (x AddMatchUnitReq_CmdId) Enum() *AddMatchUnitReq_CmdId {
	p := new(AddMatchUnitReq_CmdId)
	*p = x
	return p
}

func (x AddMatchUnitReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddMatchUnitReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[0].Descriptor()
}

func (AddMatchUnitReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[0]
}

func (x AddMatchUnitReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddMatchUnitReq_CmdId.Descriptor instead.
func (AddMatchUnitReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{2, 0}
}

type AddMatchUnitRsp_CmdId int32

const (
	AddMatchUnitRsp_NONE   AddMatchUnitRsp_CmdId = 0
	AddMatchUnitRsp_CMD_ID AddMatchUnitRsp_CmdId = 10918
)

// Enum value maps for AddMatchUnitRsp_CmdId.
var (
	AddMatchUnitRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10918: "CMD_ID",
	}
	AddMatchUnitRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10918,
	}
)

func (x AddMatchUnitRsp_CmdId) Enum() *AddMatchUnitRsp_CmdId {
	p := new(AddMatchUnitRsp_CmdId)
	*p = x
	return p
}

func (x AddMatchUnitRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddMatchUnitRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[1].Descriptor()
}

func (AddMatchUnitRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[1]
}

func (x AddMatchUnitRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddMatchUnitRsp_CmdId.Descriptor instead.
func (AddMatchUnitRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{3, 0}
}

type MatchStartNotify_CmdId int32

const (
	MatchStartNotify_NONE   MatchStartNotify_CmdId = 0
	MatchStartNotify_CMD_ID MatchStartNotify_CmdId = 10925
)

// Enum value maps for MatchStartNotify_CmdId.
var (
	MatchStartNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10925: "CMD_ID",
	}
	MatchStartNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10925,
	}
)

func (x MatchStartNotify_CmdId) Enum() *MatchStartNotify_CmdId {
	p := new(MatchStartNotify_CmdId)
	*p = x
	return p
}

func (x MatchStartNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchStartNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[2].Descriptor()
}

func (MatchStartNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[2]
}

func (x MatchStartNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchStartNotify_CmdId.Descriptor instead.
func (MatchStartNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{4, 0}
}

type RemoveMatchUnitReq_CmdId int32

const (
	RemoveMatchUnitReq_NONE   RemoveMatchUnitReq_CmdId = 0
	RemoveMatchUnitReq_CMD_ID RemoveMatchUnitReq_CmdId = 10907
)

// Enum value maps for RemoveMatchUnitReq_CmdId.
var (
	RemoveMatchUnitReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10907: "CMD_ID",
	}
	RemoveMatchUnitReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10907,
	}
)

func (x RemoveMatchUnitReq_CmdId) Enum() *RemoveMatchUnitReq_CmdId {
	p := new(RemoveMatchUnitReq_CmdId)
	*p = x
	return p
}

func (x RemoveMatchUnitReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveMatchUnitReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[3].Descriptor()
}

func (RemoveMatchUnitReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[3]
}

func (x RemoveMatchUnitReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveMatchUnitReq_CmdId.Descriptor instead.
func (RemoveMatchUnitReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{5, 0}
}

type RemoveMatchUnitRsp_CmdId int32

const (
	RemoveMatchUnitRsp_NONE   RemoveMatchUnitRsp_CmdId = 0
	RemoveMatchUnitRsp_CMD_ID RemoveMatchUnitRsp_CmdId = 10902
)

// Enum value maps for RemoveMatchUnitRsp_CmdId.
var (
	RemoveMatchUnitRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10902: "CMD_ID",
	}
	RemoveMatchUnitRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10902,
	}
)

func (x RemoveMatchUnitRsp_CmdId) Enum() *RemoveMatchUnitRsp_CmdId {
	p := new(RemoveMatchUnitRsp_CmdId)
	*p = x
	return p
}

func (x RemoveMatchUnitRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveMatchUnitRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[4].Descriptor()
}

func (RemoveMatchUnitRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[4]
}

func (x RemoveMatchUnitRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveMatchUnitRsp_CmdId.Descriptor instead.
func (RemoveMatchUnitRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{6, 0}
}

type MatchUnitRemovedNotify_CmdId int32

const (
	MatchUnitRemovedNotify_NONE   MatchUnitRemovedNotify_CmdId = 0
	MatchUnitRemovedNotify_CMD_ID MatchUnitRemovedNotify_CmdId = 10931
)

// Enum value maps for MatchUnitRemovedNotify_CmdId.
var (
	MatchUnitRemovedNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10931: "CMD_ID",
	}
	MatchUnitRemovedNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10931,
	}
)

func (x MatchUnitRemovedNotify_CmdId) Enum() *MatchUnitRemovedNotify_CmdId {
	p := new(MatchUnitRemovedNotify_CmdId)
	*p = x
	return p
}

func (x MatchUnitRemovedNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchUnitRemovedNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[5].Descriptor()
}

func (MatchUnitRemovedNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[5]
}

func (x MatchUnitRemovedNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchUnitRemovedNotify_CmdId.Descriptor instead.
func (MatchUnitRemovedNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{7, 0}
}

type GuestUnitMatchSuccNotify_CmdId int32

const (
	GuestUnitMatchSuccNotify_NONE   GuestUnitMatchSuccNotify_CmdId = 0
	GuestUnitMatchSuccNotify_CMD_ID GuestUnitMatchSuccNotify_CmdId = 10929
)

// Enum value maps for GuestUnitMatchSuccNotify_CmdId.
var (
	GuestUnitMatchSuccNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10929: "CMD_ID",
	}
	GuestUnitMatchSuccNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10929,
	}
)

func (x GuestUnitMatchSuccNotify_CmdId) Enum() *GuestUnitMatchSuccNotify_CmdId {
	p := new(GuestUnitMatchSuccNotify_CmdId)
	*p = x
	return p
}

func (x GuestUnitMatchSuccNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuestUnitMatchSuccNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[6].Descriptor()
}

func (GuestUnitMatchSuccNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[6]
}

func (x GuestUnitMatchSuccNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuestUnitMatchSuccNotify_CmdId.Descriptor instead.
func (GuestUnitMatchSuccNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{8, 0}
}

type ConfirmGuestUnitReq_CmdId int32

const (
	ConfirmGuestUnitReq_NONE   ConfirmGuestUnitReq_CmdId = 0
	ConfirmGuestUnitReq_CMD_ID ConfirmGuestUnitReq_CmdId = 10922
)

// Enum value maps for ConfirmGuestUnitReq_CmdId.
var (
	ConfirmGuestUnitReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10922: "CMD_ID",
	}
	ConfirmGuestUnitReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10922,
	}
)

func (x ConfirmGuestUnitReq_CmdId) Enum() *ConfirmGuestUnitReq_CmdId {
	p := new(ConfirmGuestUnitReq_CmdId)
	*p = x
	return p
}

func (x ConfirmGuestUnitReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfirmGuestUnitReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[7].Descriptor()
}

func (ConfirmGuestUnitReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[7]
}

func (x ConfirmGuestUnitReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfirmGuestUnitReq_CmdId.Descriptor instead.
func (ConfirmGuestUnitReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{9, 0}
}

type ConfirmGuestUnitRsp_CmdId int32

const (
	ConfirmGuestUnitRsp_NONE   ConfirmGuestUnitRsp_CmdId = 0
	ConfirmGuestUnitRsp_CMD_ID ConfirmGuestUnitRsp_CmdId = 10944
)

// Enum value maps for ConfirmGuestUnitRsp_CmdId.
var (
	ConfirmGuestUnitRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10944: "CMD_ID",
	}
	ConfirmGuestUnitRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10944,
	}
)

func (x ConfirmGuestUnitRsp_CmdId) Enum() *ConfirmGuestUnitRsp_CmdId {
	p := new(ConfirmGuestUnitRsp_CmdId)
	*p = x
	return p
}

func (x ConfirmGuestUnitRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfirmGuestUnitRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[8].Descriptor()
}

func (ConfirmGuestUnitRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[8]
}

func (x ConfirmGuestUnitRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfirmGuestUnitRsp_CmdId.Descriptor instead.
func (ConfirmGuestUnitRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{10, 0}
}

type MatchPlayerJoinNotify_CmdId int32

const (
	MatchPlayerJoinNotify_NONE   MatchPlayerJoinNotify_CmdId = 0
	MatchPlayerJoinNotify_CMD_ID MatchPlayerJoinNotify_CmdId = 10949
)

// Enum value maps for MatchPlayerJoinNotify_CmdId.
var (
	MatchPlayerJoinNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10949: "CMD_ID",
	}
	MatchPlayerJoinNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10949,
	}
)

func (x MatchPlayerJoinNotify_CmdId) Enum() *MatchPlayerJoinNotify_CmdId {
	p := new(MatchPlayerJoinNotify_CmdId)
	*p = x
	return p
}

func (x MatchPlayerJoinNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchPlayerJoinNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[9].Descriptor()
}

func (MatchPlayerJoinNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[9]
}

func (x MatchPlayerJoinNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchPlayerJoinNotify_CmdId.Descriptor instead.
func (MatchPlayerJoinNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{11, 0}
}

type MatchPlayerQuitNotify_CmdId int32

const (
	MatchPlayerQuitNotify_NONE   MatchPlayerQuitNotify_CmdId = 0
	MatchPlayerQuitNotify_CMD_ID MatchPlayerQuitNotify_CmdId = 10920
)

// Enum value maps for MatchPlayerQuitNotify_CmdId.
var (
	MatchPlayerQuitNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10920: "CMD_ID",
	}
	MatchPlayerQuitNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10920,
	}
)

func (x MatchPlayerQuitNotify_CmdId) Enum() *MatchPlayerQuitNotify_CmdId {
	p := new(MatchPlayerQuitNotify_CmdId)
	*p = x
	return p
}

func (x MatchPlayerQuitNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchPlayerQuitNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[10].Descriptor()
}

func (MatchPlayerQuitNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[10]
}

func (x MatchPlayerQuitNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchPlayerQuitNotify_CmdId.Descriptor instead.
func (MatchPlayerQuitNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{12, 0}
}

type GuestUnitAgreedResultNotify_CmdId int32

const (
	GuestUnitAgreedResultNotify_NONE   GuestUnitAgreedResultNotify_CmdId = 0
	GuestUnitAgreedResultNotify_CMD_ID GuestUnitAgreedResultNotify_CmdId = 10945
)

// Enum value maps for GuestUnitAgreedResultNotify_CmdId.
var (
	GuestUnitAgreedResultNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10945: "CMD_ID",
	}
	GuestUnitAgreedResultNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10945,
	}
)

func (x GuestUnitAgreedResultNotify_CmdId) Enum() *GuestUnitAgreedResultNotify_CmdId {
	p := new(GuestUnitAgreedResultNotify_CmdId)
	*p = x
	return p
}

func (x GuestUnitAgreedResultNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuestUnitAgreedResultNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[11].Descriptor()
}

func (GuestUnitAgreedResultNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[11]
}

func (x GuestUnitAgreedResultNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuestUnitAgreedResultNotify_CmdId.Descriptor instead.
func (GuestUnitAgreedResultNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{13, 0}
}

type GuestUnitAgreedResultNotify_Reason int32

const (
	GuestUnitAgreedResultNotify_SUCC           GuestUnitAgreedResultNotify_Reason = 0
	GuestUnitAgreedResultNotify_HOST_UNIT_QUIT GuestUnitAgreedResultNotify_Reason = 1
)

// Enum value maps for GuestUnitAgreedResultNotify_Reason.
var (
	GuestUnitAgreedResultNotify_Reason_name = map[int32]string{
		0: "SUCC",
		1: "HOST_UNIT_QUIT",
	}
	GuestUnitAgreedResultNotify_Reason_value = map[string]int32{
		"SUCC":           0,
		"HOST_UNIT_QUIT": 1,
	}
)

func (x GuestUnitAgreedResultNotify_Reason) Enum() *GuestUnitAgreedResultNotify_Reason {
	p := new(GuestUnitAgreedResultNotify_Reason)
	*p = x
	return p
}

func (x GuestUnitAgreedResultNotify_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuestUnitAgreedResultNotify_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[12].Descriptor()
}

func (GuestUnitAgreedResultNotify_Reason) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[12]
}

func (x GuestUnitAgreedResultNotify_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuestUnitAgreedResultNotify_Reason.Descriptor instead.
func (GuestUnitAgreedResultNotify_Reason) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{13, 1}
}

type HostUnitMatchSuccNotify_CmdId int32

const (
	HostUnitMatchSuccNotify_NONE   HostUnitMatchSuccNotify_CmdId = 0
	HostUnitMatchSuccNotify_CMD_ID HostUnitMatchSuccNotify_CmdId = 10941
)

// Enum value maps for HostUnitMatchSuccNotify_CmdId.
var (
	HostUnitMatchSuccNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10941: "CMD_ID",
	}
	HostUnitMatchSuccNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10941,
	}
)

func (x HostUnitMatchSuccNotify_CmdId) Enum() *HostUnitMatchSuccNotify_CmdId {
	p := new(HostUnitMatchSuccNotify_CmdId)
	*p = x
	return p
}

func (x HostUnitMatchSuccNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostUnitMatchSuccNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[13].Descriptor()
}

func (HostUnitMatchSuccNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[13]
}

func (x HostUnitMatchSuccNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostUnitMatchSuccNotify_CmdId.Descriptor instead.
func (HostUnitMatchSuccNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{14, 0}
}

type SyncMatchUnitReq_CmdId int32

const (
	SyncMatchUnitReq_NONE   SyncMatchUnitReq_CmdId = 0
	SyncMatchUnitReq_CMD_ID SyncMatchUnitReq_CmdId = 10942
)

// Enum value maps for SyncMatchUnitReq_CmdId.
var (
	SyncMatchUnitReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10942: "CMD_ID",
	}
	SyncMatchUnitReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10942,
	}
)

func (x SyncMatchUnitReq_CmdId) Enum() *SyncMatchUnitReq_CmdId {
	p := new(SyncMatchUnitReq_CmdId)
	*p = x
	return p
}

func (x SyncMatchUnitReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncMatchUnitReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[14].Descriptor()
}

func (SyncMatchUnitReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[14]
}

func (x SyncMatchUnitReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncMatchUnitReq_CmdId.Descriptor instead.
func (SyncMatchUnitReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{15, 0}
}

type SyncMatchUnitRsp_CmdId int32

const (
	SyncMatchUnitRsp_NONE   SyncMatchUnitRsp_CmdId = 0
	SyncMatchUnitRsp_CMD_ID SyncMatchUnitRsp_CmdId = 10914
)

// Enum value maps for SyncMatchUnitRsp_CmdId.
var (
	SyncMatchUnitRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10914: "CMD_ID",
	}
	SyncMatchUnitRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10914,
	}
)

func (x SyncMatchUnitRsp_CmdId) Enum() *SyncMatchUnitRsp_CmdId {
	p := new(SyncMatchUnitRsp_CmdId)
	*p = x
	return p
}

func (x SyncMatchUnitRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncMatchUnitRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[15].Descriptor()
}

func (SyncMatchUnitRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[15]
}

func (x SyncMatchUnitRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncMatchUnitRsp_CmdId.Descriptor instead.
func (SyncMatchUnitRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{16, 0}
}

type MatchserverWorkloadInfoNotify_CmdId int32

const (
	MatchserverWorkloadInfoNotify_NONE   MatchserverWorkloadInfoNotify_CmdId = 0
	MatchserverWorkloadInfoNotify_CMD_ID MatchserverWorkloadInfoNotify_CmdId = 10947
)

// Enum value maps for MatchserverWorkloadInfoNotify_CmdId.
var (
	MatchserverWorkloadInfoNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10947: "CMD_ID",
	}
	MatchserverWorkloadInfoNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10947,
	}
)

func (x MatchserverWorkloadInfoNotify_CmdId) Enum() *MatchserverWorkloadInfoNotify_CmdId {
	p := new(MatchserverWorkloadInfoNotify_CmdId)
	*p = x
	return p
}

func (x MatchserverWorkloadInfoNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchserverWorkloadInfoNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[16].Descriptor()
}

func (MatchserverWorkloadInfoNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[16]
}

func (x MatchserverWorkloadInfoNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchserverWorkloadInfoNotify_CmdId.Descriptor instead.
func (MatchserverWorkloadInfoNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{17, 0}
}

type MatchPlayerUpdateNotify_CmdId int32

const (
	MatchPlayerUpdateNotify_NONE   MatchPlayerUpdateNotify_CmdId = 0
	MatchPlayerUpdateNotify_CMD_ID MatchPlayerUpdateNotify_CmdId = 10937
)

// Enum value maps for MatchPlayerUpdateNotify_CmdId.
var (
	MatchPlayerUpdateNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10937: "CMD_ID",
	}
	MatchPlayerUpdateNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10937,
	}
)

func (x MatchPlayerUpdateNotify_CmdId) Enum() *MatchPlayerUpdateNotify_CmdId {
	p := new(MatchPlayerUpdateNotify_CmdId)
	*p = x
	return p
}

func (x MatchPlayerUpdateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchPlayerUpdateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[17].Descriptor()
}

func (MatchPlayerUpdateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[17]
}

func (x MatchPlayerUpdateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchPlayerUpdateNotify_CmdId.Descriptor instead.
func (MatchPlayerUpdateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{18, 0}
}

type MatchIdentityNotify_CmdId int32

const (
	MatchIdentityNotify_NONE   MatchIdentityNotify_CmdId = 0
	MatchIdentityNotify_CMD_ID MatchIdentityNotify_CmdId = 10923
)

// Enum value maps for MatchIdentityNotify_CmdId.
var (
	MatchIdentityNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10923: "CMD_ID",
	}
	MatchIdentityNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10923,
	}
)

func (x MatchIdentityNotify_CmdId) Enum() *MatchIdentityNotify_CmdId {
	p := new(MatchIdentityNotify_CmdId)
	*p = x
	return p
}

func (x MatchIdentityNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchIdentityNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[18].Descriptor()
}

func (MatchIdentityNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[18]
}

func (x MatchIdentityNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchIdentityNotify_CmdId.Descriptor instead.
func (MatchIdentityNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{19, 0}
}

type GeneralMatchFinishNotify_CmdId int32

const (
	GeneralMatchFinishNotify_NONE   GeneralMatchFinishNotify_CmdId = 0
	GeneralMatchFinishNotify_CMD_ID GeneralMatchFinishNotify_CmdId = 10935
)

// Enum value maps for GeneralMatchFinishNotify_CmdId.
var (
	GeneralMatchFinishNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10935: "CMD_ID",
	}
	GeneralMatchFinishNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10935,
	}
)

func (x GeneralMatchFinishNotify_CmdId) Enum() *GeneralMatchFinishNotify_CmdId {
	p := new(GeneralMatchFinishNotify_CmdId)
	*p = x
	return p
}

func (x GeneralMatchFinishNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeneralMatchFinishNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_match_server_proto_enumTypes[19].Descriptor()
}

func (GeneralMatchFinishNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_match_server_proto_enumTypes[19]
}

func (x GeneralMatchFinishNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeneralMatchFinishNotify_CmdId.Descriptor instead.
func (GeneralMatchFinishNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{20, 0}
}

type MatchPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                      uint32            `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname                 string            `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PlayerLevel              uint32            `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	WorldLevel               uint32            `protobuf:"varint,4,opt,name=world_level,json=worldLevel,proto3" json:"world_level,omitempty"`
	PlatformType             uint32            `protobuf:"varint,5,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	IsOnlyMatchWithPsPlayer  bool              `protobuf:"varint,6,opt,name=is_only_match_with_ps_player,json=isOnlyMatchWithPsPlayer,proto3" json:"is_only_match_with_ps_player,omitempty"`
	BlacklistUidList         []uint32          `protobuf:"varint,7,rep,packed,name=blacklist_uid_list,json=blacklistUidList,proto3" json:"blacklist_uid_list,omitempty"`
	PlayerInfo               *OnlinePlayerInfo `protobuf:"bytes,8,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	HideAndSeekHiderCount    uint32            `protobuf:"varint,9,opt,name=hide_and_seek_hider_count,json=hideAndSeekHiderCount,proto3" json:"hide_and_seek_hider_count,omitempty"`
	HideAndSeekChosenMapList []uint32          `protobuf:"varint,10,rep,packed,name=hide_and_seek_chosen_map_list,json=hideAndSeekChosenMapList,proto3" json:"hide_and_seek_chosen_map_list,omitempty"`
}

func (x *MatchPlayer) Reset() {
	*x = MatchPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayer) ProtoMessage() {}

func (x *MatchPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayer.ProtoReflect.Descriptor instead.
func (*MatchPlayer) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{0}
}

func (x *MatchPlayer) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MatchPlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MatchPlayer) GetPlayerLevel() uint32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *MatchPlayer) GetWorldLevel() uint32 {
	if x != nil {
		return x.WorldLevel
	}
	return 0
}

func (x *MatchPlayer) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *MatchPlayer) GetIsOnlyMatchWithPsPlayer() bool {
	if x != nil {
		return x.IsOnlyMatchWithPsPlayer
	}
	return false
}

func (x *MatchPlayer) GetBlacklistUidList() []uint32 {
	if x != nil {
		return x.BlacklistUidList
	}
	return nil
}

func (x *MatchPlayer) GetPlayerInfo() *OnlinePlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *MatchPlayer) GetHideAndSeekHiderCount() uint32 {
	if x != nil {
		return x.HideAndSeekHiderCount
	}
	return 0
}

func (x *MatchPlayer) GetHideAndSeekChosenMapList() []uint32 {
	if x != nil {
		return x.HideAndSeekChosenMapList
	}
	return nil
}

type MatchUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchPlayerList []*MatchPlayer `protobuf:"bytes,1,rep,name=match_player_list,json=matchPlayerList,proto3" json:"match_player_list,omitempty"`
	UnitId          uint32         `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
}

func (x *MatchUnit) Reset() {
	*x = MatchUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUnit) ProtoMessage() {}

func (x *MatchUnit) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUnit.ProtoReflect.Descriptor instead.
func (*MatchUnit) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{1}
}

func (x *MatchUnit) GetMatchPlayerList() []*MatchPlayer {
	if x != nil {
		return x.MatchPlayerList
	}
	return nil
}

func (x *MatchUnit) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

type AddMatchUnitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType      MatchType     `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchUnit      *MatchUnit    `protobuf:"bytes,2,opt,name=match_unit,json=matchUnit,proto3" json:"match_unit,omitempty"`
	ExpectIdentity MatchIdentity `protobuf:"varint,3,opt,name=expect_identity,json=expectIdentity,proto3,enum=proto.MatchIdentity" json:"expect_identity,omitempty"`
	DungeonId      uint32        `protobuf:"varint,11,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	MpPlayId       uint32        `protobuf:"varint,12,opt,name=mp_play_id,json=mpPlayId,proto3" json:"mp_play_id,omitempty"`
	MechanicusTag  uint32        `protobuf:"varint,13,opt,name=mechanicus_tag,json=mechanicusTag,proto3" json:"mechanicus_tag,omitempty"`
	MatchId        uint32        `protobuf:"varint,14,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchParamList []uint32      `protobuf:"varint,15,rep,packed,name=match_param_list,json=matchParamList,proto3" json:"match_param_list,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*AddMatchUnitReq_GcgDuelExtra
	Detail isAddMatchUnitReq_Detail `protobuf_oneof:"detail"`
}

func (x *AddMatchUnitReq) Reset() {
	*x = AddMatchUnitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMatchUnitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMatchUnitReq) ProtoMessage() {}

func (x *AddMatchUnitReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMatchUnitReq.ProtoReflect.Descriptor instead.
func (*AddMatchUnitReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{2}
}

func (x *AddMatchUnitReq) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *AddMatchUnitReq) GetMatchUnit() *MatchUnit {
	if x != nil {
		return x.MatchUnit
	}
	return nil
}

func (x *AddMatchUnitReq) GetExpectIdentity() MatchIdentity {
	if x != nil {
		return x.ExpectIdentity
	}
	return MatchIdentity_MATCH_IDENTITY_NONE
}

func (x *AddMatchUnitReq) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *AddMatchUnitReq) GetMpPlayId() uint32 {
	if x != nil {
		return x.MpPlayId
	}
	return 0
}

func (x *AddMatchUnitReq) GetMechanicusTag() uint32 {
	if x != nil {
		return x.MechanicusTag
	}
	return 0
}

func (x *AddMatchUnitReq) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *AddMatchUnitReq) GetMatchParamList() []uint32 {
	if x != nil {
		return x.MatchParamList
	}
	return nil
}

func (m *AddMatchUnitReq) GetDetail() isAddMatchUnitReq_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *AddMatchUnitReq) GetGcgDuelExtra() *GCGDuelExtra {
	if x, ok := x.GetDetail().(*AddMatchUnitReq_GcgDuelExtra); ok {
		return x.GcgDuelExtra
	}
	return nil
}

type isAddMatchUnitReq_Detail interface {
	isAddMatchUnitReq_Detail()
}

type AddMatchUnitReq_GcgDuelExtra struct {
	GcgDuelExtra *GCGDuelExtra `protobuf:"bytes,21,opt,name=gcg_duel_extra,json=gcgDuelExtra,proto3,oneof"`
}

func (*AddMatchUnitReq_GcgDuelExtra) isAddMatchUnitReq_Detail() {}

type AddMatchUnitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode       int32      `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MatchType     MatchType  `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchUnit     *MatchUnit `protobuf:"bytes,3,opt,name=match_unit,json=matchUnit,proto3" json:"match_unit,omitempty"`
	DungeonId     uint32     `protobuf:"varint,11,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	MpPlayId      uint32     `protobuf:"varint,12,opt,name=mp_play_id,json=mpPlayId,proto3" json:"mp_play_id,omitempty"`
	MechanicusTag uint32     `protobuf:"varint,13,opt,name=mechanicus_tag,json=mechanicusTag,proto3" json:"mechanicus_tag,omitempty"`
}

func (x *AddMatchUnitRsp) Reset() {
	*x = AddMatchUnitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMatchUnitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMatchUnitRsp) ProtoMessage() {}

func (x *AddMatchUnitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMatchUnitRsp.ProtoReflect.Descriptor instead.
func (*AddMatchUnitRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{3}
}

func (x *AddMatchUnitRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AddMatchUnitRsp) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *AddMatchUnitRsp) GetMatchUnit() *MatchUnit {
	if x != nil {
		return x.MatchUnit
	}
	return nil
}

func (x *AddMatchUnitRsp) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *AddMatchUnitRsp) GetMpPlayId() uint32 {
	if x != nil {
		return x.MpPlayId
	}
	return 0
}

func (x *AddMatchUnitRsp) GetMechanicusTag() uint32 {
	if x != nil {
		return x.MechanicusTag
	}
	return 0
}

type MatchStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType             MatchType `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchBeginTime        uint32    `protobuf:"varint,2,opt,name=match_begin_time,json=matchBeginTime,proto3" json:"match_begin_time,omitempty"`
	EstimateMatchCostTime uint32    `protobuf:"varint,3,opt,name=estimate_match_cost_time,json=estimateMatchCostTime,proto3" json:"estimate_match_cost_time,omitempty"`
	IsRematch             bool      `protobuf:"varint,4,opt,name=is_rematch,json=isRematch,proto3" json:"is_rematch,omitempty"`
	DungeonId             uint32    `protobuf:"varint,11,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	MpPlayId              uint32    `protobuf:"varint,12,opt,name=mp_play_id,json=mpPlayId,proto3" json:"mp_play_id,omitempty"`
	MechanicusTag         uint32    `protobuf:"varint,13,opt,name=mechanicus_tag,json=mechanicusTag,proto3" json:"mechanicus_tag,omitempty"`
	MatchId               uint32    `protobuf:"varint,14,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchParamList        []uint32  `protobuf:"varint,15,rep,packed,name=match_param_list,json=matchParamList,proto3" json:"match_param_list,omitempty"`
}

func (x *MatchStartNotify) Reset() {
	*x = MatchStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStartNotify) ProtoMessage() {}

func (x *MatchStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStartNotify.ProtoReflect.Descriptor instead.
func (*MatchStartNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{4}
}

func (x *MatchStartNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchStartNotify) GetMatchBeginTime() uint32 {
	if x != nil {
		return x.MatchBeginTime
	}
	return 0
}

func (x *MatchStartNotify) GetEstimateMatchCostTime() uint32 {
	if x != nil {
		return x.EstimateMatchCostTime
	}
	return 0
}

func (x *MatchStartNotify) GetIsRematch() bool {
	if x != nil {
		return x.IsRematch
	}
	return false
}

func (x *MatchStartNotify) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *MatchStartNotify) GetMpPlayId() uint32 {
	if x != nil {
		return x.MpPlayId
	}
	return 0
}

func (x *MatchStartNotify) GetMechanicusTag() uint32 {
	if x != nil {
		return x.MechanicusTag
	}
	return 0
}

func (x *MatchStartNotify) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *MatchStartNotify) GetMatchParamList() []uint32 {
	if x != nil {
		return x.MatchParamList
	}
	return nil
}

type RemoveMatchUnitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType MatchType             `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId    uint32                `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	OpType    MatchUnitRemoveOpType `protobuf:"varint,3,opt,name=op_type,json=opType,proto3,enum=proto.MatchUnitRemoveOpType" json:"op_type,omitempty"`
}

func (x *RemoveMatchUnitReq) Reset() {
	*x = RemoveMatchUnitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMatchUnitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMatchUnitReq) ProtoMessage() {}

func (x *RemoveMatchUnitReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMatchUnitReq.ProtoReflect.Descriptor instead.
func (*RemoveMatchUnitReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveMatchUnitReq) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *RemoveMatchUnitReq) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *RemoveMatchUnitReq) GetOpType() MatchUnitRemoveOpType {
	if x != nil {
		return x.OpType
	}
	return MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_NONE
}

type RemoveMatchUnitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32                 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MatchType MatchType             `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId    uint32                `protobuf:"varint,3,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	OpType    MatchUnitRemoveOpType `protobuf:"varint,4,opt,name=op_type,json=opType,proto3,enum=proto.MatchUnitRemoveOpType" json:"op_type,omitempty"`
}

func (x *RemoveMatchUnitRsp) Reset() {
	*x = RemoveMatchUnitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMatchUnitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMatchUnitRsp) ProtoMessage() {}

func (x *RemoveMatchUnitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMatchUnitRsp.ProtoReflect.Descriptor instead.
func (*RemoveMatchUnitRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveMatchUnitRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *RemoveMatchUnitRsp) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *RemoveMatchUnitRsp) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *RemoveMatchUnitRsp) GetOpType() MatchUnitRemoveOpType {
	if x != nil {
		return x.OpType
	}
	return MatchUnitRemoveOpType_MATCH_UNIT_REMOVE_OP_NONE
}

type MatchUnitRemovedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType MatchType   `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	Reason    MatchReason `protobuf:"varint,2,opt,name=reason,proto3,enum=proto.MatchReason" json:"reason,omitempty"`
}

func (x *MatchUnitRemovedNotify) Reset() {
	*x = MatchUnitRemovedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUnitRemovedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUnitRemovedNotify) ProtoMessage() {}

func (x *MatchUnitRemovedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUnitRemovedNotify.ProtoReflect.Descriptor instead.
func (*MatchUnitRemovedNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{7}
}

func (x *MatchUnitRemovedNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchUnitRemovedNotify) GetReason() MatchReason {
	if x != nil {
		return x.Reason
	}
	return MatchReason_MATCH_NONE
}

type GuestUnitMatchSuccNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostUnitId     uint32 `protobuf:"varint,1,opt,name=host_unit_id,json=hostUnitId,proto3" json:"host_unit_id,omitempty"`
	ConfirmEndTime uint32 `protobuf:"varint,2,opt,name=confirm_end_time,json=confirmEndTime,proto3" json:"confirm_end_time,omitempty"`
	MatchType      uint32 `protobuf:"varint,3,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	DungeonId      uint32 `protobuf:"varint,11,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	MpPlayId       uint32 `protobuf:"varint,12,opt,name=mp_play_id,json=mpPlayId,proto3" json:"mp_play_id,omitempty"`
	MechanicusTag  uint32 `protobuf:"varint,13,opt,name=mechanicus_tag,json=mechanicusTag,proto3" json:"mechanicus_tag,omitempty"`
}

func (x *GuestUnitMatchSuccNotify) Reset() {
	*x = GuestUnitMatchSuccNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestUnitMatchSuccNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestUnitMatchSuccNotify) ProtoMessage() {}

func (x *GuestUnitMatchSuccNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestUnitMatchSuccNotify.ProtoReflect.Descriptor instead.
func (*GuestUnitMatchSuccNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{8}
}

func (x *GuestUnitMatchSuccNotify) GetHostUnitId() uint32 {
	if x != nil {
		return x.HostUnitId
	}
	return 0
}

func (x *GuestUnitMatchSuccNotify) GetConfirmEndTime() uint32 {
	if x != nil {
		return x.ConfirmEndTime
	}
	return 0
}

func (x *GuestUnitMatchSuccNotify) GetMatchType() uint32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *GuestUnitMatchSuccNotify) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *GuestUnitMatchSuccNotify) GetMpPlayId() uint32 {
	if x != nil {
		return x.MpPlayId
	}
	return 0
}

func (x *GuestUnitMatchSuccNotify) GetMechanicusTag() uint32 {
	if x != nil {
		return x.MechanicusTag
	}
	return 0
}

type ConfirmGuestUnitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType MatchType `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId    uint32    `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	IsAgreed  bool      `protobuf:"varint,3,opt,name=is_agreed,json=isAgreed,proto3" json:"is_agreed,omitempty"`
	MatchId   uint32    `protobuf:"varint,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *ConfirmGuestUnitReq) Reset() {
	*x = ConfirmGuestUnitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmGuestUnitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmGuestUnitReq) ProtoMessage() {}

func (x *ConfirmGuestUnitReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmGuestUnitReq.ProtoReflect.Descriptor instead.
func (*ConfirmGuestUnitReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{9}
}

func (x *ConfirmGuestUnitReq) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *ConfirmGuestUnitReq) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ConfirmGuestUnitReq) GetIsAgreed() bool {
	if x != nil {
		return x.IsAgreed
	}
	return false
}

func (x *ConfirmGuestUnitReq) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type ConfirmGuestUnitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode   int32     `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	MatchType MatchType `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId    uint32    `protobuf:"varint,3,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	IsAgreed  bool      `protobuf:"varint,4,opt,name=is_agreed,json=isAgreed,proto3" json:"is_agreed,omitempty"`
	MatchId   uint32    `protobuf:"varint,5,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *ConfirmGuestUnitRsp) Reset() {
	*x = ConfirmGuestUnitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmGuestUnitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmGuestUnitRsp) ProtoMessage() {}

func (x *ConfirmGuestUnitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmGuestUnitRsp.ProtoReflect.Descriptor instead.
func (*ConfirmGuestUnitRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmGuestUnitRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ConfirmGuestUnitRsp) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *ConfirmGuestUnitRsp) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ConfirmGuestUnitRsp) GetIsAgreed() bool {
	if x != nil {
		return x.IsAgreed
	}
	return false
}

func (x *ConfirmGuestUnitRsp) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type MatchPlayerJoinNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType   MatchType    `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId      uint32       `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	MatchPlayer *MatchPlayer `protobuf:"bytes,3,opt,name=match_player,json=matchPlayer,proto3" json:"match_player,omitempty"`
}

func (x *MatchPlayerJoinNotify) Reset() {
	*x = MatchPlayerJoinNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayerJoinNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayerJoinNotify) ProtoMessage() {}

func (x *MatchPlayerJoinNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayerJoinNotify.ProtoReflect.Descriptor instead.
func (*MatchPlayerJoinNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{11}
}

func (x *MatchPlayerJoinNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchPlayerJoinNotify) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *MatchPlayerJoinNotify) GetMatchPlayer() *MatchPlayer {
	if x != nil {
		return x.MatchPlayer
	}
	return nil
}

type MatchPlayerQuitNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType MatchType `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId    uint32    `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	PlayerUid uint32    `protobuf:"varint,3,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
}

func (x *MatchPlayerQuitNotify) Reset() {
	*x = MatchPlayerQuitNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayerQuitNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayerQuitNotify) ProtoMessage() {}

func (x *MatchPlayerQuitNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayerQuitNotify.ProtoReflect.Descriptor instead.
func (*MatchPlayerQuitNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{12}
}

func (x *MatchPlayerQuitNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchPlayerQuitNotify) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *MatchPlayerQuitNotify) GetPlayerUid() uint32 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

type GuestUnitAgreedResultNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType  MatchType                          `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	HostUnitId uint32                             `protobuf:"varint,2,opt,name=host_unit_id,json=hostUnitId,proto3" json:"host_unit_id,omitempty"`
	Reason     GuestUnitAgreedResultNotify_Reason `protobuf:"varint,3,opt,name=reason,proto3,enum=proto.GuestUnitAgreedResultNotify_Reason" json:"reason,omitempty"`
}

func (x *GuestUnitAgreedResultNotify) Reset() {
	*x = GuestUnitAgreedResultNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestUnitAgreedResultNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestUnitAgreedResultNotify) ProtoMessage() {}

func (x *GuestUnitAgreedResultNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestUnitAgreedResultNotify.ProtoReflect.Descriptor instead.
func (*GuestUnitAgreedResultNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{13}
}

func (x *GuestUnitAgreedResultNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *GuestUnitAgreedResultNotify) GetHostUnitId() uint32 {
	if x != nil {
		return x.HostUnitId
	}
	return 0
}

func (x *GuestUnitAgreedResultNotify) GetReason() GuestUnitAgreedResultNotify_Reason {
	if x != nil {
		return x.Reason
	}
	return GuestUnitAgreedResultNotify_SUCC
}

type HostUnitMatchSuccNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType                uint32 `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	DungeonId                uint32 `protobuf:"varint,11,opt,name=dungeon_id,json=dungeonId,proto3" json:"dungeon_id,omitempty"`
	MpPlayId                 uint32 `protobuf:"varint,12,opt,name=mp_play_id,json=mpPlayId,proto3" json:"mp_play_id,omitempty"`
	MechanicusDifficultLevel uint32 `protobuf:"varint,13,opt,name=mechanicus_difficult_level,json=mechanicusDifficultLevel,proto3" json:"mechanicus_difficult_level,omitempty"`
}

func (x *HostUnitMatchSuccNotify) Reset() {
	*x = HostUnitMatchSuccNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUnitMatchSuccNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUnitMatchSuccNotify) ProtoMessage() {}

func (x *HostUnitMatchSuccNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUnitMatchSuccNotify.ProtoReflect.Descriptor instead.
func (*HostUnitMatchSuccNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{14}
}

func (x *HostUnitMatchSuccNotify) GetMatchType() uint32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *HostUnitMatchSuccNotify) GetDungeonId() uint32 {
	if x != nil {
		return x.DungeonId
	}
	return 0
}

func (x *HostUnitMatchSuccNotify) GetMpPlayId() uint32 {
	if x != nil {
		return x.MpPlayId
	}
	return 0
}

func (x *HostUnitMatchSuccNotify) GetMechanicusDifficultLevel() uint32 {
	if x != nil {
		return x.MechanicusDifficultLevel
	}
	return 0
}

type SyncMatchUnitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType MatchType  `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchUnit *MatchUnit `protobuf:"bytes,2,opt,name=match_unit,json=matchUnit,proto3" json:"match_unit,omitempty"`
}

func (x *SyncMatchUnitReq) Reset() {
	*x = SyncMatchUnitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMatchUnitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMatchUnitReq) ProtoMessage() {}

func (x *SyncMatchUnitReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMatchUnitReq.ProtoReflect.Descriptor instead.
func (*SyncMatchUnitReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{15}
}

func (x *SyncMatchUnitReq) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *SyncMatchUnitReq) GetMatchUnit() *MatchUnit {
	if x != nil {
		return x.MatchUnit
	}
	return nil
}

type SyncMatchUnitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SyncMatchUnitRsp) Reset() {
	*x = SyncMatchUnitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMatchUnitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMatchUnitRsp) ProtoMessage() {}

func (x *SyncMatchUnitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMatchUnitRsp.ProtoReflect.Descriptor instead.
func (*SyncMatchUnitRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{16}
}

func (x *SyncMatchUnitRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type MatchserverWorkloadInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchUnitNum uint32            `protobuf:"varint,1,opt,name=match_unit_num,json=matchUnitNum,proto3" json:"match_unit_num,omitempty"`
	MatchUnitMap map[uint32]uint32 `protobuf:"bytes,2,rep,name=match_unit_map,json=matchUnitMap,proto3" json:"match_unit_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MatchserverWorkloadInfoNotify) Reset() {
	*x = MatchserverWorkloadInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchserverWorkloadInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchserverWorkloadInfoNotify) ProtoMessage() {}

func (x *MatchserverWorkloadInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchserverWorkloadInfoNotify.ProtoReflect.Descriptor instead.
func (*MatchserverWorkloadInfoNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{17}
}

func (x *MatchserverWorkloadInfoNotify) GetMatchUnitNum() uint32 {
	if x != nil {
		return x.MatchUnitNum
	}
	return 0
}

func (x *MatchserverWorkloadInfoNotify) GetMatchUnitMap() map[uint32]uint32 {
	if x != nil {
		return x.MatchUnitMap
	}
	return nil
}

type MatchPlayerUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType   MatchType    `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	UnitId      uint32       `protobuf:"varint,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	MatchPlayer *MatchPlayer `protobuf:"bytes,3,opt,name=match_player,json=matchPlayer,proto3" json:"match_player,omitempty"`
}

func (x *MatchPlayerUpdateNotify) Reset() {
	*x = MatchPlayerUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayerUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayerUpdateNotify) ProtoMessage() {}

func (x *MatchPlayerUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayerUpdateNotify.ProtoReflect.Descriptor instead.
func (*MatchPlayerUpdateNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{18}
}

func (x *MatchPlayerUpdateNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchPlayerUpdateNotify) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *MatchPlayerUpdateNotify) GetMatchPlayer() *MatchPlayer {
	if x != nil {
		return x.MatchPlayer
	}
	return nil
}

type MatchIdentityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType     MatchType     `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchIdentity MatchIdentity `protobuf:"varint,2,opt,name=match_identity,json=matchIdentity,proto3,enum=proto.MatchIdentity" json:"match_identity,omitempty"`
}

func (x *MatchIdentityNotify) Reset() {
	*x = MatchIdentityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchIdentityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchIdentityNotify) ProtoMessage() {}

func (x *MatchIdentityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchIdentityNotify.ProtoReflect.Descriptor instead.
func (*MatchIdentityNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{19}
}

func (x *MatchIdentityNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *MatchIdentityNotify) GetMatchIdentity() MatchIdentity {
	if x != nil {
		return x.MatchIdentity
	}
	return MatchIdentity_MATCH_IDENTITY_NONE
}

type GeneralMatchFinishNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType       MatchType      `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	MatchId         uint32         `protobuf:"varint,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchParam      uint32         `protobuf:"varint,3,opt,name=match_param,json=matchParam,proto3" json:"match_param,omitempty"`
	MatchPlayerList []*MatchPlayer `protobuf:"bytes,4,rep,name=match_player_list,json=matchPlayerList,proto3" json:"match_player_list,omitempty"`
}

func (x *GeneralMatchFinishNotify) Reset() {
	*x = GeneralMatchFinishNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_match_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralMatchFinishNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralMatchFinishNotify) ProtoMessage() {}

func (x *GeneralMatchFinishNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_match_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralMatchFinishNotify.ProtoReflect.Descriptor instead.
func (*GeneralMatchFinishNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_match_server_proto_rawDescGZIP(), []int{20}
}

func (x *GeneralMatchFinishNotify) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_NONE
}

func (x *GeneralMatchFinishNotify) GetMatchId() uint32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GeneralMatchFinishNotify) GetMatchParam() uint32 {
	if x != nil {
		return x.MatchParam
	}
	return 0
}

func (x *GeneralMatchFinishNotify) GetMatchPlayerList() []*MatchPlayer {
	if x != nil {
		return x.MatchPlayerList
	}
	return nil
}

var File_server_only_cmd_match_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_match_server_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x03, 0x0a, 0x0b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3d, 0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x50, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x12, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x19, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x68, 0x69, 0x64, 0x65, 0x41,
	0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b, 0x48, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3f, 0x0a, 0x1d, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x65,
	0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18, 0x68, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64,
	0x53, 0x65, 0x65, 0x6b, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x64, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x3e,
	0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x03, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x3d, 0x0a,
	0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d,
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x54, 0x61, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x67, 0x63, 0x67, 0x5f, 0x64, 0x75, 0x65,
	0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x43, 0x47, 0x44, 0x75, 0x65, 0x6c, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x63, 0x67, 0x44, 0x75, 0x65, 0x6c, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xae, 0x55, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x91, 0x02, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d,
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x54, 0x61, 0x67,
	0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa6, 0x55,
	0x22, 0x8e, 0x03, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x52, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x70, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x70, 0x50,
	0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x63, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xad,
	0x55, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9b, 0x55, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x96, 0x55, 0x22, 0x95, 0x01, 0x0a, 0x16,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xb3, 0x55, 0x22, 0x89, 0x02, 0x0a, 0x18, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x63, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x70,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x63, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x54, 0x61, 0x67, 0x22,
	0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb1, 0x55, 0x22,
	0xb7, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaa, 0x55, 0x22, 0xd1, 0x01, 0x0a, 0x13, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc0, 0x55, 0x22, 0xb8, 0x01,
	0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc5, 0x55, 0x22, 0xa0, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa8, 0x55, 0x22, 0xfb, 0x01, 0x0a, 0x1b,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc1,
	0x55, 0x22, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x55, 0x43, 0x43, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x10, 0x01, 0x22, 0xd3, 0x01, 0x0a, 0x17, 0x48, 0x6f,
	0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x63, 0x63, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75, 0x73, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x75,
	0x73, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbd, 0x55, 0x22,
	0x94, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xbe, 0x55, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xa2, 0x55, 0x22, 0x84, 0x02, 0x0a, 0x1d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x5c, 0x0a, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x3f, 0x0a, 0x11, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc3, 0x55, 0x22, 0xba, 0x01, 0x0a, 0x17,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x55, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x1e,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xab, 0x55, 0x22, 0xe7,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3e, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb7, 0x55, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_cmd_match_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_match_server_proto_rawDescData = file_server_only_cmd_match_server_proto_rawDesc
)

func file_server_only_cmd_match_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_match_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_match_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_match_server_proto_rawDescData)
	})
	return file_server_only_cmd_match_server_proto_rawDescData
}

var file_server_only_cmd_match_server_proto_enumTypes = make([]protoimpl.EnumInfo, 20)
var file_server_only_cmd_match_server_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_server_only_cmd_match_server_proto_goTypes = []interface{}{
	(AddMatchUnitReq_CmdId)(0),               // 0: proto.AddMatchUnitReq.CmdId
	(AddMatchUnitRsp_CmdId)(0),               // 1: proto.AddMatchUnitRsp.CmdId
	(MatchStartNotify_CmdId)(0),              // 2: proto.MatchStartNotify.CmdId
	(RemoveMatchUnitReq_CmdId)(0),            // 3: proto.RemoveMatchUnitReq.CmdId
	(RemoveMatchUnitRsp_CmdId)(0),            // 4: proto.RemoveMatchUnitRsp.CmdId
	(MatchUnitRemovedNotify_CmdId)(0),        // 5: proto.MatchUnitRemovedNotify.CmdId
	(GuestUnitMatchSuccNotify_CmdId)(0),      // 6: proto.GuestUnitMatchSuccNotify.CmdId
	(ConfirmGuestUnitReq_CmdId)(0),           // 7: proto.ConfirmGuestUnitReq.CmdId
	(ConfirmGuestUnitRsp_CmdId)(0),           // 8: proto.ConfirmGuestUnitRsp.CmdId
	(MatchPlayerJoinNotify_CmdId)(0),         // 9: proto.MatchPlayerJoinNotify.CmdId
	(MatchPlayerQuitNotify_CmdId)(0),         // 10: proto.MatchPlayerQuitNotify.CmdId
	(GuestUnitAgreedResultNotify_CmdId)(0),   // 11: proto.GuestUnitAgreedResultNotify.CmdId
	(GuestUnitAgreedResultNotify_Reason)(0),  // 12: proto.GuestUnitAgreedResultNotify.Reason
	(HostUnitMatchSuccNotify_CmdId)(0),       // 13: proto.HostUnitMatchSuccNotify.CmdId
	(SyncMatchUnitReq_CmdId)(0),              // 14: proto.SyncMatchUnitReq.CmdId
	(SyncMatchUnitRsp_CmdId)(0),              // 15: proto.SyncMatchUnitRsp.CmdId
	(MatchserverWorkloadInfoNotify_CmdId)(0), // 16: proto.MatchserverWorkloadInfoNotify.CmdId
	(MatchPlayerUpdateNotify_CmdId)(0),       // 17: proto.MatchPlayerUpdateNotify.CmdId
	(MatchIdentityNotify_CmdId)(0),           // 18: proto.MatchIdentityNotify.CmdId
	(GeneralMatchFinishNotify_CmdId)(0),      // 19: proto.GeneralMatchFinishNotify.CmdId
	(*MatchPlayer)(nil),                      // 20: proto.MatchPlayer
	(*MatchUnit)(nil),                        // 21: proto.MatchUnit
	(*AddMatchUnitReq)(nil),                  // 22: proto.AddMatchUnitReq
	(*AddMatchUnitRsp)(nil),                  // 23: proto.AddMatchUnitRsp
	(*MatchStartNotify)(nil),                 // 24: proto.MatchStartNotify
	(*RemoveMatchUnitReq)(nil),               // 25: proto.RemoveMatchUnitReq
	(*RemoveMatchUnitRsp)(nil),               // 26: proto.RemoveMatchUnitRsp
	(*MatchUnitRemovedNotify)(nil),           // 27: proto.MatchUnitRemovedNotify
	(*GuestUnitMatchSuccNotify)(nil),         // 28: proto.GuestUnitMatchSuccNotify
	(*ConfirmGuestUnitReq)(nil),              // 29: proto.ConfirmGuestUnitReq
	(*ConfirmGuestUnitRsp)(nil),              // 30: proto.ConfirmGuestUnitRsp
	(*MatchPlayerJoinNotify)(nil),            // 31: proto.MatchPlayerJoinNotify
	(*MatchPlayerQuitNotify)(nil),            // 32: proto.MatchPlayerQuitNotify
	(*GuestUnitAgreedResultNotify)(nil),      // 33: proto.GuestUnitAgreedResultNotify
	(*HostUnitMatchSuccNotify)(nil),          // 34: proto.HostUnitMatchSuccNotify
	(*SyncMatchUnitReq)(nil),                 // 35: proto.SyncMatchUnitReq
	(*SyncMatchUnitRsp)(nil),                 // 36: proto.SyncMatchUnitRsp
	(*MatchserverWorkloadInfoNotify)(nil),    // 37: proto.MatchserverWorkloadInfoNotify
	(*MatchPlayerUpdateNotify)(nil),          // 38: proto.MatchPlayerUpdateNotify
	(*MatchIdentityNotify)(nil),              // 39: proto.MatchIdentityNotify
	(*GeneralMatchFinishNotify)(nil),         // 40: proto.GeneralMatchFinishNotify
	nil,                                      // 41: proto.MatchserverWorkloadInfoNotify.MatchUnitMapEntry
	(*OnlinePlayerInfo)(nil),                 // 42: proto.OnlinePlayerInfo
	(MatchType)(0),                           // 43: proto.MatchType
	(MatchIdentity)(0),                       // 44: proto.MatchIdentity
	(*GCGDuelExtra)(nil),                     // 45: proto.GCGDuelExtra
	(MatchUnitRemoveOpType)(0),               // 46: proto.MatchUnitRemoveOpType
	(MatchReason)(0),                         // 47: proto.MatchReason
}
var file_server_only_cmd_match_server_proto_depIdxs = []int32{
	42, // 0: proto.MatchPlayer.player_info:type_name -> proto.OnlinePlayerInfo
	20, // 1: proto.MatchUnit.match_player_list:type_name -> proto.MatchPlayer
	43, // 2: proto.AddMatchUnitReq.match_type:type_name -> proto.MatchType
	21, // 3: proto.AddMatchUnitReq.match_unit:type_name -> proto.MatchUnit
	44, // 4: proto.AddMatchUnitReq.expect_identity:type_name -> proto.MatchIdentity
	45, // 5: proto.AddMatchUnitReq.gcg_duel_extra:type_name -> proto.GCGDuelExtra
	43, // 6: proto.AddMatchUnitRsp.match_type:type_name -> proto.MatchType
	21, // 7: proto.AddMatchUnitRsp.match_unit:type_name -> proto.MatchUnit
	43, // 8: proto.MatchStartNotify.match_type:type_name -> proto.MatchType
	43, // 9: proto.RemoveMatchUnitReq.match_type:type_name -> proto.MatchType
	46, // 10: proto.RemoveMatchUnitReq.op_type:type_name -> proto.MatchUnitRemoveOpType
	43, // 11: proto.RemoveMatchUnitRsp.match_type:type_name -> proto.MatchType
	46, // 12: proto.RemoveMatchUnitRsp.op_type:type_name -> proto.MatchUnitRemoveOpType
	43, // 13: proto.MatchUnitRemovedNotify.match_type:type_name -> proto.MatchType
	47, // 14: proto.MatchUnitRemovedNotify.reason:type_name -> proto.MatchReason
	43, // 15: proto.ConfirmGuestUnitReq.match_type:type_name -> proto.MatchType
	43, // 16: proto.ConfirmGuestUnitRsp.match_type:type_name -> proto.MatchType
	43, // 17: proto.MatchPlayerJoinNotify.match_type:type_name -> proto.MatchType
	20, // 18: proto.MatchPlayerJoinNotify.match_player:type_name -> proto.MatchPlayer
	43, // 19: proto.MatchPlayerQuitNotify.match_type:type_name -> proto.MatchType
	43, // 20: proto.GuestUnitAgreedResultNotify.match_type:type_name -> proto.MatchType
	12, // 21: proto.GuestUnitAgreedResultNotify.reason:type_name -> proto.GuestUnitAgreedResultNotify.Reason
	43, // 22: proto.SyncMatchUnitReq.match_type:type_name -> proto.MatchType
	21, // 23: proto.SyncMatchUnitReq.match_unit:type_name -> proto.MatchUnit
	41, // 24: proto.MatchserverWorkloadInfoNotify.match_unit_map:type_name -> proto.MatchserverWorkloadInfoNotify.MatchUnitMapEntry
	43, // 25: proto.MatchPlayerUpdateNotify.match_type:type_name -> proto.MatchType
	20, // 26: proto.MatchPlayerUpdateNotify.match_player:type_name -> proto.MatchPlayer
	43, // 27: proto.MatchIdentityNotify.match_type:type_name -> proto.MatchType
	44, // 28: proto.MatchIdentityNotify.match_identity:type_name -> proto.MatchIdentity
	43, // 29: proto.GeneralMatchFinishNotify.match_type:type_name -> proto.MatchType
	20, // 30: proto.GeneralMatchFinishNotify.match_player_list:type_name -> proto.MatchPlayer
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_server_only_cmd_match_server_proto_init() }
func file_server_only_cmd_match_server_proto_init() {
	if File_server_only_cmd_match_server_proto != nil {
		return
	}
	file_define_proto_init()
	file_server_only_enum_server_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_match_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMatchUnitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMatchUnitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMatchUnitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMatchUnitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUnitRemovedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestUnitMatchSuccNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmGuestUnitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmGuestUnitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayerJoinNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayerQuitNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestUnitAgreedResultNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUnitMatchSuccNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMatchUnitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMatchUnitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchserverWorkloadInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayerUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchIdentityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_match_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralMatchFinishNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_only_cmd_match_server_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AddMatchUnitReq_GcgDuelExtra)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_match_server_proto_rawDesc,
			NumEnums:      20,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_match_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_match_server_proto_depIdxs,
		EnumInfos:         file_server_only_cmd_match_server_proto_enumTypes,
		MessageInfos:      file_server_only_cmd_match_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_match_server_proto = out.File
	file_server_only_cmd_match_server_proto_rawDesc = nil
	file_server_only_cmd_match_server_proto_goTypes = nil
	file_server_only_cmd_match_server_proto_depIdxs = nil
}
