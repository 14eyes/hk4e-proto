// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_activity.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeaLampPlayerContributionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalContribution uint32 `protobuf:"varint,1,opt,name=total_contribution,json=totalContribution,proto3" json:"total_contribution,omitempty"`
	AddProgress       uint32 `protobuf:"varint,2,opt,name=add_progress,json=addProgress,proto3" json:"add_progress,omitempty"`
}

func (x *SeaLampPlayerContributionNotify) Reset() {
	*x = SeaLampPlayerContributionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampPlayerContributionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampPlayerContributionNotify) ProtoMessage() {}

func (x *SeaLampPlayerContributionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampPlayerContributionNotify.ProtoReflect.Descriptor instead.
func (*SeaLampPlayerContributionNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{0}
}

func (x *SeaLampPlayerContributionNotify) GetTotalContribution() uint32 {
	if x != nil {
		return x.TotalContribution
	}
	return 0
}

func (x *SeaLampPlayerContributionNotify) GetAddProgress() uint32 {
	if x != nil {
		return x.AddProgress
	}
	return 0
}

type SeaLampProgressNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId      uint32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Progress        uint32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	IsFinished      bool   `protobuf:"varint,3,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	IsChangedByMuip bool   `protobuf:"varint,4,opt,name=is_changed_by_muip,json=isChangedByMuip,proto3" json:"is_changed_by_muip,omitempty"`
}

func (x *SeaLampProgressNotify) Reset() {
	*x = SeaLampProgressNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampProgressNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampProgressNotify) ProtoMessage() {}

func (x *SeaLampProgressNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampProgressNotify.ProtoReflect.Descriptor instead.
func (*SeaLampProgressNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{1}
}

func (x *SeaLampProgressNotify) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *SeaLampProgressNotify) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *SeaLampProgressNotify) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *SeaLampProgressNotify) GetIsChangedByMuip() bool {
	if x != nil {
		return x.IsChangedByMuip
	}
	return false
}

type SeaLampBroadcastNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId      uint32 `protobuf:"varint,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	LastPhase       uint32 `protobuf:"varint,2,opt,name=last_phase,json=lastPhase,proto3" json:"last_phase,omitempty"`
	Phase           uint32 `protobuf:"varint,3,opt,name=phase,proto3" json:"phase,omitempty"`
	Progress        uint32 `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	IsChangedByMuip bool   `protobuf:"varint,5,opt,name=is_changed_by_muip,json=isChangedByMuip,proto3" json:"is_changed_by_muip,omitempty"`
}

func (x *SeaLampBroadcastNotify) Reset() {
	*x = SeaLampBroadcastNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampBroadcastNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampBroadcastNotify) ProtoMessage() {}

func (x *SeaLampBroadcastNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampBroadcastNotify.ProtoReflect.Descriptor instead.
func (*SeaLampBroadcastNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{2}
}

func (x *SeaLampBroadcastNotify) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *SeaLampBroadcastNotify) GetLastPhase() uint32 {
	if x != nil {
		return x.LastPhase
	}
	return 0
}

func (x *SeaLampBroadcastNotify) GetPhase() uint32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *SeaLampBroadcastNotify) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *SeaLampBroadcastNotify) GetIsChangedByMuip() bool {
	if x != nil {
		return x.IsChangedByMuip
	}
	return false
}

type SeaLampSetProgressByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress uint32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *SeaLampSetProgressByMuipReq) Reset() {
	*x = SeaLampSetProgressByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampSetProgressByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampSetProgressByMuipReq) ProtoMessage() {}

func (x *SeaLampSetProgressByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampSetProgressByMuipReq.ProtoReflect.Descriptor instead.
func (*SeaLampSetProgressByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{3}
}

func (x *SeaLampSetProgressByMuipReq) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type SeaLampSetProgressByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OldProgress uint32 `protobuf:"varint,2,opt,name=old_progress,json=oldProgress,proto3" json:"old_progress,omitempty"`
	NewProgress uint32 `protobuf:"varint,3,opt,name=new_progress,json=newProgress,proto3" json:"new_progress,omitempty"`
	Factor      uint32 `protobuf:"varint,4,opt,name=factor,proto3" json:"factor,omitempty"`
}

func (x *SeaLampSetProgressByMuipRsp) Reset() {
	*x = SeaLampSetProgressByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampSetProgressByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampSetProgressByMuipRsp) ProtoMessage() {}

func (x *SeaLampSetProgressByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampSetProgressByMuipRsp.ProtoReflect.Descriptor instead.
func (*SeaLampSetProgressByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{4}
}

func (x *SeaLampSetProgressByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SeaLampSetProgressByMuipRsp) GetOldProgress() uint32 {
	if x != nil {
		return x.OldProgress
	}
	return 0
}

func (x *SeaLampSetProgressByMuipRsp) GetNewProgress() uint32 {
	if x != nil {
		return x.NewProgress
	}
	return 0
}

func (x *SeaLampSetProgressByMuipRsp) GetFactor() uint32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

type SeaLampProgressImplementNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *SeaLampProgressNotify `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SeaLampProgressImplementNotify) Reset() {
	*x = SeaLampProgressImplementNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampProgressImplementNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampProgressImplementNotify) ProtoMessage() {}

func (x *SeaLampProgressImplementNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampProgressImplementNotify.ProtoReflect.Descriptor instead.
func (*SeaLampProgressImplementNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{5}
}

func (x *SeaLampProgressImplementNotify) GetMsg() *SeaLampProgressNotify {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SeaLampClearProgressByGmNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeaLampClearProgressByGmNotify) Reset() {
	*x = SeaLampClearProgressByGmNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampClearProgressByGmNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampClearProgressByGmNotify) ProtoMessage() {}

func (x *SeaLampClearProgressByGmNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampClearProgressByGmNotify.ProtoReflect.Descriptor instead.
func (*SeaLampClearProgressByGmNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{6}
}

type SeaLampAddProgressByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddProgress uint32 `protobuf:"varint,1,opt,name=add_progress,json=addProgress,proto3" json:"add_progress,omitempty"`
}

func (x *SeaLampAddProgressByMuipReq) Reset() {
	*x = SeaLampAddProgressByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampAddProgressByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampAddProgressByMuipReq) ProtoMessage() {}

func (x *SeaLampAddProgressByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampAddProgressByMuipReq.ProtoReflect.Descriptor instead.
func (*SeaLampAddProgressByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{7}
}

func (x *SeaLampAddProgressByMuipReq) GetAddProgress() uint32 {
	if x != nil {
		return x.AddProgress
	}
	return 0
}

type SeaLampAddProgressByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OldProgress uint32 `protobuf:"varint,2,opt,name=old_progress,json=oldProgress,proto3" json:"old_progress,omitempty"`
	NewProgress uint32 `protobuf:"varint,3,opt,name=new_progress,json=newProgress,proto3" json:"new_progress,omitempty"`
	Factor      uint32 `protobuf:"varint,4,opt,name=factor,proto3" json:"factor,omitempty"`
}

func (x *SeaLampAddProgressByMuipRsp) Reset() {
	*x = SeaLampAddProgressByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampAddProgressByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampAddProgressByMuipRsp) ProtoMessage() {}

func (x *SeaLampAddProgressByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampAddProgressByMuipRsp.ProtoReflect.Descriptor instead.
func (*SeaLampAddProgressByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{8}
}

func (x *SeaLampAddProgressByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SeaLampAddProgressByMuipRsp) GetOldProgress() uint32 {
	if x != nil {
		return x.OldProgress
	}
	return 0
}

func (x *SeaLampAddProgressByMuipRsp) GetNewProgress() uint32 {
	if x != nil {
		return x.NewProgress
	}
	return 0
}

func (x *SeaLampAddProgressByMuipRsp) GetFactor() uint32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

type SeaLampActivityDataMuip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress uint32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	PhaseId  uint32 `protobuf:"varint,2,opt,name=phase_id,json=phaseId,proto3" json:"phase_id,omitempty"`
	Factor   uint32 `protobuf:"varint,3,opt,name=factor,proto3" json:"factor,omitempty"`
}

func (x *SeaLampActivityDataMuip) Reset() {
	*x = SeaLampActivityDataMuip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeaLampActivityDataMuip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeaLampActivityDataMuip) ProtoMessage() {}

func (x *SeaLampActivityDataMuip) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeaLampActivityDataMuip.ProtoReflect.Descriptor instead.
func (*SeaLampActivityDataMuip) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{9}
}

func (x *SeaLampActivityDataMuip) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *SeaLampActivityDataMuip) GetPhaseId() uint32 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *SeaLampActivityDataMuip) GetFactor() uint32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

type GetActivityDataByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *GetActivityDataByMuipReq) Reset() {
	*x = GetActivityDataByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityDataByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityDataByMuipReq) ProtoMessage() {}

func (x *GetActivityDataByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityDataByMuipReq.ProtoReflect.Descriptor instead.
func (*GetActivityDataByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{10}
}

func (x *GetActivityDataByMuipReq) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type GetActivityDataByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ActivityId uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ScheduleId uint32 `protobuf:"varint,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	IsStarted  bool   `protobuf:"varint,4,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
	IsFinished bool   `protobuf:"varint,5,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*GetActivityDataByMuipRsp_SeaLampData
	Detail isGetActivityDataByMuipRsp_Detail `protobuf_oneof:"detail"`
}

func (x *GetActivityDataByMuipRsp) Reset() {
	*x = GetActivityDataByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_activity_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityDataByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityDataByMuipRsp) ProtoMessage() {}

func (x *GetActivityDataByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_activity_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityDataByMuipRsp.ProtoReflect.Descriptor instead.
func (*GetActivityDataByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_activity_server_proto_rawDescGZIP(), []int{11}
}

func (x *GetActivityDataByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetActivityDataByMuipRsp) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetActivityDataByMuipRsp) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *GetActivityDataByMuipRsp) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

func (x *GetActivityDataByMuipRsp) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (m *GetActivityDataByMuipRsp) GetDetail() isGetActivityDataByMuipRsp_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *GetActivityDataByMuipRsp) GetSeaLampData() *SeaLampActivityDataMuip {
	if x, ok := x.GetDetail().(*GetActivityDataByMuipRsp_SeaLampData); ok {
		return x.SeaLampData
	}
	return nil
}

type isGetActivityDataByMuipRsp_Detail interface {
	isGetActivityDataByMuipRsp_Detail()
}

type GetActivityDataByMuipRsp_SeaLampData struct {
	SeaLampData *SeaLampActivityDataMuip `protobuf:"bytes,10,opt,name=sea_lamp_data,json=seaLampData,proto3,oneof"`
}

func (*GetActivityDataByMuipRsp_SeaLampData) isGetActivityDataByMuipRsp_Detail() {}

var File_server_only_cmd_activity_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_activity_server_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73,
	0x0a, 0x1f, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x69,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x75, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61,
	0x4c, 0x61, 0x6d, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x75, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x75,
	0x69, 0x70, 0x22, 0x39, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x95, 0x01,
	0x0a, 0x1b, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f,
	0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x50, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61,
	0x4c, 0x61, 0x6d, 0x70, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x4c, 0x61,
	0x6d, 0x70, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x47, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x40, 0x0a, 0x1b, 0x53, 0x65, 0x61,
	0x4c, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x1b,
	0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x6c, 0x64,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x3b, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x4d, 0x75, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x69, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x61, 0x4c, 0x61, 0x6d, 0x70, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f,
	0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_cmd_activity_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_activity_server_proto_rawDescData = file_server_only_cmd_activity_server_proto_rawDesc
)

func file_server_only_cmd_activity_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_activity_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_activity_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_activity_server_proto_rawDescData)
	})
	return file_server_only_cmd_activity_server_proto_rawDescData
}

var file_server_only_cmd_activity_server_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_server_only_cmd_activity_server_proto_goTypes = []interface{}{
	(*SeaLampPlayerContributionNotify)(nil), // 0: proto.SeaLampPlayerContributionNotify
	(*SeaLampProgressNotify)(nil),           // 1: proto.SeaLampProgressNotify
	(*SeaLampBroadcastNotify)(nil),          // 2: proto.SeaLampBroadcastNotify
	(*SeaLampSetProgressByMuipReq)(nil),     // 3: proto.SeaLampSetProgressByMuipReq
	(*SeaLampSetProgressByMuipRsp)(nil),     // 4: proto.SeaLampSetProgressByMuipRsp
	(*SeaLampProgressImplementNotify)(nil),  // 5: proto.SeaLampProgressImplementNotify
	(*SeaLampClearProgressByGmNotify)(nil),  // 6: proto.SeaLampClearProgressByGmNotify
	(*SeaLampAddProgressByMuipReq)(nil),     // 7: proto.SeaLampAddProgressByMuipReq
	(*SeaLampAddProgressByMuipRsp)(nil),     // 8: proto.SeaLampAddProgressByMuipRsp
	(*SeaLampActivityDataMuip)(nil),         // 9: proto.SeaLampActivityDataMuip
	(*GetActivityDataByMuipReq)(nil),        // 10: proto.GetActivityDataByMuipReq
	(*GetActivityDataByMuipRsp)(nil),        // 11: proto.GetActivityDataByMuipRsp
}
var file_server_only_cmd_activity_server_proto_depIdxs = []int32{
	1, // 0: proto.SeaLampProgressImplementNotify.msg:type_name -> proto.SeaLampProgressNotify
	9, // 1: proto.GetActivityDataByMuipRsp.sea_lamp_data:type_name -> proto.SeaLampActivityDataMuip
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_server_only_cmd_activity_server_proto_init() }
func file_server_only_cmd_activity_server_proto_init() {
	if File_server_only_cmd_activity_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_activity_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampPlayerContributionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampProgressNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampBroadcastNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampSetProgressByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampSetProgressByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampProgressImplementNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampClearProgressByGmNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampAddProgressByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampAddProgressByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeaLampActivityDataMuip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityDataByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_activity_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityDataByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_only_cmd_activity_server_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GetActivityDataByMuipRsp_SeaLampData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_activity_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_activity_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_activity_server_proto_depIdxs,
		MessageInfos:      file_server_only_cmd_activity_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_activity_server_proto = out.File
	file_server_only_cmd_activity_server_proto_rawDesc = nil
	file_server_only_cmd_activity_server_proto_goTypes = nil
	file_server_only_cmd_activity_server_proto_depIdxs = nil
}
