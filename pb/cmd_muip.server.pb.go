// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server_only/cmd_muip.server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerMemDataType int32

const (
	PlayerMemDataType_MEM_DATA_BASIC       PlayerMemDataType = 0
	PlayerMemDataType_MEM_DATA_H5_ACTIVITY PlayerMemDataType = 1
)

// Enum value maps for PlayerMemDataType.
var (
	PlayerMemDataType_name = map[int32]string{
		0: "MEM_DATA_BASIC",
		1: "MEM_DATA_H5_ACTIVITY",
	}
	PlayerMemDataType_value = map[string]int32{
		"MEM_DATA_BASIC":       0,
		"MEM_DATA_H5_ACTIVITY": 1,
	}
)

func (x PlayerMemDataType) Enum() *PlayerMemDataType {
	p := new(PlayerMemDataType)
	*p = x
	return p
}

func (x PlayerMemDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerMemDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[0].Descriptor()
}

func (PlayerMemDataType) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[0]
}

func (x PlayerMemDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerMemDataType.Descriptor instead.
func (PlayerMemDataType) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{0}
}

type OnlinePlayerNumReq_CmdId int32

const (
	OnlinePlayerNumReq_NONE   OnlinePlayerNumReq_CmdId = 0
	OnlinePlayerNumReq_CMD_ID OnlinePlayerNumReq_CmdId = 10272
)

// Enum value maps for OnlinePlayerNumReq_CmdId.
var (
	OnlinePlayerNumReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10272: "CMD_ID",
	}
	OnlinePlayerNumReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10272,
	}
)

func (x OnlinePlayerNumReq_CmdId) Enum() *OnlinePlayerNumReq_CmdId {
	p := new(OnlinePlayerNumReq_CmdId)
	*p = x
	return p
}

func (x OnlinePlayerNumReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnlinePlayerNumReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[1].Descriptor()
}

func (OnlinePlayerNumReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[1]
}

func (x OnlinePlayerNumReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnlinePlayerNumReq_CmdId.Descriptor instead.
func (OnlinePlayerNumReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{0, 0}
}

type OnlinePlayerNumRsp_CmdId int32

const (
	OnlinePlayerNumRsp_NONE   OnlinePlayerNumRsp_CmdId = 0
	OnlinePlayerNumRsp_CMD_ID OnlinePlayerNumRsp_CmdId = 10298
)

// Enum value maps for OnlinePlayerNumRsp_CmdId.
var (
	OnlinePlayerNumRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10298: "CMD_ID",
	}
	OnlinePlayerNumRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10298,
	}
)

func (x OnlinePlayerNumRsp_CmdId) Enum() *OnlinePlayerNumRsp_CmdId {
	p := new(OnlinePlayerNumRsp_CmdId)
	*p = x
	return p
}

func (x OnlinePlayerNumRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnlinePlayerNumRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[2].Descriptor()
}

func (OnlinePlayerNumRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[2]
}

func (x OnlinePlayerNumRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnlinePlayerNumRsp_CmdId.Descriptor instead.
func (OnlinePlayerNumRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{1, 0}
}

type KickoutPlayerNotify_CmdId int32

const (
	KickoutPlayerNotify_NONE   KickoutPlayerNotify_CmdId = 0
	KickoutPlayerNotify_CMD_ID KickoutPlayerNotify_CmdId = 10212
)

// Enum value maps for KickoutPlayerNotify_CmdId.
var (
	KickoutPlayerNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10212: "CMD_ID",
	}
	KickoutPlayerNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10212,
	}
)

func (x KickoutPlayerNotify_CmdId) Enum() *KickoutPlayerNotify_CmdId {
	p := new(KickoutPlayerNotify_CmdId)
	*p = x
	return p
}

func (x KickoutPlayerNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KickoutPlayerNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[3].Descriptor()
}

func (KickoutPlayerNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[3]
}

func (x KickoutPlayerNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KickoutPlayerNotify_CmdId.Descriptor instead.
func (KickoutPlayerNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{2, 0}
}

type CheckOnlinePlayerReq_CmdId int32

const (
	CheckOnlinePlayerReq_NONE   CheckOnlinePlayerReq_CmdId = 0
	CheckOnlinePlayerReq_CMD_ID CheckOnlinePlayerReq_CmdId = 10235
)

// Enum value maps for CheckOnlinePlayerReq_CmdId.
var (
	CheckOnlinePlayerReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10235: "CMD_ID",
	}
	CheckOnlinePlayerReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10235,
	}
)

func (x CheckOnlinePlayerReq_CmdId) Enum() *CheckOnlinePlayerReq_CmdId {
	p := new(CheckOnlinePlayerReq_CmdId)
	*p = x
	return p
}

func (x CheckOnlinePlayerReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckOnlinePlayerReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[4].Descriptor()
}

func (CheckOnlinePlayerReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[4]
}

func (x CheckOnlinePlayerReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckOnlinePlayerReq_CmdId.Descriptor instead.
func (CheckOnlinePlayerReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{3, 0}
}

type CheckOnlinePlayerRsp_CmdId int32

const (
	CheckOnlinePlayerRsp_NONE   CheckOnlinePlayerRsp_CmdId = 0
	CheckOnlinePlayerRsp_CMD_ID CheckOnlinePlayerRsp_CmdId = 10207
)

// Enum value maps for CheckOnlinePlayerRsp_CmdId.
var (
	CheckOnlinePlayerRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10207: "CMD_ID",
	}
	CheckOnlinePlayerRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10207,
	}
)

func (x CheckOnlinePlayerRsp_CmdId) Enum() *CheckOnlinePlayerRsp_CmdId {
	p := new(CheckOnlinePlayerRsp_CmdId)
	*p = x
	return p
}

func (x CheckOnlinePlayerRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckOnlinePlayerRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[5].Descriptor()
}

func (CheckOnlinePlayerRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[5]
}

func (x CheckOnlinePlayerRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckOnlinePlayerRsp_CmdId.Descriptor instead.
func (CheckOnlinePlayerRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{4, 0}
}

type PlayerCombatForceReq_CmdId int32

const (
	PlayerCombatForceReq_NONE   PlayerCombatForceReq_CmdId = 0
	PlayerCombatForceReq_CMD_ID PlayerCombatForceReq_CmdId = 10221
)

// Enum value maps for PlayerCombatForceReq_CmdId.
var (
	PlayerCombatForceReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10221: "CMD_ID",
	}
	PlayerCombatForceReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10221,
	}
)

func (x PlayerCombatForceReq_CmdId) Enum() *PlayerCombatForceReq_CmdId {
	p := new(PlayerCombatForceReq_CmdId)
	*p = x
	return p
}

func (x PlayerCombatForceReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerCombatForceReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[6].Descriptor()
}

func (PlayerCombatForceReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[6]
}

func (x PlayerCombatForceReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerCombatForceReq_CmdId.Descriptor instead.
func (PlayerCombatForceReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{5, 0}
}

type PlayerCombatForceRsp_CmdId int32

const (
	PlayerCombatForceRsp_NONE   PlayerCombatForceRsp_CmdId = 0
	PlayerCombatForceRsp_CMD_ID PlayerCombatForceRsp_CmdId = 10203
)

// Enum value maps for PlayerCombatForceRsp_CmdId.
var (
	PlayerCombatForceRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10203: "CMD_ID",
	}
	PlayerCombatForceRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10203,
	}
)

func (x PlayerCombatForceRsp_CmdId) Enum() *PlayerCombatForceRsp_CmdId {
	p := new(PlayerCombatForceRsp_CmdId)
	*p = x
	return p
}

func (x PlayerCombatForceRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerCombatForceRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[7].Descriptor()
}

func (PlayerCombatForceRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[7]
}

func (x PlayerCombatForceRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerCombatForceRsp_CmdId.Descriptor instead.
func (PlayerCombatForceRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{6, 0}
}

type CheckGameVersionReq_CmdId int32

const (
	CheckGameVersionReq_NONE   CheckGameVersionReq_CmdId = 0
	CheckGameVersionReq_CMD_ID CheckGameVersionReq_CmdId = 10290
)

// Enum value maps for CheckGameVersionReq_CmdId.
var (
	CheckGameVersionReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10290: "CMD_ID",
	}
	CheckGameVersionReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10290,
	}
)

func (x CheckGameVersionReq_CmdId) Enum() *CheckGameVersionReq_CmdId {
	p := new(CheckGameVersionReq_CmdId)
	*p = x
	return p
}

func (x CheckGameVersionReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckGameVersionReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[8].Descriptor()
}

func (CheckGameVersionReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[8]
}

func (x CheckGameVersionReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckGameVersionReq_CmdId.Descriptor instead.
func (CheckGameVersionReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{7, 0}
}

type CheckGameVersionRsp_CmdId int32

const (
	CheckGameVersionRsp_NONE   CheckGameVersionRsp_CmdId = 0
	CheckGameVersionRsp_CMD_ID CheckGameVersionRsp_CmdId = 10273
)

// Enum value maps for CheckGameVersionRsp_CmdId.
var (
	CheckGameVersionRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10273: "CMD_ID",
	}
	CheckGameVersionRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10273,
	}
)

func (x CheckGameVersionRsp_CmdId) Enum() *CheckGameVersionRsp_CmdId {
	p := new(CheckGameVersionRsp_CmdId)
	*p = x
	return p
}

func (x CheckGameVersionRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckGameVersionRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[9].Descriptor()
}

func (CheckGameVersionRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[9]
}

func (x CheckGameVersionRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckGameVersionRsp_CmdId.Descriptor instead.
func (CheckGameVersionRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{9, 0}
}

type PlatformPlayerNumReq_CmdId int32

const (
	PlatformPlayerNumReq_NONE   PlatformPlayerNumReq_CmdId = 0
	PlatformPlayerNumReq_CMD_ID PlatformPlayerNumReq_CmdId = 10299
)

// Enum value maps for PlatformPlayerNumReq_CmdId.
var (
	PlatformPlayerNumReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10299: "CMD_ID",
	}
	PlatformPlayerNumReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10299,
	}
)

func (x PlatformPlayerNumReq_CmdId) Enum() *PlatformPlayerNumReq_CmdId {
	p := new(PlatformPlayerNumReq_CmdId)
	*p = x
	return p
}

func (x PlatformPlayerNumReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformPlayerNumReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[10].Descriptor()
}

func (PlatformPlayerNumReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[10]
}

func (x PlatformPlayerNumReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformPlayerNumReq_CmdId.Descriptor instead.
func (PlatformPlayerNumReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{10, 0}
}

type PlatformPlayerNumRsp_CmdId int32

const (
	PlatformPlayerNumRsp_NONE   PlatformPlayerNumRsp_CmdId = 0
	PlatformPlayerNumRsp_CMD_ID PlatformPlayerNumRsp_CmdId = 10231
)

// Enum value maps for PlatformPlayerNumRsp_CmdId.
var (
	PlatformPlayerNumRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10231: "CMD_ID",
	}
	PlatformPlayerNumRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10231,
	}
)

func (x PlatformPlayerNumRsp_CmdId) Enum() *PlatformPlayerNumRsp_CmdId {
	p := new(PlatformPlayerNumRsp_CmdId)
	*p = x
	return p
}

func (x PlatformPlayerNumRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformPlayerNumRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[11].Descriptor()
}

func (PlatformPlayerNumRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[11]
}

func (x PlatformPlayerNumRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformPlayerNumRsp_CmdId.Descriptor instead.
func (PlatformPlayerNumRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{11, 0}
}

type QueryPlayerMemDataByMuipReq_CmdId int32

const (
	QueryPlayerMemDataByMuipReq_NONE   QueryPlayerMemDataByMuipReq_CmdId = 0
	QueryPlayerMemDataByMuipReq_CMD_ID QueryPlayerMemDataByMuipReq_CmdId = 10275
)

// Enum value maps for QueryPlayerMemDataByMuipReq_CmdId.
var (
	QueryPlayerMemDataByMuipReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10275: "CMD_ID",
	}
	QueryPlayerMemDataByMuipReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10275,
	}
)

func (x QueryPlayerMemDataByMuipReq_CmdId) Enum() *QueryPlayerMemDataByMuipReq_CmdId {
	p := new(QueryPlayerMemDataByMuipReq_CmdId)
	*p = x
	return p
}

func (x QueryPlayerMemDataByMuipReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPlayerMemDataByMuipReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[12].Descriptor()
}

func (QueryPlayerMemDataByMuipReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[12]
}

func (x QueryPlayerMemDataByMuipReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPlayerMemDataByMuipReq_CmdId.Descriptor instead.
func (QueryPlayerMemDataByMuipReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{16, 0}
}

type QueryPlayerMemDataByMuipRsp_CmdId int32

const (
	QueryPlayerMemDataByMuipRsp_NONE   QueryPlayerMemDataByMuipRsp_CmdId = 0
	QueryPlayerMemDataByMuipRsp_CMD_ID QueryPlayerMemDataByMuipRsp_CmdId = 10248
)

// Enum value maps for QueryPlayerMemDataByMuipRsp_CmdId.
var (
	QueryPlayerMemDataByMuipRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10248: "CMD_ID",
	}
	QueryPlayerMemDataByMuipRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10248,
	}
)

func (x QueryPlayerMemDataByMuipRsp_CmdId) Enum() *QueryPlayerMemDataByMuipRsp_CmdId {
	p := new(QueryPlayerMemDataByMuipRsp_CmdId)
	*p = x
	return p
}

func (x QueryPlayerMemDataByMuipRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryPlayerMemDataByMuipRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[13].Descriptor()
}

func (QueryPlayerMemDataByMuipRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[13]
}

func (x QueryPlayerMemDataByMuipRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryPlayerMemDataByMuipRsp_CmdId.Descriptor instead.
func (QueryPlayerMemDataByMuipRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{17, 0}
}

type BindGmUidNotify_CmdId int32

const (
	BindGmUidNotify_NONE   BindGmUidNotify_CmdId = 0
	BindGmUidNotify_CMD_ID BindGmUidNotify_CmdId = 10297
)

// Enum value maps for BindGmUidNotify_CmdId.
var (
	BindGmUidNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10297: "CMD_ID",
	}
	BindGmUidNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10297,
	}
)

func (x BindGmUidNotify_CmdId) Enum() *BindGmUidNotify_CmdId {
	p := new(BindGmUidNotify_CmdId)
	*p = x
	return p
}

func (x BindGmUidNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BindGmUidNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[14].Descriptor()
}

func (BindGmUidNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[14]
}

func (x BindGmUidNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BindGmUidNotify_CmdId.Descriptor instead.
func (BindGmUidNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{18, 0}
}

type UnbindGmUidNotify_CmdId int32

const (
	UnbindGmUidNotify_NONE   UnbindGmUidNotify_CmdId = 0
	UnbindGmUidNotify_CMD_ID UnbindGmUidNotify_CmdId = 10281
)

// Enum value maps for UnbindGmUidNotify_CmdId.
var (
	UnbindGmUidNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10281: "CMD_ID",
	}
	UnbindGmUidNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10281,
	}
)

func (x UnbindGmUidNotify_CmdId) Enum() *UnbindGmUidNotify_CmdId {
	p := new(UnbindGmUidNotify_CmdId)
	*p = x
	return p
}

func (x UnbindGmUidNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnbindGmUidNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[15].Descriptor()
}

func (UnbindGmUidNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[15]
}

func (x UnbindGmUidNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnbindGmUidNotify_CmdId.Descriptor instead.
func (UnbindGmUidNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{19, 0}
}

type GetBindGmUidReq_CmdId int32

const (
	GetBindGmUidReq_NONE   GetBindGmUidReq_CmdId = 0
	GetBindGmUidReq_CMD_ID GetBindGmUidReq_CmdId = 10205
)

// Enum value maps for GetBindGmUidReq_CmdId.
var (
	GetBindGmUidReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10205: "CMD_ID",
	}
	GetBindGmUidReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10205,
	}
)

func (x GetBindGmUidReq_CmdId) Enum() *GetBindGmUidReq_CmdId {
	p := new(GetBindGmUidReq_CmdId)
	*p = x
	return p
}

func (x GetBindGmUidReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBindGmUidReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[16].Descriptor()
}

func (GetBindGmUidReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[16]
}

func (x GetBindGmUidReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBindGmUidReq_CmdId.Descriptor instead.
func (GetBindGmUidReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{20, 0}
}

type GetBindGmUidRsp_CmdId int32

const (
	GetBindGmUidRsp_NONE   GetBindGmUidRsp_CmdId = 0
	GetBindGmUidRsp_CMD_ID GetBindGmUidRsp_CmdId = 10282
)

// Enum value maps for GetBindGmUidRsp_CmdId.
var (
	GetBindGmUidRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10282: "CMD_ID",
	}
	GetBindGmUidRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10282,
	}
)

func (x GetBindGmUidRsp_CmdId) Enum() *GetBindGmUidRsp_CmdId {
	p := new(GetBindGmUidRsp_CmdId)
	*p = x
	return p
}

func (x GetBindGmUidRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBindGmUidRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[17].Descriptor()
}

func (GetBindGmUidRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[17]
}

func (x GetBindGmUidRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBindGmUidRsp_CmdId.Descriptor instead.
func (GetBindGmUidRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{21, 0}
}

type PlatformAntiAddictNotify_CmdId int32

const (
	PlatformAntiAddictNotify_NONE   PlatformAntiAddictNotify_CmdId = 0
	PlatformAntiAddictNotify_CMD_ID PlatformAntiAddictNotify_CmdId = 10247
)

// Enum value maps for PlatformAntiAddictNotify_CmdId.
var (
	PlatformAntiAddictNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10247: "CMD_ID",
	}
	PlatformAntiAddictNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10247,
	}
)

func (x PlatformAntiAddictNotify_CmdId) Enum() *PlatformAntiAddictNotify_CmdId {
	p := new(PlatformAntiAddictNotify_CmdId)
	*p = x
	return p
}

func (x PlatformAntiAddictNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformAntiAddictNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[18].Descriptor()
}

func (PlatformAntiAddictNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[18]
}

func (x PlatformAntiAddictNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformAntiAddictNotify_CmdId.Descriptor instead.
func (PlatformAntiAddictNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{22, 0}
}

type PlayerLoginPerSecondReq_CmdId int32

const (
	PlayerLoginPerSecondReq_NONE   PlayerLoginPerSecondReq_CmdId = 0
	PlayerLoginPerSecondReq_CMD_ID PlayerLoginPerSecondReq_CmdId = 10239
)

// Enum value maps for PlayerLoginPerSecondReq_CmdId.
var (
	PlayerLoginPerSecondReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10239: "CMD_ID",
	}
	PlayerLoginPerSecondReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10239,
	}
)

func (x PlayerLoginPerSecondReq_CmdId) Enum() *PlayerLoginPerSecondReq_CmdId {
	p := new(PlayerLoginPerSecondReq_CmdId)
	*p = x
	return p
}

func (x PlayerLoginPerSecondReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerLoginPerSecondReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[19].Descriptor()
}

func (PlayerLoginPerSecondReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[19]
}

func (x PlayerLoginPerSecondReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerLoginPerSecondReq_CmdId.Descriptor instead.
func (PlayerLoginPerSecondReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{23, 0}
}

type PlayerLoginPerSecondRsp_CmdId int32

const (
	PlayerLoginPerSecondRsp_NONE   PlayerLoginPerSecondRsp_CmdId = 0
	PlayerLoginPerSecondRsp_CMD_ID PlayerLoginPerSecondRsp_CmdId = 10253
)

// Enum value maps for PlayerLoginPerSecondRsp_CmdId.
var (
	PlayerLoginPerSecondRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10253: "CMD_ID",
	}
	PlayerLoginPerSecondRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10253,
	}
)

func (x PlayerLoginPerSecondRsp_CmdId) Enum() *PlayerLoginPerSecondRsp_CmdId {
	p := new(PlayerLoginPerSecondRsp_CmdId)
	*p = x
	return p
}

func (x PlayerLoginPerSecondRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerLoginPerSecondRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[20].Descriptor()
}

func (PlayerLoginPerSecondRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[20]
}

func (x PlayerLoginPerSecondRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerLoginPerSecondRsp_CmdId.Descriptor instead.
func (PlayerLoginPerSecondRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{24, 0}
}

type FineGrainedPlayerNumReq_CmdId int32

const (
	FineGrainedPlayerNumReq_NONE   FineGrainedPlayerNumReq_CmdId = 0
	FineGrainedPlayerNumReq_CMD_ID FineGrainedPlayerNumReq_CmdId = 10222
)

// Enum value maps for FineGrainedPlayerNumReq_CmdId.
var (
	FineGrainedPlayerNumReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10222: "CMD_ID",
	}
	FineGrainedPlayerNumReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10222,
	}
)

func (x FineGrainedPlayerNumReq_CmdId) Enum() *FineGrainedPlayerNumReq_CmdId {
	p := new(FineGrainedPlayerNumReq_CmdId)
	*p = x
	return p
}

func (x FineGrainedPlayerNumReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FineGrainedPlayerNumReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[21].Descriptor()
}

func (FineGrainedPlayerNumReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[21]
}

func (x FineGrainedPlayerNumReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FineGrainedPlayerNumReq_CmdId.Descriptor instead.
func (FineGrainedPlayerNumReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{25, 0}
}

type FineGrainedPlayerNumRsp_CmdId int32

const (
	FineGrainedPlayerNumRsp_NONE   FineGrainedPlayerNumRsp_CmdId = 0
	FineGrainedPlayerNumRsp_CMD_ID FineGrainedPlayerNumRsp_CmdId = 10265
)

// Enum value maps for FineGrainedPlayerNumRsp_CmdId.
var (
	FineGrainedPlayerNumRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10265: "CMD_ID",
	}
	FineGrainedPlayerNumRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10265,
	}
)

func (x FineGrainedPlayerNumRsp_CmdId) Enum() *FineGrainedPlayerNumRsp_CmdId {
	p := new(FineGrainedPlayerNumRsp_CmdId)
	*p = x
	return p
}

func (x FineGrainedPlayerNumRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FineGrainedPlayerNumRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[22].Descriptor()
}

func (FineGrainedPlayerNumRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[22]
}

func (x FineGrainedPlayerNumRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FineGrainedPlayerNumRsp_CmdId.Descriptor instead.
func (FineGrainedPlayerNumRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{26, 0}
}

type CheckGameCrcVersionReq_CmdId int32

const (
	CheckGameCrcVersionReq_NONE   CheckGameCrcVersionReq_CmdId = 0
	CheckGameCrcVersionReq_CMD_ID CheckGameCrcVersionReq_CmdId = 10204
)

// Enum value maps for CheckGameCrcVersionReq_CmdId.
var (
	CheckGameCrcVersionReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10204: "CMD_ID",
	}
	CheckGameCrcVersionReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10204,
	}
)

func (x CheckGameCrcVersionReq_CmdId) Enum() *CheckGameCrcVersionReq_CmdId {
	p := new(CheckGameCrcVersionReq_CmdId)
	*p = x
	return p
}

func (x CheckGameCrcVersionReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckGameCrcVersionReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[23].Descriptor()
}

func (CheckGameCrcVersionReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[23]
}

func (x CheckGameCrcVersionReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckGameCrcVersionReq_CmdId.Descriptor instead.
func (CheckGameCrcVersionReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{27, 0}
}

type CheckGameCrcVersionRsp_CmdId int32

const (
	CheckGameCrcVersionRsp_NONE   CheckGameCrcVersionRsp_CmdId = 0
	CheckGameCrcVersionRsp_CMD_ID CheckGameCrcVersionRsp_CmdId = 10293
)

// Enum value maps for CheckGameCrcVersionRsp_CmdId.
var (
	CheckGameCrcVersionRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10293: "CMD_ID",
	}
	CheckGameCrcVersionRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10293,
	}
)

func (x CheckGameCrcVersionRsp_CmdId) Enum() *CheckGameCrcVersionRsp_CmdId {
	p := new(CheckGameCrcVersionRsp_CmdId)
	*p = x
	return p
}

func (x CheckGameCrcVersionRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckGameCrcVersionRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[24].Descriptor()
}

func (CheckGameCrcVersionRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[24]
}

func (x CheckGameCrcVersionRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckGameCrcVersionRsp_CmdId.Descriptor instead.
func (CheckGameCrcVersionRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{28, 0}
}

type UpdateRedPointByMuipNotify_CmdId int32

const (
	UpdateRedPointByMuipNotify_NONE   UpdateRedPointByMuipNotify_CmdId = 0
	UpdateRedPointByMuipNotify_CMD_ID UpdateRedPointByMuipNotify_CmdId = 10227
)

// Enum value maps for UpdateRedPointByMuipNotify_CmdId.
var (
	UpdateRedPointByMuipNotify_CmdId_name = map[int32]string{
		0:     "NONE",
		10227: "CMD_ID",
	}
	UpdateRedPointByMuipNotify_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10227,
	}
)

func (x UpdateRedPointByMuipNotify_CmdId) Enum() *UpdateRedPointByMuipNotify_CmdId {
	p := new(UpdateRedPointByMuipNotify_CmdId)
	*p = x
	return p
}

func (x UpdateRedPointByMuipNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateRedPointByMuipNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[25].Descriptor()
}

func (UpdateRedPointByMuipNotify_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[25]
}

func (x UpdateRedPointByMuipNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateRedPointByMuipNotify_CmdId.Descriptor instead.
func (UpdateRedPointByMuipNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{29, 0}
}

type SendConcertProductReq_CmdId int32

const (
	SendConcertProductReq_NONE   SendConcertProductReq_CmdId = 0
	SendConcertProductReq_CMD_ID SendConcertProductReq_CmdId = 10294
)

// Enum value maps for SendConcertProductReq_CmdId.
var (
	SendConcertProductReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10294: "CMD_ID",
	}
	SendConcertProductReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10294,
	}
)

func (x SendConcertProductReq_CmdId) Enum() *SendConcertProductReq_CmdId {
	p := new(SendConcertProductReq_CmdId)
	*p = x
	return p
}

func (x SendConcertProductReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendConcertProductReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[26].Descriptor()
}

func (SendConcertProductReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[26]
}

func (x SendConcertProductReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendConcertProductReq_CmdId.Descriptor instead.
func (SendConcertProductReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{30, 0}
}

type SendConcertProductRsp_CmdId int32

const (
	SendConcertProductRsp_NONE   SendConcertProductRsp_CmdId = 0
	SendConcertProductRsp_CMD_ID SendConcertProductRsp_CmdId = 10288
)

// Enum value maps for SendConcertProductRsp_CmdId.
var (
	SendConcertProductRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10288: "CMD_ID",
	}
	SendConcertProductRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10288,
	}
)

func (x SendConcertProductRsp_CmdId) Enum() *SendConcertProductRsp_CmdId {
	p := new(SendConcertProductRsp_CmdId)
	*p = x
	return p
}

func (x SendConcertProductRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendConcertProductRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[27].Descriptor()
}

func (SendConcertProductRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[27]
}

func (x SendConcertProductRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendConcertProductRsp_CmdId.Descriptor instead.
func (SendConcertProductRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{31, 0}
}

type QueryConcertProductInfoReq_CmdId int32

const (
	QueryConcertProductInfoReq_NONE   QueryConcertProductInfoReq_CmdId = 0
	QueryConcertProductInfoReq_CMD_ID QueryConcertProductInfoReq_CmdId = 10226
)

// Enum value maps for QueryConcertProductInfoReq_CmdId.
var (
	QueryConcertProductInfoReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10226: "CMD_ID",
	}
	QueryConcertProductInfoReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10226,
	}
)

func (x QueryConcertProductInfoReq_CmdId) Enum() *QueryConcertProductInfoReq_CmdId {
	p := new(QueryConcertProductInfoReq_CmdId)
	*p = x
	return p
}

func (x QueryConcertProductInfoReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryConcertProductInfoReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[28].Descriptor()
}

func (QueryConcertProductInfoReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[28]
}

func (x QueryConcertProductInfoReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryConcertProductInfoReq_CmdId.Descriptor instead.
func (QueryConcertProductInfoReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{32, 0}
}

type QueryConcertProductInfoRsp_CmdId int32

const (
	QueryConcertProductInfoRsp_NONE   QueryConcertProductInfoRsp_CmdId = 0
	QueryConcertProductInfoRsp_CMD_ID QueryConcertProductInfoRsp_CmdId = 10263
)

// Enum value maps for QueryConcertProductInfoRsp_CmdId.
var (
	QueryConcertProductInfoRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10263: "CMD_ID",
	}
	QueryConcertProductInfoRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10263,
	}
)

func (x QueryConcertProductInfoRsp_CmdId) Enum() *QueryConcertProductInfoRsp_CmdId {
	p := new(QueryConcertProductInfoRsp_CmdId)
	*p = x
	return p
}

func (x QueryConcertProductInfoRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryConcertProductInfoRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[29].Descriptor()
}

func (QueryConcertProductInfoRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[29]
}

func (x QueryConcertProductInfoRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryConcertProductInfoRsp_CmdId.Descriptor instead.
func (QueryConcertProductInfoRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{33, 0}
}

type PlayerMpModeReq_CmdId int32

const (
	PlayerMpModeReq_NONE   PlayerMpModeReq_CmdId = 0
	PlayerMpModeReq_CMD_ID PlayerMpModeReq_CmdId = 10295
)

// Enum value maps for PlayerMpModeReq_CmdId.
var (
	PlayerMpModeReq_CmdId_name = map[int32]string{
		0:     "NONE",
		10295: "CMD_ID",
	}
	PlayerMpModeReq_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10295,
	}
)

func (x PlayerMpModeReq_CmdId) Enum() *PlayerMpModeReq_CmdId {
	p := new(PlayerMpModeReq_CmdId)
	*p = x
	return p
}

func (x PlayerMpModeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerMpModeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[30].Descriptor()
}

func (PlayerMpModeReq_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[30]
}

func (x PlayerMpModeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerMpModeReq_CmdId.Descriptor instead.
func (PlayerMpModeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{34, 0}
}

type PlayerMpModeRsp_CmdId int32

const (
	PlayerMpModeRsp_NONE   PlayerMpModeRsp_CmdId = 0
	PlayerMpModeRsp_CMD_ID PlayerMpModeRsp_CmdId = 10206
)

// Enum value maps for PlayerMpModeRsp_CmdId.
var (
	PlayerMpModeRsp_CmdId_name = map[int32]string{
		0:     "NONE",
		10206: "CMD_ID",
	}
	PlayerMpModeRsp_CmdId_value = map[string]int32{
		"NONE":   0,
		"CMD_ID": 10206,
	}
)

func (x PlayerMpModeRsp_CmdId) Enum() *PlayerMpModeRsp_CmdId {
	p := new(PlayerMpModeRsp_CmdId)
	*p = x
	return p
}

func (x PlayerMpModeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerMpModeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_server_only_cmd_muip_server_proto_enumTypes[31].Descriptor()
}

func (PlayerMpModeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_server_only_cmd_muip_server_proto_enumTypes[31]
}

func (x PlayerMpModeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerMpModeRsp_CmdId.Descriptor instead.
func (PlayerMpModeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{35, 0}
}

type OnlinePlayerNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OnlinePlayerNumReq) Reset() {
	*x = OnlinePlayerNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePlayerNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePlayerNumReq) ProtoMessage() {}

func (x *OnlinePlayerNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePlayerNumReq.ProtoReflect.Descriptor instead.
func (*OnlinePlayerNumReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{0}
}

type OnlinePlayerNumRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                         int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OnlinePlayerNum                 uint32            `protobuf:"varint,2,opt,name=online_player_num,json=onlinePlayerNum,proto3" json:"online_player_num,omitempty"`
	GameserverPlayerNumMap          map[uint32]uint32 `protobuf:"bytes,3,rep,name=gameserver_player_num_map,json=gameserverPlayerNumMap,proto3" json:"gameserver_player_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	OnlinePlayerNumExceptSubAccount uint32            `protobuf:"varint,4,opt,name=online_player_num_except_sub_account,json=onlinePlayerNumExceptSubAccount,proto3" json:"online_player_num_except_sub_account,omitempty"`
}

func (x *OnlinePlayerNumRsp) Reset() {
	*x = OnlinePlayerNumRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePlayerNumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePlayerNumRsp) ProtoMessage() {}

func (x *OnlinePlayerNumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePlayerNumRsp.ProtoReflect.Descriptor instead.
func (*OnlinePlayerNumRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{1}
}

func (x *OnlinePlayerNumRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *OnlinePlayerNumRsp) GetOnlinePlayerNum() uint32 {
	if x != nil {
		return x.OnlinePlayerNum
	}
	return 0
}

func (x *OnlinePlayerNumRsp) GetGameserverPlayerNumMap() map[uint32]uint32 {
	if x != nil {
		return x.GameserverPlayerNumMap
	}
	return nil
}

func (x *OnlinePlayerNumRsp) GetOnlinePlayerNumExceptSubAccount() uint32 {
	if x != nil {
		return x.OnlinePlayerNumExceptSubAccount
	}
	return 0
}

type KickoutPlayerNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason uint32 `protobuf:"varint,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KickoutPlayerNotify) Reset() {
	*x = KickoutPlayerNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickoutPlayerNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickoutPlayerNotify) ProtoMessage() {}

func (x *KickoutPlayerNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickoutPlayerNotify.ProtoReflect.Descriptor instead.
func (*KickoutPlayerNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{2}
}

func (x *KickoutPlayerNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type CheckOnlinePlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameserverId   uint32 `protobuf:"varint,1,opt,name=gameserver_id,json=gameserverId,proto3" json:"gameserver_id,omitempty"`
	NsGameserverId uint32 `protobuf:"varint,2,opt,name=ns_gameserver_id,json=nsGameserverId,proto3" json:"ns_gameserver_id,omitempty"`
}

func (x *CheckOnlinePlayerReq) Reset() {
	*x = CheckOnlinePlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOnlinePlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOnlinePlayerReq) ProtoMessage() {}

func (x *CheckOnlinePlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOnlinePlayerReq.ProtoReflect.Descriptor instead.
func (*CheckOnlinePlayerReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{3}
}

func (x *CheckOnlinePlayerReq) GetGameserverId() uint32 {
	if x != nil {
		return x.GameserverId
	}
	return 0
}

func (x *CheckOnlinePlayerReq) GetNsGameserverId() uint32 {
	if x != nil {
		return x.NsGameserverId
	}
	return 0
}

type CheckOnlinePlayerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32                            `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	NodeStatus *CheckOnlinePlayerRsp_NodeStatus `protobuf:"bytes,2,opt,name=node_status,json=nodeStatus,proto3" json:"node_status,omitempty"`
	GameStatus *CheckOnlinePlayerRsp_GameStatus `protobuf:"bytes,3,opt,name=game_status,json=gameStatus,proto3" json:"game_status,omitempty"`
}

func (x *CheckOnlinePlayerRsp) Reset() {
	*x = CheckOnlinePlayerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOnlinePlayerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOnlinePlayerRsp) ProtoMessage() {}

func (x *CheckOnlinePlayerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOnlinePlayerRsp.ProtoReflect.Descriptor instead.
func (*CheckOnlinePlayerRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{4}
}

func (x *CheckOnlinePlayerRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CheckOnlinePlayerRsp) GetNodeStatus() *CheckOnlinePlayerRsp_NodeStatus {
	if x != nil {
		return x.NodeStatus
	}
	return nil
}

func (x *CheckOnlinePlayerRsp) GetGameStatus() *CheckOnlinePlayerRsp_GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return nil
}

type PlayerCombatForceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerCombatForceReq) Reset() {
	*x = PlayerCombatForceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCombatForceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCombatForceReq) ProtoMessage() {}

func (x *PlayerCombatForceReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCombatForceReq.ProtoReflect.Descriptor instead.
func (*PlayerCombatForceReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{5}
}

type PlayerCombatForceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	PlayerCombatForce    float32            `protobuf:"fixed32,2,opt,name=player_combat_force,json=playerCombatForce,proto3" json:"player_combat_force,omitempty"`
	PlayerCombatForceMap map[uint32]float32 `protobuf:"bytes,3,rep,name=player_combat_force_map,json=playerCombatForceMap,proto3" json:"player_combat_force_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
}

func (x *PlayerCombatForceRsp) Reset() {
	*x = PlayerCombatForceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCombatForceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCombatForceRsp) ProtoMessage() {}

func (x *PlayerCombatForceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCombatForceRsp.ProtoReflect.Descriptor instead.
func (*PlayerCombatForceRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerCombatForceRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerCombatForceRsp) GetPlayerCombatForce() float32 {
	if x != nil {
		return x.PlayerCombatForce
	}
	return 0
}

func (x *PlayerCombatForceRsp) GetPlayerCombatForceMap() map[uint32]float32 {
	if x != nil {
		return x.PlayerCombatForceMap
	}
	return nil
}

type CheckGameVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion        uint32            `protobuf:"varint,1,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ClientVersion        uint32            `protobuf:"varint,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ClientSilenceVersion uint32            `protobuf:"varint,3,opt,name=client_silence_version,json=clientSilenceVersion,proto3" json:"client_silence_version,omitempty"`
	ResVersionMap        map[uint32]uint32 `protobuf:"bytes,4,rep,name=res_version_map,json=resVersionMap,proto3" json:"res_version_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NextResVersionMap    map[uint32]uint32 `protobuf:"bytes,5,rep,name=next_res_version_map,json=nextResVersionMap,proto3" json:"next_res_version_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CheckGameVersionReq) Reset() {
	*x = CheckGameVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameVersionReq) ProtoMessage() {}

func (x *CheckGameVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameVersionReq.ProtoReflect.Descriptor instead.
func (*CheckGameVersionReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{7}
}

func (x *CheckGameVersionReq) GetServerVersion() uint32 {
	if x != nil {
		return x.ServerVersion
	}
	return 0
}

func (x *CheckGameVersionReq) GetClientVersion() uint32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

func (x *CheckGameVersionReq) GetClientSilenceVersion() uint32 {
	if x != nil {
		return x.ClientSilenceVersion
	}
	return 0
}

func (x *CheckGameVersionReq) GetResVersionMap() map[uint32]uint32 {
	if x != nil {
		return x.ResVersionMap
	}
	return nil
}

func (x *CheckGameVersionReq) GetNextResVersionMap() map[uint32]uint32 {
	if x != nil {
		return x.NextResVersionMap
	}
	return nil
}

type GameVersionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	WrongNum      uint32   `protobuf:"varint,2,opt,name=wrong_num,json=wrongNum,proto3" json:"wrong_num,omitempty"`
	WrongNameList []uint32 `protobuf:"varint,3,rep,packed,name=wrong_name_list,json=wrongNameList,proto3" json:"wrong_name_list,omitempty"`
}

func (x *GameVersionResult) Reset() {
	*x = GameVersionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameVersionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameVersionResult) ProtoMessage() {}

func (x *GameVersionResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameVersionResult.ProtoReflect.Descriptor instead.
func (*GameVersionResult) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{8}
}

func (x *GameVersionResult) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GameVersionResult) GetWrongNum() uint32 {
	if x != nil {
		return x.WrongNum
	}
	return 0
}

func (x *GameVersionResult) GetWrongNameList() []uint32 {
	if x != nil {
		return x.WrongNameList
	}
	return nil
}

type CheckGameVersionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                    int32                         `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TotalGame                  uint32                        `protobuf:"varint,2,opt,name=total_game,json=totalGame,proto3" json:"total_game,omitempty"`
	ServerVersionResult        *GameVersionResult            `protobuf:"bytes,3,opt,name=server_version_result,json=serverVersionResult,proto3" json:"server_version_result,omitempty"`
	ClientVersionResult        *GameVersionResult            `protobuf:"bytes,4,opt,name=client_version_result,json=clientVersionResult,proto3" json:"client_version_result,omitempty"`
	ClientSilenceVersionResult *GameVersionResult            `protobuf:"bytes,5,opt,name=client_silence_version_result,json=clientSilenceVersionResult,proto3" json:"client_silence_version_result,omitempty"`
	ResVersionResultMap        map[uint32]*GameVersionResult `protobuf:"bytes,6,rep,name=res_version_result_map,json=resVersionResultMap,proto3" json:"res_version_result_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NextResVersionResultMap    map[uint32]*GameVersionResult `protobuf:"bytes,7,rep,name=next_res_version_result_map,json=nextResVersionResultMap,proto3" json:"next_res_version_result_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckGameVersionRsp) Reset() {
	*x = CheckGameVersionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameVersionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameVersionRsp) ProtoMessage() {}

func (x *CheckGameVersionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameVersionRsp.ProtoReflect.Descriptor instead.
func (*CheckGameVersionRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{9}
}

func (x *CheckGameVersionRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CheckGameVersionRsp) GetTotalGame() uint32 {
	if x != nil {
		return x.TotalGame
	}
	return 0
}

func (x *CheckGameVersionRsp) GetServerVersionResult() *GameVersionResult {
	if x != nil {
		return x.ServerVersionResult
	}
	return nil
}

func (x *CheckGameVersionRsp) GetClientVersionResult() *GameVersionResult {
	if x != nil {
		return x.ClientVersionResult
	}
	return nil
}

func (x *CheckGameVersionRsp) GetClientSilenceVersionResult() *GameVersionResult {
	if x != nil {
		return x.ClientSilenceVersionResult
	}
	return nil
}

func (x *CheckGameVersionRsp) GetResVersionResultMap() map[uint32]*GameVersionResult {
	if x != nil {
		return x.ResVersionResultMap
	}
	return nil
}

func (x *CheckGameVersionRsp) GetNextResVersionResultMap() map[uint32]*GameVersionResult {
	if x != nil {
		return x.NextResVersionResultMap
	}
	return nil
}

type PlatformPlayerNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlatformPlayerNumReq) Reset() {
	*x = PlatformPlayerNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlayerNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlayerNumReq) ProtoMessage() {}

func (x *PlatformPlayerNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlayerNumReq.ProtoReflect.Descriptor instead.
func (*PlatformPlayerNumReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{10}
}

type PlatformPlayerNumRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OnlinePlayerNum      uint32            `protobuf:"varint,2,opt,name=online_player_num,json=onlinePlayerNum,proto3" json:"online_player_num,omitempty"`
	PlatformPlayerNumMap map[uint32]uint32 `protobuf:"bytes,3,rep,name=platform_player_num_map,json=platformPlayerNumMap,proto3" json:"platform_player_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PlatformPlayerNumRsp) Reset() {
	*x = PlatformPlayerNumRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlayerNumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlayerNumRsp) ProtoMessage() {}

func (x *PlatformPlayerNumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlayerNumRsp.ProtoReflect.Descriptor instead.
func (*PlatformPlayerNumRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{11}
}

func (x *PlatformPlayerNumRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlatformPlayerNumRsp) GetOnlinePlayerNum() uint32 {
	if x != nil {
		return x.OnlinePlayerNum
	}
	return 0
}

func (x *PlatformPlayerNumRsp) GetPlatformPlayerNumMap() map[uint32]uint32 {
	if x != nil {
		return x.PlatformPlayerNumMap
	}
	return nil
}

type PlayerMemBasicData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname       string          `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level          uint32          `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Exp            uint32          `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	Scoin          uint32          `protobuf:"varint,4,opt,name=scoin,proto3" json:"scoin,omitempty"`
	Hcoin          uint32          `protobuf:"varint,5,opt,name=hcoin,proto3" json:"hcoin,omitempty"`
	LastLogin      uint32          `protobuf:"varint,6,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	ProfilePicture *ProfilePicture `protobuf:"bytes,7,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	RegisterTime   uint32          `protobuf:"fixed32,8,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`
	GenderType     uint32          `protobuf:"varint,9,opt,name=gender_type,json=genderType,proto3" json:"gender_type,omitempty"`
}

func (x *PlayerMemBasicData) Reset() {
	*x = PlayerMemBasicData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMemBasicData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMemBasicData) ProtoMessage() {}

func (x *PlayerMemBasicData) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMemBasicData.ProtoReflect.Descriptor instead.
func (*PlayerMemBasicData) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerMemBasicData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerMemBasicData) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerMemBasicData) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerMemBasicData) GetScoin() uint32 {
	if x != nil {
		return x.Scoin
	}
	return 0
}

func (x *PlayerMemBasicData) GetHcoin() uint32 {
	if x != nil {
		return x.Hcoin
	}
	return 0
}

func (x *PlayerMemBasicData) GetLastLogin() uint32 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *PlayerMemBasicData) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *PlayerMemBasicData) GetRegisterTime() uint32 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *PlayerMemBasicData) GetGenderType() uint32 {
	if x != nil {
		return x.GenderType
	}
	return 0
}

type PlayerMemH5AcitivityWatcherData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H5ActivityWatcherId uint32 `protobuf:"varint,1,opt,name=h5_activity_watcher_id,json=h5ActivityWatcherId,proto3" json:"h5_activity_watcher_id,omitempty"`
	Progress            uint32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *PlayerMemH5AcitivityWatcherData) Reset() {
	*x = PlayerMemH5AcitivityWatcherData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMemH5AcitivityWatcherData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMemH5AcitivityWatcherData) ProtoMessage() {}

func (x *PlayerMemH5AcitivityWatcherData) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMemH5AcitivityWatcherData.ProtoReflect.Descriptor instead.
func (*PlayerMemH5AcitivityWatcherData) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{13}
}

func (x *PlayerMemH5AcitivityWatcherData) GetH5ActivityWatcherId() uint32 {
	if x != nil {
		return x.H5ActivityWatcherId
	}
	return 0
}

func (x *PlayerMemH5AcitivityWatcherData) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type PlayerMemH5ActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H5ScheduleId                  uint32                             `protobuf:"varint,1,opt,name=h5_schedule_id,json=h5ScheduleId,proto3" json:"h5_schedule_id,omitempty"`
	H5ActivityId                  uint32                             `protobuf:"varint,2,opt,name=h5_activity_id,json=h5ActivityId,proto3" json:"h5_activity_id,omitempty"`
	LastRefreshTime               uint32                             `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time,omitempty"`
	FinishedH5ActivityWatcherList []uint32                           `protobuf:"varint,4,rep,packed,name=finished_h5_activity_watcher_list,json=finishedH5ActivityWatcherList,proto3" json:"finished_h5_activity_watcher_list,omitempty"`
	UnacceptH5ActivityWatcherList []uint32                           `protobuf:"varint,5,rep,packed,name=unaccept_h5_activity_watcher_list,json=unacceptH5ActivityWatcherList,proto3" json:"unaccept_h5_activity_watcher_list,omitempty"`
	H5ActivityWatcherList         []*PlayerMemH5AcitivityWatcherData `protobuf:"bytes,6,rep,name=h5_activity_watcher_list,json=h5ActivityWatcherList,proto3" json:"h5_activity_watcher_list,omitempty"`
}

func (x *PlayerMemH5ActivityData) Reset() {
	*x = PlayerMemH5ActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMemH5ActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMemH5ActivityData) ProtoMessage() {}

func (x *PlayerMemH5ActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMemH5ActivityData.ProtoReflect.Descriptor instead.
func (*PlayerMemH5ActivityData) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerMemH5ActivityData) GetH5ScheduleId() uint32 {
	if x != nil {
		return x.H5ScheduleId
	}
	return 0
}

func (x *PlayerMemH5ActivityData) GetH5ActivityId() uint32 {
	if x != nil {
		return x.H5ActivityId
	}
	return 0
}

func (x *PlayerMemH5ActivityData) GetLastRefreshTime() uint32 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

func (x *PlayerMemH5ActivityData) GetFinishedH5ActivityWatcherList() []uint32 {
	if x != nil {
		return x.FinishedH5ActivityWatcherList
	}
	return nil
}

func (x *PlayerMemH5ActivityData) GetUnacceptH5ActivityWatcherList() []uint32 {
	if x != nil {
		return x.UnacceptH5ActivityWatcherList
	}
	return nil
}

func (x *PlayerMemH5ActivityData) GetH5ActivityWatcherList() []*PlayerMemH5AcitivityWatcherData {
	if x != nil {
		return x.H5ActivityWatcherList
	}
	return nil
}

type PlayerMemH5ActivityDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetcodeMap         map[uint32]int32           `protobuf:"bytes,1,rep,name=retcode_map,json=retcodeMap,proto3" json:"retcode_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	H5ActivityDataList []*PlayerMemH5ActivityData `protobuf:"bytes,2,rep,name=h5_activity_data_list,json=h5ActivityDataList,proto3" json:"h5_activity_data_list,omitempty"`
}

func (x *PlayerMemH5ActivityDataResult) Reset() {
	*x = PlayerMemH5ActivityDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMemH5ActivityDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMemH5ActivityDataResult) ProtoMessage() {}

func (x *PlayerMemH5ActivityDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMemH5ActivityDataResult.ProtoReflect.Descriptor instead.
func (*PlayerMemH5ActivityDataResult) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerMemH5ActivityDataResult) GetRetcodeMap() map[uint32]int32 {
	if x != nil {
		return x.RetcodeMap
	}
	return nil
}

func (x *PlayerMemH5ActivityDataResult) GetH5ActivityDataList() []*PlayerMemH5ActivityData {
	if x != nil {
		return x.H5ActivityDataList
	}
	return nil
}

type QueryPlayerMemDataByMuipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType  uint32   `protobuf:"varint,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	ParamList []uint32 `protobuf:"varint,2,rep,packed,name=param_list,json=paramList,proto3" json:"param_list,omitempty"`
}

func (x *QueryPlayerMemDataByMuipReq) Reset() {
	*x = QueryPlayerMemDataByMuipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerMemDataByMuipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerMemDataByMuipReq) ProtoMessage() {}

func (x *QueryPlayerMemDataByMuipReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerMemDataByMuipReq.ProtoReflect.Descriptor instead.
func (*QueryPlayerMemDataByMuipReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{16}
}

func (x *QueryPlayerMemDataByMuipReq) GetDataType() uint32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *QueryPlayerMemDataByMuipReq) GetParamList() []uint32 {
	if x != nil {
		return x.ParamList
	}
	return nil
}

type QueryPlayerMemDataByMuipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*QueryPlayerMemDataByMuipRsp_BasicData
	//	*QueryPlayerMemDataByMuipRsp_H5ActivityDataResult
	Detail isQueryPlayerMemDataByMuipRsp_Detail `protobuf_oneof:"detail"`
}

func (x *QueryPlayerMemDataByMuipRsp) Reset() {
	*x = QueryPlayerMemDataByMuipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerMemDataByMuipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerMemDataByMuipRsp) ProtoMessage() {}

func (x *QueryPlayerMemDataByMuipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerMemDataByMuipRsp.ProtoReflect.Descriptor instead.
func (*QueryPlayerMemDataByMuipRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{17}
}

func (x *QueryPlayerMemDataByMuipRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (m *QueryPlayerMemDataByMuipRsp) GetDetail() isQueryPlayerMemDataByMuipRsp_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *QueryPlayerMemDataByMuipRsp) GetBasicData() *PlayerMemBasicData {
	if x, ok := x.GetDetail().(*QueryPlayerMemDataByMuipRsp_BasicData); ok {
		return x.BasicData
	}
	return nil
}

func (x *QueryPlayerMemDataByMuipRsp) GetH5ActivityDataResult() *PlayerMemH5ActivityDataResult {
	if x, ok := x.GetDetail().(*QueryPlayerMemDataByMuipRsp_H5ActivityDataResult); ok {
		return x.H5ActivityDataResult
	}
	return nil
}

type isQueryPlayerMemDataByMuipRsp_Detail interface {
	isQueryPlayerMemDataByMuipRsp_Detail()
}

type QueryPlayerMemDataByMuipRsp_BasicData struct {
	BasicData *PlayerMemBasicData `protobuf:"bytes,2,opt,name=basic_data,json=basicData,proto3,oneof"`
}

type QueryPlayerMemDataByMuipRsp_H5ActivityDataResult struct {
	H5ActivityDataResult *PlayerMemH5ActivityDataResult `protobuf:"bytes,3,opt,name=h5_activity_data_result,json=h5ActivityDataResult,proto3,oneof"`
}

func (*QueryPlayerMemDataByMuipRsp_BasicData) isQueryPlayerMemDataByMuipRsp_Detail() {}

func (*QueryPlayerMemDataByMuipRsp_H5ActivityDataResult) isQueryPlayerMemDataByMuipRsp_Detail() {}

type BindGmUidNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GmUid     uint32 `protobuf:"varint,1,opt,name=gm_uid,json=gmUid,proto3" json:"gm_uid,omitempty"`
	PlayerUid uint32 `protobuf:"varint,2,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
}

func (x *BindGmUidNotify) Reset() {
	*x = BindGmUidNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindGmUidNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindGmUidNotify) ProtoMessage() {}

func (x *BindGmUidNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindGmUidNotify.ProtoReflect.Descriptor instead.
func (*BindGmUidNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{18}
}

func (x *BindGmUidNotify) GetGmUid() uint32 {
	if x != nil {
		return x.GmUid
	}
	return 0
}

func (x *BindGmUidNotify) GetPlayerUid() uint32 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

type UnbindGmUidNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GmUid uint32 `protobuf:"varint,1,opt,name=gm_uid,json=gmUid,proto3" json:"gm_uid,omitempty"`
}

func (x *UnbindGmUidNotify) Reset() {
	*x = UnbindGmUidNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindGmUidNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindGmUidNotify) ProtoMessage() {}

func (x *UnbindGmUidNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindGmUidNotify.ProtoReflect.Descriptor instead.
func (*UnbindGmUidNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{19}
}

func (x *UnbindGmUidNotify) GetGmUid() uint32 {
	if x != nil {
		return x.GmUid
	}
	return 0
}

type GetBindGmUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBindGmUidReq) Reset() {
	*x = GetBindGmUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBindGmUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBindGmUidReq) ProtoMessage() {}

func (x *GetBindGmUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBindGmUidReq.ProtoReflect.Descriptor instead.
func (*GetBindGmUidReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{20}
}

type GetBindGmUidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	GmUidMap map[uint32]uint32 `protobuf:"bytes,2,rep,name=gm_uid_map,json=gmUidMap,proto3" json:"gm_uid_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetBindGmUidRsp) Reset() {
	*x = GetBindGmUidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBindGmUidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBindGmUidRsp) ProtoMessage() {}

func (x *GetBindGmUidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBindGmUidRsp.ProtoReflect.Descriptor instead.
func (*GetBindGmUidRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{21}
}

func (x *GetBindGmUidRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetBindGmUidRsp) GetGmUidMap() map[uint32]uint32 {
	if x != nil {
		return x.GmUidMap
	}
	return nil
}

type PlatformAntiAddictNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType int32  `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Level   string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *PlatformAntiAddictNotify) Reset() {
	*x = PlatformAntiAddictNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformAntiAddictNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformAntiAddictNotify) ProtoMessage() {}

func (x *PlatformAntiAddictNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformAntiAddictNotify.ProtoReflect.Descriptor instead.
func (*PlatformAntiAddictNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{22}
}

func (x *PlatformAntiAddictNotify) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *PlatformAntiAddictNotify) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PlatformAntiAddictNotify) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type PlayerLoginPerSecondReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerLoginPerSecondReq) Reset() {
	*x = PlayerLoginPerSecondReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginPerSecondReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginPerSecondReq) ProtoMessage() {}

func (x *PlayerLoginPerSecondReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginPerSecondReq.ProtoReflect.Descriptor instead.
func (*PlayerLoginPerSecondReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{23}
}

type PlayerLoginPerSecondRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode              int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	PlayerLoginPerSecond uint32 `protobuf:"varint,2,opt,name=player_login_per_second,json=playerLoginPerSecond,proto3" json:"player_login_per_second,omitempty"`
}

func (x *PlayerLoginPerSecondRsp) Reset() {
	*x = PlayerLoginPerSecondRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginPerSecondRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginPerSecondRsp) ProtoMessage() {}

func (x *PlayerLoginPerSecondRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginPerSecondRsp.ProtoReflect.Descriptor instead.
func (*PlayerLoginPerSecondRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{24}
}

func (x *PlayerLoginPerSecondRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerLoginPerSecondRsp) GetPlayerLoginPerSecond() uint32 {
	if x != nil {
		return x.PlayerLoginPerSecond
	}
	return 0
}

type FineGrainedPlayerNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FineGrainedPlayerNumReq) Reset() {
	*x = FineGrainedPlayerNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FineGrainedPlayerNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FineGrainedPlayerNumReq) ProtoMessage() {}

func (x *FineGrainedPlayerNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FineGrainedPlayerNumReq.ProtoReflect.Descriptor instead.
func (*FineGrainedPlayerNumReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{25}
}

type FineGrainedPlayerNumRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode                 int32             `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	OnlinePlayerNum         uint32            `protobuf:"varint,2,opt,name=online_player_num,json=onlinePlayerNum,proto3" json:"online_player_num,omitempty"`
	FineGrainedPlayerNumMap map[string]uint32 `protobuf:"bytes,3,rep,name=fine_grained_player_num_map,json=fineGrainedPlayerNumMap,proto3" json:"fine_grained_player_num_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *FineGrainedPlayerNumRsp) Reset() {
	*x = FineGrainedPlayerNumRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FineGrainedPlayerNumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FineGrainedPlayerNumRsp) ProtoMessage() {}

func (x *FineGrainedPlayerNumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FineGrainedPlayerNumRsp.ProtoReflect.Descriptor instead.
func (*FineGrainedPlayerNumRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{26}
}

func (x *FineGrainedPlayerNumRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *FineGrainedPlayerNumRsp) GetOnlinePlayerNum() uint32 {
	if x != nil {
		return x.OnlinePlayerNum
	}
	return 0
}

func (x *FineGrainedPlayerNumRsp) GetFineGrainedPlayerNumMap() map[string]uint32 {
	if x != nil {
		return x.FineGrainedPlayerNumMap
	}
	return nil
}

type CheckGameCrcVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform         uint32 `protobuf:"varint,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ClientVersionStr string `protobuf:"bytes,2,opt,name=client_version_str,json=clientVersionStr,proto3" json:"client_version_str,omitempty"`
}

func (x *CheckGameCrcVersionReq) Reset() {
	*x = CheckGameCrcVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameCrcVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameCrcVersionReq) ProtoMessage() {}

func (x *CheckGameCrcVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameCrcVersionReq.ProtoReflect.Descriptor instead.
func (*CheckGameCrcVersionReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{27}
}

func (x *CheckGameCrcVersionReq) GetPlatform() uint32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CheckGameCrcVersionReq) GetClientVersionStr() string {
	if x != nil {
		return x.ClientVersionStr
	}
	return ""
}

type CheckGameCrcVersionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode          int32    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TotalGame        uint32   `protobuf:"varint,2,opt,name=total_game,json=totalGame,proto3" json:"total_game,omitempty"`
	Platform         uint32   `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
	ClientVersionStr string   `protobuf:"bytes,4,opt,name=client_version_str,json=clientVersionStr,proto3" json:"client_version_str,omitempty"`
	WrongNum         uint32   `protobuf:"varint,5,opt,name=wrong_num,json=wrongNum,proto3" json:"wrong_num,omitempty"`
	WrongNameList    []uint32 `protobuf:"varint,6,rep,packed,name=wrong_name_list,json=wrongNameList,proto3" json:"wrong_name_list,omitempty"`
}

func (x *CheckGameCrcVersionRsp) Reset() {
	*x = CheckGameCrcVersionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameCrcVersionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameCrcVersionRsp) ProtoMessage() {}

func (x *CheckGameCrcVersionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameCrcVersionRsp.ProtoReflect.Descriptor instead.
func (*CheckGameCrcVersionRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{28}
}

func (x *CheckGameCrcVersionRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *CheckGameCrcVersionRsp) GetTotalGame() uint32 {
	if x != nil {
		return x.TotalGame
	}
	return 0
}

func (x *CheckGameCrcVersionRsp) GetPlatform() uint32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CheckGameCrcVersionRsp) GetClientVersionStr() string {
	if x != nil {
		return x.ClientVersionStr
	}
	return ""
}

func (x *CheckGameCrcVersionRsp) GetWrongNum() uint32 {
	if x != nil {
		return x.WrongNum
	}
	return 0
}

func (x *CheckGameCrcVersionRsp) GetWrongNameList() []uint32 {
	if x != nil {
		return x.WrongNameList
	}
	return nil
}

type UpdateRedPointByMuipNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPointList []*RedPointData `protobuf:"bytes,1,rep,name=red_point_list,json=redPointList,proto3" json:"red_point_list,omitempty"`
}

func (x *UpdateRedPointByMuipNotify) Reset() {
	*x = UpdateRedPointByMuipNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRedPointByMuipNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRedPointByMuipNotify) ProtoMessage() {}

func (x *UpdateRedPointByMuipNotify) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRedPointByMuipNotify.ProtoReflect.Descriptor instead.
func (*UpdateRedPointByMuipNotify) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateRedPointByMuipNotify) GetRedPointList() []*RedPointData {
	if x != nil {
		return x.RedPointList
	}
	return nil
}

type SendConcertProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket   string `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	ConfigId uint32 `protobuf:"varint,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *SendConcertProductReq) Reset() {
	*x = SendConcertProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendConcertProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendConcertProductReq) ProtoMessage() {}

func (x *SendConcertProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendConcertProductReq.ProtoReflect.Descriptor instead.
func (*SendConcertProductReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{30}
}

func (x *SendConcertProductReq) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *SendConcertProductReq) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type SendConcertProductRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Ticket   string `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	ConfigId uint32 `protobuf:"varint,3,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *SendConcertProductRsp) Reset() {
	*x = SendConcertProductRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendConcertProductRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendConcertProductRsp) ProtoMessage() {}

func (x *SendConcertProductRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendConcertProductRsp.ProtoReflect.Descriptor instead.
func (*SendConcertProductRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{31}
}

func (x *SendConcertProductRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SendConcertProductRsp) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *SendConcertProductRsp) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type QueryConcertProductInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId uint32 `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *QueryConcertProductInfoReq) Reset() {
	*x = QueryConcertProductInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryConcertProductInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryConcertProductInfoReq) ProtoMessage() {}

func (x *QueryConcertProductInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryConcertProductInfoReq.ProtoReflect.Descriptor instead.
func (*QueryConcertProductInfoReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{32}
}

func (x *QueryConcertProductInfoReq) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type QueryConcertProductInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode     int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ConfigId    uint32 `protobuf:"varint,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	ObtainCount uint32 `protobuf:"varint,3,opt,name=obtain_count,json=obtainCount,proto3" json:"obtain_count,omitempty"`
	ObtainLimit uint32 `protobuf:"varint,4,opt,name=obtain_limit,json=obtainLimit,proto3" json:"obtain_limit,omitempty"`
}

func (x *QueryConcertProductInfoRsp) Reset() {
	*x = QueryConcertProductInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryConcertProductInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryConcertProductInfoRsp) ProtoMessage() {}

func (x *QueryConcertProductInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryConcertProductInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryConcertProductInfoRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{33}
}

func (x *QueryConcertProductInfoRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *QueryConcertProductInfoRsp) GetConfigId() uint32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *QueryConcertProductInfoRsp) GetObtainCount() uint32 {
	if x != nil {
		return x.ObtainCount
	}
	return 0
}

func (x *QueryConcertProductInfoRsp) GetObtainLimit() uint32 {
	if x != nil {
		return x.ObtainLimit
	}
	return 0
}

type PlayerMpModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerMpModeReq) Reset() {
	*x = PlayerMpModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMpModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMpModeReq) ProtoMessage() {}

func (x *PlayerMpModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMpModeReq.ProtoReflect.Descriptor instead.
func (*PlayerMpModeReq) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{34}
}

type PlayerMpModeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32 `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsMpMode bool  `protobuf:"varint,2,opt,name=is_mp_mode,json=isMpMode,proto3" json:"is_mp_mode,omitempty"`
}

func (x *PlayerMpModeRsp) Reset() {
	*x = PlayerMpModeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMpModeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMpModeRsp) ProtoMessage() {}

func (x *PlayerMpModeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMpModeRsp.ProtoReflect.Descriptor instead.
func (*PlayerMpModeRsp) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{35}
}

func (x *PlayerMpModeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PlayerMpModeRsp) GetIsMpMode() bool {
	if x != nil {
		return x.IsMpMode
	}
	return false
}

type CheckOnlinePlayerRsp_NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameserverId uint32 `protobuf:"varint,1,opt,name=gameserver_id,json=gameserverId,proto3" json:"gameserver_id,omitempty"`
	NodeserverId uint32 `protobuf:"varint,2,opt,name=nodeserver_id,json=nodeserverId,proto3" json:"nodeserver_id,omitempty"`
}

func (x *CheckOnlinePlayerRsp_NodeStatus) Reset() {
	*x = CheckOnlinePlayerRsp_NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOnlinePlayerRsp_NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOnlinePlayerRsp_NodeStatus) ProtoMessage() {}

func (x *CheckOnlinePlayerRsp_NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOnlinePlayerRsp_NodeStatus.ProtoReflect.Descriptor instead.
func (*CheckOnlinePlayerRsp_NodeStatus) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CheckOnlinePlayerRsp_NodeStatus) GetGameserverId() uint32 {
	if x != nil {
		return x.GameserverId
	}
	return 0
}

func (x *CheckOnlinePlayerRsp_NodeStatus) GetNodeserverId() uint32 {
	if x != nil {
		return x.NodeserverId
	}
	return 0
}

type CheckOnlinePlayerRsp_GameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameserverId uint32 `protobuf:"varint,1,opt,name=gameserver_id,json=gameserverId,proto3" json:"gameserver_id,omitempty"`
	LoginTime    uint32 `protobuf:"varint,2,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LoginRand    uint64 `protobuf:"varint,3,opt,name=login_rand,json=loginRand,proto3" json:"login_rand,omitempty"`
	IsWaitSave   bool   `protobuf:"varint,4,opt,name=is_wait_save,json=isWaitSave,proto3" json:"is_wait_save,omitempty"`
}

func (x *CheckOnlinePlayerRsp_GameStatus) Reset() {
	*x = CheckOnlinePlayerRsp_GameStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_only_cmd_muip_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOnlinePlayerRsp_GameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOnlinePlayerRsp_GameStatus) ProtoMessage() {}

func (x *CheckOnlinePlayerRsp_GameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_server_only_cmd_muip_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOnlinePlayerRsp_GameStatus.ProtoReflect.Descriptor instead.
func (*CheckOnlinePlayerRsp_GameStatus) Descriptor() ([]byte, []int) {
	return file_server_only_cmd_muip_server_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CheckOnlinePlayerRsp_GameStatus) GetGameserverId() uint32 {
	if x != nil {
		return x.GameserverId
	}
	return 0
}

func (x *CheckOnlinePlayerRsp_GameStatus) GetLoginTime() uint32 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *CheckOnlinePlayerRsp_GameStatus) GetLoginRand() uint64 {
	if x != nil {
		return x.LoginRand
	}
	return 0
}

func (x *CheckOnlinePlayerRsp_GameStatus) GetIsWaitSave() bool {
	if x != nil {
		return x.IsWaitSave
	}
	return false
}

var File_server_only_cmd_muip_server_proto protoreflect.FileDescriptor

var file_server_only_cmd_muip_server_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x5f, 0x6d, 0x75, 0x69, 0x70, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x1e,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa0, 0x50, 0x22, 0x86,
	0x03, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x70, 0x0a, 0x19, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x4d, 0x0a,
	0x24, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x49, 0x0a, 0x1b,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xba, 0x50, 0x22, 0x4d, 0x0a, 0x13, 0x4b, 0x69, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xe4, 0x4f, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x6e, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfb, 0x4f, 0x22, 0xce,
	0x03, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x47, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x91, 0x01, 0x0a, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x61, 0x69, 0x74, 0x53, 0x61, 0x76, 0x65, 0x22,
	0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdf, 0x4f, 0x22,
	0x36, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xed, 0x4f, 0x22, 0xb7, 0x02, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x17, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x47, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdb,
	0x4f, 0x22, 0xfc, 0x03, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x12, 0x62, 0x0a, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x4e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb2, 0x50,
	0x22, 0x72, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f,
	0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x06, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61,
	0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x5b, 0x0a, 0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x68,
	0x0a, 0x16, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x13, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x75, 0x0a, 0x1b, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x1a,
	0x60, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x64, 0x0a, 0x1c, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xa1, 0x50, 0x22, 0x36, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x22,
	0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbb, 0x50, 0x22,
	0xb3, 0x02, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x6c,
	0x0a, 0x17, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x47, 0x0a, 0x19,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xf7, 0x4f, 0x22, 0xa9, 0x02, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x72, 0x0a, 0x1f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x48, 0x35,
	0x41, 0x63, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x35, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x68, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x86, 0x03, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x48, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x35, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x35, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x35, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x68, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x68, 0x35, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x1d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x35,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x21, 0x75, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x68, 0x35, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1d,
	0x75, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x48, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a,
	0x18, 0x68, 0x35, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x48, 0x35, 0x41, 0x63, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x68, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x88,
	0x02, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x48, 0x35, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x55, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x48, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x51, 0x0a, 0x15, 0x68, 0x35, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x48, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x68, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x1b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x4d, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xa3, 0x50, 0x22, 0xfc, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x4d, 0x75, 0x69,
	0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x17, 0x68, 0x35,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x48, 0x35, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x68, 0x35, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x88, 0x50, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x67, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x47, 0x6d, 0x55, 0x69, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x6d, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x50, 0x22, 0x4a, 0x0a, 0x11,
	0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x47, 0x6d, 0x55, 0x69, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa9, 0x50, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x47, 0x6d, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdd, 0x4f, 0x22, 0xcc, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x47, 0x6d, 0x55, 0x69, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x67, 0x6d, 0x5f,
	0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x47, 0x6d, 0x55,
	0x69, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x47, 0x6d, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x67, 0x6d, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x3b, 0x0a,
	0x0d, 0x47, 0x6d, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaa, 0x50, 0x22, 0x7d, 0x0a, 0x18, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x87, 0x50, 0x22, 0x39, 0x0a, 0x17, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xff, 0x4f, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8d,
	0x50, 0x22, 0x39, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xee, 0x4f, 0x22, 0xc6, 0x02, 0x0a,
	0x17, 0x46, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x79,
	0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6e, 0x65,
	0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x52, 0x73, 0x70, 0x2e, 0x46, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x17, 0x66, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x1c, 0x46, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0x99, 0x50, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xdc, 0x4f, 0x22, 0x80, 0x02, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x72, 0x6f, 0x6e,
	0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x72, 0x6f,
	0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d,
	0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb5, 0x50, 0x22, 0x77, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x79, 0x4d, 0x75, 0x69, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x39, 0x0a, 0x0e, 0x72,
	0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xf3, 0x4f, 0x22, 0x6c, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xb6, 0x50, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb0, 0x50, 0x22, 0x59, 0x0a,
	0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf2, 0x4f, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x97, 0x50, 0x22, 0x31, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xb7, 0x50, 0x22, 0x69, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4d, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6d, 0x70, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0x1e, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xde, 0x4f, 0x2a, 0x41, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x45, 0x4d, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d,
	0x45, 0x4d, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x35, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_only_cmd_muip_server_proto_rawDescOnce sync.Once
	file_server_only_cmd_muip_server_proto_rawDescData = file_server_only_cmd_muip_server_proto_rawDesc
)

func file_server_only_cmd_muip_server_proto_rawDescGZIP() []byte {
	file_server_only_cmd_muip_server_proto_rawDescOnce.Do(func() {
		file_server_only_cmd_muip_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_only_cmd_muip_server_proto_rawDescData)
	})
	return file_server_only_cmd_muip_server_proto_rawDescData
}

var file_server_only_cmd_muip_server_proto_enumTypes = make([]protoimpl.EnumInfo, 32)
var file_server_only_cmd_muip_server_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_server_only_cmd_muip_server_proto_goTypes = []interface{}{
	(PlayerMemDataType)(0),                  // 0: proto.PlayerMemDataType
	(OnlinePlayerNumReq_CmdId)(0),           // 1: proto.OnlinePlayerNumReq.CmdId
	(OnlinePlayerNumRsp_CmdId)(0),           // 2: proto.OnlinePlayerNumRsp.CmdId
	(KickoutPlayerNotify_CmdId)(0),          // 3: proto.KickoutPlayerNotify.CmdId
	(CheckOnlinePlayerReq_CmdId)(0),         // 4: proto.CheckOnlinePlayerReq.CmdId
	(CheckOnlinePlayerRsp_CmdId)(0),         // 5: proto.CheckOnlinePlayerRsp.CmdId
	(PlayerCombatForceReq_CmdId)(0),         // 6: proto.PlayerCombatForceReq.CmdId
	(PlayerCombatForceRsp_CmdId)(0),         // 7: proto.PlayerCombatForceRsp.CmdId
	(CheckGameVersionReq_CmdId)(0),          // 8: proto.CheckGameVersionReq.CmdId
	(CheckGameVersionRsp_CmdId)(0),          // 9: proto.CheckGameVersionRsp.CmdId
	(PlatformPlayerNumReq_CmdId)(0),         // 10: proto.PlatformPlayerNumReq.CmdId
	(PlatformPlayerNumRsp_CmdId)(0),         // 11: proto.PlatformPlayerNumRsp.CmdId
	(QueryPlayerMemDataByMuipReq_CmdId)(0),  // 12: proto.QueryPlayerMemDataByMuipReq.CmdId
	(QueryPlayerMemDataByMuipRsp_CmdId)(0),  // 13: proto.QueryPlayerMemDataByMuipRsp.CmdId
	(BindGmUidNotify_CmdId)(0),              // 14: proto.BindGmUidNotify.CmdId
	(UnbindGmUidNotify_CmdId)(0),            // 15: proto.UnbindGmUidNotify.CmdId
	(GetBindGmUidReq_CmdId)(0),              // 16: proto.GetBindGmUidReq.CmdId
	(GetBindGmUidRsp_CmdId)(0),              // 17: proto.GetBindGmUidRsp.CmdId
	(PlatformAntiAddictNotify_CmdId)(0),     // 18: proto.PlatformAntiAddictNotify.CmdId
	(PlayerLoginPerSecondReq_CmdId)(0),      // 19: proto.PlayerLoginPerSecondReq.CmdId
	(PlayerLoginPerSecondRsp_CmdId)(0),      // 20: proto.PlayerLoginPerSecondRsp.CmdId
	(FineGrainedPlayerNumReq_CmdId)(0),      // 21: proto.FineGrainedPlayerNumReq.CmdId
	(FineGrainedPlayerNumRsp_CmdId)(0),      // 22: proto.FineGrainedPlayerNumRsp.CmdId
	(CheckGameCrcVersionReq_CmdId)(0),       // 23: proto.CheckGameCrcVersionReq.CmdId
	(CheckGameCrcVersionRsp_CmdId)(0),       // 24: proto.CheckGameCrcVersionRsp.CmdId
	(UpdateRedPointByMuipNotify_CmdId)(0),   // 25: proto.UpdateRedPointByMuipNotify.CmdId
	(SendConcertProductReq_CmdId)(0),        // 26: proto.SendConcertProductReq.CmdId
	(SendConcertProductRsp_CmdId)(0),        // 27: proto.SendConcertProductRsp.CmdId
	(QueryConcertProductInfoReq_CmdId)(0),   // 28: proto.QueryConcertProductInfoReq.CmdId
	(QueryConcertProductInfoRsp_CmdId)(0),   // 29: proto.QueryConcertProductInfoRsp.CmdId
	(PlayerMpModeReq_CmdId)(0),              // 30: proto.PlayerMpModeReq.CmdId
	(PlayerMpModeRsp_CmdId)(0),              // 31: proto.PlayerMpModeRsp.CmdId
	(*OnlinePlayerNumReq)(nil),              // 32: proto.OnlinePlayerNumReq
	(*OnlinePlayerNumRsp)(nil),              // 33: proto.OnlinePlayerNumRsp
	(*KickoutPlayerNotify)(nil),             // 34: proto.KickoutPlayerNotify
	(*CheckOnlinePlayerReq)(nil),            // 35: proto.CheckOnlinePlayerReq
	(*CheckOnlinePlayerRsp)(nil),            // 36: proto.CheckOnlinePlayerRsp
	(*PlayerCombatForceReq)(nil),            // 37: proto.PlayerCombatForceReq
	(*PlayerCombatForceRsp)(nil),            // 38: proto.PlayerCombatForceRsp
	(*CheckGameVersionReq)(nil),             // 39: proto.CheckGameVersionReq
	(*GameVersionResult)(nil),               // 40: proto.GameVersionResult
	(*CheckGameVersionRsp)(nil),             // 41: proto.CheckGameVersionRsp
	(*PlatformPlayerNumReq)(nil),            // 42: proto.PlatformPlayerNumReq
	(*PlatformPlayerNumRsp)(nil),            // 43: proto.PlatformPlayerNumRsp
	(*PlayerMemBasicData)(nil),              // 44: proto.PlayerMemBasicData
	(*PlayerMemH5AcitivityWatcherData)(nil), // 45: proto.PlayerMemH5AcitivityWatcherData
	(*PlayerMemH5ActivityData)(nil),         // 46: proto.PlayerMemH5ActivityData
	(*PlayerMemH5ActivityDataResult)(nil),   // 47: proto.PlayerMemH5ActivityDataResult
	(*QueryPlayerMemDataByMuipReq)(nil),     // 48: proto.QueryPlayerMemDataByMuipReq
	(*QueryPlayerMemDataByMuipRsp)(nil),     // 49: proto.QueryPlayerMemDataByMuipRsp
	(*BindGmUidNotify)(nil),                 // 50: proto.BindGmUidNotify
	(*UnbindGmUidNotify)(nil),               // 51: proto.UnbindGmUidNotify
	(*GetBindGmUidReq)(nil),                 // 52: proto.GetBindGmUidReq
	(*GetBindGmUidRsp)(nil),                 // 53: proto.GetBindGmUidRsp
	(*PlatformAntiAddictNotify)(nil),        // 54: proto.PlatformAntiAddictNotify
	(*PlayerLoginPerSecondReq)(nil),         // 55: proto.PlayerLoginPerSecondReq
	(*PlayerLoginPerSecondRsp)(nil),         // 56: proto.PlayerLoginPerSecondRsp
	(*FineGrainedPlayerNumReq)(nil),         // 57: proto.FineGrainedPlayerNumReq
	(*FineGrainedPlayerNumRsp)(nil),         // 58: proto.FineGrainedPlayerNumRsp
	(*CheckGameCrcVersionReq)(nil),          // 59: proto.CheckGameCrcVersionReq
	(*CheckGameCrcVersionRsp)(nil),          // 60: proto.CheckGameCrcVersionRsp
	(*UpdateRedPointByMuipNotify)(nil),      // 61: proto.UpdateRedPointByMuipNotify
	(*SendConcertProductReq)(nil),           // 62: proto.SendConcertProductReq
	(*SendConcertProductRsp)(nil),           // 63: proto.SendConcertProductRsp
	(*QueryConcertProductInfoReq)(nil),      // 64: proto.QueryConcertProductInfoReq
	(*QueryConcertProductInfoRsp)(nil),      // 65: proto.QueryConcertProductInfoRsp
	(*PlayerMpModeReq)(nil),                 // 66: proto.PlayerMpModeReq
	(*PlayerMpModeRsp)(nil),                 // 67: proto.PlayerMpModeRsp
	nil,                                     // 68: proto.OnlinePlayerNumRsp.GameserverPlayerNumMapEntry
	(*CheckOnlinePlayerRsp_NodeStatus)(nil), // 69: proto.CheckOnlinePlayerRsp.NodeStatus
	(*CheckOnlinePlayerRsp_GameStatus)(nil), // 70: proto.CheckOnlinePlayerRsp.GameStatus
	nil,                                     // 71: proto.PlayerCombatForceRsp.PlayerCombatForceMapEntry
	nil,                                     // 72: proto.CheckGameVersionReq.ResVersionMapEntry
	nil,                                     // 73: proto.CheckGameVersionReq.NextResVersionMapEntry
	nil,                                     // 74: proto.CheckGameVersionRsp.ResVersionResultMapEntry
	nil,                                     // 75: proto.CheckGameVersionRsp.NextResVersionResultMapEntry
	nil,                                     // 76: proto.PlatformPlayerNumRsp.PlatformPlayerNumMapEntry
	nil,                                     // 77: proto.PlayerMemH5ActivityDataResult.RetcodeMapEntry
	nil,                                     // 78: proto.GetBindGmUidRsp.GmUidMapEntry
	nil,                                     // 79: proto.FineGrainedPlayerNumRsp.FineGrainedPlayerNumMapEntry
	(*ProfilePicture)(nil),                  // 80: proto.ProfilePicture
	(*RedPointData)(nil),                    // 81: proto.RedPointData
}
var file_server_only_cmd_muip_server_proto_depIdxs = []int32{
	68, // 0: proto.OnlinePlayerNumRsp.gameserver_player_num_map:type_name -> proto.OnlinePlayerNumRsp.GameserverPlayerNumMapEntry
	69, // 1: proto.CheckOnlinePlayerRsp.node_status:type_name -> proto.CheckOnlinePlayerRsp.NodeStatus
	70, // 2: proto.CheckOnlinePlayerRsp.game_status:type_name -> proto.CheckOnlinePlayerRsp.GameStatus
	71, // 3: proto.PlayerCombatForceRsp.player_combat_force_map:type_name -> proto.PlayerCombatForceRsp.PlayerCombatForceMapEntry
	72, // 4: proto.CheckGameVersionReq.res_version_map:type_name -> proto.CheckGameVersionReq.ResVersionMapEntry
	73, // 5: proto.CheckGameVersionReq.next_res_version_map:type_name -> proto.CheckGameVersionReq.NextResVersionMapEntry
	40, // 6: proto.CheckGameVersionRsp.server_version_result:type_name -> proto.GameVersionResult
	40, // 7: proto.CheckGameVersionRsp.client_version_result:type_name -> proto.GameVersionResult
	40, // 8: proto.CheckGameVersionRsp.client_silence_version_result:type_name -> proto.GameVersionResult
	74, // 9: proto.CheckGameVersionRsp.res_version_result_map:type_name -> proto.CheckGameVersionRsp.ResVersionResultMapEntry
	75, // 10: proto.CheckGameVersionRsp.next_res_version_result_map:type_name -> proto.CheckGameVersionRsp.NextResVersionResultMapEntry
	76, // 11: proto.PlatformPlayerNumRsp.platform_player_num_map:type_name -> proto.PlatformPlayerNumRsp.PlatformPlayerNumMapEntry
	80, // 12: proto.PlayerMemBasicData.profile_picture:type_name -> proto.ProfilePicture
	45, // 13: proto.PlayerMemH5ActivityData.h5_activity_watcher_list:type_name -> proto.PlayerMemH5AcitivityWatcherData
	77, // 14: proto.PlayerMemH5ActivityDataResult.retcode_map:type_name -> proto.PlayerMemH5ActivityDataResult.RetcodeMapEntry
	46, // 15: proto.PlayerMemH5ActivityDataResult.h5_activity_data_list:type_name -> proto.PlayerMemH5ActivityData
	44, // 16: proto.QueryPlayerMemDataByMuipRsp.basic_data:type_name -> proto.PlayerMemBasicData
	47, // 17: proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result:type_name -> proto.PlayerMemH5ActivityDataResult
	78, // 18: proto.GetBindGmUidRsp.gm_uid_map:type_name -> proto.GetBindGmUidRsp.GmUidMapEntry
	79, // 19: proto.FineGrainedPlayerNumRsp.fine_grained_player_num_map:type_name -> proto.FineGrainedPlayerNumRsp.FineGrainedPlayerNumMapEntry
	81, // 20: proto.UpdateRedPointByMuipNotify.red_point_list:type_name -> proto.RedPointData
	40, // 21: proto.CheckGameVersionRsp.ResVersionResultMapEntry.value:type_name -> proto.GameVersionResult
	40, // 22: proto.CheckGameVersionRsp.NextResVersionResultMapEntry.value:type_name -> proto.GameVersionResult
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_server_only_cmd_muip_server_proto_init() }
func file_server_only_cmd_muip_server_proto_init() {
	if File_server_only_cmd_muip_server_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_only_cmd_muip_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePlayerNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePlayerNumRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickoutPlayerNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOnlinePlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOnlinePlayerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCombatForceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCombatForceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameVersionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameVersionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlayerNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlayerNumRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMemBasicData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMemH5AcitivityWatcherData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMemH5ActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMemH5ActivityDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerMemDataByMuipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerMemDataByMuipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindGmUidNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindGmUidNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBindGmUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBindGmUidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformAntiAddictNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginPerSecondReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginPerSecondRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FineGrainedPlayerNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FineGrainedPlayerNumRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameCrcVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameCrcVersionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRedPointByMuipNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendConcertProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendConcertProductRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryConcertProductInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryConcertProductInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMpModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMpModeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOnlinePlayerRsp_NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_only_cmd_muip_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOnlinePlayerRsp_GameStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_only_cmd_muip_server_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*QueryPlayerMemDataByMuipRsp_BasicData)(nil),
		(*QueryPlayerMemDataByMuipRsp_H5ActivityDataResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_only_cmd_muip_server_proto_rawDesc,
			NumEnums:      32,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_only_cmd_muip_server_proto_goTypes,
		DependencyIndexes: file_server_only_cmd_muip_server_proto_depIdxs,
		EnumInfos:         file_server_only_cmd_muip_server_proto_enumTypes,
		MessageInfos:      file_server_only_cmd_muip_server_proto_msgTypes,
	}.Build()
	File_server_only_cmd_muip_server_proto = out.File
	file_server_only_cmd_muip_server_proto_rawDesc = nil
	file_server_only_cmd_muip_server_proto_goTypes = nil
	file_server_only_cmd_muip_server_proto_depIdxs = nil
}
