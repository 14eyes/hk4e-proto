// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_fish.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FishEscapeReason int32

const (
	FishEscapeReason_FISN_ESCAPE_NONE    FishEscapeReason = 0
	FishEscapeReason_FISH_ESCAPE_SHOCKED FishEscapeReason = 1
	FishEscapeReason_FISH_ESCAPE_UNHOOK  FishEscapeReason = 2
)

// Enum value maps for FishEscapeReason.
var (
	FishEscapeReason_name = map[int32]string{
		0: "FISN_ESCAPE_NONE",
		1: "FISH_ESCAPE_SHOCKED",
		2: "FISH_ESCAPE_UNHOOK",
	}
	FishEscapeReason_value = map[string]int32{
		"FISN_ESCAPE_NONE":    0,
		"FISH_ESCAPE_SHOCKED": 1,
		"FISH_ESCAPE_UNHOOK":  2,
	}
)

func (x FishEscapeReason) Enum() *FishEscapeReason {
	p := new(FishEscapeReason)
	*p = x
	return p
}

func (x FishEscapeReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishEscapeReason) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[0].Descriptor()
}

func (FishEscapeReason) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[0]
}

func (x FishEscapeReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishEscapeReason.Descriptor instead.
func (FishEscapeReason) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{0}
}

type FishBattleResult int32

const (
	FishBattleResult_FISH_BATTLE_RESULT_NONE    FishBattleResult = 0
	FishBattleResult_FISH_BATTLE_RESULT_SUCC    FishBattleResult = 1
	FishBattleResult_FISH_BATTLE_RESULT_FAIL    FishBattleResult = 2
	FishBattleResult_FISH_BATTLE_RESULT_TIMEOUT FishBattleResult = 3
	FishBattleResult_FISH_BATTLE_RESULT_CANCEL  FishBattleResult = 4
	FishBattleResult_FISH_BATTLE_RESULT_EXIT    FishBattleResult = 5
)

// Enum value maps for FishBattleResult.
var (
	FishBattleResult_name = map[int32]string{
		0: "FISH_BATTLE_RESULT_NONE",
		1: "FISH_BATTLE_RESULT_SUCC",
		2: "FISH_BATTLE_RESULT_FAIL",
		3: "FISH_BATTLE_RESULT_TIMEOUT",
		4: "FISH_BATTLE_RESULT_CANCEL",
		5: "FISH_BATTLE_RESULT_EXIT",
	}
	FishBattleResult_value = map[string]int32{
		"FISH_BATTLE_RESULT_NONE":    0,
		"FISH_BATTLE_RESULT_SUCC":    1,
		"FISH_BATTLE_RESULT_FAIL":    2,
		"FISH_BATTLE_RESULT_TIMEOUT": 3,
		"FISH_BATTLE_RESULT_CANCEL":  4,
		"FISH_BATTLE_RESULT_EXIT":    5,
	}
)

func (x FishBattleResult) Enum() *FishBattleResult {
	p := new(FishBattleResult)
	*p = x
	return p
}

func (x FishBattleResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleResult) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[1].Descriptor()
}

func (FishBattleResult) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[1]
}

func (x FishBattleResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleResult.Descriptor instead.
func (FishBattleResult) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{1}
}

type EnterFishingReq_CmdId int32

const (
	EnterFishingReq_NONE             EnterFishingReq_CmdId = 0
	EnterFishingReq_CMD_ID           EnterFishingReq_CmdId = 5826
	EnterFishingReq_ENET_CHANNEL_ID  EnterFishingReq_CmdId = 0
	EnterFishingReq_ENET_IS_RELIABLE EnterFishingReq_CmdId = 1
	EnterFishingReq_IS_ALLOW_CLIENT  EnterFishingReq_CmdId = 1
)

// Enum value maps for EnterFishingReq_CmdId.
var (
	EnterFishingReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5826: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	EnterFishingReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5826,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x EnterFishingReq_CmdId) Enum() *EnterFishingReq_CmdId {
	p := new(EnterFishingReq_CmdId)
	*p = x
	return p
}

func (x EnterFishingReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnterFishingReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[2].Descriptor()
}

func (EnterFishingReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[2]
}

func (x EnterFishingReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnterFishingReq_CmdId.Descriptor instead.
func (EnterFishingReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{0, 0}
}

type EnterFishingRsp_CmdId int32

const (
	EnterFishingRsp_NONE             EnterFishingRsp_CmdId = 0
	EnterFishingRsp_CMD_ID           EnterFishingRsp_CmdId = 5818
	EnterFishingRsp_ENET_CHANNEL_ID  EnterFishingRsp_CmdId = 0
	EnterFishingRsp_ENET_IS_RELIABLE EnterFishingRsp_CmdId = 1
)

// Enum value maps for EnterFishingRsp_CmdId.
var (
	EnterFishingRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5818: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	EnterFishingRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5818,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x EnterFishingRsp_CmdId) Enum() *EnterFishingRsp_CmdId {
	p := new(EnterFishingRsp_CmdId)
	*p = x
	return p
}

func (x EnterFishingRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnterFishingRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[3].Descriptor()
}

func (EnterFishingRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[3]
}

func (x EnterFishingRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnterFishingRsp_CmdId.Descriptor instead.
func (EnterFishingRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{1, 0}
}

type StartFishingReq_CmdId int32

const (
	StartFishingReq_NONE             StartFishingReq_CmdId = 0
	StartFishingReq_CMD_ID           StartFishingReq_CmdId = 5825
	StartFishingReq_ENET_CHANNEL_ID  StartFishingReq_CmdId = 0
	StartFishingReq_ENET_IS_RELIABLE StartFishingReq_CmdId = 1
	StartFishingReq_IS_ALLOW_CLIENT  StartFishingReq_CmdId = 1
)

// Enum value maps for StartFishingReq_CmdId.
var (
	StartFishingReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5825: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	StartFishingReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5825,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x StartFishingReq_CmdId) Enum() *StartFishingReq_CmdId {
	p := new(StartFishingReq_CmdId)
	*p = x
	return p
}

func (x StartFishingReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartFishingReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[4].Descriptor()
}

func (StartFishingReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[4]
}

func (x StartFishingReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartFishingReq_CmdId.Descriptor instead.
func (StartFishingReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{2, 0}
}

type StartFishingRsp_CmdId int32

const (
	StartFishingRsp_NONE             StartFishingRsp_CmdId = 0
	StartFishingRsp_CMD_ID           StartFishingRsp_CmdId = 5807
	StartFishingRsp_ENET_CHANNEL_ID  StartFishingRsp_CmdId = 0
	StartFishingRsp_ENET_IS_RELIABLE StartFishingRsp_CmdId = 1
)

// Enum value maps for StartFishingRsp_CmdId.
var (
	StartFishingRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5807: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	StartFishingRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5807,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x StartFishingRsp_CmdId) Enum() *StartFishingRsp_CmdId {
	p := new(StartFishingRsp_CmdId)
	*p = x
	return p
}

func (x StartFishingRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartFishingRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[5].Descriptor()
}

func (StartFishingRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[5]
}

func (x StartFishingRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartFishingRsp_CmdId.Descriptor instead.
func (StartFishingRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{3, 0}
}

type FishCastRodReq_CmdId int32

const (
	FishCastRodReq_NONE             FishCastRodReq_CmdId = 0
	FishCastRodReq_CMD_ID           FishCastRodReq_CmdId = 5802
	FishCastRodReq_ENET_CHANNEL_ID  FishCastRodReq_CmdId = 0
	FishCastRodReq_ENET_IS_RELIABLE FishCastRodReq_CmdId = 1
	FishCastRodReq_IS_ALLOW_CLIENT  FishCastRodReq_CmdId = 1
)

// Enum value maps for FishCastRodReq_CmdId.
var (
	FishCastRodReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5802: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	FishCastRodReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5802,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x FishCastRodReq_CmdId) Enum() *FishCastRodReq_CmdId {
	p := new(FishCastRodReq_CmdId)
	*p = x
	return p
}

func (x FishCastRodReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishCastRodReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[6].Descriptor()
}

func (FishCastRodReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[6]
}

func (x FishCastRodReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishCastRodReq_CmdId.Descriptor instead.
func (FishCastRodReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{4, 0}
}

type FishCastRodRsp_CmdId int32

const (
	FishCastRodRsp_NONE             FishCastRodRsp_CmdId = 0
	FishCastRodRsp_CMD_ID           FishCastRodRsp_CmdId = 5831
	FishCastRodRsp_ENET_CHANNEL_ID  FishCastRodRsp_CmdId = 0
	FishCastRodRsp_ENET_IS_RELIABLE FishCastRodRsp_CmdId = 1
)

// Enum value maps for FishCastRodRsp_CmdId.
var (
	FishCastRodRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5831: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishCastRodRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5831,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishCastRodRsp_CmdId) Enum() *FishCastRodRsp_CmdId {
	p := new(FishCastRodRsp_CmdId)
	*p = x
	return p
}

func (x FishCastRodRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishCastRodRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[7].Descriptor()
}

func (FishCastRodRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[7]
}

func (x FishCastRodRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishCastRodRsp_CmdId.Descriptor instead.
func (FishCastRodRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{5, 0}
}

type FishChosenNotify_CmdId int32

const (
	FishChosenNotify_NONE             FishChosenNotify_CmdId = 0
	FishChosenNotify_CMD_ID           FishChosenNotify_CmdId = 5829
	FishChosenNotify_ENET_CHANNEL_ID  FishChosenNotify_CmdId = 0
	FishChosenNotify_ENET_IS_RELIABLE FishChosenNotify_CmdId = 1
)

// Enum value maps for FishChosenNotify_CmdId.
var (
	FishChosenNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5829: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishChosenNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5829,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishChosenNotify_CmdId) Enum() *FishChosenNotify_CmdId {
	p := new(FishChosenNotify_CmdId)
	*p = x
	return p
}

func (x FishChosenNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishChosenNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[8].Descriptor()
}

func (FishChosenNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[8]
}

func (x FishChosenNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishChosenNotify_CmdId.Descriptor instead.
func (FishChosenNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{6, 0}
}

type FishEscapeNotify_CmdId int32

const (
	FishEscapeNotify_NONE             FishEscapeNotify_CmdId = 0
	FishEscapeNotify_CMD_ID           FishEscapeNotify_CmdId = 5822
	FishEscapeNotify_ENET_CHANNEL_ID  FishEscapeNotify_CmdId = 0
	FishEscapeNotify_ENET_IS_RELIABLE FishEscapeNotify_CmdId = 1
)

// Enum value maps for FishEscapeNotify_CmdId.
var (
	FishEscapeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5822: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishEscapeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5822,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishEscapeNotify_CmdId) Enum() *FishEscapeNotify_CmdId {
	p := new(FishEscapeNotify_CmdId)
	*p = x
	return p
}

func (x FishEscapeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishEscapeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[9].Descriptor()
}

func (FishEscapeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[9]
}

func (x FishEscapeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishEscapeNotify_CmdId.Descriptor instead.
func (FishEscapeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{7, 0}
}

type FishBiteReq_CmdId int32

const (
	FishBiteReq_NONE             FishBiteReq_CmdId = 0
	FishBiteReq_CMD_ID           FishBiteReq_CmdId = 5844
	FishBiteReq_ENET_CHANNEL_ID  FishBiteReq_CmdId = 0
	FishBiteReq_ENET_IS_RELIABLE FishBiteReq_CmdId = 1
	FishBiteReq_IS_ALLOW_CLIENT  FishBiteReq_CmdId = 1
)

// Enum value maps for FishBiteReq_CmdId.
var (
	FishBiteReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5844: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	FishBiteReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5844,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x FishBiteReq_CmdId) Enum() *FishBiteReq_CmdId {
	p := new(FishBiteReq_CmdId)
	*p = x
	return p
}

func (x FishBiteReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBiteReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[10].Descriptor()
}

func (FishBiteReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[10]
}

func (x FishBiteReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBiteReq_CmdId.Descriptor instead.
func (FishBiteReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{8, 0}
}

type FishBiteRsp_CmdId int32

const (
	FishBiteRsp_NONE             FishBiteRsp_CmdId = 0
	FishBiteRsp_CMD_ID           FishBiteRsp_CmdId = 5849
	FishBiteRsp_ENET_CHANNEL_ID  FishBiteRsp_CmdId = 0
	FishBiteRsp_ENET_IS_RELIABLE FishBiteRsp_CmdId = 1
)

// Enum value maps for FishBiteRsp_CmdId.
var (
	FishBiteRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5849: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishBiteRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5849,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishBiteRsp_CmdId) Enum() *FishBiteRsp_CmdId {
	p := new(FishBiteRsp_CmdId)
	*p = x
	return p
}

func (x FishBiteRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBiteRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[11].Descriptor()
}

func (FishBiteRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[11]
}

func (x FishBiteRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBiteRsp_CmdId.Descriptor instead.
func (FishBiteRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{9, 0}
}

type FishBattleBeginReq_CmdId int32

const (
	FishBattleBeginReq_NONE             FishBattleBeginReq_CmdId = 0
	FishBattleBeginReq_CMD_ID           FishBattleBeginReq_CmdId = 5820
	FishBattleBeginReq_ENET_CHANNEL_ID  FishBattleBeginReq_CmdId = 0
	FishBattleBeginReq_ENET_IS_RELIABLE FishBattleBeginReq_CmdId = 1
	FishBattleBeginReq_IS_ALLOW_CLIENT  FishBattleBeginReq_CmdId = 1
)

// Enum value maps for FishBattleBeginReq_CmdId.
var (
	FishBattleBeginReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5820: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	FishBattleBeginReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5820,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x FishBattleBeginReq_CmdId) Enum() *FishBattleBeginReq_CmdId {
	p := new(FishBattleBeginReq_CmdId)
	*p = x
	return p
}

func (x FishBattleBeginReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleBeginReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[12].Descriptor()
}

func (FishBattleBeginReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[12]
}

func (x FishBattleBeginReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleBeginReq_CmdId.Descriptor instead.
func (FishBattleBeginReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{10, 0}
}

type FishBattleBeginRsp_CmdId int32

const (
	FishBattleBeginRsp_NONE             FishBattleBeginRsp_CmdId = 0
	FishBattleBeginRsp_CMD_ID           FishBattleBeginRsp_CmdId = 5845
	FishBattleBeginRsp_ENET_CHANNEL_ID  FishBattleBeginRsp_CmdId = 0
	FishBattleBeginRsp_ENET_IS_RELIABLE FishBattleBeginRsp_CmdId = 1
)

// Enum value maps for FishBattleBeginRsp_CmdId.
var (
	FishBattleBeginRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5845: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishBattleBeginRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5845,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishBattleBeginRsp_CmdId) Enum() *FishBattleBeginRsp_CmdId {
	p := new(FishBattleBeginRsp_CmdId)
	*p = x
	return p
}

func (x FishBattleBeginRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleBeginRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[13].Descriptor()
}

func (FishBattleBeginRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[13]
}

func (x FishBattleBeginRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleBeginRsp_CmdId.Descriptor instead.
func (FishBattleBeginRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{11, 0}
}

type FishBattleEndReq_CmdId int32

const (
	FishBattleEndReq_NONE             FishBattleEndReq_CmdId = 0
	FishBattleEndReq_CMD_ID           FishBattleEndReq_CmdId = 5841
	FishBattleEndReq_ENET_CHANNEL_ID  FishBattleEndReq_CmdId = 0
	FishBattleEndReq_ENET_IS_RELIABLE FishBattleEndReq_CmdId = 1
	FishBattleEndReq_IS_ALLOW_CLIENT  FishBattleEndReq_CmdId = 1
)

// Enum value maps for FishBattleEndReq_CmdId.
var (
	FishBattleEndReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5841: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	FishBattleEndReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5841,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x FishBattleEndReq_CmdId) Enum() *FishBattleEndReq_CmdId {
	p := new(FishBattleEndReq_CmdId)
	*p = x
	return p
}

func (x FishBattleEndReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleEndReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[14].Descriptor()
}

func (FishBattleEndReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[14]
}

func (x FishBattleEndReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleEndReq_CmdId.Descriptor instead.
func (FishBattleEndReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{12, 0}
}

type FishBattleEndRsp_CmdId int32

const (
	FishBattleEndRsp_NONE             FishBattleEndRsp_CmdId = 0
	FishBattleEndRsp_CMD_ID           FishBattleEndRsp_CmdId = 5842
	FishBattleEndRsp_ENET_CHANNEL_ID  FishBattleEndRsp_CmdId = 0
	FishBattleEndRsp_ENET_IS_RELIABLE FishBattleEndRsp_CmdId = 1
)

// Enum value maps for FishBattleEndRsp_CmdId.
var (
	FishBattleEndRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5842: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishBattleEndRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5842,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishBattleEndRsp_CmdId) Enum() *FishBattleEndRsp_CmdId {
	p := new(FishBattleEndRsp_CmdId)
	*p = x
	return p
}

func (x FishBattleEndRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleEndRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[15].Descriptor()
}

func (FishBattleEndRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[15]
}

func (x FishBattleEndRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleEndRsp_CmdId.Descriptor instead.
func (FishBattleEndRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{13, 0}
}

type FishBattleEndRsp_FishNoRewardReason int32

const (
	FishBattleEndRsp_FISH_NO_REWARD_NONE           FishBattleEndRsp_FishNoRewardReason = 0
	FishBattleEndRsp_FISH_NO_REWARD_ACTIVITY_LIMIT FishBattleEndRsp_FishNoRewardReason = 1
	FishBattleEndRsp_FISH_NO_REWARD_BAG_LIMIT      FishBattleEndRsp_FishNoRewardReason = 2
	FishBattleEndRsp_FISH_NO_REWARD_POOL_LIMIT     FishBattleEndRsp_FishNoRewardReason = 3
)

// Enum value maps for FishBattleEndRsp_FishNoRewardReason.
var (
	FishBattleEndRsp_FishNoRewardReason_name = map[int32]string{
		0: "FISH_NO_REWARD_NONE",
		1: "FISH_NO_REWARD_ACTIVITY_LIMIT",
		2: "FISH_NO_REWARD_BAG_LIMIT",
		3: "FISH_NO_REWARD_POOL_LIMIT",
	}
	FishBattleEndRsp_FishNoRewardReason_value = map[string]int32{
		"FISH_NO_REWARD_NONE":           0,
		"FISH_NO_REWARD_ACTIVITY_LIMIT": 1,
		"FISH_NO_REWARD_BAG_LIMIT":      2,
		"FISH_NO_REWARD_POOL_LIMIT":     3,
	}
)

func (x FishBattleEndRsp_FishNoRewardReason) Enum() *FishBattleEndRsp_FishNoRewardReason {
	p := new(FishBattleEndRsp_FishNoRewardReason)
	*p = x
	return p
}

func (x FishBattleEndRsp_FishNoRewardReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBattleEndRsp_FishNoRewardReason) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[16].Descriptor()
}

func (FishBattleEndRsp_FishNoRewardReason) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[16]
}

func (x FishBattleEndRsp_FishNoRewardReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBattleEndRsp_FishNoRewardReason.Descriptor instead.
func (FishBattleEndRsp_FishNoRewardReason) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{13, 1}
}

type ExitFishingReq_CmdId int32

const (
	ExitFishingReq_NONE             ExitFishingReq_CmdId = 0
	ExitFishingReq_CMD_ID           ExitFishingReq_CmdId = 5814
	ExitFishingReq_ENET_CHANNEL_ID  ExitFishingReq_CmdId = 0
	ExitFishingReq_ENET_IS_RELIABLE ExitFishingReq_CmdId = 1
	ExitFishingReq_IS_ALLOW_CLIENT  ExitFishingReq_CmdId = 1
)

// Enum value maps for ExitFishingReq_CmdId.
var (
	ExitFishingReq_CmdId_name = map[int32]string{
		0:    "NONE",
		5814: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ExitFishingReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5814,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ExitFishingReq_CmdId) Enum() *ExitFishingReq_CmdId {
	p := new(ExitFishingReq_CmdId)
	*p = x
	return p
}

func (x ExitFishingReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExitFishingReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[17].Descriptor()
}

func (ExitFishingReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[17]
}

func (x ExitFishingReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExitFishingReq_CmdId.Descriptor instead.
func (ExitFishingReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{14, 0}
}

type ExitFishingRsp_CmdId int32

const (
	ExitFishingRsp_NONE             ExitFishingRsp_CmdId = 0
	ExitFishingRsp_CMD_ID           ExitFishingRsp_CmdId = 5847
	ExitFishingRsp_ENET_CHANNEL_ID  ExitFishingRsp_CmdId = 0
	ExitFishingRsp_ENET_IS_RELIABLE ExitFishingRsp_CmdId = 1
)

// Enum value maps for ExitFishingRsp_CmdId.
var (
	ExitFishingRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		5847: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ExitFishingRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5847,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ExitFishingRsp_CmdId) Enum() *ExitFishingRsp_CmdId {
	p := new(ExitFishingRsp_CmdId)
	*p = x
	return p
}

func (x ExitFishingRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExitFishingRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[18].Descriptor()
}

func (ExitFishingRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[18]
}

func (x ExitFishingRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExitFishingRsp_CmdId.Descriptor instead.
func (ExitFishingRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{15, 0}
}

type FishAttractNotify_CmdId int32

const (
	FishAttractNotify_NONE             FishAttractNotify_CmdId = 0
	FishAttractNotify_CMD_ID           FishAttractNotify_CmdId = 5837
	FishAttractNotify_ENET_CHANNEL_ID  FishAttractNotify_CmdId = 0
	FishAttractNotify_ENET_IS_RELIABLE FishAttractNotify_CmdId = 1
)

// Enum value maps for FishAttractNotify_CmdId.
var (
	FishAttractNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5837: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishAttractNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5837,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishAttractNotify_CmdId) Enum() *FishAttractNotify_CmdId {
	p := new(FishAttractNotify_CmdId)
	*p = x
	return p
}

func (x FishAttractNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishAttractNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[19].Descriptor()
}

func (FishAttractNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[19]
}

func (x FishAttractNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishAttractNotify_CmdId.Descriptor instead.
func (FishAttractNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{16, 0}
}

type FishBaitGoneNotify_CmdId int32

const (
	FishBaitGoneNotify_NONE             FishBaitGoneNotify_CmdId = 0
	FishBaitGoneNotify_CMD_ID           FishBaitGoneNotify_CmdId = 5823
	FishBaitGoneNotify_ENET_CHANNEL_ID  FishBaitGoneNotify_CmdId = 0
	FishBaitGoneNotify_ENET_IS_RELIABLE FishBaitGoneNotify_CmdId = 1
)

// Enum value maps for FishBaitGoneNotify_CmdId.
var (
	FishBaitGoneNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5823: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishBaitGoneNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5823,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishBaitGoneNotify_CmdId) Enum() *FishBaitGoneNotify_CmdId {
	p := new(FishBaitGoneNotify_CmdId)
	*p = x
	return p
}

func (x FishBaitGoneNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBaitGoneNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[20].Descriptor()
}

func (FishBaitGoneNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[20]
}

func (x FishBaitGoneNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBaitGoneNotify_CmdId.Descriptor instead.
func (FishBaitGoneNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{17, 0}
}

type PlayerFishingDataNotify_CmdId int32

const (
	PlayerFishingDataNotify_NONE             PlayerFishingDataNotify_CmdId = 0
	PlayerFishingDataNotify_CMD_ID           PlayerFishingDataNotify_CmdId = 5835
	PlayerFishingDataNotify_ENET_CHANNEL_ID  PlayerFishingDataNotify_CmdId = 0
	PlayerFishingDataNotify_ENET_IS_RELIABLE PlayerFishingDataNotify_CmdId = 1
)

// Enum value maps for PlayerFishingDataNotify_CmdId.
var (
	PlayerFishingDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5835: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PlayerFishingDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5835,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PlayerFishingDataNotify_CmdId) Enum() *PlayerFishingDataNotify_CmdId {
	p := new(PlayerFishingDataNotify_CmdId)
	*p = x
	return p
}

func (x PlayerFishingDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerFishingDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[21].Descriptor()
}

func (PlayerFishingDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[21]
}

func (x PlayerFishingDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerFishingDataNotify_CmdId.Descriptor instead.
func (PlayerFishingDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{18, 0}
}

type FishPoolDataNotify_CmdId int32

const (
	FishPoolDataNotify_NONE             FishPoolDataNotify_CmdId = 0
	FishPoolDataNotify_CMD_ID           FishPoolDataNotify_CmdId = 5848
	FishPoolDataNotify_ENET_CHANNEL_ID  FishPoolDataNotify_CmdId = 0
	FishPoolDataNotify_ENET_IS_RELIABLE FishPoolDataNotify_CmdId = 1
)

// Enum value maps for FishPoolDataNotify_CmdId.
var (
	FishPoolDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		5848: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FishPoolDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           5848,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FishPoolDataNotify_CmdId) Enum() *FishPoolDataNotify_CmdId {
	p := new(FishPoolDataNotify_CmdId)
	*p = x
	return p
}

func (x FishPoolDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishPoolDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_fish_proto_enumTypes[22].Descriptor()
}

func (FishPoolDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_fish_proto_enumTypes[22]
}

func (x FishPoolDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishPoolDataNotify_CmdId.Descriptor instead.
func (FishPoolDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{19, 0}
}

type EnterFishingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishPoolId uint32 `protobuf:"varint,3,opt,name=fish_pool_id,json=fishPoolId,proto3" json:"fish_pool_id,omitempty"`
}

func (x *EnterFishingReq) Reset() {
	*x = EnterFishingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterFishingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterFishingReq) ProtoMessage() {}

func (x *EnterFishingReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterFishingReq.ProtoReflect.Descriptor instead.
func (*EnterFishingReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{0}
}

func (x *EnterFishingReq) GetFishPoolId() uint32 {
	if x != nil {
		return x.FishPoolId
	}
	return 0
}

type EnterFishingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FishPoolId uint32 `protobuf:"varint,9,opt,name=fish_pool_id,json=fishPoolId,proto3" json:"fish_pool_id,omitempty"`
}

func (x *EnterFishingRsp) Reset() {
	*x = EnterFishingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterFishingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterFishingRsp) ProtoMessage() {}

func (x *EnterFishingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterFishingRsp.ProtoReflect.Descriptor instead.
func (*EnterFishingRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{1}
}

func (x *EnterFishingRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *EnterFishingRsp) GetFishPoolId() uint32 {
	if x != nil {
		return x.FishPoolId
	}
	return 0
}

type StartFishingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RodEntityId uint32 `protobuf:"varint,5,opt,name=rod_entity_id,json=rodEntityId,proto3" json:"rod_entity_id,omitempty"`
	FishPoolId  uint32 `protobuf:"varint,15,opt,name=fish_pool_id,json=fishPoolId,proto3" json:"fish_pool_id,omitempty"`
}

func (x *StartFishingReq) Reset() {
	*x = StartFishingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFishingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFishingReq) ProtoMessage() {}

func (x *StartFishingReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFishingReq.ProtoReflect.Descriptor instead.
func (*StartFishingReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{2}
}

func (x *StartFishingReq) GetRodEntityId() uint32 {
	if x != nil {
		return x.RodEntityId
	}
	return 0
}

func (x *StartFishingReq) GetFishPoolId() uint32 {
	if x != nil {
		return x.FishPoolId
	}
	return 0
}

type StartFishingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FishPoolId uint32 `protobuf:"varint,14,opt,name=fish_pool_id,json=fishPoolId,proto3" json:"fish_pool_id,omitempty"`
}

func (x *StartFishingRsp) Reset() {
	*x = StartFishingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFishingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFishingRsp) ProtoMessage() {}

func (x *StartFishingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFishingRsp.ProtoReflect.Descriptor instead.
func (*StartFishingRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{3}
}

func (x *StartFishingRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *StartFishingRsp) GetFishPoolId() uint32 {
	if x != nil {
		return x.FishPoolId
	}
	return 0
}

type FishCastRodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaitId      uint32  `protobuf:"varint,14,opt,name=bait_id,json=baitId,proto3" json:"bait_id,omitempty"`
	RodId       uint32  `protobuf:"varint,4,opt,name=rod_id,json=rodId,proto3" json:"rod_id,omitempty"`
	RodEntityId uint32  `protobuf:"varint,7,opt,name=rod_entity_id,json=rodEntityId,proto3" json:"rod_entity_id,omitempty"`
	Pos         *Vector `protobuf:"bytes,12,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *FishCastRodReq) Reset() {
	*x = FishCastRodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishCastRodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishCastRodReq) ProtoMessage() {}

func (x *FishCastRodReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishCastRodReq.ProtoReflect.Descriptor instead.
func (*FishCastRodReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{4}
}

func (x *FishCastRodReq) GetBaitId() uint32 {
	if x != nil {
		return x.BaitId
	}
	return 0
}

func (x *FishCastRodReq) GetRodId() uint32 {
	if x != nil {
		return x.RodId
	}
	return 0
}

func (x *FishCastRodReq) GetRodEntityId() uint32 {
	if x != nil {
		return x.RodEntityId
	}
	return 0
}

func (x *FishCastRodReq) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type FishCastRodRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *FishCastRodRsp) Reset() {
	*x = FishCastRodRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishCastRodRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishCastRodRsp) ProtoMessage() {}

func (x *FishCastRodRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishCastRodRsp.ProtoReflect.Descriptor instead.
func (*FishCastRodRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{5}
}

func (x *FishCastRodRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FishChosenNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishId uint32 `protobuf:"varint,12,opt,name=fish_id,json=fishId,proto3" json:"fish_id,omitempty"`
}

func (x *FishChosenNotify) Reset() {
	*x = FishChosenNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishChosenNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishChosenNotify) ProtoMessage() {}

func (x *FishChosenNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishChosenNotify.ProtoReflect.Descriptor instead.
func (*FishChosenNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{6}
}

func (x *FishChosenNotify) GetFishId() uint32 {
	if x != nil {
		return x.FishId
	}
	return 0
}

type FishEscapeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason     FishEscapeReason `protobuf:"varint,4,opt,name=reason,proto3,enum=proto.FishEscapeReason" json:"reason,omitempty"`
	Pos        *Vector          `protobuf:"bytes,7,opt,name=pos,proto3" json:"pos,omitempty"`
	Uid        uint32           `protobuf:"varint,14,opt,name=uid,proto3" json:"uid,omitempty"`
	FishIdList []uint32         `protobuf:"varint,6,rep,packed,name=fish_id_list,json=fishIdList,proto3" json:"fish_id_list,omitempty"`
}

func (x *FishEscapeNotify) Reset() {
	*x = FishEscapeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishEscapeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishEscapeNotify) ProtoMessage() {}

func (x *FishEscapeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishEscapeNotify.ProtoReflect.Descriptor instead.
func (*FishEscapeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{7}
}

func (x *FishEscapeNotify) GetReason() FishEscapeReason {
	if x != nil {
		return x.Reason
	}
	return FishEscapeReason_FISN_ESCAPE_NONE
}

func (x *FishEscapeNotify) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *FishEscapeNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FishEscapeNotify) GetFishIdList() []uint32 {
	if x != nil {
		return x.FishIdList
	}
	return nil
}

type FishBiteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FishBiteReq) Reset() {
	*x = FishBiteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBiteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBiteReq) ProtoMessage() {}

func (x *FishBiteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBiteReq.ProtoReflect.Descriptor instead.
func (*FishBiteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{8}
}

type FishBiteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *FishBiteRsp) Reset() {
	*x = FishBiteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBiteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBiteRsp) ProtoMessage() {}

func (x *FishBiteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBiteRsp.ProtoReflect.Descriptor instead.
func (*FishBiteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{9}
}

func (x *FishBiteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FishBattleBeginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FishBattleBeginReq) Reset() {
	*x = FishBattleBeginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBattleBeginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBattleBeginReq) ProtoMessage() {}

func (x *FishBattleBeginReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBattleBeginReq.ProtoReflect.Descriptor instead.
func (*FishBattleBeginReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{10}
}

type FishBattleBeginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *FishBattleBeginRsp) Reset() {
	*x = FishBattleBeginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBattleBeginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBattleBeginRsp) ProtoMessage() {}

func (x *FishBattleBeginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBattleBeginRsp.ProtoReflect.Descriptor instead.
func (*FishBattleBeginRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{11}
}

func (x *FishBattleBeginRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FishBattleEndReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBonusTime  uint32           `protobuf:"varint,3,opt,name=max_bonus_time,json=maxBonusTime,proto3" json:"max_bonus_time,omitempty"`
	BattleResult  FishBattleResult `protobuf:"varint,10,opt,name=battle_result,json=battleResult,proto3,enum=proto.FishBattleResult" json:"battle_result,omitempty"`
	IsAlwaysBonus bool             `protobuf:"varint,11,opt,name=is_always_bonus,json=isAlwaysBonus,proto3" json:"is_always_bonus,omitempty"`
}

func (x *FishBattleEndReq) Reset() {
	*x = FishBattleEndReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBattleEndReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBattleEndReq) ProtoMessage() {}

func (x *FishBattleEndReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBattleEndReq.ProtoReflect.Descriptor instead.
func (*FishBattleEndReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{12}
}

func (x *FishBattleEndReq) GetMaxBonusTime() uint32 {
	if x != nil {
		return x.MaxBonusTime
	}
	return 0
}

func (x *FishBattleEndReq) GetBattleResult() FishBattleResult {
	if x != nil {
		return x.BattleResult
	}
	return FishBattleResult_FISH_BATTLE_RESULT_NONE
}

func (x *FishBattleEndReq) GetIsAlwaysBonus() bool {
	if x != nil {
		return x.IsAlwaysBonus
	}
	return false
}

type FishBattleEndRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsGotReward    bool                                `protobuf:"varint,10,opt,name=is_got_reward,json=isGotReward,proto3" json:"is_got_reward,omitempty"`
	RewardItemList []*ItemParam                        `protobuf:"bytes,11,rep,name=reward_item_list,json=rewardItemList,proto3" json:"reward_item_list,omitempty"`
	TalentItemList []*ItemParam                        `protobuf:"bytes,13,rep,name=talent_item_list,json=talentItemList,proto3" json:"talent_item_list,omitempty"`
	DropItemList   []*ItemParam                        `protobuf:"bytes,9,rep,name=drop_item_list,json=dropItemList,proto3" json:"drop_item_list,omitempty"`
	Retcode        int32                               `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	NoRewardReason FishBattleEndRsp_FishNoRewardReason `protobuf:"varint,14,opt,name=no_reward_reason,json=noRewardReason,proto3,enum=proto.FishBattleEndRsp_FishNoRewardReason" json:"no_reward_reason,omitempty"`
	BattleResult   FishBattleResult                    `protobuf:"varint,6,opt,name=battle_result,json=battleResult,proto3,enum=proto.FishBattleResult" json:"battle_result,omitempty"`
}

func (x *FishBattleEndRsp) Reset() {
	*x = FishBattleEndRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBattleEndRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBattleEndRsp) ProtoMessage() {}

func (x *FishBattleEndRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBattleEndRsp.ProtoReflect.Descriptor instead.
func (*FishBattleEndRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{13}
}

func (x *FishBattleEndRsp) GetIsGotReward() bool {
	if x != nil {
		return x.IsGotReward
	}
	return false
}

func (x *FishBattleEndRsp) GetRewardItemList() []*ItemParam {
	if x != nil {
		return x.RewardItemList
	}
	return nil
}

func (x *FishBattleEndRsp) GetTalentItemList() []*ItemParam {
	if x != nil {
		return x.TalentItemList
	}
	return nil
}

func (x *FishBattleEndRsp) GetDropItemList() []*ItemParam {
	if x != nil {
		return x.DropItemList
	}
	return nil
}

func (x *FishBattleEndRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *FishBattleEndRsp) GetNoRewardReason() FishBattleEndRsp_FishNoRewardReason {
	if x != nil {
		return x.NoRewardReason
	}
	return FishBattleEndRsp_FISH_NO_REWARD_NONE
}

func (x *FishBattleEndRsp) GetBattleResult() FishBattleResult {
	if x != nil {
		return x.BattleResult
	}
	return FishBattleResult_FISH_BATTLE_RESULT_NONE
}

type ExitFishingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitFishingReq) Reset() {
	*x = ExitFishingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitFishingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitFishingReq) ProtoMessage() {}

func (x *ExitFishingReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitFishingReq.ProtoReflect.Descriptor instead.
func (*ExitFishingReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{14}
}

type ExitFishingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ExitFishingRsp) Reset() {
	*x = ExitFishingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitFishingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitFishingRsp) ProtoMessage() {}

func (x *ExitFishingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitFishingRsp.ProtoReflect.Descriptor instead.
func (*ExitFishingRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{15}
}

func (x *ExitFishingRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type FishAttractNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishIdList []uint32 `protobuf:"varint,3,rep,packed,name=fish_id_list,json=fishIdList,proto3" json:"fish_id_list,omitempty"`
	Pos        *Vector  `protobuf:"bytes,9,opt,name=pos,proto3" json:"pos,omitempty"`
	Uid        uint32   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FishAttractNotify) Reset() {
	*x = FishAttractNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishAttractNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishAttractNotify) ProtoMessage() {}

func (x *FishAttractNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishAttractNotify.ProtoReflect.Descriptor instead.
func (*FishAttractNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{16}
}

func (x *FishAttractNotify) GetFishIdList() []uint32 {
	if x != nil {
		return x.FishIdList
	}
	return nil
}

func (x *FishAttractNotify) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *FishAttractNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FishBaitGoneNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FishBaitGoneNotify) Reset() {
	*x = FishBaitGoneNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishBaitGoneNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishBaitGoneNotify) ProtoMessage() {}

func (x *FishBaitGoneNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishBaitGoneNotify.ProtoReflect.Descriptor instead.
func (*FishBaitGoneNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{17}
}

func (x *FishBaitGoneNotify) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type PlayerFishingDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFishRodId uint32 `protobuf:"varint,8,opt,name=last_fish_rod_id,json=lastFishRodId,proto3" json:"last_fish_rod_id,omitempty"`
}

func (x *PlayerFishingDataNotify) Reset() {
	*x = PlayerFishingDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFishingDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFishingDataNotify) ProtoMessage() {}

func (x *PlayerFishingDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFishingDataNotify.ProtoReflect.Descriptor instead.
func (*PlayerFishingDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{18}
}

func (x *PlayerFishingDataNotify) GetLastFishRodId() uint32 {
	if x != nil {
		return x.LastFishRodId
	}
	return 0
}

type FishPoolDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId     uint32 `protobuf:"varint,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TodayFishNum uint32 `protobuf:"varint,2,opt,name=today_fish_num,json=todayFishNum,proto3" json:"today_fish_num,omitempty"`
}

func (x *FishPoolDataNotify) Reset() {
	*x = FishPoolDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_fish_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishPoolDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishPoolDataNotify) ProtoMessage() {}

func (x *FishPoolDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_fish_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishPoolDataNotify.ProtoReflect.Descriptor instead.
func (*FishPoolDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_fish_proto_rawDescGZIP(), []int{19}
}

func (x *FishPoolDataNotify) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *FishPoolDataNotify) GetTodayFishNum() uint32 {
	if x != nil {
		return x.TodayFishNum
	}
	return 0
}

var File_cmd_cmd_fish_proto protoreflect.FileDescriptor

var file_cmd_cmd_fish_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0c, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc2, 0x2d, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xba, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x6f, 0x64, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72,
	0x6f, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69,
	0x73, 0x68, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc1, 0x2d, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xaf, 0x2d,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xe9, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x61, 0x69, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x6f, 0x64,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x6f, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xaa, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x79, 0x0a, 0x0e, 0x46,
	0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xc7, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7a, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x43, 0x68,
	0x6f, 0x73, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69,
	0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x73,
	0x68, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0xc5, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xe7, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x45, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x73, 0x68, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbe, 0x2d, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x71, 0x0a, 0x0b,
	0x46, 0x69, 0x73, 0x68, 0x42, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd4, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0x76, 0x0a, 0x0b, 0x46, 0x69, 0x73, 0x68, 0x42, 0x69, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd9, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x78, 0x0a, 0x12, 0x46, 0x69, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbc, 0x2d, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x7d, 0x0a, 0x12, 0x46, 0x69, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd5,
	0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x82, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd1,
	0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf3, 0x04, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x67, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x47, 0x6f, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3a,
	0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x10, 0x74, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x6e, 0x6f, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x46, 0x69, 0x73, 0x68,
	0x4e, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0e,
	0x6e, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd2, 0x2d, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x46,
	0x49, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x5f, 0x42, 0x41, 0x47, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19,
	0x46, 0x49, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x50,
	0x4f, 0x4f, 0x4c, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x22, 0x74, 0x0a, 0x0e, 0x45,
	0x78, 0x69, 0x74, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb6, 0x2d, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x79, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x74, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd7, 0x2d, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb7, 0x01, 0x0a,
	0x11, 0x46, 0x69, 0x73, 0x68, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xcd, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x75, 0x0a, 0x12, 0x46, 0x69, 0x73, 0x68, 0x42, 0x61,
	0x69, 0x74, 0x47, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4d,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xbf, 0x2d, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x91, 0x01,
	0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x27, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x52, 0x6f, 0x64,
	0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xcb, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x66,
	0x69, 0x73, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x46, 0x69, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd8, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x2a, 0x59, 0x0a, 0x10, 0x46, 0x69,
	0x73, 0x68, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x10, 0x46, 0x49, 0x53, 0x4e, 0x5f, 0x45, 0x53, 0x43, 0x41, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x45, 0x53, 0x43,
	0x41, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x45, 0x53, 0x43, 0x41, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x48,
	0x4f, 0x4f, 0x4b, 0x10, 0x02, 0x2a, 0xc5, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49,
	0x53, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x53, 0x48, 0x5f,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x04,
	0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x05, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76,
	0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_fish_proto_rawDescOnce sync.Once
	file_cmd_cmd_fish_proto_rawDescData = file_cmd_cmd_fish_proto_rawDesc
)

func file_cmd_cmd_fish_proto_rawDescGZIP() []byte {
	file_cmd_cmd_fish_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_fish_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_fish_proto_rawDescData)
	})
	return file_cmd_cmd_fish_proto_rawDescData
}

var file_cmd_cmd_fish_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_cmd_cmd_fish_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_cmd_cmd_fish_proto_goTypes = []interface{}{
	(FishEscapeReason)(0),                    // 0: proto.FishEscapeReason
	(FishBattleResult)(0),                    // 1: proto.FishBattleResult
	(EnterFishingReq_CmdId)(0),               // 2: proto.EnterFishingReq.CmdId
	(EnterFishingRsp_CmdId)(0),               // 3: proto.EnterFishingRsp.CmdId
	(StartFishingReq_CmdId)(0),               // 4: proto.StartFishingReq.CmdId
	(StartFishingRsp_CmdId)(0),               // 5: proto.StartFishingRsp.CmdId
	(FishCastRodReq_CmdId)(0),                // 6: proto.FishCastRodReq.CmdId
	(FishCastRodRsp_CmdId)(0),                // 7: proto.FishCastRodRsp.CmdId
	(FishChosenNotify_CmdId)(0),              // 8: proto.FishChosenNotify.CmdId
	(FishEscapeNotify_CmdId)(0),              // 9: proto.FishEscapeNotify.CmdId
	(FishBiteReq_CmdId)(0),                   // 10: proto.FishBiteReq.CmdId
	(FishBiteRsp_CmdId)(0),                   // 11: proto.FishBiteRsp.CmdId
	(FishBattleBeginReq_CmdId)(0),            // 12: proto.FishBattleBeginReq.CmdId
	(FishBattleBeginRsp_CmdId)(0),            // 13: proto.FishBattleBeginRsp.CmdId
	(FishBattleEndReq_CmdId)(0),              // 14: proto.FishBattleEndReq.CmdId
	(FishBattleEndRsp_CmdId)(0),              // 15: proto.FishBattleEndRsp.CmdId
	(FishBattleEndRsp_FishNoRewardReason)(0), // 16: proto.FishBattleEndRsp.FishNoRewardReason
	(ExitFishingReq_CmdId)(0),                // 17: proto.ExitFishingReq.CmdId
	(ExitFishingRsp_CmdId)(0),                // 18: proto.ExitFishingRsp.CmdId
	(FishAttractNotify_CmdId)(0),             // 19: proto.FishAttractNotify.CmdId
	(FishBaitGoneNotify_CmdId)(0),            // 20: proto.FishBaitGoneNotify.CmdId
	(PlayerFishingDataNotify_CmdId)(0),       // 21: proto.PlayerFishingDataNotify.CmdId
	(FishPoolDataNotify_CmdId)(0),            // 22: proto.FishPoolDataNotify.CmdId
	(*EnterFishingReq)(nil),                  // 23: proto.EnterFishingReq
	(*EnterFishingRsp)(nil),                  // 24: proto.EnterFishingRsp
	(*StartFishingReq)(nil),                  // 25: proto.StartFishingReq
	(*StartFishingRsp)(nil),                  // 26: proto.StartFishingRsp
	(*FishCastRodReq)(nil),                   // 27: proto.FishCastRodReq
	(*FishCastRodRsp)(nil),                   // 28: proto.FishCastRodRsp
	(*FishChosenNotify)(nil),                 // 29: proto.FishChosenNotify
	(*FishEscapeNotify)(nil),                 // 30: proto.FishEscapeNotify
	(*FishBiteReq)(nil),                      // 31: proto.FishBiteReq
	(*FishBiteRsp)(nil),                      // 32: proto.FishBiteRsp
	(*FishBattleBeginReq)(nil),               // 33: proto.FishBattleBeginReq
	(*FishBattleBeginRsp)(nil),               // 34: proto.FishBattleBeginRsp
	(*FishBattleEndReq)(nil),                 // 35: proto.FishBattleEndReq
	(*FishBattleEndRsp)(nil),                 // 36: proto.FishBattleEndRsp
	(*ExitFishingReq)(nil),                   // 37: proto.ExitFishingReq
	(*ExitFishingRsp)(nil),                   // 38: proto.ExitFishingRsp
	(*FishAttractNotify)(nil),                // 39: proto.FishAttractNotify
	(*FishBaitGoneNotify)(nil),               // 40: proto.FishBaitGoneNotify
	(*PlayerFishingDataNotify)(nil),          // 41: proto.PlayerFishingDataNotify
	(*FishPoolDataNotify)(nil),               // 42: proto.FishPoolDataNotify
	(*Vector)(nil),                           // 43: proto.Vector
	(*ItemParam)(nil),                        // 44: proto.ItemParam
}
var file_cmd_cmd_fish_proto_depIdxs = []int32{
	43, // 0: proto.FishCastRodReq.pos:type_name -> proto.Vector
	0,  // 1: proto.FishEscapeNotify.reason:type_name -> proto.FishEscapeReason
	43, // 2: proto.FishEscapeNotify.pos:type_name -> proto.Vector
	1,  // 3: proto.FishBattleEndReq.battle_result:type_name -> proto.FishBattleResult
	44, // 4: proto.FishBattleEndRsp.reward_item_list:type_name -> proto.ItemParam
	44, // 5: proto.FishBattleEndRsp.talent_item_list:type_name -> proto.ItemParam
	44, // 6: proto.FishBattleEndRsp.drop_item_list:type_name -> proto.ItemParam
	16, // 7: proto.FishBattleEndRsp.no_reward_reason:type_name -> proto.FishBattleEndRsp.FishNoRewardReason
	1,  // 8: proto.FishBattleEndRsp.battle_result:type_name -> proto.FishBattleResult
	43, // 9: proto.FishAttractNotify.pos:type_name -> proto.Vector
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cmd_cmd_fish_proto_init() }
func file_cmd_cmd_fish_proto_init() {
	if File_cmd_cmd_fish_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_fish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterFishingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterFishingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFishingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFishingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishCastRodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishCastRodRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishChosenNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishEscapeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBiteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBiteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBattleBeginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBattleBeginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBattleEndReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBattleEndRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitFishingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitFishingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishAttractNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishBaitGoneNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFishingDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_fish_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishPoolDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_fish_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_fish_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_fish_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_fish_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_fish_proto_msgTypes,
	}.Build()
	File_cmd_cmd_fish_proto = out.File
	file_cmd_cmd_fish_proto_rawDesc = nil
	file_cmd_cmd_fish_proto_goTypes = nil
	file_cmd_cmd_fish_proto_depIdxs = nil
}
