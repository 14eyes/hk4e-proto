// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: pb/packet_head.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebugNotify_Enum int32

const (
	DebugNotify_ZERO             DebugNotify_Enum = 0
	DebugNotify_CMD_ID           DebugNotify_Enum = 101
	DebugNotify_TARGET_SERVICE   DebugNotify_Enum = 101
	DebugNotify_ENET_CHANNEL_ID  DebugNotify_Enum = 2
	DebugNotify_ENET_IS_RELIABLE DebugNotify_Enum = 1
)

// Enum value maps for DebugNotify_Enum.
var (
	DebugNotify_Enum_name = map[int32]string{
		0:   "ZERO",
		101: "CMD_ID",
		// Duplicate value: 101: "TARGET_SERVICE",
		2: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DebugNotify_Enum_value = map[string]int32{
		"ZERO":             0,
		"CMD_ID":           101,
		"TARGET_SERVICE":   101,
		"ENET_CHANNEL_ID":  2,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DebugNotify_Enum) Enum() *DebugNotify_Enum {
	p := new(DebugNotify_Enum)
	*p = x
	return p
}

func (x DebugNotify_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebugNotify_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_packet_head_proto_enumTypes[0].Descriptor()
}

func (DebugNotify_Enum) Type() protoreflect.EnumType {
	return &file_pb_packet_head_proto_enumTypes[0]
}

func (x DebugNotify_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DebugNotify_Enum.Descriptor instead.
func (DebugNotify_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pb_packet_head_proto_rawDescGZIP(), []int{1, 0}
}

type DebugNotify_Retcode int32

const (
	DebugNotify_SUCC DebugNotify_Retcode = 0
	DebugNotify_FAIL DebugNotify_Retcode = 1
)

// Enum value maps for DebugNotify_Retcode.
var (
	DebugNotify_Retcode_name = map[int32]string{
		0: "SUCC",
		1: "FAIL",
	}
	DebugNotify_Retcode_value = map[string]int32{
		"SUCC": 0,
		"FAIL": 1,
	}
)

func (x DebugNotify_Retcode) Enum() *DebugNotify_Retcode {
	p := new(DebugNotify_Retcode)
	*p = x
	return p
}

func (x DebugNotify_Retcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebugNotify_Retcode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_packet_head_proto_enumTypes[1].Descriptor()
}

func (DebugNotify_Retcode) Type() protoreflect.EnumType {
	return &file_pb_packet_head_proto_enumTypes[1]
}

func (x DebugNotify_Retcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DebugNotify_Retcode.Descriptor instead.
func (DebugNotify_Retcode) EnumDescriptor() ([]byte, []int) {
	return file_pb_packet_head_proto_rawDescGZIP(), []int{1, 1}
}

type PacketHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId         uint32            `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	RpcId            uint32            `protobuf:"varint,2,opt,name=rpc_id,json=rpcId,proto3" json:"rpc_id,omitempty"`
	ClientSequenceId uint32            `protobuf:"varint,3,opt,name=client_sequence_id,json=clientSequenceId,proto3" json:"client_sequence_id,omitempty"`
	EnetChannelId    uint32            `protobuf:"varint,4,opt,name=enet_channel_id,json=enetChannelId,proto3" json:"enet_channel_id,omitempty"`
	EnetIsReliable   uint32            `protobuf:"varint,5,opt,name=enet_is_reliable,json=enetIsReliable,proto3" json:"enet_is_reliable,omitempty"`
	SentMs           uint64            `protobuf:"varint,6,opt,name=sent_ms,json=sentMs,proto3" json:"sent_ms,omitempty"`
	UserId           uint32            `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserIp           uint32            `protobuf:"varint,12,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	UserSessionId    uint32            `protobuf:"varint,13,opt,name=user_session_id,json=userSessionId,proto3" json:"user_session_id,omitempty"`
	HomeUserId       uint32            `protobuf:"varint,14,opt,name=home_user_id,json=homeUserId,proto3" json:"home_user_id,omitempty"`
	RecvTimeMs       uint64            `protobuf:"varint,21,opt,name=recv_time_ms,json=recvTimeMs,proto3" json:"recv_time_ms,omitempty"`
	RpcBeginTimeMs   uint32            `protobuf:"varint,22,opt,name=rpc_begin_time_ms,json=rpcBeginTimeMs,proto3" json:"rpc_begin_time_ms,omitempty"`
	ExtMap           map[uint32]uint32 `protobuf:"bytes,23,rep,name=ext_map,json=extMap,proto3" json:"ext_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SenderAppId      uint32            `protobuf:"varint,24,opt,name=sender_app_id,json=senderAppId,proto3" json:"sender_app_id,omitempty"`
	SenderLoad       uint32            `protobuf:"varint,25,opt,name=sender_load,json=senderLoad,proto3" json:"sender_load,omitempty"`
	SpanContextStr   []byte            `protobuf:"bytes,26,opt,name=span_context_str,json=spanContextStr,proto3" json:"span_context_str,omitempty"`
	SourceService    uint32            `protobuf:"varint,31,opt,name=source_service,json=sourceService,proto3" json:"source_service,omitempty"`
	TargetService    uint32            `protobuf:"varint,32,opt,name=target_service,json=targetService,proto3" json:"target_service,omitempty"`
	ServiceAppIdMap  map[uint32]uint32 `protobuf:"bytes,33,rep,name=service_app_id_map,json=serviceAppIdMap,proto3" json:"service_app_id_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	IsSetGameThread  bool              `protobuf:"varint,34,opt,name=is_set_game_thread,json=isSetGameThread,proto3" json:"is_set_game_thread,omitempty"`
	GameThreadIndex  uint32            `protobuf:"varint,35,opt,name=game_thread_index,json=gameThreadIndex,proto3" json:"game_thread_index,omitempty"`
	IsSetMultiThread bool              `protobuf:"varint,36,opt,name=is_set_multi_thread,json=isSetMultiThread,proto3" json:"is_set_multi_thread,omitempty"`
	MultiThreadIndex uint32            `protobuf:"varint,37,opt,name=multi_thread_index,json=multiThreadIndex,proto3" json:"multi_thread_index,omitempty"`
}

func (x *PacketHead) Reset() {
	*x = PacketHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packet_head_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketHead) ProtoMessage() {}

func (x *PacketHead) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packet_head_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketHead.ProtoReflect.Descriptor instead.
func (*PacketHead) Descriptor() ([]byte, []int) {
	return file_pb_packet_head_proto_rawDescGZIP(), []int{0}
}

func (x *PacketHead) GetPacketId() uint32 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *PacketHead) GetRpcId() uint32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *PacketHead) GetClientSequenceId() uint32 {
	if x != nil {
		return x.ClientSequenceId
	}
	return 0
}

func (x *PacketHead) GetEnetChannelId() uint32 {
	if x != nil {
		return x.EnetChannelId
	}
	return 0
}

func (x *PacketHead) GetEnetIsReliable() uint32 {
	if x != nil {
		return x.EnetIsReliable
	}
	return 0
}

func (x *PacketHead) GetSentMs() uint64 {
	if x != nil {
		return x.SentMs
	}
	return 0
}

func (x *PacketHead) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PacketHead) GetUserIp() uint32 {
	if x != nil {
		return x.UserIp
	}
	return 0
}

func (x *PacketHead) GetUserSessionId() uint32 {
	if x != nil {
		return x.UserSessionId
	}
	return 0
}

func (x *PacketHead) GetHomeUserId() uint32 {
	if x != nil {
		return x.HomeUserId
	}
	return 0
}

func (x *PacketHead) GetRecvTimeMs() uint64 {
	if x != nil {
		return x.RecvTimeMs
	}
	return 0
}

func (x *PacketHead) GetRpcBeginTimeMs() uint32 {
	if x != nil {
		return x.RpcBeginTimeMs
	}
	return 0
}

func (x *PacketHead) GetExtMap() map[uint32]uint32 {
	if x != nil {
		return x.ExtMap
	}
	return nil
}

func (x *PacketHead) GetSenderAppId() uint32 {
	if x != nil {
		return x.SenderAppId
	}
	return 0
}

func (x *PacketHead) GetSenderLoad() uint32 {
	if x != nil {
		return x.SenderLoad
	}
	return 0
}

func (x *PacketHead) GetSpanContextStr() []byte {
	if x != nil {
		return x.SpanContextStr
	}
	return nil
}

func (x *PacketHead) GetSourceService() uint32 {
	if x != nil {
		return x.SourceService
	}
	return 0
}

func (x *PacketHead) GetTargetService() uint32 {
	if x != nil {
		return x.TargetService
	}
	return 0
}

func (x *PacketHead) GetServiceAppIdMap() map[uint32]uint32 {
	if x != nil {
		return x.ServiceAppIdMap
	}
	return nil
}

func (x *PacketHead) GetIsSetGameThread() bool {
	if x != nil {
		return x.IsSetGameThread
	}
	return false
}

func (x *PacketHead) GetGameThreadIndex() uint32 {
	if x != nil {
		return x.GameThreadIndex
	}
	return 0
}

func (x *PacketHead) GetIsSetMultiThread() bool {
	if x != nil {
		return x.IsSetMultiThread
	}
	return false
}

func (x *PacketHead) GetMultiThreadIndex() uint32 {
	if x != nil {
		return x.MultiThreadIndex
	}
	return 0
}

type DebugNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Retcode DebugNotify_Retcode `protobuf:"varint,3,opt,name=retcode,proto3,enum=proto.DebugNotify_Retcode" json:"retcode,omitempty"`
}

func (x *DebugNotify) Reset() {
	*x = DebugNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packet_head_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugNotify) ProtoMessage() {}

func (x *DebugNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packet_head_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugNotify.ProtoReflect.Descriptor instead.
func (*DebugNotify) Descriptor() ([]byte, []int) {
	return file_pb_packet_head_proto_rawDescGZIP(), []int{1}
}

func (x *DebugNotify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DebugNotify) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DebugNotify) GetRetcode() DebugNotify_Retcode {
	if x != nil {
		return x.Retcode
	}
	return DebugNotify_SUCC
}

var File_pb_packet_head_proto protoreflect.FileDescriptor

var file_pb_packet_head_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x08,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x70, 0x63, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x65, 0x74, 0x5f, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x65, 0x6e, 0x65, 0x74, 0x49, 0x73, 0x52, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x76, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x72, 0x70, 0x63, 0x5f, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x70, 0x63, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x4d, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x45, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x21, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x2b, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x1a, 0x39, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a,
	0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xe7, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x04, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x1d, 0x0a, 0x07,
	0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74,
	0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_packet_head_proto_rawDescOnce sync.Once
	file_pb_packet_head_proto_rawDescData = file_pb_packet_head_proto_rawDesc
)

func file_pb_packet_head_proto_rawDescGZIP() []byte {
	file_pb_packet_head_proto_rawDescOnce.Do(func() {
		file_pb_packet_head_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_packet_head_proto_rawDescData)
	})
	return file_pb_packet_head_proto_rawDescData
}

var file_pb_packet_head_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_packet_head_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pb_packet_head_proto_goTypes = []interface{}{
	(DebugNotify_Enum)(0),    // 0: proto.DebugNotify.Enum
	(DebugNotify_Retcode)(0), // 1: proto.DebugNotify.Retcode
	(*PacketHead)(nil),       // 2: proto.PacketHead
	(*DebugNotify)(nil),      // 3: proto.DebugNotify
	nil,                      // 4: proto.PacketHead.ExtMapEntry
	nil,                      // 5: proto.PacketHead.ServiceAppIdMapEntry
}
var file_pb_packet_head_proto_depIdxs = []int32{
	4, // 0: proto.PacketHead.ext_map:type_name -> proto.PacketHead.ExtMapEntry
	5, // 1: proto.PacketHead.service_app_id_map:type_name -> proto.PacketHead.ServiceAppIdMapEntry
	1, // 2: proto.DebugNotify.retcode:type_name -> proto.DebugNotify.Retcode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_packet_head_proto_init() }
func file_pb_packet_head_proto_init() {
	if File_pb_packet_head_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_packet_head_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packet_head_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_packet_head_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_packet_head_proto_goTypes,
		DependencyIndexes: file_pb_packet_head_proto_depIdxs,
		EnumInfos:         file_pb_packet_head_proto_enumTypes,
		MessageInfos:      file_pb_packet_head_proto_msgTypes,
	}.Build()
	File_pb_packet_head_proto = out.File
	file_pb_packet_head_proto_rawDesc = nil
	file_pb_packet_head_proto_goTypes = nil
	file_pb_packet_head_proto_depIdxs = nil
}
