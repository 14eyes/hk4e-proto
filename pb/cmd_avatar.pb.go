// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_avatar.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvatarAddNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   *AvatarInfo `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsInTeam bool        `protobuf:"varint,12,opt,name=is_in_team,json=isInTeam,proto3" json:"is_in_team,omitempty"`
}

func (x *AvatarAddNotify) Reset() {
	*x = AvatarAddNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarAddNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarAddNotify) ProtoMessage() {}

func (x *AvatarAddNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarAddNotify.ProtoReflect.Descriptor instead.
func (*AvatarAddNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarAddNotify) GetAvatar() *AvatarInfo {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *AvatarAddNotify) GetIsInTeam() bool {
	if x != nil {
		return x.IsInTeam
	}
	return false
}

type AvatarDelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuidList []uint64 `protobuf:"varint,13,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
}

func (x *AvatarDelNotify) Reset() {
	*x = AvatarDelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDelNotify) ProtoMessage() {}

func (x *AvatarDelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDelNotify.ProtoReflect.Descriptor instead.
func (*AvatarDelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{1}
}

func (x *AvatarDelNotify) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

type AvatarTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuidList []uint64 `protobuf:"varint,7,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
	TeamName       string   `protobuf:"bytes,14,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *AvatarTeam) Reset() {
	*x = AvatarTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeam) ProtoMessage() {}

func (x *AvatarTeam) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeam.ProtoReflect.Descriptor instead.
func (*AvatarTeam) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{2}
}

func (x *AvatarTeam) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

func (x *AvatarTeam) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type SetUpAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId             uint32   `protobuf:"varint,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	AvatarTeamGuidList []uint64 `protobuf:"varint,7,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,5,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *SetUpAvatarTeamReq) Reset() {
	*x = SetUpAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpAvatarTeamReq) ProtoMessage() {}

func (x *SetUpAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*SetUpAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{3}
}

func (x *SetUpAvatarTeamReq) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetUpAvatarTeamReq) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *SetUpAvatarTeamReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type SetUpAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamGuidList []uint64 `protobuf:"varint,1,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	TeamId             uint32   `protobuf:"varint,6,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Retcode            int32    `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,13,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *SetUpAvatarTeamRsp) Reset() {
	*x = SetUpAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpAvatarTeamRsp) ProtoMessage() {}

func (x *SetUpAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*SetUpAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{4}
}

func (x *SetUpAvatarTeamRsp) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *SetUpAvatarTeamRsp) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetUpAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetUpAvatarTeamRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type ChooseCurAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId uint32 `protobuf:"varint,9,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *ChooseCurAvatarTeamReq) Reset() {
	*x = ChooseCurAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseCurAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseCurAvatarTeamReq) ProtoMessage() {}

func (x *ChooseCurAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseCurAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*ChooseCurAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{5}
}

func (x *ChooseCurAvatarTeamReq) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type ChooseCurAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurTeamId uint32 `protobuf:"varint,1,opt,name=cur_team_id,json=curTeamId,proto3" json:"cur_team_id,omitempty"`
	Retcode   int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ChooseCurAvatarTeamRsp) Reset() {
	*x = ChooseCurAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseCurAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseCurAvatarTeamRsp) ProtoMessage() {}

func (x *ChooseCurAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseCurAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*ChooseCurAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{6}
}

func (x *ChooseCurAvatarTeamRsp) GetCurTeamId() uint32 {
	if x != nil {
		return x.CurTeamId
	}
	return 0
}

func (x *ChooseCurAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ChangeAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovePos *Vector `protobuf:"bytes,15,opt,name=move_pos,json=movePos,proto3" json:"move_pos,omitempty"`
	SkillId uint32  `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Guid    uint64  `protobuf:"varint,7,opt,name=guid,proto3" json:"guid,omitempty"`
	IsMove  bool    `protobuf:"varint,10,opt,name=is_move,json=isMove,proto3" json:"is_move,omitempty"`
}

func (x *ChangeAvatarReq) Reset() {
	*x = ChangeAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarReq) ProtoMessage() {}

func (x *ChangeAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarReq.ProtoReflect.Descriptor instead.
func (*ChangeAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeAvatarReq) GetMovePos() *Vector {
	if x != nil {
		return x.MovePos
	}
	return nil
}

func (x *ChangeAvatarReq) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *ChangeAvatarReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *ChangeAvatarReq) GetIsMove() bool {
	if x != nil {
		return x.IsMove
	}
	return false
}

type ChangeAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId uint32 `protobuf:"varint,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Retcode int32  `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurGuid uint64 `protobuf:"varint,4,opt,name=cur_guid,json=curGuid,proto3" json:"cur_guid,omitempty"`
}

func (x *ChangeAvatarRsp) Reset() {
	*x = ChangeAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarRsp) ProtoMessage() {}

func (x *ChangeAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarRsp.ProtoReflect.Descriptor instead.
func (*ChangeAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeAvatarRsp) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *ChangeAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeAvatarRsp) GetCurGuid() uint64 {
	if x != nil {
		return x.CurGuid
	}
	return 0
}

type AvatarPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *AvatarPromoteReq) Reset() {
	*x = AvatarPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteReq) ProtoMessage() {}

func (x *AvatarPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteReq.ProtoReflect.Descriptor instead.
func (*AvatarPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{9}
}

func (x *AvatarPromoteReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type AvatarPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,11,opt,name=guid,proto3" json:"guid,omitempty"`
	Retcode int32  `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarPromoteRsp) Reset() {
	*x = AvatarPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteRsp) ProtoMessage() {}

func (x *AvatarPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteRsp.ProtoReflect.Descriptor instead.
func (*AvatarPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{10}
}

func (x *AvatarPromoteRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *AvatarPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SpringUseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,11,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *SpringUseReq) Reset() {
	*x = SpringUseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpringUseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpringUseReq) ProtoMessage() {}

func (x *SpringUseReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpringUseReq.ProtoReflect.Descriptor instead.
func (*SpringUseReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{11}
}

func (x *SpringUseReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type SpringUseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,3,opt,name=guid,proto3" json:"guid,omitempty"`
	Retcode int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SpringUseRsp) Reset() {
	*x = SpringUseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpringUseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpringUseRsp) ProtoMessage() {}

func (x *SpringUseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpringUseRsp.ProtoReflect.Descriptor instead.
func (*SpringUseRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{12}
}

func (x *SpringUseRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *SpringUseRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type RefreshBackgroundAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshBackgroundAvatarReq) Reset() {
	*x = RefreshBackgroundAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshBackgroundAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshBackgroundAvatarReq) ProtoMessage() {}

func (x *RefreshBackgroundAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshBackgroundAvatarReq.ProtoReflect.Descriptor instead.
func (*RefreshBackgroundAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{13}
}

type RefreshBackgroundAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpFullTimeMap map[uint64]uint32 `protobuf:"bytes,15,rep,name=hp_full_time_map,json=hpFullTimeMap,proto3" json:"hp_full_time_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Retcode       int32             `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *RefreshBackgroundAvatarRsp) Reset() {
	*x = RefreshBackgroundAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshBackgroundAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshBackgroundAvatarRsp) ProtoMessage() {}

func (x *RefreshBackgroundAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshBackgroundAvatarRsp.ProtoReflect.Descriptor instead.
func (*RefreshBackgroundAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshBackgroundAvatarRsp) GetHpFullTimeMap() map[uint64]uint32 {
	if x != nil {
		return x.HpFullTimeMap
	}
	return nil
}

func (x *RefreshBackgroundAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarTeamUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamMap      map[uint32]*AvatarTeam `protobuf:"bytes,2,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TempAvatarGuidList []uint64               `protobuf:"varint,13,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
}

func (x *AvatarTeamUpdateNotify) Reset() {
	*x = AvatarTeamUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeamUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeamUpdateNotify) ProtoMessage() {}

func (x *AvatarTeamUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeamUpdateNotify.ProtoReflect.Descriptor instead.
func (*AvatarTeamUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{15}
}

func (x *AvatarTeamUpdateNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarTeamUpdateNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

type AvatarDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamOrderList []uint32               `protobuf:"varint,9,rep,packed,name=backup_avatar_team_order_list,json=backupAvatarTeamOrderList,proto3" json:"backup_avatar_team_order_list,omitempty"`
	TempAvatarGuidList        []uint64               `protobuf:"varint,12,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
	AvatarList                []*AvatarInfo          `protobuf:"bytes,6,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"`
	CurAvatarTeamId           uint32                 `protobuf:"varint,2,opt,name=cur_avatar_team_id,json=curAvatarTeamId,proto3" json:"cur_avatar_team_id,omitempty"`
	AvatarRenameList          []*AvatarRenameInfo    `protobuf:"bytes,4,rep,name=avatar_rename_list,json=avatarRenameList,proto3" json:"avatar_rename_list,omitempty"`
	OwnedFlycloakList         []uint32               `protobuf:"varint,1,rep,packed,name=owned_flycloak_list,json=ownedFlycloakList,proto3" json:"owned_flycloak_list,omitempty"`
	OwnedCostumeList          []uint32               `protobuf:"varint,11,rep,packed,name=owned_costume_list,json=ownedCostumeList,proto3" json:"owned_costume_list,omitempty"`
	AvatarTeamMap             map[uint32]*AvatarTeam `protobuf:"bytes,7,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChooseAvatarGuid          uint64                 `protobuf:"varint,8,opt,name=choose_avatar_guid,json=chooseAvatarGuid,proto3" json:"choose_avatar_guid,omitempty"`
}

func (x *AvatarDataNotify) Reset() {
	*x = AvatarDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDataNotify) ProtoMessage() {}

func (x *AvatarDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{16}
}

func (x *AvatarDataNotify) GetBackupAvatarTeamOrderList() []uint32 {
	if x != nil {
		return x.BackupAvatarTeamOrderList
	}
	return nil
}

func (x *AvatarDataNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

func (x *AvatarDataNotify) GetAvatarList() []*AvatarInfo {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *AvatarDataNotify) GetCurAvatarTeamId() uint32 {
	if x != nil {
		return x.CurAvatarTeamId
	}
	return 0
}

func (x *AvatarDataNotify) GetAvatarRenameList() []*AvatarRenameInfo {
	if x != nil {
		return x.AvatarRenameList
	}
	return nil
}

func (x *AvatarDataNotify) GetOwnedFlycloakList() []uint32 {
	if x != nil {
		return x.OwnedFlycloakList
	}
	return nil
}

func (x *AvatarDataNotify) GetOwnedCostumeList() []uint32 {
	if x != nil {
		return x.OwnedCostumeList
	}
	return nil
}

func (x *AvatarDataNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarDataNotify) GetChooseAvatarGuid() uint64 {
	if x != nil {
		return x.ChooseAvatarGuid
	}
	return 0
}

type AvatarUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,6,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	ItemId     uint32 `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *AvatarUpgradeReq) Reset() {
	*x = AvatarUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUpgradeReq) ProtoMessage() {}

func (x *AvatarUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUpgradeReq.ProtoReflect.Descriptor instead.
func (*AvatarUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{17}
}

func (x *AvatarUpgradeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarUpgradeReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AvatarUpgradeReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type AvatarUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel        uint32             `protobuf:"varint,6,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	OldLevel        uint32             `protobuf:"varint,13,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	OldFightPropMap map[uint32]float32 `protobuf:"bytes,10,rep,name=old_fight_prop_map,json=oldFightPropMap,proto3" json:"old_fight_prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Retcode         int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurFightPropMap map[uint32]float32 `protobuf:"bytes,4,rep,name=cur_fight_prop_map,json=curFightPropMap,proto3" json:"cur_fight_prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	AvatarGuid      uint64             `protobuf:"varint,15,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarUpgradeRsp) Reset() {
	*x = AvatarUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUpgradeRsp) ProtoMessage() {}

func (x *AvatarUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUpgradeRsp.ProtoReflect.Descriptor instead.
func (*AvatarUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{18}
}

func (x *AvatarUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetOldFightPropMap() map[uint32]float32 {
	if x != nil {
		return x.OldFightPropMap
	}
	return nil
}

func (x *AvatarUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetCurFightPropMap() map[uint32]float32 {
	if x != nil {
		return x.CurFightPropMap
	}
	return nil
}

func (x *AvatarUpgradeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarDieAnimationEndReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RebornPos *Vector `protobuf:"bytes,3,opt,name=reborn_pos,json=rebornPos,proto3" json:"reborn_pos,omitempty"`
	DieGuid   uint64  `protobuf:"varint,7,opt,name=die_guid,json=dieGuid,proto3" json:"die_guid,omitempty"`
	SkillId   uint32  `protobuf:"varint,8,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
}

func (x *AvatarDieAnimationEndReq) Reset() {
	*x = AvatarDieAnimationEndReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDieAnimationEndReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDieAnimationEndReq) ProtoMessage() {}

func (x *AvatarDieAnimationEndReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDieAnimationEndReq.ProtoReflect.Descriptor instead.
func (*AvatarDieAnimationEndReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{19}
}

func (x *AvatarDieAnimationEndReq) GetRebornPos() *Vector {
	if x != nil {
		return x.RebornPos
	}
	return nil
}

func (x *AvatarDieAnimationEndReq) GetDieGuid() uint64 {
	if x != nil {
		return x.DieGuid
	}
	return 0
}

func (x *AvatarDieAnimationEndReq) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

type AvatarDieAnimationEndRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId uint32 `protobuf:"varint,13,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Retcode int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DieGuid uint64 `protobuf:"varint,15,opt,name=die_guid,json=dieGuid,proto3" json:"die_guid,omitempty"`
}

func (x *AvatarDieAnimationEndRsp) Reset() {
	*x = AvatarDieAnimationEndRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDieAnimationEndRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDieAnimationEndRsp) ProtoMessage() {}

func (x *AvatarDieAnimationEndRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDieAnimationEndRsp.ProtoReflect.Descriptor instead.
func (*AvatarDieAnimationEndRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{20}
}

func (x *AvatarDieAnimationEndRsp) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *AvatarDieAnimationEndRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarDieAnimationEndRsp) GetDieGuid() uint64 {
	if x != nil {
		return x.DieGuid
	}
	return 0
}

type AvatarChangeElementTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId uint32 `protobuf:"varint,7,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	AreaId  uint32 `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
}

func (x *AvatarChangeElementTypeReq) Reset() {
	*x = AvatarChangeElementTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeElementTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeElementTypeReq) ProtoMessage() {}

func (x *AvatarChangeElementTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeElementTypeReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeElementTypeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{21}
}

func (x *AvatarChangeElementTypeReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *AvatarChangeElementTypeReq) GetAreaId() uint32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

type AvatarChangeElementTypeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarChangeElementTypeRsp) Reset() {
	*x = AvatarChangeElementTypeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeElementTypeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeElementTypeRsp) ProtoMessage() {}

func (x *AvatarChangeElementTypeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeElementTypeRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeElementTypeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{22}
}

func (x *AvatarChangeElementTypeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarFetterDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetterInfoMap map[uint64]*AvatarFetterInfo `protobuf:"bytes,15,rep,name=fetter_info_map,json=fetterInfoMap,proto3" json:"fetter_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarFetterDataNotify) Reset() {
	*x = AvatarFetterDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterDataNotify) ProtoMessage() {}

func (x *AvatarFetterDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarFetterDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{23}
}

func (x *AvatarFetterDataNotify) GetFetterInfoMap() map[uint64]*AvatarFetterInfo {
	if x != nil {
		return x.FetterInfoMap
	}
	return nil
}

type AvatarExpeditionDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,6,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarExpeditionDataNotify) Reset() {
	*x = AvatarExpeditionDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionDataNotify) ProtoMessage() {}

func (x *AvatarExpeditionDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{24}
}

func (x *AvatarExpeditionDataNotify) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

type AvatarExpeditionAllDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AvatarExpeditionAllDataReq) Reset() {
	*x = AvatarExpeditionAllDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionAllDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionAllDataReq) ProtoMessage() {}

func (x *AvatarExpeditionAllDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionAllDataReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionAllDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{25}
}

type AvatarExpeditionAllDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenExpeditionList   []uint32                         `protobuf:"varint,3,rep,packed,name=open_expedition_list,json=openExpeditionList,proto3" json:"open_expedition_list,omitempty"`
	Retcode              int32                            `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ExpeditionCountLimit uint32                           `protobuf:"varint,12,opt,name=expedition_count_limit,json=expeditionCountLimit,proto3" json:"expedition_count_limit,omitempty"`
	ExpeditionInfoMap    map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,4,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarExpeditionAllDataRsp) Reset() {
	*x = AvatarExpeditionAllDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionAllDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionAllDataRsp) ProtoMessage() {}

func (x *AvatarExpeditionAllDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionAllDataRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionAllDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{26}
}

func (x *AvatarExpeditionAllDataRsp) GetOpenExpeditionList() []uint32 {
	if x != nil {
		return x.OpenExpeditionList
	}
	return nil
}

func (x *AvatarExpeditionAllDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarExpeditionAllDataRsp) GetExpeditionCountLimit() uint32 {
	if x != nil {
		return x.ExpeditionCountLimit
	}
	return 0
}

func (x *AvatarExpeditionAllDataRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

type AvatarExpeditionStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpId      uint32 `protobuf:"varint,9,opt,name=exp_id,json=expId,proto3" json:"exp_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	HourTime   uint32 `protobuf:"varint,2,opt,name=hour_time,json=hourTime,proto3" json:"hour_time,omitempty"`
}

func (x *AvatarExpeditionStartReq) Reset() {
	*x = AvatarExpeditionStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionStartReq) ProtoMessage() {}

func (x *AvatarExpeditionStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionStartReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionStartReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{27}
}

func (x *AvatarExpeditionStartReq) GetExpId() uint32 {
	if x != nil {
		return x.ExpId
	}
	return 0
}

func (x *AvatarExpeditionStartReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarExpeditionStartReq) GetHourTime() uint32 {
	if x != nil {
		return x.HourTime
	}
	return 0
}

type AvatarExpeditionStartRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,2,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionStartRsp) Reset() {
	*x = AvatarExpeditionStartRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionStartRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionStartRsp) ProtoMessage() {}

func (x *AvatarExpeditionStartRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionStartRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionStartRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{28}
}

func (x *AvatarExpeditionStartRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionStartRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarExpeditionCallBackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid []uint64 `protobuf:"varint,13,rep,packed,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarExpeditionCallBackReq) Reset() {
	*x = AvatarExpeditionCallBackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionCallBackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionCallBackReq) ProtoMessage() {}

func (x *AvatarExpeditionCallBackReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionCallBackReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionCallBackReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{29}
}

func (x *AvatarExpeditionCallBackReq) GetAvatarGuid() []uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return nil
}

type AvatarExpeditionCallBackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,9,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionCallBackRsp) Reset() {
	*x = AvatarExpeditionCallBackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionCallBackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionCallBackRsp) ProtoMessage() {}

func (x *AvatarExpeditionCallBackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionCallBackRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionCallBackRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{30}
}

func (x *AvatarExpeditionCallBackRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionCallBackRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarExpeditionGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarExpeditionGetRewardReq) Reset() {
	*x = AvatarExpeditionGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionGetRewardReq) ProtoMessage() {}

func (x *AvatarExpeditionGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionGetRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionGetRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{31}
}

func (x *AvatarExpeditionGetRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarExpeditionGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraItemList     []*ItemParam                     `protobuf:"bytes,9,rep,name=extra_item_list,json=extraItemList,proto3" json:"extra_item_list,omitempty"`
	ItemList          []*ItemParam                     `protobuf:"bytes,8,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,12,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionGetRewardRsp) Reset() {
	*x = AvatarExpeditionGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionGetRewardRsp) ProtoMessage() {}

func (x *AvatarExpeditionGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionGetRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{32}
}

func (x *AvatarExpeditionGetRewardRsp) GetExtraItemList() []*ItemParam {
	if x != nil {
		return x.ExtraItemList
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ChangeMpTeamAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurAvatarGuid  uint64   `protobuf:"varint,4,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
	AvatarGuidList []uint64 `protobuf:"varint,8,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
}

func (x *ChangeMpTeamAvatarReq) Reset() {
	*x = ChangeMpTeamAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMpTeamAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMpTeamAvatarReq) ProtoMessage() {}

func (x *ChangeMpTeamAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMpTeamAvatarReq.ProtoReflect.Descriptor instead.
func (*ChangeMpTeamAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{33}
}

func (x *ChangeMpTeamAvatarReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

func (x *ChangeMpTeamAvatarReq) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

type ChangeMpTeamAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32    `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuidList []uint64 `protobuf:"varint,3,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
	CurAvatarGuid  uint64   `protobuf:"varint,13,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *ChangeMpTeamAvatarRsp) Reset() {
	*x = ChangeMpTeamAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMpTeamAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMpTeamAvatarRsp) ProtoMessage() {}

func (x *ChangeMpTeamAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMpTeamAvatarRsp.ProtoReflect.Descriptor instead.
func (*ChangeMpTeamAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{34}
}

func (x *ChangeMpTeamAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeMpTeamAvatarRsp) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

func (x *ChangeMpTeamAvatarRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type ChangeTeamNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int32  `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName string `protobuf:"bytes,9,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *ChangeTeamNameReq) Reset() {
	*x = ChangeTeamNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeamNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeamNameReq) ProtoMessage() {}

func (x *ChangeTeamNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeamNameReq.ProtoReflect.Descriptor instead.
func (*ChangeTeamNameReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{35}
}

func (x *ChangeTeamNameReq) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ChangeTeamNameReq) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type ChangeTeamNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TeamName string `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	TeamId   int32  `protobuf:"varint,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *ChangeTeamNameRsp) Reset() {
	*x = ChangeTeamNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeamNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeamNameRsp) ProtoMessage() {}

func (x *ChangeTeamNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeamNameRsp.ProtoReflect.Descriptor instead.
func (*ChangeTeamNameRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeTeamNameRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeTeamNameRsp) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *ChangeTeamNameRsp) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type SceneTeamAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarAbilityInfo   *AbilitySyncStateInfo `protobuf:"bytes,5,opt,name=avatar_ability_info,json=avatarAbilityInfo,proto3" json:"avatar_ability_info,omitempty"`
	AvatarInfo          *AvatarInfo           `protobuf:"bytes,8,opt,name=avatar_info,json=avatarInfo,proto3" json:"avatar_info,omitempty"`
	IsOnScene           bool                  `protobuf:"varint,152,opt,name=is_on_scene,json=isOnScene,proto3" json:"is_on_scene,omitempty"`
	EntityId            uint32                `protobuf:"varint,9,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	AvatarGuid          uint64                `protobuf:"varint,15,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	SceneId             uint32                `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	WeaponEntityId      uint32                `protobuf:"varint,7,opt,name=weapon_entity_id,json=weaponEntityId,proto3" json:"weapon_entity_id,omitempty"`
	SceneAvatarInfo     *SceneAvatarInfo      `protobuf:"bytes,3,opt,name=scene_avatar_info,json=sceneAvatarInfo,proto3" json:"scene_avatar_info,omitempty"`
	WeaponGuid          uint64                `protobuf:"varint,4,opt,name=weapon_guid,json=weaponGuid,proto3" json:"weapon_guid,omitempty"`
	WeaponAbilityInfo   *AbilitySyncStateInfo `protobuf:"bytes,11,opt,name=weapon_ability_info,json=weaponAbilityInfo,proto3" json:"weapon_ability_info,omitempty"`
	SceneEntityInfo     *SceneEntityInfo      `protobuf:"bytes,12,opt,name=scene_entity_info,json=sceneEntityInfo,proto3" json:"scene_entity_info,omitempty"`
	PlayerUid           uint32                `protobuf:"varint,14,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
	IsReconnect         bool                  `protobuf:"varint,6,opt,name=is_reconnect,json=isReconnect,proto3" json:"is_reconnect,omitempty"`
	AbilityControlBlock *AbilityControlBlock  `protobuf:"bytes,2,opt,name=ability_control_block,json=abilityControlBlock,proto3" json:"ability_control_block,omitempty"`
	IsPlayerCurAvatar   bool                  `protobuf:"varint,13,opt,name=is_player_cur_avatar,json=isPlayerCurAvatar,proto3" json:"is_player_cur_avatar,omitempty"`
	ServerBuffList      []*ServerBuff         `protobuf:"bytes,10,rep,name=server_buff_list,json=serverBuffList,proto3" json:"server_buff_list,omitempty"`
}

func (x *SceneTeamAvatar) Reset() {
	*x = SceneTeamAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTeamAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTeamAvatar) ProtoMessage() {}

func (x *SceneTeamAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTeamAvatar.ProtoReflect.Descriptor instead.
func (*SceneTeamAvatar) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{37}
}

func (x *SceneTeamAvatar) GetAvatarAbilityInfo() *AbilitySyncStateInfo {
	if x != nil {
		return x.AvatarAbilityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetAvatarInfo() *AvatarInfo {
	if x != nil {
		return x.AvatarInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetIsOnScene() bool {
	if x != nil {
		return x.IsOnScene
	}
	return false
}

func (x *SceneTeamAvatar) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *SceneTeamAvatar) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *SceneTeamAvatar) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *SceneTeamAvatar) GetWeaponEntityId() uint32 {
	if x != nil {
		return x.WeaponEntityId
	}
	return 0
}

func (x *SceneTeamAvatar) GetSceneAvatarInfo() *SceneAvatarInfo {
	if x != nil {
		return x.SceneAvatarInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetWeaponGuid() uint64 {
	if x != nil {
		return x.WeaponGuid
	}
	return 0
}

func (x *SceneTeamAvatar) GetWeaponAbilityInfo() *AbilitySyncStateInfo {
	if x != nil {
		return x.WeaponAbilityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetSceneEntityInfo() *SceneEntityInfo {
	if x != nil {
		return x.SceneEntityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetPlayerUid() uint32 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

func (x *SceneTeamAvatar) GetIsReconnect() bool {
	if x != nil {
		return x.IsReconnect
	}
	return false
}

func (x *SceneTeamAvatar) GetAbilityControlBlock() *AbilityControlBlock {
	if x != nil {
		return x.AbilityControlBlock
	}
	return nil
}

func (x *SceneTeamAvatar) GetIsPlayerCurAvatar() bool {
	if x != nil {
		return x.IsPlayerCurAvatar
	}
	return false
}

func (x *SceneTeamAvatar) GetServerBuffList() []*ServerBuff {
	if x != nil {
		return x.ServerBuffList
	}
	return nil
}

type SceneTeamUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneTeamAvatarList []*SceneTeamAvatar `protobuf:"bytes,11,rep,name=scene_team_avatar_list,json=sceneTeamAvatarList,proto3" json:"scene_team_avatar_list,omitempty"`
	IsInMp              bool               `protobuf:"varint,15,opt,name=is_in_mp,json=isInMp,proto3" json:"is_in_mp,omitempty"`
}

func (x *SceneTeamUpdateNotify) Reset() {
	*x = SceneTeamUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTeamUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTeamUpdateNotify) ProtoMessage() {}

func (x *SceneTeamUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTeamUpdateNotify.ProtoReflect.Descriptor instead.
func (*SceneTeamUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{38}
}

func (x *SceneTeamUpdateNotify) GetSceneTeamAvatarList() []*SceneTeamAvatar {
	if x != nil {
		return x.SceneTeamAvatarList
	}
	return nil
}

func (x *SceneTeamUpdateNotify) GetIsInMp() bool {
	if x != nil {
		return x.IsInMp
	}
	return false
}

type FocusAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,1,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	IsFocus    bool   `protobuf:"varint,8,opt,name=is_focus,json=isFocus,proto3" json:"is_focus,omitempty"`
}

func (x *FocusAvatarReq) Reset() {
	*x = FocusAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusAvatarReq) ProtoMessage() {}

func (x *FocusAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusAvatarReq.ProtoReflect.Descriptor instead.
func (*FocusAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{39}
}

func (x *FocusAvatarReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *FocusAvatarReq) GetIsFocus() bool {
	if x != nil {
		return x.IsFocus
	}
	return false
}

type FocusAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsFocus    bool   `protobuf:"varint,11,opt,name=is_focus,json=isFocus,proto3" json:"is_focus,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *FocusAvatarRsp) Reset() {
	*x = FocusAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusAvatarRsp) ProtoMessage() {}

func (x *FocusAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusAvatarRsp.ProtoReflect.Descriptor instead.
func (*FocusAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{40}
}

func (x *FocusAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *FocusAvatarRsp) GetIsFocus() bool {
	if x != nil {
		return x.IsFocus
	}
	return false
}

func (x *FocusAvatarRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarSatiationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishTime        float32 `protobuf:"fixed32,14,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	AvatarGuid        uint64  `protobuf:"varint,13,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PenaltyFinishTime float32 `protobuf:"fixed32,12,opt,name=penalty_finish_time,json=penaltyFinishTime,proto3" json:"penalty_finish_time,omitempty"`
}

func (x *AvatarSatiationData) Reset() {
	*x = AvatarSatiationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSatiationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSatiationData) ProtoMessage() {}

func (x *AvatarSatiationData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSatiationData.ProtoReflect.Descriptor instead.
func (*AvatarSatiationData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{41}
}

func (x *AvatarSatiationData) GetFinishTime() float32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *AvatarSatiationData) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSatiationData) GetPenaltyFinishTime() float32 {
	if x != nil {
		return x.PenaltyFinishTime
	}
	return 0
}

type AvatarSatiationDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SatiationDataList []*AvatarSatiationData `protobuf:"bytes,6,rep,name=satiation_data_list,json=satiationDataList,proto3" json:"satiation_data_list,omitempty"`
}

func (x *AvatarSatiationDataNotify) Reset() {
	*x = AvatarSatiationDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSatiationDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSatiationDataNotify) ProtoMessage() {}

func (x *AvatarSatiationDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSatiationDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarSatiationDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{42}
}

func (x *AvatarSatiationDataNotify) GetSatiationDataList() []*AvatarSatiationData {
	if x != nil {
		return x.SatiationDataList
	}
	return nil
}

type AvatarWearFlycloakReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	FlycloakId uint32 `protobuf:"varint,13,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
}

func (x *AvatarWearFlycloakReq) Reset() {
	*x = AvatarWearFlycloakReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarWearFlycloakReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarWearFlycloakReq) ProtoMessage() {}

func (x *AvatarWearFlycloakReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarWearFlycloakReq.ProtoReflect.Descriptor instead.
func (*AvatarWearFlycloakReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{43}
}

func (x *AvatarWearFlycloakReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarWearFlycloakReq) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

type AvatarWearFlycloakRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,13,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarWearFlycloakRsp) Reset() {
	*x = AvatarWearFlycloakRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarWearFlycloakRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarWearFlycloakRsp) ProtoMessage() {}

func (x *AvatarWearFlycloakRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarWearFlycloakRsp.ProtoReflect.Descriptor instead.
func (*AvatarWearFlycloakRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{44}
}

func (x *AvatarWearFlycloakRsp) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

func (x *AvatarWearFlycloakRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarWearFlycloakRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarFlycloakChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,8,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,2,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarFlycloakChangeNotify) Reset() {
	*x = AvatarFlycloakChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFlycloakChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFlycloakChangeNotify) ProtoMessage() {}

func (x *AvatarFlycloakChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFlycloakChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarFlycloakChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{45}
}

func (x *AvatarFlycloakChangeNotify) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

func (x *AvatarFlycloakChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarGainFlycloakNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,3,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
}

func (x *AvatarGainFlycloakNotify) Reset() {
	*x = AvatarGainFlycloakNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarGainFlycloakNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarGainFlycloakNotify) ProtoMessage() {}

func (x *AvatarGainFlycloakNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarGainFlycloakNotify.ProtoReflect.Descriptor instead.
func (*AvatarGainFlycloakNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{46}
}

func (x *AvatarGainFlycloakNotify) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

type AvatarEquipAffixStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid     uint64                `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EquipAffixInfo *AvatarEquipAffixInfo `protobuf:"bytes,12,opt,name=equip_affix_info,json=equipAffixInfo,proto3" json:"equip_affix_info,omitempty"`
}

func (x *AvatarEquipAffixStartNotify) Reset() {
	*x = AvatarEquipAffixStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarEquipAffixStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarEquipAffixStartNotify) ProtoMessage() {}

func (x *AvatarEquipAffixStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarEquipAffixStartNotify.ProtoReflect.Descriptor instead.
func (*AvatarEquipAffixStartNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{47}
}

func (x *AvatarEquipAffixStartNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarEquipAffixStartNotify) GetEquipAffixInfo() *AvatarEquipAffixInfo {
	if x != nil {
		return x.EquipAffixInfo
	}
	return nil
}

type AvatarFetterLevelRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid  uint64 `protobuf:"varint,1,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	FetterLevel uint32 `protobuf:"varint,6,opt,name=fetter_level,json=fetterLevel,proto3" json:"fetter_level,omitempty"`
}

func (x *AvatarFetterLevelRewardReq) Reset() {
	*x = AvatarFetterLevelRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterLevelRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterLevelRewardReq) ProtoMessage() {}

func (x *AvatarFetterLevelRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterLevelRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarFetterLevelRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{48}
}

func (x *AvatarFetterLevelRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarFetterLevelRewardReq) GetFetterLevel() uint32 {
	if x != nil {
		return x.FetterLevel
	}
	return 0
}

type AvatarFetterLevelRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid  uint64 `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	RewardId    uint32 `protobuf:"varint,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Retcode     int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FetterLevel uint32 `protobuf:"varint,14,opt,name=fetter_level,json=fetterLevel,proto3" json:"fetter_level,omitempty"`
}

func (x *AvatarFetterLevelRewardRsp) Reset() {
	*x = AvatarFetterLevelRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterLevelRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterLevelRewardRsp) ProtoMessage() {}

func (x *AvatarFetterLevelRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterLevelRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarFetterLevelRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{49}
}

func (x *AvatarFetterLevelRewardRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetFetterLevel() uint32 {
	if x != nil {
		return x.FetterLevel
	}
	return 0
}

type AddNoGachaAvatarCardTransferItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  uint32 `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
	ItemId uint32 `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	IsNew  bool   `protobuf:"varint,15,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *AddNoGachaAvatarCardTransferItem) Reset() {
	*x = AddNoGachaAvatarCardTransferItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoGachaAvatarCardTransferItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoGachaAvatarCardTransferItem) ProtoMessage() {}

func (x *AddNoGachaAvatarCardTransferItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoGachaAvatarCardTransferItem.ProtoReflect.Descriptor instead.
func (*AddNoGachaAvatarCardTransferItem) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{50}
}

func (x *AddNoGachaAvatarCardTransferItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AddNoGachaAvatarCardTransferItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AddNoGachaAvatarCardTransferItem) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type AddNoGachaAvatarCardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferItemList    []*AddNoGachaAvatarCardTransferItem `protobuf:"bytes,4,rep,name=transfer_item_list,json=transferItemList,proto3" json:"transfer_item_list,omitempty"`
	InitialPromoteLevel uint32                              `protobuf:"varint,2,opt,name=initial_promote_level,json=initialPromoteLevel,proto3" json:"initial_promote_level,omitempty"`
	AvatarId            uint32                              `protobuf:"varint,8,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	IsTransferToItem    bool                                `protobuf:"varint,6,opt,name=is_transfer_to_item,json=isTransferToItem,proto3" json:"is_transfer_to_item,omitempty"`
	Reason              uint32                              `protobuf:"varint,9,opt,name=reason,proto3" json:"reason,omitempty"`
	InitialLevel        uint32                              `protobuf:"varint,10,opt,name=initial_level,json=initialLevel,proto3" json:"initial_level,omitempty"`
	ItemId              uint32                              `protobuf:"varint,14,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *AddNoGachaAvatarCardNotify) Reset() {
	*x = AddNoGachaAvatarCardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoGachaAvatarCardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoGachaAvatarCardNotify) ProtoMessage() {}

func (x *AddNoGachaAvatarCardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoGachaAvatarCardNotify.ProtoReflect.Descriptor instead.
func (*AddNoGachaAvatarCardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{51}
}

func (x *AddNoGachaAvatarCardNotify) GetTransferItemList() []*AddNoGachaAvatarCardTransferItem {
	if x != nil {
		return x.TransferItemList
	}
	return nil
}

func (x *AddNoGachaAvatarCardNotify) GetInitialPromoteLevel() uint32 {
	if x != nil {
		return x.InitialPromoteLevel
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetIsTransferToItem() bool {
	if x != nil {
		return x.IsTransferToItem
	}
	return false
}

func (x *AddNoGachaAvatarCardNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetInitialLevel() uint32 {
	if x != nil {
		return x.InitialLevel
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type AvatarPromoteGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid   uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PromoteLevel uint32 `protobuf:"varint,12,opt,name=promote_level,json=promoteLevel,proto3" json:"promote_level,omitempty"`
}

func (x *AvatarPromoteGetRewardReq) Reset() {
	*x = AvatarPromoteGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteGetRewardReq) ProtoMessage() {}

func (x *AvatarPromoteGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteGetRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarPromoteGetRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{52}
}

func (x *AvatarPromoteGetRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarPromoteGetRewardReq) GetPromoteLevel() uint32 {
	if x != nil {
		return x.PromoteLevel
	}
	return 0
}

type AvatarPromoteGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32  `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RewardId     uint32 `protobuf:"varint,15,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	AvatarGuid   uint64 `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PromoteLevel uint32 `protobuf:"varint,12,opt,name=promote_level,json=promoteLevel,proto3" json:"promote_level,omitempty"`
}

func (x *AvatarPromoteGetRewardRsp) Reset() {
	*x = AvatarPromoteGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteGetRewardRsp) ProtoMessage() {}

func (x *AvatarPromoteGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteGetRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarPromoteGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{53}
}

func (x *AvatarPromoteGetRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetPromoteLevel() uint32 {
	if x != nil {
		return x.PromoteLevel
	}
	return 0
}

type AvatarChangeCostumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostumeId  uint32 `protobuf:"varint,4,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,2,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeCostumeReq) Reset() {
	*x = AvatarChangeCostumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeReq) ProtoMessage() {}

func (x *AvatarChangeCostumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{54}
}

func (x *AvatarChangeCostumeReq) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

func (x *AvatarChangeCostumeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarChangeCostumeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,12,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CostumeId  uint32 `protobuf:"varint,13,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *AvatarChangeCostumeRsp) Reset() {
	*x = AvatarChangeCostumeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeRsp) ProtoMessage() {}

func (x *AvatarChangeCostumeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{55}
}

func (x *AvatarChangeCostumeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarChangeCostumeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarChangeCostumeRsp) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type AvatarChangeCostumeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityInfo *SceneEntityInfo `protobuf:"bytes,7,opt,name=entity_info,json=entityInfo,proto3" json:"entity_info,omitempty"`
}

func (x *AvatarChangeCostumeNotify) Reset() {
	*x = AvatarChangeCostumeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeNotify) ProtoMessage() {}

func (x *AvatarChangeCostumeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeNotify.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{56}
}

func (x *AvatarChangeCostumeNotify) GetEntityInfo() *SceneEntityInfo {
	if x != nil {
		return x.EntityInfo
	}
	return nil
}

type AvatarGainCostumeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostumeId uint32 `protobuf:"varint,15,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *AvatarGainCostumeNotify) Reset() {
	*x = AvatarGainCostumeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarGainCostumeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarGainCostumeNotify) ProtoMessage() {}

func (x *AvatarGainCostumeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarGainCostumeNotify.ProtoReflect.Descriptor instead.
func (*AvatarGainCostumeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{57}
}

func (x *AvatarGainCostumeNotify) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type AvatarChangeAnimHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimHash   uint32 `protobuf:"varint,6,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,3,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeAnimHashReq) Reset() {
	*x = AvatarChangeAnimHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeAnimHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeAnimHashReq) ProtoMessage() {}

func (x *AvatarChangeAnimHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeAnimHashReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeAnimHashReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{58}
}

func (x *AvatarChangeAnimHashReq) GetAnimHash() uint32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *AvatarChangeAnimHashReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarChangeAnimHashRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimHash   uint32 `protobuf:"varint,13,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"`
	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeAnimHashRsp) Reset() {
	*x = AvatarChangeAnimHashRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeAnimHashRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeAnimHashRsp) ProtoMessage() {}

func (x *AvatarChangeAnimHashRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeAnimHashRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeAnimHashRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{59}
}

func (x *AvatarChangeAnimHashRsp) GetAnimHash() uint32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *AvatarChangeAnimHashRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarChangeAnimHashRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type PersistentDungeonSwitchAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurAvatarGuid      uint64   `protobuf:"varint,8,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
	AvatarTeamGuidList []uint64 `protobuf:"varint,3,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
}

func (x *PersistentDungeonSwitchAvatarReq) Reset() {
	*x = PersistentDungeonSwitchAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistentDungeonSwitchAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentDungeonSwitchAvatarReq) ProtoMessage() {}

func (x *PersistentDungeonSwitchAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarReq.ProtoReflect.Descriptor instead.
func (*PersistentDungeonSwitchAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{60}
}

func (x *PersistentDungeonSwitchAvatarReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

func (x *PersistentDungeonSwitchAvatarReq) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

type PersistentDungeonSwitchAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamGuidList []uint64 `protobuf:"varint,14,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	Retcode            int32    `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,15,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *PersistentDungeonSwitchAvatarRsp) Reset() {
	*x = PersistentDungeonSwitchAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistentDungeonSwitchAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentDungeonSwitchAvatarRsp) ProtoMessage() {}

func (x *PersistentDungeonSwitchAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarRsp.ProtoReflect.Descriptor instead.
func (*PersistentDungeonSwitchAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{61}
}

func (x *PersistentDungeonSwitchAvatarRsp) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *PersistentDungeonSwitchAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PersistentDungeonSwitchAvatarRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type AddBackupAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBackupAvatarTeamReq) Reset() {
	*x = AddBackupAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBackupAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupAvatarTeamReq) ProtoMessage() {}

func (x *AddBackupAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*AddBackupAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{62}
}

type AddBackupAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AddBackupAvatarTeamRsp) Reset() {
	*x = AddBackupAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBackupAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupAvatarTeamRsp) ProtoMessage() {}

func (x *AddBackupAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*AddBackupAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{63}
}

func (x *AddBackupAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DelBackupAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamId uint32 `protobuf:"varint,4,opt,name=backup_avatar_team_id,json=backupAvatarTeamId,proto3" json:"backup_avatar_team_id,omitempty"`
}

func (x *DelBackupAvatarTeamReq) Reset() {
	*x = DelBackupAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBackupAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBackupAvatarTeamReq) ProtoMessage() {}

func (x *DelBackupAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBackupAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*DelBackupAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{64}
}

func (x *DelBackupAvatarTeamReq) GetBackupAvatarTeamId() uint32 {
	if x != nil {
		return x.BackupAvatarTeamId
	}
	return 0
}

type DelBackupAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamId uint32 `protobuf:"varint,15,opt,name=backup_avatar_team_id,json=backupAvatarTeamId,proto3" json:"backup_avatar_team_id,omitempty"`
	Retcode            int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *DelBackupAvatarTeamRsp) Reset() {
	*x = DelBackupAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBackupAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBackupAvatarTeamRsp) ProtoMessage() {}

func (x *DelBackupAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBackupAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*DelBackupAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{65}
}

func (x *DelBackupAvatarTeamRsp) GetBackupAvatarTeamId() uint32 {
	if x != nil {
		return x.BackupAvatarTeamId
	}
	return 0
}

func (x *DelBackupAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarTeamAllDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TempAvatarGuidList        []uint64               `protobuf:"varint,6,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
	AvatarTeamMap             map[uint32]*AvatarTeam `protobuf:"bytes,3,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackupAvatarTeamOrderList []uint32               `protobuf:"varint,1,rep,packed,name=backup_avatar_team_order_list,json=backupAvatarTeamOrderList,proto3" json:"backup_avatar_team_order_list,omitempty"`
}

func (x *AvatarTeamAllDataNotify) Reset() {
	*x = AvatarTeamAllDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeamAllDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeamAllDataNotify) ProtoMessage() {}

func (x *AvatarTeamAllDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeamAllDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarTeamAllDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{66}
}

func (x *AvatarTeamAllDataNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

func (x *AvatarTeamAllDataNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarTeamAllDataNotify) GetBackupAvatarTeamOrderList() []uint32 {
	if x != nil {
		return x.BackupAvatarTeamOrderList
	}
	return nil
}

type AvatarRenameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarName string `protobuf:"bytes,3,opt,name=avatar_name,json=avatarName,proto3" json:"avatar_name,omitempty"`
	AvatarId   uint32 `protobuf:"varint,12,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
}

func (x *AvatarRenameInfo) Reset() {
	*x = AvatarRenameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarRenameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarRenameInfo) ProtoMessage() {}

func (x *AvatarRenameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarRenameInfo.ProtoReflect.Descriptor instead.
func (*AvatarRenameInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{67}
}

func (x *AvatarRenameInfo) GetAvatarName() string {
	if x != nil {
		return x.AvatarName
	}
	return ""
}

func (x *AvatarRenameInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type AvatarRenameInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarRenameList []*AvatarRenameInfo `protobuf:"bytes,8,rep,name=avatar_rename_list,json=avatarRenameList,proto3" json:"avatar_rename_list,omitempty"`
}

func (x *AvatarRenameInfoNotify) Reset() {
	*x = AvatarRenameInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarRenameInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarRenameInfoNotify) ProtoMessage() {}

func (x *AvatarRenameInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarRenameInfoNotify.ProtoReflect.Descriptor instead.
func (*AvatarRenameInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{68}
}

func (x *AvatarRenameInfoNotify) GetAvatarRenameList() []*AvatarRenameInfo {
	if x != nil {
		return x.AvatarRenameList
	}
	return nil
}

type ItemRenameAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenameId   uint32 `protobuf:"varint,2,opt,name=rename_id,json=renameId,proto3" json:"rename_id,omitempty"`
	AvatarName string `protobuf:"bytes,3,opt,name=avatar_name,json=avatarName,proto3" json:"avatar_name,omitempty"`
}

func (x *ItemRenameAvatarReq) Reset() {
	*x = ItemRenameAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRenameAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRenameAvatarReq) ProtoMessage() {}

func (x *ItemRenameAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRenameAvatarReq.ProtoReflect.Descriptor instead.
func (*ItemRenameAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{69}
}

func (x *ItemRenameAvatarReq) GetRenameId() uint32 {
	if x != nil {
		return x.RenameId
	}
	return 0
}

func (x *ItemRenameAvatarReq) GetAvatarName() string {
	if x != nil {
		return x.AvatarName
	}
	return ""
}

type ItemRenameAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenameId uint32 `protobuf:"varint,15,opt,name=rename_id,json=renameId,proto3" json:"rename_id,omitempty"`
	CdTime   uint32 `protobuf:"varint,2,opt,name=cd_time,json=cdTime,proto3" json:"cd_time,omitempty"`
	Retcode  int32  `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ItemRenameAvatarRsp) Reset() {
	*x = ItemRenameAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRenameAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRenameAvatarRsp) ProtoMessage() {}

func (x *ItemRenameAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRenameAvatarRsp.ProtoReflect.Descriptor instead.
func (*ItemRenameAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{70}
}

func (x *ItemRenameAvatarRsp) GetRenameId() uint32 {
	if x != nil {
		return x.RenameId
	}
	return 0
}

func (x *ItemRenameAvatarRsp) GetCdTime() uint32 {
	if x != nil {
		return x.CdTime
	}
	return 0
}

func (x *ItemRenameAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

var File_cmd_cmd_avatar_proto protoreflect.FileDescriptor

var file_cmd_cmd_avatar_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0f, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x69, 0x6e, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x55, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x47, 0x75, 0x69, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x70, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x68, 0x6f,
	0x6f, 0x73, 0x65, 0x43, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x16,
	0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x83, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x22, 0x61, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x0c, 0x53, 0x70, 0x72, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x22, 0xd7, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x5d, 0x0a, 0x10, 0x68, 0x70, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x2e,
	0x48, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x68, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x40, 0x0a, 0x12, 0x48,
	0x70, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa, 0x01,
	0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x61, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x53, 0x0a, 0x12, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x04, 0x0a, 0x10, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x40, 0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x19, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x77, 0x6e, 0x65, 0x64,
	0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x43,
	0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x1a, 0x53, 0x0a, 0x12,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x62, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xc5, 0x03, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x59, 0x0a, 0x12, 0x6f, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x4f, 0x6c, 0x64, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x6f, 0x6c, 0x64, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x63, 0x75, 0x72,
	0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x43,
	0x75, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x47, 0x75, 0x69, 0x64, 0x1a, 0x42, 0x0a, 0x14, 0x4f, 0x6c, 0x64, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x43, 0x75, 0x72,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a,
	0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x69, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x62,
	0x6f, 0x72, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x72, 0x65,
	0x62, 0x6f, 0x72, 0x6e, 0x50, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x65, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x6a, 0x0a,
	0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x69, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x69, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x64, 0x69, 0x65, 0x47, 0x75, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x1a, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x58,
	0x0a, 0x0f, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x59, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x68, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x61, 0x0a, 0x16,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1c, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x22, 0xeb, 0x02,
	0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x14,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x6e,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x68,
	0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x45,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x18, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x78, 0x70, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xff, 0x01, 0x0a,
	0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16, 0x45,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e,
	0x0a, 0x1b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x85,
	0x02, 0x0a, 0x1b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x69,
	0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x1c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0xf0, 0x02, 0x0a, 0x1c, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x6a, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xac, 0x06, 0x0a, 0x0f,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x4b, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18,
	0x98, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x6e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x15,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x13, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x14,
	0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x3b, 0x0a,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x15, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x4b, 0x0a, 0x16, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x13, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x49, 0x6e, 0x4d, 0x70, 0x22, 0x4c, 0x0a, 0x0e, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x0e, 0x46, 0x6f, 0x63, 0x75,
	0x73, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x22, 0x87, 0x01, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x61, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x19, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x61, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x53, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x11, 0x73, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x57, 0x65, 0x61,
	0x72, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64, 0x22, 0x73,
	0x0a, 0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x57, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x79, 0x63,
	0x6c, 0x6f, 0x61, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c,
	0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c,
	0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6c, 0x79,
	0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x61, 0x69,
	0x6e, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64,
	0x22, 0x85, 0x01, 0x0a, 0x1b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x41, 0x66, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x45, 0x0a, 0x10, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41,
	0x66, 0x66, 0x69, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x41,
	0x66, 0x66, 0x69, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x68, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x47, 0x61, 0x63,
	0x68, 0x61, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65,
	0x77, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22, 0xc9,
	0x02, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x55, 0x0a,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x19, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x98, 0x01,
	0x0a, 0x19, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x58, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x72, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x19, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x17,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22,
	0x71, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e,
	0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x7d, 0x0a, 0x20, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x31,
	0x0a, 0x15, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x97, 0x01, 0x0a, 0x20, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xbe, 0x02,
	0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65, 0x6d,
	0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x0f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x19,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x53, 0x0a, 0x12, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50,
	0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x53, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76,
	0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_avatar_proto_rawDescOnce sync.Once
	file_cmd_cmd_avatar_proto_rawDescData = file_cmd_cmd_avatar_proto_rawDesc
)

func file_cmd_cmd_avatar_proto_rawDescGZIP() []byte {
	file_cmd_cmd_avatar_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_avatar_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_avatar_proto_rawDescData)
	})
	return file_cmd_cmd_avatar_proto_rawDescData
}

var file_cmd_cmd_avatar_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_cmd_cmd_avatar_proto_goTypes = []interface{}{
	(*AvatarAddNotify)(nil),                  // 0: proto.AvatarAddNotify
	(*AvatarDelNotify)(nil),                  // 1: proto.AvatarDelNotify
	(*AvatarTeam)(nil),                       // 2: proto.AvatarTeam
	(*SetUpAvatarTeamReq)(nil),               // 3: proto.SetUpAvatarTeamReq
	(*SetUpAvatarTeamRsp)(nil),               // 4: proto.SetUpAvatarTeamRsp
	(*ChooseCurAvatarTeamReq)(nil),           // 5: proto.ChooseCurAvatarTeamReq
	(*ChooseCurAvatarTeamRsp)(nil),           // 6: proto.ChooseCurAvatarTeamRsp
	(*ChangeAvatarReq)(nil),                  // 7: proto.ChangeAvatarReq
	(*ChangeAvatarRsp)(nil),                  // 8: proto.ChangeAvatarRsp
	(*AvatarPromoteReq)(nil),                 // 9: proto.AvatarPromoteReq
	(*AvatarPromoteRsp)(nil),                 // 10: proto.AvatarPromoteRsp
	(*SpringUseReq)(nil),                     // 11: proto.SpringUseReq
	(*SpringUseRsp)(nil),                     // 12: proto.SpringUseRsp
	(*RefreshBackgroundAvatarReq)(nil),       // 13: proto.RefreshBackgroundAvatarReq
	(*RefreshBackgroundAvatarRsp)(nil),       // 14: proto.RefreshBackgroundAvatarRsp
	(*AvatarTeamUpdateNotify)(nil),           // 15: proto.AvatarTeamUpdateNotify
	(*AvatarDataNotify)(nil),                 // 16: proto.AvatarDataNotify
	(*AvatarUpgradeReq)(nil),                 // 17: proto.AvatarUpgradeReq
	(*AvatarUpgradeRsp)(nil),                 // 18: proto.AvatarUpgradeRsp
	(*AvatarDieAnimationEndReq)(nil),         // 19: proto.AvatarDieAnimationEndReq
	(*AvatarDieAnimationEndRsp)(nil),         // 20: proto.AvatarDieAnimationEndRsp
	(*AvatarChangeElementTypeReq)(nil),       // 21: proto.AvatarChangeElementTypeReq
	(*AvatarChangeElementTypeRsp)(nil),       // 22: proto.AvatarChangeElementTypeRsp
	(*AvatarFetterDataNotify)(nil),           // 23: proto.AvatarFetterDataNotify
	(*AvatarExpeditionDataNotify)(nil),       // 24: proto.AvatarExpeditionDataNotify
	(*AvatarExpeditionAllDataReq)(nil),       // 25: proto.AvatarExpeditionAllDataReq
	(*AvatarExpeditionAllDataRsp)(nil),       // 26: proto.AvatarExpeditionAllDataRsp
	(*AvatarExpeditionStartReq)(nil),         // 27: proto.AvatarExpeditionStartReq
	(*AvatarExpeditionStartRsp)(nil),         // 28: proto.AvatarExpeditionStartRsp
	(*AvatarExpeditionCallBackReq)(nil),      // 29: proto.AvatarExpeditionCallBackReq
	(*AvatarExpeditionCallBackRsp)(nil),      // 30: proto.AvatarExpeditionCallBackRsp
	(*AvatarExpeditionGetRewardReq)(nil),     // 31: proto.AvatarExpeditionGetRewardReq
	(*AvatarExpeditionGetRewardRsp)(nil),     // 32: proto.AvatarExpeditionGetRewardRsp
	(*ChangeMpTeamAvatarReq)(nil),            // 33: proto.ChangeMpTeamAvatarReq
	(*ChangeMpTeamAvatarRsp)(nil),            // 34: proto.ChangeMpTeamAvatarRsp
	(*ChangeTeamNameReq)(nil),                // 35: proto.ChangeTeamNameReq
	(*ChangeTeamNameRsp)(nil),                // 36: proto.ChangeTeamNameRsp
	(*SceneTeamAvatar)(nil),                  // 37: proto.SceneTeamAvatar
	(*SceneTeamUpdateNotify)(nil),            // 38: proto.SceneTeamUpdateNotify
	(*FocusAvatarReq)(nil),                   // 39: proto.FocusAvatarReq
	(*FocusAvatarRsp)(nil),                   // 40: proto.FocusAvatarRsp
	(*AvatarSatiationData)(nil),              // 41: proto.AvatarSatiationData
	(*AvatarSatiationDataNotify)(nil),        // 42: proto.AvatarSatiationDataNotify
	(*AvatarWearFlycloakReq)(nil),            // 43: proto.AvatarWearFlycloakReq
	(*AvatarWearFlycloakRsp)(nil),            // 44: proto.AvatarWearFlycloakRsp
	(*AvatarFlycloakChangeNotify)(nil),       // 45: proto.AvatarFlycloakChangeNotify
	(*AvatarGainFlycloakNotify)(nil),         // 46: proto.AvatarGainFlycloakNotify
	(*AvatarEquipAffixStartNotify)(nil),      // 47: proto.AvatarEquipAffixStartNotify
	(*AvatarFetterLevelRewardReq)(nil),       // 48: proto.AvatarFetterLevelRewardReq
	(*AvatarFetterLevelRewardRsp)(nil),       // 49: proto.AvatarFetterLevelRewardRsp
	(*AddNoGachaAvatarCardTransferItem)(nil), // 50: proto.AddNoGachaAvatarCardTransferItem
	(*AddNoGachaAvatarCardNotify)(nil),       // 51: proto.AddNoGachaAvatarCardNotify
	(*AvatarPromoteGetRewardReq)(nil),        // 52: proto.AvatarPromoteGetRewardReq
	(*AvatarPromoteGetRewardRsp)(nil),        // 53: proto.AvatarPromoteGetRewardRsp
	(*AvatarChangeCostumeReq)(nil),           // 54: proto.AvatarChangeCostumeReq
	(*AvatarChangeCostumeRsp)(nil),           // 55: proto.AvatarChangeCostumeRsp
	(*AvatarChangeCostumeNotify)(nil),        // 56: proto.AvatarChangeCostumeNotify
	(*AvatarGainCostumeNotify)(nil),          // 57: proto.AvatarGainCostumeNotify
	(*AvatarChangeAnimHashReq)(nil),          // 58: proto.AvatarChangeAnimHashReq
	(*AvatarChangeAnimHashRsp)(nil),          // 59: proto.AvatarChangeAnimHashRsp
	(*PersistentDungeonSwitchAvatarReq)(nil), // 60: proto.PersistentDungeonSwitchAvatarReq
	(*PersistentDungeonSwitchAvatarRsp)(nil), // 61: proto.PersistentDungeonSwitchAvatarRsp
	(*AddBackupAvatarTeamReq)(nil),           // 62: proto.AddBackupAvatarTeamReq
	(*AddBackupAvatarTeamRsp)(nil),           // 63: proto.AddBackupAvatarTeamRsp
	(*DelBackupAvatarTeamReq)(nil),           // 64: proto.DelBackupAvatarTeamReq
	(*DelBackupAvatarTeamRsp)(nil),           // 65: proto.DelBackupAvatarTeamRsp
	(*AvatarTeamAllDataNotify)(nil),          // 66: proto.AvatarTeamAllDataNotify
	(*AvatarRenameInfo)(nil),                 // 67: proto.AvatarRenameInfo
	(*AvatarRenameInfoNotify)(nil),           // 68: proto.AvatarRenameInfoNotify
	(*ItemRenameAvatarReq)(nil),              // 69: proto.ItemRenameAvatarReq
	(*ItemRenameAvatarRsp)(nil),              // 70: proto.ItemRenameAvatarRsp
	nil,                                      // 71: proto.RefreshBackgroundAvatarRsp.HpFullTimeMapEntry
	nil,                                      // 72: proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry
	nil,                                      // 73: proto.AvatarDataNotify.AvatarTeamMapEntry
	nil,                                      // 74: proto.AvatarUpgradeRsp.OldFightPropMapEntry
	nil,                                      // 75: proto.AvatarUpgradeRsp.CurFightPropMapEntry
	nil,                                      // 76: proto.AvatarFetterDataNotify.FetterInfoMapEntry
	nil,                                      // 77: proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry
	nil,                                      // 78: proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry
	nil,                                      // 79: proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry
	nil,                                      // 80: proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry
	nil,                                      // 81: proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry
	nil,                                      // 82: proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry
	(*AvatarInfo)(nil),                       // 83: proto.AvatarInfo
	(*Vector)(nil),                           // 84: proto.Vector
	(*ItemParam)(nil),                        // 85: proto.ItemParam
	(*AbilitySyncStateInfo)(nil),             // 86: proto.AbilitySyncStateInfo
	(*SceneAvatarInfo)(nil),                  // 87: proto.SceneAvatarInfo
	(*SceneEntityInfo)(nil),                  // 88: proto.SceneEntityInfo
	(*AbilityControlBlock)(nil),              // 89: proto.AbilityControlBlock
	(*ServerBuff)(nil),                       // 90: proto.ServerBuff
	(*AvatarEquipAffixInfo)(nil),             // 91: proto.AvatarEquipAffixInfo
	(*AvatarFetterInfo)(nil),                 // 92: proto.AvatarFetterInfo
	(*AvatarExpeditionInfo)(nil),             // 93: proto.AvatarExpeditionInfo
}
var file_cmd_cmd_avatar_proto_depIdxs = []int32{
	83, // 0: proto.AvatarAddNotify.avatar:type_name -> proto.AvatarInfo
	84, // 1: proto.ChangeAvatarReq.move_pos:type_name -> proto.Vector
	71, // 2: proto.RefreshBackgroundAvatarRsp.hp_full_time_map:type_name -> proto.RefreshBackgroundAvatarRsp.HpFullTimeMapEntry
	72, // 3: proto.AvatarTeamUpdateNotify.avatar_team_map:type_name -> proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry
	83, // 4: proto.AvatarDataNotify.avatar_list:type_name -> proto.AvatarInfo
	67, // 5: proto.AvatarDataNotify.avatar_rename_list:type_name -> proto.AvatarRenameInfo
	73, // 6: proto.AvatarDataNotify.avatar_team_map:type_name -> proto.AvatarDataNotify.AvatarTeamMapEntry
	74, // 7: proto.AvatarUpgradeRsp.old_fight_prop_map:type_name -> proto.AvatarUpgradeRsp.OldFightPropMapEntry
	75, // 8: proto.AvatarUpgradeRsp.cur_fight_prop_map:type_name -> proto.AvatarUpgradeRsp.CurFightPropMapEntry
	84, // 9: proto.AvatarDieAnimationEndReq.reborn_pos:type_name -> proto.Vector
	76, // 10: proto.AvatarFetterDataNotify.fetter_info_map:type_name -> proto.AvatarFetterDataNotify.FetterInfoMapEntry
	77, // 11: proto.AvatarExpeditionDataNotify.expedition_info_map:type_name -> proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry
	78, // 12: proto.AvatarExpeditionAllDataRsp.expedition_info_map:type_name -> proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry
	79, // 13: proto.AvatarExpeditionStartRsp.expedition_info_map:type_name -> proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry
	80, // 14: proto.AvatarExpeditionCallBackRsp.expedition_info_map:type_name -> proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry
	85, // 15: proto.AvatarExpeditionGetRewardRsp.extra_item_list:type_name -> proto.ItemParam
	85, // 16: proto.AvatarExpeditionGetRewardRsp.item_list:type_name -> proto.ItemParam
	81, // 17: proto.AvatarExpeditionGetRewardRsp.expedition_info_map:type_name -> proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry
	86, // 18: proto.SceneTeamAvatar.avatar_ability_info:type_name -> proto.AbilitySyncStateInfo
	83, // 19: proto.SceneTeamAvatar.avatar_info:type_name -> proto.AvatarInfo
	87, // 20: proto.SceneTeamAvatar.scene_avatar_info:type_name -> proto.SceneAvatarInfo
	86, // 21: proto.SceneTeamAvatar.weapon_ability_info:type_name -> proto.AbilitySyncStateInfo
	88, // 22: proto.SceneTeamAvatar.scene_entity_info:type_name -> proto.SceneEntityInfo
	89, // 23: proto.SceneTeamAvatar.ability_control_block:type_name -> proto.AbilityControlBlock
	90, // 24: proto.SceneTeamAvatar.server_buff_list:type_name -> proto.ServerBuff
	37, // 25: proto.SceneTeamUpdateNotify.scene_team_avatar_list:type_name -> proto.SceneTeamAvatar
	41, // 26: proto.AvatarSatiationDataNotify.satiation_data_list:type_name -> proto.AvatarSatiationData
	91, // 27: proto.AvatarEquipAffixStartNotify.equip_affix_info:type_name -> proto.AvatarEquipAffixInfo
	50, // 28: proto.AddNoGachaAvatarCardNotify.transfer_item_list:type_name -> proto.AddNoGachaAvatarCardTransferItem
	88, // 29: proto.AvatarChangeCostumeNotify.entity_info:type_name -> proto.SceneEntityInfo
	82, // 30: proto.AvatarTeamAllDataNotify.avatar_team_map:type_name -> proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry
	67, // 31: proto.AvatarRenameInfoNotify.avatar_rename_list:type_name -> proto.AvatarRenameInfo
	2,  // 32: proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	2,  // 33: proto.AvatarDataNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	92, // 34: proto.AvatarFetterDataNotify.FetterInfoMapEntry.value:type_name -> proto.AvatarFetterInfo
	93, // 35: proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	93, // 36: proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	93, // 37: proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	93, // 38: proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	93, // 39: proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	2,  // 40: proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_cmd_cmd_avatar_proto_init() }
func file_cmd_cmd_avatar_proto_init() {
	if File_cmd_cmd_avatar_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_avatar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarAddNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseCurAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseCurAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpringUseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpringUseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshBackgroundAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshBackgroundAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeamUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDieAnimationEndReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDieAnimationEndRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeElementTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeElementTypeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionAllDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionAllDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionStartRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionCallBackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionCallBackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMpTeamAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMpTeamAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeamNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeamNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTeamAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTeamUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSatiationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSatiationDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarWearFlycloakReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarWearFlycloakRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFlycloakChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarGainFlycloakNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarEquipAffixStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterLevelRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterLevelRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoGachaAvatarCardTransferItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoGachaAvatarCardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarGainCostumeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeAnimHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeAnimHashRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistentDungeonSwitchAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistentDungeonSwitchAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBackupAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBackupAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBackupAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBackupAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeamAllDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarRenameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarRenameInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRenameAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRenameAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_avatar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_avatar_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_avatar_proto_depIdxs,
		MessageInfos:      file_cmd_cmd_avatar_proto_msgTypes,
	}.Build()
	File_cmd_cmd_avatar_proto = out.File
	file_cmd_cmd_avatar_proto_rawDesc = nil
	file_cmd_cmd_avatar_proto_goTypes = nil
	file_cmd_cmd_avatar_proto_depIdxs = nil
}
