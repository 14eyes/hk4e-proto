// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cmd/cmd_avatar.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvatarAddNotify_CmdId int32

const (
	AvatarAddNotify_NONE             AvatarAddNotify_CmdId = 0
	AvatarAddNotify_CMD_ID           AvatarAddNotify_CmdId = 1769
	AvatarAddNotify_ENET_CHANNEL_ID  AvatarAddNotify_CmdId = 0
	AvatarAddNotify_ENET_IS_RELIABLE AvatarAddNotify_CmdId = 1
)

// Enum value maps for AvatarAddNotify_CmdId.
var (
	AvatarAddNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1769: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarAddNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1769,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarAddNotify_CmdId) Enum() *AvatarAddNotify_CmdId {
	p := new(AvatarAddNotify_CmdId)
	*p = x
	return p
}

func (x AvatarAddNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarAddNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[0].Descriptor()
}

func (AvatarAddNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[0]
}

func (x AvatarAddNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarAddNotify_CmdId.Descriptor instead.
func (AvatarAddNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{0, 0}
}

type AvatarDelNotify_CmdId int32

const (
	AvatarDelNotify_NONE             AvatarDelNotify_CmdId = 0
	AvatarDelNotify_CMD_ID           AvatarDelNotify_CmdId = 1773
	AvatarDelNotify_ENET_CHANNEL_ID  AvatarDelNotify_CmdId = 0
	AvatarDelNotify_ENET_IS_RELIABLE AvatarDelNotify_CmdId = 1
)

// Enum value maps for AvatarDelNotify_CmdId.
var (
	AvatarDelNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1773: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarDelNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1773,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarDelNotify_CmdId) Enum() *AvatarDelNotify_CmdId {
	p := new(AvatarDelNotify_CmdId)
	*p = x
	return p
}

func (x AvatarDelNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarDelNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[1].Descriptor()
}

func (AvatarDelNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[1]
}

func (x AvatarDelNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarDelNotify_CmdId.Descriptor instead.
func (AvatarDelNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{1, 0}
}

type SetUpAvatarTeamReq_CmdId int32

const (
	SetUpAvatarTeamReq_NONE             SetUpAvatarTeamReq_CmdId = 0
	SetUpAvatarTeamReq_CMD_ID           SetUpAvatarTeamReq_CmdId = 1690
	SetUpAvatarTeamReq_ENET_CHANNEL_ID  SetUpAvatarTeamReq_CmdId = 0
	SetUpAvatarTeamReq_ENET_IS_RELIABLE SetUpAvatarTeamReq_CmdId = 1
	SetUpAvatarTeamReq_IS_ALLOW_CLIENT  SetUpAvatarTeamReq_CmdId = 1
)

// Enum value maps for SetUpAvatarTeamReq_CmdId.
var (
	SetUpAvatarTeamReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1690: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SetUpAvatarTeamReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1690,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SetUpAvatarTeamReq_CmdId) Enum() *SetUpAvatarTeamReq_CmdId {
	p := new(SetUpAvatarTeamReq_CmdId)
	*p = x
	return p
}

func (x SetUpAvatarTeamReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetUpAvatarTeamReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[2].Descriptor()
}

func (SetUpAvatarTeamReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[2]
}

func (x SetUpAvatarTeamReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetUpAvatarTeamReq_CmdId.Descriptor instead.
func (SetUpAvatarTeamReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{3, 0}
}

type SetUpAvatarTeamRsp_CmdId int32

const (
	SetUpAvatarTeamRsp_NONE             SetUpAvatarTeamRsp_CmdId = 0
	SetUpAvatarTeamRsp_CMD_ID           SetUpAvatarTeamRsp_CmdId = 1646
	SetUpAvatarTeamRsp_ENET_CHANNEL_ID  SetUpAvatarTeamRsp_CmdId = 0
	SetUpAvatarTeamRsp_ENET_IS_RELIABLE SetUpAvatarTeamRsp_CmdId = 1
)

// Enum value maps for SetUpAvatarTeamRsp_CmdId.
var (
	SetUpAvatarTeamRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1646: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SetUpAvatarTeamRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1646,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SetUpAvatarTeamRsp_CmdId) Enum() *SetUpAvatarTeamRsp_CmdId {
	p := new(SetUpAvatarTeamRsp_CmdId)
	*p = x
	return p
}

func (x SetUpAvatarTeamRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetUpAvatarTeamRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[3].Descriptor()
}

func (SetUpAvatarTeamRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[3]
}

func (x SetUpAvatarTeamRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetUpAvatarTeamRsp_CmdId.Descriptor instead.
func (SetUpAvatarTeamRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{4, 0}
}

type ChooseCurAvatarTeamReq_CmdId int32

const (
	ChooseCurAvatarTeamReq_NONE             ChooseCurAvatarTeamReq_CmdId = 0
	ChooseCurAvatarTeamReq_CMD_ID           ChooseCurAvatarTeamReq_CmdId = 1796
	ChooseCurAvatarTeamReq_ENET_CHANNEL_ID  ChooseCurAvatarTeamReq_CmdId = 0
	ChooseCurAvatarTeamReq_ENET_IS_RELIABLE ChooseCurAvatarTeamReq_CmdId = 1
	ChooseCurAvatarTeamReq_IS_ALLOW_CLIENT  ChooseCurAvatarTeamReq_CmdId = 1
)

// Enum value maps for ChooseCurAvatarTeamReq_CmdId.
var (
	ChooseCurAvatarTeamReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1796: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ChooseCurAvatarTeamReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1796,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ChooseCurAvatarTeamReq_CmdId) Enum() *ChooseCurAvatarTeamReq_CmdId {
	p := new(ChooseCurAvatarTeamReq_CmdId)
	*p = x
	return p
}

func (x ChooseCurAvatarTeamReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChooseCurAvatarTeamReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[4].Descriptor()
}

func (ChooseCurAvatarTeamReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[4]
}

func (x ChooseCurAvatarTeamReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChooseCurAvatarTeamReq_CmdId.Descriptor instead.
func (ChooseCurAvatarTeamReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{5, 0}
}

type ChooseCurAvatarTeamRsp_CmdId int32

const (
	ChooseCurAvatarTeamRsp_NONE             ChooseCurAvatarTeamRsp_CmdId = 0
	ChooseCurAvatarTeamRsp_CMD_ID           ChooseCurAvatarTeamRsp_CmdId = 1661
	ChooseCurAvatarTeamRsp_ENET_CHANNEL_ID  ChooseCurAvatarTeamRsp_CmdId = 0
	ChooseCurAvatarTeamRsp_ENET_IS_RELIABLE ChooseCurAvatarTeamRsp_CmdId = 1
)

// Enum value maps for ChooseCurAvatarTeamRsp_CmdId.
var (
	ChooseCurAvatarTeamRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1661: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ChooseCurAvatarTeamRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1661,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ChooseCurAvatarTeamRsp_CmdId) Enum() *ChooseCurAvatarTeamRsp_CmdId {
	p := new(ChooseCurAvatarTeamRsp_CmdId)
	*p = x
	return p
}

func (x ChooseCurAvatarTeamRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChooseCurAvatarTeamRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[5].Descriptor()
}

func (ChooseCurAvatarTeamRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[5]
}

func (x ChooseCurAvatarTeamRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChooseCurAvatarTeamRsp_CmdId.Descriptor instead.
func (ChooseCurAvatarTeamRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{6, 0}
}

type ChangeAvatarReq_CmdId int32

const (
	ChangeAvatarReq_NONE             ChangeAvatarReq_CmdId = 0
	ChangeAvatarReq_CMD_ID           ChangeAvatarReq_CmdId = 1640
	ChangeAvatarReq_ENET_CHANNEL_ID  ChangeAvatarReq_CmdId = 0
	ChangeAvatarReq_ENET_IS_RELIABLE ChangeAvatarReq_CmdId = 1
	ChangeAvatarReq_IS_ALLOW_CLIENT  ChangeAvatarReq_CmdId = 1
)

// Enum value maps for ChangeAvatarReq_CmdId.
var (
	ChangeAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1640: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ChangeAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1640,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ChangeAvatarReq_CmdId) Enum() *ChangeAvatarReq_CmdId {
	p := new(ChangeAvatarReq_CmdId)
	*p = x
	return p
}

func (x ChangeAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[6].Descriptor()
}

func (ChangeAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[6]
}

func (x ChangeAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeAvatarReq_CmdId.Descriptor instead.
func (ChangeAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{7, 0}
}

type ChangeAvatarRsp_CmdId int32

const (
	ChangeAvatarRsp_NONE             ChangeAvatarRsp_CmdId = 0
	ChangeAvatarRsp_CMD_ID           ChangeAvatarRsp_CmdId = 1607
	ChangeAvatarRsp_ENET_CHANNEL_ID  ChangeAvatarRsp_CmdId = 0
	ChangeAvatarRsp_ENET_IS_RELIABLE ChangeAvatarRsp_CmdId = 1
)

// Enum value maps for ChangeAvatarRsp_CmdId.
var (
	ChangeAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1607: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ChangeAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1607,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ChangeAvatarRsp_CmdId) Enum() *ChangeAvatarRsp_CmdId {
	p := new(ChangeAvatarRsp_CmdId)
	*p = x
	return p
}

func (x ChangeAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[7].Descriptor()
}

func (ChangeAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[7]
}

func (x ChangeAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeAvatarRsp_CmdId.Descriptor instead.
func (ChangeAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{8, 0}
}

type AvatarPromoteReq_CmdId int32

const (
	AvatarPromoteReq_NONE             AvatarPromoteReq_CmdId = 0
	AvatarPromoteReq_CMD_ID           AvatarPromoteReq_CmdId = 1664
	AvatarPromoteReq_ENET_CHANNEL_ID  AvatarPromoteReq_CmdId = 0
	AvatarPromoteReq_ENET_IS_RELIABLE AvatarPromoteReq_CmdId = 1
	AvatarPromoteReq_IS_ALLOW_CLIENT  AvatarPromoteReq_CmdId = 1
)

// Enum value maps for AvatarPromoteReq_CmdId.
var (
	AvatarPromoteReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1664: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarPromoteReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1664,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarPromoteReq_CmdId) Enum() *AvatarPromoteReq_CmdId {
	p := new(AvatarPromoteReq_CmdId)
	*p = x
	return p
}

func (x AvatarPromoteReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarPromoteReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[8].Descriptor()
}

func (AvatarPromoteReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[8]
}

func (x AvatarPromoteReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarPromoteReq_CmdId.Descriptor instead.
func (AvatarPromoteReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{9, 0}
}

type AvatarPromoteRsp_CmdId int32

const (
	AvatarPromoteRsp_NONE             AvatarPromoteRsp_CmdId = 0
	AvatarPromoteRsp_CMD_ID           AvatarPromoteRsp_CmdId = 1639
	AvatarPromoteRsp_ENET_CHANNEL_ID  AvatarPromoteRsp_CmdId = 0
	AvatarPromoteRsp_ENET_IS_RELIABLE AvatarPromoteRsp_CmdId = 1
)

// Enum value maps for AvatarPromoteRsp_CmdId.
var (
	AvatarPromoteRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1639: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarPromoteRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1639,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarPromoteRsp_CmdId) Enum() *AvatarPromoteRsp_CmdId {
	p := new(AvatarPromoteRsp_CmdId)
	*p = x
	return p
}

func (x AvatarPromoteRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarPromoteRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[9].Descriptor()
}

func (AvatarPromoteRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[9]
}

func (x AvatarPromoteRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarPromoteRsp_CmdId.Descriptor instead.
func (AvatarPromoteRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{10, 0}
}

type SpringUseReq_CmdId int32

const (
	SpringUseReq_NONE             SpringUseReq_CmdId = 0
	SpringUseReq_CMD_ID           SpringUseReq_CmdId = 1748
	SpringUseReq_ENET_CHANNEL_ID  SpringUseReq_CmdId = 0
	SpringUseReq_ENET_IS_RELIABLE SpringUseReq_CmdId = 1
	SpringUseReq_IS_ALLOW_CLIENT  SpringUseReq_CmdId = 1
)

// Enum value maps for SpringUseReq_CmdId.
var (
	SpringUseReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1748: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	SpringUseReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1748,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x SpringUseReq_CmdId) Enum() *SpringUseReq_CmdId {
	p := new(SpringUseReq_CmdId)
	*p = x
	return p
}

func (x SpringUseReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpringUseReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[10].Descriptor()
}

func (SpringUseReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[10]
}

func (x SpringUseReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpringUseReq_CmdId.Descriptor instead.
func (SpringUseReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{11, 0}
}

type SpringUseRsp_CmdId int32

const (
	SpringUseRsp_NONE             SpringUseRsp_CmdId = 0
	SpringUseRsp_CMD_ID           SpringUseRsp_CmdId = 1642
	SpringUseRsp_ENET_CHANNEL_ID  SpringUseRsp_CmdId = 0
	SpringUseRsp_ENET_IS_RELIABLE SpringUseRsp_CmdId = 1
)

// Enum value maps for SpringUseRsp_CmdId.
var (
	SpringUseRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1642: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SpringUseRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1642,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SpringUseRsp_CmdId) Enum() *SpringUseRsp_CmdId {
	p := new(SpringUseRsp_CmdId)
	*p = x
	return p
}

func (x SpringUseRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpringUseRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[11].Descriptor()
}

func (SpringUseRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[11]
}

func (x SpringUseRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpringUseRsp_CmdId.Descriptor instead.
func (SpringUseRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{12, 0}
}

type RefreshBackgroundAvatarReq_CmdId int32

const (
	RefreshBackgroundAvatarReq_NONE             RefreshBackgroundAvatarReq_CmdId = 0
	RefreshBackgroundAvatarReq_CMD_ID           RefreshBackgroundAvatarReq_CmdId = 1743
	RefreshBackgroundAvatarReq_ENET_CHANNEL_ID  RefreshBackgroundAvatarReq_CmdId = 0
	RefreshBackgroundAvatarReq_ENET_IS_RELIABLE RefreshBackgroundAvatarReq_CmdId = 1
	RefreshBackgroundAvatarReq_IS_ALLOW_CLIENT  RefreshBackgroundAvatarReq_CmdId = 1
)

// Enum value maps for RefreshBackgroundAvatarReq_CmdId.
var (
	RefreshBackgroundAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1743: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	RefreshBackgroundAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1743,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x RefreshBackgroundAvatarReq_CmdId) Enum() *RefreshBackgroundAvatarReq_CmdId {
	p := new(RefreshBackgroundAvatarReq_CmdId)
	*p = x
	return p
}

func (x RefreshBackgroundAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshBackgroundAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[12].Descriptor()
}

func (RefreshBackgroundAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[12]
}

func (x RefreshBackgroundAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshBackgroundAvatarReq_CmdId.Descriptor instead.
func (RefreshBackgroundAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{13, 0}
}

type RefreshBackgroundAvatarRsp_CmdId int32

const (
	RefreshBackgroundAvatarRsp_NONE             RefreshBackgroundAvatarRsp_CmdId = 0
	RefreshBackgroundAvatarRsp_CMD_ID           RefreshBackgroundAvatarRsp_CmdId = 1800
	RefreshBackgroundAvatarRsp_ENET_CHANNEL_ID  RefreshBackgroundAvatarRsp_CmdId = 0
	RefreshBackgroundAvatarRsp_ENET_IS_RELIABLE RefreshBackgroundAvatarRsp_CmdId = 1
)

// Enum value maps for RefreshBackgroundAvatarRsp_CmdId.
var (
	RefreshBackgroundAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1800: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	RefreshBackgroundAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1800,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x RefreshBackgroundAvatarRsp_CmdId) Enum() *RefreshBackgroundAvatarRsp_CmdId {
	p := new(RefreshBackgroundAvatarRsp_CmdId)
	*p = x
	return p
}

func (x RefreshBackgroundAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshBackgroundAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[13].Descriptor()
}

func (RefreshBackgroundAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[13]
}

func (x RefreshBackgroundAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshBackgroundAvatarRsp_CmdId.Descriptor instead.
func (RefreshBackgroundAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{14, 0}
}

type AvatarTeamUpdateNotify_CmdId int32

const (
	AvatarTeamUpdateNotify_NONE             AvatarTeamUpdateNotify_CmdId = 0
	AvatarTeamUpdateNotify_CMD_ID           AvatarTeamUpdateNotify_CmdId = 1706
	AvatarTeamUpdateNotify_ENET_CHANNEL_ID  AvatarTeamUpdateNotify_CmdId = 0
	AvatarTeamUpdateNotify_ENET_IS_RELIABLE AvatarTeamUpdateNotify_CmdId = 1
)

// Enum value maps for AvatarTeamUpdateNotify_CmdId.
var (
	AvatarTeamUpdateNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1706: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarTeamUpdateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1706,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarTeamUpdateNotify_CmdId) Enum() *AvatarTeamUpdateNotify_CmdId {
	p := new(AvatarTeamUpdateNotify_CmdId)
	*p = x
	return p
}

func (x AvatarTeamUpdateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarTeamUpdateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[14].Descriptor()
}

func (AvatarTeamUpdateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[14]
}

func (x AvatarTeamUpdateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarTeamUpdateNotify_CmdId.Descriptor instead.
func (AvatarTeamUpdateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{15, 0}
}

type AvatarDataNotify_CmdId int32

const (
	AvatarDataNotify_NONE             AvatarDataNotify_CmdId = 0
	AvatarDataNotify_CMD_ID           AvatarDataNotify_CmdId = 1633
	AvatarDataNotify_ENET_CHANNEL_ID  AvatarDataNotify_CmdId = 0
	AvatarDataNotify_ENET_IS_RELIABLE AvatarDataNotify_CmdId = 1
)

// Enum value maps for AvatarDataNotify_CmdId.
var (
	AvatarDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1633: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1633,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarDataNotify_CmdId) Enum() *AvatarDataNotify_CmdId {
	p := new(AvatarDataNotify_CmdId)
	*p = x
	return p
}

func (x AvatarDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[15].Descriptor()
}

func (AvatarDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[15]
}

func (x AvatarDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarDataNotify_CmdId.Descriptor instead.
func (AvatarDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{16, 0}
}

type AvatarUpgradeReq_CmdId int32

const (
	AvatarUpgradeReq_NONE             AvatarUpgradeReq_CmdId = 0
	AvatarUpgradeReq_CMD_ID           AvatarUpgradeReq_CmdId = 1770
	AvatarUpgradeReq_ENET_CHANNEL_ID  AvatarUpgradeReq_CmdId = 0
	AvatarUpgradeReq_ENET_IS_RELIABLE AvatarUpgradeReq_CmdId = 1
	AvatarUpgradeReq_IS_ALLOW_CLIENT  AvatarUpgradeReq_CmdId = 1
)

// Enum value maps for AvatarUpgradeReq_CmdId.
var (
	AvatarUpgradeReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1770: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarUpgradeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1770,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarUpgradeReq_CmdId) Enum() *AvatarUpgradeReq_CmdId {
	p := new(AvatarUpgradeReq_CmdId)
	*p = x
	return p
}

func (x AvatarUpgradeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarUpgradeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[16].Descriptor()
}

func (AvatarUpgradeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[16]
}

func (x AvatarUpgradeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarUpgradeReq_CmdId.Descriptor instead.
func (AvatarUpgradeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{17, 0}
}

type AvatarUpgradeRsp_CmdId int32

const (
	AvatarUpgradeRsp_NONE             AvatarUpgradeRsp_CmdId = 0
	AvatarUpgradeRsp_CMD_ID           AvatarUpgradeRsp_CmdId = 1701
	AvatarUpgradeRsp_ENET_CHANNEL_ID  AvatarUpgradeRsp_CmdId = 0
	AvatarUpgradeRsp_ENET_IS_RELIABLE AvatarUpgradeRsp_CmdId = 1
)

// Enum value maps for AvatarUpgradeRsp_CmdId.
var (
	AvatarUpgradeRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1701: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarUpgradeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1701,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarUpgradeRsp_CmdId) Enum() *AvatarUpgradeRsp_CmdId {
	p := new(AvatarUpgradeRsp_CmdId)
	*p = x
	return p
}

func (x AvatarUpgradeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarUpgradeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[17].Descriptor()
}

func (AvatarUpgradeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[17]
}

func (x AvatarUpgradeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarUpgradeRsp_CmdId.Descriptor instead.
func (AvatarUpgradeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{18, 0}
}

type AvatarDieAnimationEndReq_CmdId int32

const (
	AvatarDieAnimationEndReq_NONE             AvatarDieAnimationEndReq_CmdId = 0
	AvatarDieAnimationEndReq_CMD_ID           AvatarDieAnimationEndReq_CmdId = 1610
	AvatarDieAnimationEndReq_ENET_CHANNEL_ID  AvatarDieAnimationEndReq_CmdId = 0
	AvatarDieAnimationEndReq_ENET_IS_RELIABLE AvatarDieAnimationEndReq_CmdId = 1
	AvatarDieAnimationEndReq_IS_ALLOW_CLIENT  AvatarDieAnimationEndReq_CmdId = 1
)

// Enum value maps for AvatarDieAnimationEndReq_CmdId.
var (
	AvatarDieAnimationEndReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1610: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarDieAnimationEndReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1610,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarDieAnimationEndReq_CmdId) Enum() *AvatarDieAnimationEndReq_CmdId {
	p := new(AvatarDieAnimationEndReq_CmdId)
	*p = x
	return p
}

func (x AvatarDieAnimationEndReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarDieAnimationEndReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[18].Descriptor()
}

func (AvatarDieAnimationEndReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[18]
}

func (x AvatarDieAnimationEndReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarDieAnimationEndReq_CmdId.Descriptor instead.
func (AvatarDieAnimationEndReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{19, 0}
}

type AvatarDieAnimationEndRsp_CmdId int32

const (
	AvatarDieAnimationEndRsp_NONE             AvatarDieAnimationEndRsp_CmdId = 0
	AvatarDieAnimationEndRsp_CMD_ID           AvatarDieAnimationEndRsp_CmdId = 1694
	AvatarDieAnimationEndRsp_ENET_CHANNEL_ID  AvatarDieAnimationEndRsp_CmdId = 0
	AvatarDieAnimationEndRsp_ENET_IS_RELIABLE AvatarDieAnimationEndRsp_CmdId = 1
)

// Enum value maps for AvatarDieAnimationEndRsp_CmdId.
var (
	AvatarDieAnimationEndRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1694: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarDieAnimationEndRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1694,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarDieAnimationEndRsp_CmdId) Enum() *AvatarDieAnimationEndRsp_CmdId {
	p := new(AvatarDieAnimationEndRsp_CmdId)
	*p = x
	return p
}

func (x AvatarDieAnimationEndRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarDieAnimationEndRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[19].Descriptor()
}

func (AvatarDieAnimationEndRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[19]
}

func (x AvatarDieAnimationEndRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarDieAnimationEndRsp_CmdId.Descriptor instead.
func (AvatarDieAnimationEndRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{20, 0}
}

type AvatarChangeElementTypeReq_CmdId int32

const (
	AvatarChangeElementTypeReq_NONE             AvatarChangeElementTypeReq_CmdId = 0
	AvatarChangeElementTypeReq_CMD_ID           AvatarChangeElementTypeReq_CmdId = 1785
	AvatarChangeElementTypeReq_ENET_CHANNEL_ID  AvatarChangeElementTypeReq_CmdId = 0
	AvatarChangeElementTypeReq_ENET_IS_RELIABLE AvatarChangeElementTypeReq_CmdId = 1
	AvatarChangeElementTypeReq_IS_ALLOW_CLIENT  AvatarChangeElementTypeReq_CmdId = 1
)

// Enum value maps for AvatarChangeElementTypeReq_CmdId.
var (
	AvatarChangeElementTypeReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1785: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarChangeElementTypeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1785,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarChangeElementTypeReq_CmdId) Enum() *AvatarChangeElementTypeReq_CmdId {
	p := new(AvatarChangeElementTypeReq_CmdId)
	*p = x
	return p
}

func (x AvatarChangeElementTypeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeElementTypeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[20].Descriptor()
}

func (AvatarChangeElementTypeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[20]
}

func (x AvatarChangeElementTypeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeElementTypeReq_CmdId.Descriptor instead.
func (AvatarChangeElementTypeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{21, 0}
}

type AvatarChangeElementTypeRsp_CmdId int32

const (
	AvatarChangeElementTypeRsp_NONE             AvatarChangeElementTypeRsp_CmdId = 0
	AvatarChangeElementTypeRsp_CMD_ID           AvatarChangeElementTypeRsp_CmdId = 1651
	AvatarChangeElementTypeRsp_ENET_CHANNEL_ID  AvatarChangeElementTypeRsp_CmdId = 0
	AvatarChangeElementTypeRsp_ENET_IS_RELIABLE AvatarChangeElementTypeRsp_CmdId = 1
)

// Enum value maps for AvatarChangeElementTypeRsp_CmdId.
var (
	AvatarChangeElementTypeRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1651: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarChangeElementTypeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1651,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarChangeElementTypeRsp_CmdId) Enum() *AvatarChangeElementTypeRsp_CmdId {
	p := new(AvatarChangeElementTypeRsp_CmdId)
	*p = x
	return p
}

func (x AvatarChangeElementTypeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeElementTypeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[21].Descriptor()
}

func (AvatarChangeElementTypeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[21]
}

func (x AvatarChangeElementTypeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeElementTypeRsp_CmdId.Descriptor instead.
func (AvatarChangeElementTypeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{22, 0}
}

type AvatarFetterDataNotify_CmdId int32

const (
	AvatarFetterDataNotify_NONE             AvatarFetterDataNotify_CmdId = 0
	AvatarFetterDataNotify_CMD_ID           AvatarFetterDataNotify_CmdId = 1782
	AvatarFetterDataNotify_ENET_CHANNEL_ID  AvatarFetterDataNotify_CmdId = 0
	AvatarFetterDataNotify_ENET_IS_RELIABLE AvatarFetterDataNotify_CmdId = 1
)

// Enum value maps for AvatarFetterDataNotify_CmdId.
var (
	AvatarFetterDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1782: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarFetterDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1782,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarFetterDataNotify_CmdId) Enum() *AvatarFetterDataNotify_CmdId {
	p := new(AvatarFetterDataNotify_CmdId)
	*p = x
	return p
}

func (x AvatarFetterDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarFetterDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[22].Descriptor()
}

func (AvatarFetterDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[22]
}

func (x AvatarFetterDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarFetterDataNotify_CmdId.Descriptor instead.
func (AvatarFetterDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{23, 0}
}

type AvatarExpeditionDataNotify_CmdId int32

const (
	AvatarExpeditionDataNotify_NONE             AvatarExpeditionDataNotify_CmdId = 0
	AvatarExpeditionDataNotify_CMD_ID           AvatarExpeditionDataNotify_CmdId = 1771
	AvatarExpeditionDataNotify_ENET_CHANNEL_ID  AvatarExpeditionDataNotify_CmdId = 0
	AvatarExpeditionDataNotify_ENET_IS_RELIABLE AvatarExpeditionDataNotify_CmdId = 1
)

// Enum value maps for AvatarExpeditionDataNotify_CmdId.
var (
	AvatarExpeditionDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1771: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarExpeditionDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1771,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarExpeditionDataNotify_CmdId) Enum() *AvatarExpeditionDataNotify_CmdId {
	p := new(AvatarExpeditionDataNotify_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[23].Descriptor()
}

func (AvatarExpeditionDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[23]
}

func (x AvatarExpeditionDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionDataNotify_CmdId.Descriptor instead.
func (AvatarExpeditionDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{24, 0}
}

type AvatarExpeditionAllDataReq_CmdId int32

const (
	AvatarExpeditionAllDataReq_NONE             AvatarExpeditionAllDataReq_CmdId = 0
	AvatarExpeditionAllDataReq_CMD_ID           AvatarExpeditionAllDataReq_CmdId = 1722
	AvatarExpeditionAllDataReq_ENET_CHANNEL_ID  AvatarExpeditionAllDataReq_CmdId = 0
	AvatarExpeditionAllDataReq_ENET_IS_RELIABLE AvatarExpeditionAllDataReq_CmdId = 1
	AvatarExpeditionAllDataReq_IS_ALLOW_CLIENT  AvatarExpeditionAllDataReq_CmdId = 1
)

// Enum value maps for AvatarExpeditionAllDataReq_CmdId.
var (
	AvatarExpeditionAllDataReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1722: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarExpeditionAllDataReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1722,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarExpeditionAllDataReq_CmdId) Enum() *AvatarExpeditionAllDataReq_CmdId {
	p := new(AvatarExpeditionAllDataReq_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionAllDataReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionAllDataReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[24].Descriptor()
}

func (AvatarExpeditionAllDataReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[24]
}

func (x AvatarExpeditionAllDataReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionAllDataReq_CmdId.Descriptor instead.
func (AvatarExpeditionAllDataReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{25, 0}
}

type AvatarExpeditionAllDataRsp_CmdId int32

const (
	AvatarExpeditionAllDataRsp_NONE             AvatarExpeditionAllDataRsp_CmdId = 0
	AvatarExpeditionAllDataRsp_CMD_ID           AvatarExpeditionAllDataRsp_CmdId = 1648
	AvatarExpeditionAllDataRsp_ENET_CHANNEL_ID  AvatarExpeditionAllDataRsp_CmdId = 0
	AvatarExpeditionAllDataRsp_ENET_IS_RELIABLE AvatarExpeditionAllDataRsp_CmdId = 1
)

// Enum value maps for AvatarExpeditionAllDataRsp_CmdId.
var (
	AvatarExpeditionAllDataRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1648: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarExpeditionAllDataRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1648,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarExpeditionAllDataRsp_CmdId) Enum() *AvatarExpeditionAllDataRsp_CmdId {
	p := new(AvatarExpeditionAllDataRsp_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionAllDataRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionAllDataRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[25].Descriptor()
}

func (AvatarExpeditionAllDataRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[25]
}

func (x AvatarExpeditionAllDataRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionAllDataRsp_CmdId.Descriptor instead.
func (AvatarExpeditionAllDataRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{26, 0}
}

type AvatarExpeditionStartReq_CmdId int32

const (
	AvatarExpeditionStartReq_NONE             AvatarExpeditionStartReq_CmdId = 0
	AvatarExpeditionStartReq_CMD_ID           AvatarExpeditionStartReq_CmdId = 1715
	AvatarExpeditionStartReq_ENET_CHANNEL_ID  AvatarExpeditionStartReq_CmdId = 0
	AvatarExpeditionStartReq_ENET_IS_RELIABLE AvatarExpeditionStartReq_CmdId = 1
	AvatarExpeditionStartReq_IS_ALLOW_CLIENT  AvatarExpeditionStartReq_CmdId = 1
)

// Enum value maps for AvatarExpeditionStartReq_CmdId.
var (
	AvatarExpeditionStartReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1715: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarExpeditionStartReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1715,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarExpeditionStartReq_CmdId) Enum() *AvatarExpeditionStartReq_CmdId {
	p := new(AvatarExpeditionStartReq_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionStartReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionStartReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[26].Descriptor()
}

func (AvatarExpeditionStartReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[26]
}

func (x AvatarExpeditionStartReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionStartReq_CmdId.Descriptor instead.
func (AvatarExpeditionStartReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{27, 0}
}

type AvatarExpeditionStartRsp_CmdId int32

const (
	AvatarExpeditionStartRsp_NONE             AvatarExpeditionStartRsp_CmdId = 0
	AvatarExpeditionStartRsp_CMD_ID           AvatarExpeditionStartRsp_CmdId = 1719
	AvatarExpeditionStartRsp_ENET_CHANNEL_ID  AvatarExpeditionStartRsp_CmdId = 0
	AvatarExpeditionStartRsp_ENET_IS_RELIABLE AvatarExpeditionStartRsp_CmdId = 1
)

// Enum value maps for AvatarExpeditionStartRsp_CmdId.
var (
	AvatarExpeditionStartRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1719: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarExpeditionStartRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1719,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarExpeditionStartRsp_CmdId) Enum() *AvatarExpeditionStartRsp_CmdId {
	p := new(AvatarExpeditionStartRsp_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionStartRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionStartRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[27].Descriptor()
}

func (AvatarExpeditionStartRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[27]
}

func (x AvatarExpeditionStartRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionStartRsp_CmdId.Descriptor instead.
func (AvatarExpeditionStartRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{28, 0}
}

type AvatarExpeditionCallBackReq_CmdId int32

const (
	AvatarExpeditionCallBackReq_NONE             AvatarExpeditionCallBackReq_CmdId = 0
	AvatarExpeditionCallBackReq_CMD_ID           AvatarExpeditionCallBackReq_CmdId = 1752
	AvatarExpeditionCallBackReq_ENET_CHANNEL_ID  AvatarExpeditionCallBackReq_CmdId = 0
	AvatarExpeditionCallBackReq_ENET_IS_RELIABLE AvatarExpeditionCallBackReq_CmdId = 1
	AvatarExpeditionCallBackReq_IS_ALLOW_CLIENT  AvatarExpeditionCallBackReq_CmdId = 1
)

// Enum value maps for AvatarExpeditionCallBackReq_CmdId.
var (
	AvatarExpeditionCallBackReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1752: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarExpeditionCallBackReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1752,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarExpeditionCallBackReq_CmdId) Enum() *AvatarExpeditionCallBackReq_CmdId {
	p := new(AvatarExpeditionCallBackReq_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionCallBackReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionCallBackReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[28].Descriptor()
}

func (AvatarExpeditionCallBackReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[28]
}

func (x AvatarExpeditionCallBackReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionCallBackReq_CmdId.Descriptor instead.
func (AvatarExpeditionCallBackReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{29, 0}
}

type AvatarExpeditionCallBackRsp_CmdId int32

const (
	AvatarExpeditionCallBackRsp_NONE             AvatarExpeditionCallBackRsp_CmdId = 0
	AvatarExpeditionCallBackRsp_CMD_ID           AvatarExpeditionCallBackRsp_CmdId = 1726
	AvatarExpeditionCallBackRsp_ENET_CHANNEL_ID  AvatarExpeditionCallBackRsp_CmdId = 0
	AvatarExpeditionCallBackRsp_ENET_IS_RELIABLE AvatarExpeditionCallBackRsp_CmdId = 1
)

// Enum value maps for AvatarExpeditionCallBackRsp_CmdId.
var (
	AvatarExpeditionCallBackRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1726: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarExpeditionCallBackRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1726,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarExpeditionCallBackRsp_CmdId) Enum() *AvatarExpeditionCallBackRsp_CmdId {
	p := new(AvatarExpeditionCallBackRsp_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionCallBackRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionCallBackRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[29].Descriptor()
}

func (AvatarExpeditionCallBackRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[29]
}

func (x AvatarExpeditionCallBackRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionCallBackRsp_CmdId.Descriptor instead.
func (AvatarExpeditionCallBackRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{30, 0}
}

type AvatarExpeditionGetRewardReq_CmdId int32

const (
	AvatarExpeditionGetRewardReq_NONE             AvatarExpeditionGetRewardReq_CmdId = 0
	AvatarExpeditionGetRewardReq_CMD_ID           AvatarExpeditionGetRewardReq_CmdId = 1623
	AvatarExpeditionGetRewardReq_ENET_CHANNEL_ID  AvatarExpeditionGetRewardReq_CmdId = 0
	AvatarExpeditionGetRewardReq_ENET_IS_RELIABLE AvatarExpeditionGetRewardReq_CmdId = 1
	AvatarExpeditionGetRewardReq_IS_ALLOW_CLIENT  AvatarExpeditionGetRewardReq_CmdId = 1
)

// Enum value maps for AvatarExpeditionGetRewardReq_CmdId.
var (
	AvatarExpeditionGetRewardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1623: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarExpeditionGetRewardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1623,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarExpeditionGetRewardReq_CmdId) Enum() *AvatarExpeditionGetRewardReq_CmdId {
	p := new(AvatarExpeditionGetRewardReq_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionGetRewardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionGetRewardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[30].Descriptor()
}

func (AvatarExpeditionGetRewardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[30]
}

func (x AvatarExpeditionGetRewardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionGetRewardReq_CmdId.Descriptor instead.
func (AvatarExpeditionGetRewardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{31, 0}
}

type AvatarExpeditionGetRewardRsp_CmdId int32

const (
	AvatarExpeditionGetRewardRsp_NONE             AvatarExpeditionGetRewardRsp_CmdId = 0
	AvatarExpeditionGetRewardRsp_CMD_ID           AvatarExpeditionGetRewardRsp_CmdId = 1784
	AvatarExpeditionGetRewardRsp_ENET_CHANNEL_ID  AvatarExpeditionGetRewardRsp_CmdId = 0
	AvatarExpeditionGetRewardRsp_ENET_IS_RELIABLE AvatarExpeditionGetRewardRsp_CmdId = 1
)

// Enum value maps for AvatarExpeditionGetRewardRsp_CmdId.
var (
	AvatarExpeditionGetRewardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1784: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarExpeditionGetRewardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1784,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarExpeditionGetRewardRsp_CmdId) Enum() *AvatarExpeditionGetRewardRsp_CmdId {
	p := new(AvatarExpeditionGetRewardRsp_CmdId)
	*p = x
	return p
}

func (x AvatarExpeditionGetRewardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarExpeditionGetRewardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[31].Descriptor()
}

func (AvatarExpeditionGetRewardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[31]
}

func (x AvatarExpeditionGetRewardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarExpeditionGetRewardRsp_CmdId.Descriptor instead.
func (AvatarExpeditionGetRewardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{32, 0}
}

type ChangeMpTeamAvatarReq_CmdId int32

const (
	ChangeMpTeamAvatarReq_NONE             ChangeMpTeamAvatarReq_CmdId = 0
	ChangeMpTeamAvatarReq_CMD_ID           ChangeMpTeamAvatarReq_CmdId = 1708
	ChangeMpTeamAvatarReq_ENET_CHANNEL_ID  ChangeMpTeamAvatarReq_CmdId = 0
	ChangeMpTeamAvatarReq_ENET_IS_RELIABLE ChangeMpTeamAvatarReq_CmdId = 1
	ChangeMpTeamAvatarReq_IS_ALLOW_CLIENT  ChangeMpTeamAvatarReq_CmdId = 1
)

// Enum value maps for ChangeMpTeamAvatarReq_CmdId.
var (
	ChangeMpTeamAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1708: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ChangeMpTeamAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1708,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ChangeMpTeamAvatarReq_CmdId) Enum() *ChangeMpTeamAvatarReq_CmdId {
	p := new(ChangeMpTeamAvatarReq_CmdId)
	*p = x
	return p
}

func (x ChangeMpTeamAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeMpTeamAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[32].Descriptor()
}

func (ChangeMpTeamAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[32]
}

func (x ChangeMpTeamAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeMpTeamAvatarReq_CmdId.Descriptor instead.
func (ChangeMpTeamAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{33, 0}
}

type ChangeMpTeamAvatarRsp_CmdId int32

const (
	ChangeMpTeamAvatarRsp_NONE             ChangeMpTeamAvatarRsp_CmdId = 0
	ChangeMpTeamAvatarRsp_CMD_ID           ChangeMpTeamAvatarRsp_CmdId = 1753
	ChangeMpTeamAvatarRsp_ENET_CHANNEL_ID  ChangeMpTeamAvatarRsp_CmdId = 0
	ChangeMpTeamAvatarRsp_ENET_IS_RELIABLE ChangeMpTeamAvatarRsp_CmdId = 1
)

// Enum value maps for ChangeMpTeamAvatarRsp_CmdId.
var (
	ChangeMpTeamAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1753: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ChangeMpTeamAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1753,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ChangeMpTeamAvatarRsp_CmdId) Enum() *ChangeMpTeamAvatarRsp_CmdId {
	p := new(ChangeMpTeamAvatarRsp_CmdId)
	*p = x
	return p
}

func (x ChangeMpTeamAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeMpTeamAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[33].Descriptor()
}

func (ChangeMpTeamAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[33]
}

func (x ChangeMpTeamAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeMpTeamAvatarRsp_CmdId.Descriptor instead.
func (ChangeMpTeamAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{34, 0}
}

type ChangeTeamNameReq_CmdId int32

const (
	ChangeTeamNameReq_NONE             ChangeTeamNameReq_CmdId = 0
	ChangeTeamNameReq_CMD_ID           ChangeTeamNameReq_CmdId = 1603
	ChangeTeamNameReq_ENET_CHANNEL_ID  ChangeTeamNameReq_CmdId = 0
	ChangeTeamNameReq_ENET_IS_RELIABLE ChangeTeamNameReq_CmdId = 1
	ChangeTeamNameReq_IS_ALLOW_CLIENT  ChangeTeamNameReq_CmdId = 1
)

// Enum value maps for ChangeTeamNameReq_CmdId.
var (
	ChangeTeamNameReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1603: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ChangeTeamNameReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1603,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ChangeTeamNameReq_CmdId) Enum() *ChangeTeamNameReq_CmdId {
	p := new(ChangeTeamNameReq_CmdId)
	*p = x
	return p
}

func (x ChangeTeamNameReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeTeamNameReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[34].Descriptor()
}

func (ChangeTeamNameReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[34]
}

func (x ChangeTeamNameReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeTeamNameReq_CmdId.Descriptor instead.
func (ChangeTeamNameReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{35, 0}
}

type ChangeTeamNameRsp_CmdId int32

const (
	ChangeTeamNameRsp_NONE             ChangeTeamNameRsp_CmdId = 0
	ChangeTeamNameRsp_CMD_ID           ChangeTeamNameRsp_CmdId = 1666
	ChangeTeamNameRsp_ENET_CHANNEL_ID  ChangeTeamNameRsp_CmdId = 0
	ChangeTeamNameRsp_ENET_IS_RELIABLE ChangeTeamNameRsp_CmdId = 1
)

// Enum value maps for ChangeTeamNameRsp_CmdId.
var (
	ChangeTeamNameRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1666: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ChangeTeamNameRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1666,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ChangeTeamNameRsp_CmdId) Enum() *ChangeTeamNameRsp_CmdId {
	p := new(ChangeTeamNameRsp_CmdId)
	*p = x
	return p
}

func (x ChangeTeamNameRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeTeamNameRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[35].Descriptor()
}

func (ChangeTeamNameRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[35]
}

func (x ChangeTeamNameRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeTeamNameRsp_CmdId.Descriptor instead.
func (ChangeTeamNameRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{36, 0}
}

type SceneTeamUpdateNotify_CmdId int32

const (
	SceneTeamUpdateNotify_NONE             SceneTeamUpdateNotify_CmdId = 0
	SceneTeamUpdateNotify_CMD_ID           SceneTeamUpdateNotify_CmdId = 1775
	SceneTeamUpdateNotify_ENET_CHANNEL_ID  SceneTeamUpdateNotify_CmdId = 0
	SceneTeamUpdateNotify_ENET_IS_RELIABLE SceneTeamUpdateNotify_CmdId = 1
)

// Enum value maps for SceneTeamUpdateNotify_CmdId.
var (
	SceneTeamUpdateNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1775: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	SceneTeamUpdateNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1775,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x SceneTeamUpdateNotify_CmdId) Enum() *SceneTeamUpdateNotify_CmdId {
	p := new(SceneTeamUpdateNotify_CmdId)
	*p = x
	return p
}

func (x SceneTeamUpdateNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneTeamUpdateNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[36].Descriptor()
}

func (SceneTeamUpdateNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[36]
}

func (x SceneTeamUpdateNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneTeamUpdateNotify_CmdId.Descriptor instead.
func (SceneTeamUpdateNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{38, 0}
}

type FocusAvatarReq_CmdId int32

const (
	FocusAvatarReq_NONE             FocusAvatarReq_CmdId = 0
	FocusAvatarReq_CMD_ID           FocusAvatarReq_CmdId = 1654
	FocusAvatarReq_ENET_CHANNEL_ID  FocusAvatarReq_CmdId = 0
	FocusAvatarReq_ENET_IS_RELIABLE FocusAvatarReq_CmdId = 1
	FocusAvatarReq_IS_ALLOW_CLIENT  FocusAvatarReq_CmdId = 1
)

// Enum value maps for FocusAvatarReq_CmdId.
var (
	FocusAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1654: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	FocusAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1654,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x FocusAvatarReq_CmdId) Enum() *FocusAvatarReq_CmdId {
	p := new(FocusAvatarReq_CmdId)
	*p = x
	return p
}

func (x FocusAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FocusAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[37].Descriptor()
}

func (FocusAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[37]
}

func (x FocusAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FocusAvatarReq_CmdId.Descriptor instead.
func (FocusAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{39, 0}
}

type FocusAvatarRsp_CmdId int32

const (
	FocusAvatarRsp_NONE             FocusAvatarRsp_CmdId = 0
	FocusAvatarRsp_CMD_ID           FocusAvatarRsp_CmdId = 1681
	FocusAvatarRsp_ENET_CHANNEL_ID  FocusAvatarRsp_CmdId = 0
	FocusAvatarRsp_ENET_IS_RELIABLE FocusAvatarRsp_CmdId = 1
)

// Enum value maps for FocusAvatarRsp_CmdId.
var (
	FocusAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1681: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	FocusAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1681,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x FocusAvatarRsp_CmdId) Enum() *FocusAvatarRsp_CmdId {
	p := new(FocusAvatarRsp_CmdId)
	*p = x
	return p
}

func (x FocusAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FocusAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[38].Descriptor()
}

func (FocusAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[38]
}

func (x FocusAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FocusAvatarRsp_CmdId.Descriptor instead.
func (FocusAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{40, 0}
}

type AvatarSatiationDataNotify_CmdId int32

const (
	AvatarSatiationDataNotify_NONE             AvatarSatiationDataNotify_CmdId = 0
	AvatarSatiationDataNotify_CMD_ID           AvatarSatiationDataNotify_CmdId = 1693
	AvatarSatiationDataNotify_ENET_CHANNEL_ID  AvatarSatiationDataNotify_CmdId = 0
	AvatarSatiationDataNotify_ENET_IS_RELIABLE AvatarSatiationDataNotify_CmdId = 1
)

// Enum value maps for AvatarSatiationDataNotify_CmdId.
var (
	AvatarSatiationDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1693: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarSatiationDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1693,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarSatiationDataNotify_CmdId) Enum() *AvatarSatiationDataNotify_CmdId {
	p := new(AvatarSatiationDataNotify_CmdId)
	*p = x
	return p
}

func (x AvatarSatiationDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarSatiationDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[39].Descriptor()
}

func (AvatarSatiationDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[39]
}

func (x AvatarSatiationDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarSatiationDataNotify_CmdId.Descriptor instead.
func (AvatarSatiationDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{42, 0}
}

type AvatarWearFlycloakReq_CmdId int32

const (
	AvatarWearFlycloakReq_NONE             AvatarWearFlycloakReq_CmdId = 0
	AvatarWearFlycloakReq_CMD_ID           AvatarWearFlycloakReq_CmdId = 1737
	AvatarWearFlycloakReq_ENET_CHANNEL_ID  AvatarWearFlycloakReq_CmdId = 0
	AvatarWearFlycloakReq_ENET_IS_RELIABLE AvatarWearFlycloakReq_CmdId = 1
	AvatarWearFlycloakReq_IS_ALLOW_CLIENT  AvatarWearFlycloakReq_CmdId = 1
)

// Enum value maps for AvatarWearFlycloakReq_CmdId.
var (
	AvatarWearFlycloakReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1737: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarWearFlycloakReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1737,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarWearFlycloakReq_CmdId) Enum() *AvatarWearFlycloakReq_CmdId {
	p := new(AvatarWearFlycloakReq_CmdId)
	*p = x
	return p
}

func (x AvatarWearFlycloakReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarWearFlycloakReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[40].Descriptor()
}

func (AvatarWearFlycloakReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[40]
}

func (x AvatarWearFlycloakReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarWearFlycloakReq_CmdId.Descriptor instead.
func (AvatarWearFlycloakReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{43, 0}
}

type AvatarWearFlycloakRsp_CmdId int32

const (
	AvatarWearFlycloakRsp_NONE             AvatarWearFlycloakRsp_CmdId = 0
	AvatarWearFlycloakRsp_CMD_ID           AvatarWearFlycloakRsp_CmdId = 1698
	AvatarWearFlycloakRsp_ENET_CHANNEL_ID  AvatarWearFlycloakRsp_CmdId = 0
	AvatarWearFlycloakRsp_ENET_IS_RELIABLE AvatarWearFlycloakRsp_CmdId = 1
)

// Enum value maps for AvatarWearFlycloakRsp_CmdId.
var (
	AvatarWearFlycloakRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1698: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarWearFlycloakRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1698,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarWearFlycloakRsp_CmdId) Enum() *AvatarWearFlycloakRsp_CmdId {
	p := new(AvatarWearFlycloakRsp_CmdId)
	*p = x
	return p
}

func (x AvatarWearFlycloakRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarWearFlycloakRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[41].Descriptor()
}

func (AvatarWearFlycloakRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[41]
}

func (x AvatarWearFlycloakRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarWearFlycloakRsp_CmdId.Descriptor instead.
func (AvatarWearFlycloakRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{44, 0}
}

type AvatarFlycloakChangeNotify_CmdId int32

const (
	AvatarFlycloakChangeNotify_NONE             AvatarFlycloakChangeNotify_CmdId = 0
	AvatarFlycloakChangeNotify_CMD_ID           AvatarFlycloakChangeNotify_CmdId = 1643
	AvatarFlycloakChangeNotify_ENET_CHANNEL_ID  AvatarFlycloakChangeNotify_CmdId = 0
	AvatarFlycloakChangeNotify_ENET_IS_RELIABLE AvatarFlycloakChangeNotify_CmdId = 1
)

// Enum value maps for AvatarFlycloakChangeNotify_CmdId.
var (
	AvatarFlycloakChangeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1643: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarFlycloakChangeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1643,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarFlycloakChangeNotify_CmdId) Enum() *AvatarFlycloakChangeNotify_CmdId {
	p := new(AvatarFlycloakChangeNotify_CmdId)
	*p = x
	return p
}

func (x AvatarFlycloakChangeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarFlycloakChangeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[42].Descriptor()
}

func (AvatarFlycloakChangeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[42]
}

func (x AvatarFlycloakChangeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarFlycloakChangeNotify_CmdId.Descriptor instead.
func (AvatarFlycloakChangeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{45, 0}
}

type AvatarGainFlycloakNotify_CmdId int32

const (
	AvatarGainFlycloakNotify_NONE             AvatarGainFlycloakNotify_CmdId = 0
	AvatarGainFlycloakNotify_CMD_ID           AvatarGainFlycloakNotify_CmdId = 1656
	AvatarGainFlycloakNotify_ENET_CHANNEL_ID  AvatarGainFlycloakNotify_CmdId = 0
	AvatarGainFlycloakNotify_ENET_IS_RELIABLE AvatarGainFlycloakNotify_CmdId = 1
)

// Enum value maps for AvatarGainFlycloakNotify_CmdId.
var (
	AvatarGainFlycloakNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1656: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarGainFlycloakNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1656,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarGainFlycloakNotify_CmdId) Enum() *AvatarGainFlycloakNotify_CmdId {
	p := new(AvatarGainFlycloakNotify_CmdId)
	*p = x
	return p
}

func (x AvatarGainFlycloakNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarGainFlycloakNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[43].Descriptor()
}

func (AvatarGainFlycloakNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[43]
}

func (x AvatarGainFlycloakNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarGainFlycloakNotify_CmdId.Descriptor instead.
func (AvatarGainFlycloakNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{46, 0}
}

type AvatarEquipAffixStartNotify_CmdId int32

const (
	AvatarEquipAffixStartNotify_NONE             AvatarEquipAffixStartNotify_CmdId = 0
	AvatarEquipAffixStartNotify_CMD_ID           AvatarEquipAffixStartNotify_CmdId = 1662
	AvatarEquipAffixStartNotify_ENET_CHANNEL_ID  AvatarEquipAffixStartNotify_CmdId = 0
	AvatarEquipAffixStartNotify_ENET_IS_RELIABLE AvatarEquipAffixStartNotify_CmdId = 1
)

// Enum value maps for AvatarEquipAffixStartNotify_CmdId.
var (
	AvatarEquipAffixStartNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1662: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarEquipAffixStartNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1662,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarEquipAffixStartNotify_CmdId) Enum() *AvatarEquipAffixStartNotify_CmdId {
	p := new(AvatarEquipAffixStartNotify_CmdId)
	*p = x
	return p
}

func (x AvatarEquipAffixStartNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarEquipAffixStartNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[44].Descriptor()
}

func (AvatarEquipAffixStartNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[44]
}

func (x AvatarEquipAffixStartNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarEquipAffixStartNotify_CmdId.Descriptor instead.
func (AvatarEquipAffixStartNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{47, 0}
}

type AvatarFetterLevelRewardReq_CmdId int32

const (
	AvatarFetterLevelRewardReq_NONE             AvatarFetterLevelRewardReq_CmdId = 0
	AvatarFetterLevelRewardReq_CMD_ID           AvatarFetterLevelRewardReq_CmdId = 1653
	AvatarFetterLevelRewardReq_ENET_CHANNEL_ID  AvatarFetterLevelRewardReq_CmdId = 0
	AvatarFetterLevelRewardReq_ENET_IS_RELIABLE AvatarFetterLevelRewardReq_CmdId = 1
	AvatarFetterLevelRewardReq_IS_ALLOW_CLIENT  AvatarFetterLevelRewardReq_CmdId = 1
)

// Enum value maps for AvatarFetterLevelRewardReq_CmdId.
var (
	AvatarFetterLevelRewardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1653: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarFetterLevelRewardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1653,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarFetterLevelRewardReq_CmdId) Enum() *AvatarFetterLevelRewardReq_CmdId {
	p := new(AvatarFetterLevelRewardReq_CmdId)
	*p = x
	return p
}

func (x AvatarFetterLevelRewardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarFetterLevelRewardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[45].Descriptor()
}

func (AvatarFetterLevelRewardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[45]
}

func (x AvatarFetterLevelRewardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarFetterLevelRewardReq_CmdId.Descriptor instead.
func (AvatarFetterLevelRewardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{48, 0}
}

type AvatarFetterLevelRewardRsp_CmdId int32

const (
	AvatarFetterLevelRewardRsp_NONE             AvatarFetterLevelRewardRsp_CmdId = 0
	AvatarFetterLevelRewardRsp_CMD_ID           AvatarFetterLevelRewardRsp_CmdId = 1606
	AvatarFetterLevelRewardRsp_ENET_CHANNEL_ID  AvatarFetterLevelRewardRsp_CmdId = 0
	AvatarFetterLevelRewardRsp_ENET_IS_RELIABLE AvatarFetterLevelRewardRsp_CmdId = 1
)

// Enum value maps for AvatarFetterLevelRewardRsp_CmdId.
var (
	AvatarFetterLevelRewardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1606: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarFetterLevelRewardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1606,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarFetterLevelRewardRsp_CmdId) Enum() *AvatarFetterLevelRewardRsp_CmdId {
	p := new(AvatarFetterLevelRewardRsp_CmdId)
	*p = x
	return p
}

func (x AvatarFetterLevelRewardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarFetterLevelRewardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[46].Descriptor()
}

func (AvatarFetterLevelRewardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[46]
}

func (x AvatarFetterLevelRewardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarFetterLevelRewardRsp_CmdId.Descriptor instead.
func (AvatarFetterLevelRewardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{49, 0}
}

type AddNoGachaAvatarCardNotify_CmdId int32

const (
	AddNoGachaAvatarCardNotify_NONE             AddNoGachaAvatarCardNotify_CmdId = 0
	AddNoGachaAvatarCardNotify_CMD_ID           AddNoGachaAvatarCardNotify_CmdId = 1655
	AddNoGachaAvatarCardNotify_ENET_CHANNEL_ID  AddNoGachaAvatarCardNotify_CmdId = 0
	AddNoGachaAvatarCardNotify_ENET_IS_RELIABLE AddNoGachaAvatarCardNotify_CmdId = 1
)

// Enum value maps for AddNoGachaAvatarCardNotify_CmdId.
var (
	AddNoGachaAvatarCardNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1655: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AddNoGachaAvatarCardNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1655,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AddNoGachaAvatarCardNotify_CmdId) Enum() *AddNoGachaAvatarCardNotify_CmdId {
	p := new(AddNoGachaAvatarCardNotify_CmdId)
	*p = x
	return p
}

func (x AddNoGachaAvatarCardNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddNoGachaAvatarCardNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[47].Descriptor()
}

func (AddNoGachaAvatarCardNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[47]
}

func (x AddNoGachaAvatarCardNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddNoGachaAvatarCardNotify_CmdId.Descriptor instead.
func (AddNoGachaAvatarCardNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{51, 0}
}

type AvatarPromoteGetRewardReq_CmdId int32

const (
	AvatarPromoteGetRewardReq_NONE             AvatarPromoteGetRewardReq_CmdId = 0
	AvatarPromoteGetRewardReq_CMD_ID           AvatarPromoteGetRewardReq_CmdId = 1696
	AvatarPromoteGetRewardReq_ENET_CHANNEL_ID  AvatarPromoteGetRewardReq_CmdId = 0
	AvatarPromoteGetRewardReq_ENET_IS_RELIABLE AvatarPromoteGetRewardReq_CmdId = 1
	AvatarPromoteGetRewardReq_IS_ALLOW_CLIENT  AvatarPromoteGetRewardReq_CmdId = 1
)

// Enum value maps for AvatarPromoteGetRewardReq_CmdId.
var (
	AvatarPromoteGetRewardReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1696: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarPromoteGetRewardReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1696,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarPromoteGetRewardReq_CmdId) Enum() *AvatarPromoteGetRewardReq_CmdId {
	p := new(AvatarPromoteGetRewardReq_CmdId)
	*p = x
	return p
}

func (x AvatarPromoteGetRewardReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarPromoteGetRewardReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[48].Descriptor()
}

func (AvatarPromoteGetRewardReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[48]
}

func (x AvatarPromoteGetRewardReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarPromoteGetRewardReq_CmdId.Descriptor instead.
func (AvatarPromoteGetRewardReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{52, 0}
}

type AvatarPromoteGetRewardRsp_CmdId int32

const (
	AvatarPromoteGetRewardRsp_NONE             AvatarPromoteGetRewardRsp_CmdId = 0
	AvatarPromoteGetRewardRsp_CMD_ID           AvatarPromoteGetRewardRsp_CmdId = 1683
	AvatarPromoteGetRewardRsp_ENET_CHANNEL_ID  AvatarPromoteGetRewardRsp_CmdId = 0
	AvatarPromoteGetRewardRsp_ENET_IS_RELIABLE AvatarPromoteGetRewardRsp_CmdId = 1
)

// Enum value maps for AvatarPromoteGetRewardRsp_CmdId.
var (
	AvatarPromoteGetRewardRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1683: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarPromoteGetRewardRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1683,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarPromoteGetRewardRsp_CmdId) Enum() *AvatarPromoteGetRewardRsp_CmdId {
	p := new(AvatarPromoteGetRewardRsp_CmdId)
	*p = x
	return p
}

func (x AvatarPromoteGetRewardRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarPromoteGetRewardRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[49].Descriptor()
}

func (AvatarPromoteGetRewardRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[49]
}

func (x AvatarPromoteGetRewardRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarPromoteGetRewardRsp_CmdId.Descriptor instead.
func (AvatarPromoteGetRewardRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{53, 0}
}

type AvatarChangeCostumeReq_CmdId int32

const (
	AvatarChangeCostumeReq_NONE             AvatarChangeCostumeReq_CmdId = 0
	AvatarChangeCostumeReq_CMD_ID           AvatarChangeCostumeReq_CmdId = 1778
	AvatarChangeCostumeReq_ENET_CHANNEL_ID  AvatarChangeCostumeReq_CmdId = 0
	AvatarChangeCostumeReq_ENET_IS_RELIABLE AvatarChangeCostumeReq_CmdId = 1
	AvatarChangeCostumeReq_IS_ALLOW_CLIENT  AvatarChangeCostumeReq_CmdId = 1
)

// Enum value maps for AvatarChangeCostumeReq_CmdId.
var (
	AvatarChangeCostumeReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1778: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarChangeCostumeReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1778,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarChangeCostumeReq_CmdId) Enum() *AvatarChangeCostumeReq_CmdId {
	p := new(AvatarChangeCostumeReq_CmdId)
	*p = x
	return p
}

func (x AvatarChangeCostumeReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeCostumeReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[50].Descriptor()
}

func (AvatarChangeCostumeReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[50]
}

func (x AvatarChangeCostumeReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeCostumeReq_CmdId.Descriptor instead.
func (AvatarChangeCostumeReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{54, 0}
}

type AvatarChangeCostumeRsp_CmdId int32

const (
	AvatarChangeCostumeRsp_NONE             AvatarChangeCostumeRsp_CmdId = 0
	AvatarChangeCostumeRsp_CMD_ID           AvatarChangeCostumeRsp_CmdId = 1645
	AvatarChangeCostumeRsp_ENET_CHANNEL_ID  AvatarChangeCostumeRsp_CmdId = 0
	AvatarChangeCostumeRsp_ENET_IS_RELIABLE AvatarChangeCostumeRsp_CmdId = 1
)

// Enum value maps for AvatarChangeCostumeRsp_CmdId.
var (
	AvatarChangeCostumeRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1645: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarChangeCostumeRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1645,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarChangeCostumeRsp_CmdId) Enum() *AvatarChangeCostumeRsp_CmdId {
	p := new(AvatarChangeCostumeRsp_CmdId)
	*p = x
	return p
}

func (x AvatarChangeCostumeRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeCostumeRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[51].Descriptor()
}

func (AvatarChangeCostumeRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[51]
}

func (x AvatarChangeCostumeRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeCostumeRsp_CmdId.Descriptor instead.
func (AvatarChangeCostumeRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{55, 0}
}

type AvatarChangeCostumeNotify_CmdId int32

const (
	AvatarChangeCostumeNotify_NONE             AvatarChangeCostumeNotify_CmdId = 0
	AvatarChangeCostumeNotify_CMD_ID           AvatarChangeCostumeNotify_CmdId = 1644
	AvatarChangeCostumeNotify_ENET_CHANNEL_ID  AvatarChangeCostumeNotify_CmdId = 0
	AvatarChangeCostumeNotify_ENET_IS_RELIABLE AvatarChangeCostumeNotify_CmdId = 1
)

// Enum value maps for AvatarChangeCostumeNotify_CmdId.
var (
	AvatarChangeCostumeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1644: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarChangeCostumeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1644,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarChangeCostumeNotify_CmdId) Enum() *AvatarChangeCostumeNotify_CmdId {
	p := new(AvatarChangeCostumeNotify_CmdId)
	*p = x
	return p
}

func (x AvatarChangeCostumeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeCostumeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[52].Descriptor()
}

func (AvatarChangeCostumeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[52]
}

func (x AvatarChangeCostumeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeCostumeNotify_CmdId.Descriptor instead.
func (AvatarChangeCostumeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{56, 0}
}

type AvatarGainCostumeNotify_CmdId int32

const (
	AvatarGainCostumeNotify_NONE             AvatarGainCostumeNotify_CmdId = 0
	AvatarGainCostumeNotify_CMD_ID           AvatarGainCostumeNotify_CmdId = 1677
	AvatarGainCostumeNotify_ENET_CHANNEL_ID  AvatarGainCostumeNotify_CmdId = 0
	AvatarGainCostumeNotify_ENET_IS_RELIABLE AvatarGainCostumeNotify_CmdId = 1
)

// Enum value maps for AvatarGainCostumeNotify_CmdId.
var (
	AvatarGainCostumeNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1677: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarGainCostumeNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1677,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarGainCostumeNotify_CmdId) Enum() *AvatarGainCostumeNotify_CmdId {
	p := new(AvatarGainCostumeNotify_CmdId)
	*p = x
	return p
}

func (x AvatarGainCostumeNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarGainCostumeNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[53].Descriptor()
}

func (AvatarGainCostumeNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[53]
}

func (x AvatarGainCostumeNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarGainCostumeNotify_CmdId.Descriptor instead.
func (AvatarGainCostumeNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{57, 0}
}

type AvatarChangeAnimHashReq_CmdId int32

const (
	AvatarChangeAnimHashReq_NONE             AvatarChangeAnimHashReq_CmdId = 0
	AvatarChangeAnimHashReq_CMD_ID           AvatarChangeAnimHashReq_CmdId = 1711
	AvatarChangeAnimHashReq_ENET_CHANNEL_ID  AvatarChangeAnimHashReq_CmdId = 0
	AvatarChangeAnimHashReq_ENET_IS_RELIABLE AvatarChangeAnimHashReq_CmdId = 1
	AvatarChangeAnimHashReq_IS_ALLOW_CLIENT  AvatarChangeAnimHashReq_CmdId = 1
)

// Enum value maps for AvatarChangeAnimHashReq_CmdId.
var (
	AvatarChangeAnimHashReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1711: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AvatarChangeAnimHashReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1711,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AvatarChangeAnimHashReq_CmdId) Enum() *AvatarChangeAnimHashReq_CmdId {
	p := new(AvatarChangeAnimHashReq_CmdId)
	*p = x
	return p
}

func (x AvatarChangeAnimHashReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeAnimHashReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[54].Descriptor()
}

func (AvatarChangeAnimHashReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[54]
}

func (x AvatarChangeAnimHashReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeAnimHashReq_CmdId.Descriptor instead.
func (AvatarChangeAnimHashReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{58, 0}
}

type AvatarChangeAnimHashRsp_CmdId int32

const (
	AvatarChangeAnimHashRsp_NONE             AvatarChangeAnimHashRsp_CmdId = 0
	AvatarChangeAnimHashRsp_CMD_ID           AvatarChangeAnimHashRsp_CmdId = 1647
	AvatarChangeAnimHashRsp_ENET_CHANNEL_ID  AvatarChangeAnimHashRsp_CmdId = 0
	AvatarChangeAnimHashRsp_ENET_IS_RELIABLE AvatarChangeAnimHashRsp_CmdId = 1
)

// Enum value maps for AvatarChangeAnimHashRsp_CmdId.
var (
	AvatarChangeAnimHashRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1647: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarChangeAnimHashRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1647,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarChangeAnimHashRsp_CmdId) Enum() *AvatarChangeAnimHashRsp_CmdId {
	p := new(AvatarChangeAnimHashRsp_CmdId)
	*p = x
	return p
}

func (x AvatarChangeAnimHashRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarChangeAnimHashRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[55].Descriptor()
}

func (AvatarChangeAnimHashRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[55]
}

func (x AvatarChangeAnimHashRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarChangeAnimHashRsp_CmdId.Descriptor instead.
func (AvatarChangeAnimHashRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{59, 0}
}

type PersistentDungeonSwitchAvatarReq_CmdId int32

const (
	PersistentDungeonSwitchAvatarReq_NONE             PersistentDungeonSwitchAvatarReq_CmdId = 0
	PersistentDungeonSwitchAvatarReq_CMD_ID           PersistentDungeonSwitchAvatarReq_CmdId = 1684
	PersistentDungeonSwitchAvatarReq_ENET_CHANNEL_ID  PersistentDungeonSwitchAvatarReq_CmdId = 0
	PersistentDungeonSwitchAvatarReq_ENET_IS_RELIABLE PersistentDungeonSwitchAvatarReq_CmdId = 1
	PersistentDungeonSwitchAvatarReq_IS_ALLOW_CLIENT  PersistentDungeonSwitchAvatarReq_CmdId = 1
)

// Enum value maps for PersistentDungeonSwitchAvatarReq_CmdId.
var (
	PersistentDungeonSwitchAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1684: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	PersistentDungeonSwitchAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1684,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x PersistentDungeonSwitchAvatarReq_CmdId) Enum() *PersistentDungeonSwitchAvatarReq_CmdId {
	p := new(PersistentDungeonSwitchAvatarReq_CmdId)
	*p = x
	return p
}

func (x PersistentDungeonSwitchAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersistentDungeonSwitchAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[56].Descriptor()
}

func (PersistentDungeonSwitchAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[56]
}

func (x PersistentDungeonSwitchAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarReq_CmdId.Descriptor instead.
func (PersistentDungeonSwitchAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{60, 0}
}

type PersistentDungeonSwitchAvatarRsp_CmdId int32

const (
	PersistentDungeonSwitchAvatarRsp_NONE             PersistentDungeonSwitchAvatarRsp_CmdId = 0
	PersistentDungeonSwitchAvatarRsp_CMD_ID           PersistentDungeonSwitchAvatarRsp_CmdId = 1768
	PersistentDungeonSwitchAvatarRsp_ENET_CHANNEL_ID  PersistentDungeonSwitchAvatarRsp_CmdId = 0
	PersistentDungeonSwitchAvatarRsp_ENET_IS_RELIABLE PersistentDungeonSwitchAvatarRsp_CmdId = 1
)

// Enum value maps for PersistentDungeonSwitchAvatarRsp_CmdId.
var (
	PersistentDungeonSwitchAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1768: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	PersistentDungeonSwitchAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1768,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x PersistentDungeonSwitchAvatarRsp_CmdId) Enum() *PersistentDungeonSwitchAvatarRsp_CmdId {
	p := new(PersistentDungeonSwitchAvatarRsp_CmdId)
	*p = x
	return p
}

func (x PersistentDungeonSwitchAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersistentDungeonSwitchAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[57].Descriptor()
}

func (PersistentDungeonSwitchAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[57]
}

func (x PersistentDungeonSwitchAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarRsp_CmdId.Descriptor instead.
func (PersistentDungeonSwitchAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{61, 0}
}

type AddBackupAvatarTeamReq_CmdId int32

const (
	AddBackupAvatarTeamReq_NONE             AddBackupAvatarTeamReq_CmdId = 0
	AddBackupAvatarTeamReq_CMD_ID           AddBackupAvatarTeamReq_CmdId = 1687
	AddBackupAvatarTeamReq_ENET_CHANNEL_ID  AddBackupAvatarTeamReq_CmdId = 0
	AddBackupAvatarTeamReq_ENET_IS_RELIABLE AddBackupAvatarTeamReq_CmdId = 1
	AddBackupAvatarTeamReq_IS_ALLOW_CLIENT  AddBackupAvatarTeamReq_CmdId = 1
)

// Enum value maps for AddBackupAvatarTeamReq_CmdId.
var (
	AddBackupAvatarTeamReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1687: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	AddBackupAvatarTeamReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1687,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x AddBackupAvatarTeamReq_CmdId) Enum() *AddBackupAvatarTeamReq_CmdId {
	p := new(AddBackupAvatarTeamReq_CmdId)
	*p = x
	return p
}

func (x AddBackupAvatarTeamReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBackupAvatarTeamReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[58].Descriptor()
}

func (AddBackupAvatarTeamReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[58]
}

func (x AddBackupAvatarTeamReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBackupAvatarTeamReq_CmdId.Descriptor instead.
func (AddBackupAvatarTeamReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{62, 0}
}

type AddBackupAvatarTeamRsp_CmdId int32

const (
	AddBackupAvatarTeamRsp_NONE             AddBackupAvatarTeamRsp_CmdId = 0
	AddBackupAvatarTeamRsp_CMD_ID           AddBackupAvatarTeamRsp_CmdId = 1735
	AddBackupAvatarTeamRsp_ENET_CHANNEL_ID  AddBackupAvatarTeamRsp_CmdId = 0
	AddBackupAvatarTeamRsp_ENET_IS_RELIABLE AddBackupAvatarTeamRsp_CmdId = 1
)

// Enum value maps for AddBackupAvatarTeamRsp_CmdId.
var (
	AddBackupAvatarTeamRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1735: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AddBackupAvatarTeamRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1735,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AddBackupAvatarTeamRsp_CmdId) Enum() *AddBackupAvatarTeamRsp_CmdId {
	p := new(AddBackupAvatarTeamRsp_CmdId)
	*p = x
	return p
}

func (x AddBackupAvatarTeamRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBackupAvatarTeamRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[59].Descriptor()
}

func (AddBackupAvatarTeamRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[59]
}

func (x AddBackupAvatarTeamRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBackupAvatarTeamRsp_CmdId.Descriptor instead.
func (AddBackupAvatarTeamRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{63, 0}
}

type DelBackupAvatarTeamReq_CmdId int32

const (
	DelBackupAvatarTeamReq_NONE             DelBackupAvatarTeamReq_CmdId = 0
	DelBackupAvatarTeamReq_CMD_ID           DelBackupAvatarTeamReq_CmdId = 1731
	DelBackupAvatarTeamReq_ENET_CHANNEL_ID  DelBackupAvatarTeamReq_CmdId = 0
	DelBackupAvatarTeamReq_ENET_IS_RELIABLE DelBackupAvatarTeamReq_CmdId = 1
	DelBackupAvatarTeamReq_IS_ALLOW_CLIENT  DelBackupAvatarTeamReq_CmdId = 1
)

// Enum value maps for DelBackupAvatarTeamReq_CmdId.
var (
	DelBackupAvatarTeamReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1731: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	DelBackupAvatarTeamReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1731,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x DelBackupAvatarTeamReq_CmdId) Enum() *DelBackupAvatarTeamReq_CmdId {
	p := new(DelBackupAvatarTeamReq_CmdId)
	*p = x
	return p
}

func (x DelBackupAvatarTeamReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelBackupAvatarTeamReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[60].Descriptor()
}

func (DelBackupAvatarTeamReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[60]
}

func (x DelBackupAvatarTeamReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelBackupAvatarTeamReq_CmdId.Descriptor instead.
func (DelBackupAvatarTeamReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{64, 0}
}

type DelBackupAvatarTeamRsp_CmdId int32

const (
	DelBackupAvatarTeamRsp_NONE             DelBackupAvatarTeamRsp_CmdId = 0
	DelBackupAvatarTeamRsp_CMD_ID           DelBackupAvatarTeamRsp_CmdId = 1729
	DelBackupAvatarTeamRsp_ENET_CHANNEL_ID  DelBackupAvatarTeamRsp_CmdId = 0
	DelBackupAvatarTeamRsp_ENET_IS_RELIABLE DelBackupAvatarTeamRsp_CmdId = 1
)

// Enum value maps for DelBackupAvatarTeamRsp_CmdId.
var (
	DelBackupAvatarTeamRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1729: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	DelBackupAvatarTeamRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1729,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x DelBackupAvatarTeamRsp_CmdId) Enum() *DelBackupAvatarTeamRsp_CmdId {
	p := new(DelBackupAvatarTeamRsp_CmdId)
	*p = x
	return p
}

func (x DelBackupAvatarTeamRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelBackupAvatarTeamRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[61].Descriptor()
}

func (DelBackupAvatarTeamRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[61]
}

func (x DelBackupAvatarTeamRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelBackupAvatarTeamRsp_CmdId.Descriptor instead.
func (DelBackupAvatarTeamRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{65, 0}
}

type AvatarTeamAllDataNotify_CmdId int32

const (
	AvatarTeamAllDataNotify_NONE             AvatarTeamAllDataNotify_CmdId = 0
	AvatarTeamAllDataNotify_CMD_ID           AvatarTeamAllDataNotify_CmdId = 1749
	AvatarTeamAllDataNotify_ENET_CHANNEL_ID  AvatarTeamAllDataNotify_CmdId = 0
	AvatarTeamAllDataNotify_ENET_IS_RELIABLE AvatarTeamAllDataNotify_CmdId = 1
)

// Enum value maps for AvatarTeamAllDataNotify_CmdId.
var (
	AvatarTeamAllDataNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1749: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarTeamAllDataNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1749,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarTeamAllDataNotify_CmdId) Enum() *AvatarTeamAllDataNotify_CmdId {
	p := new(AvatarTeamAllDataNotify_CmdId)
	*p = x
	return p
}

func (x AvatarTeamAllDataNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarTeamAllDataNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[62].Descriptor()
}

func (AvatarTeamAllDataNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[62]
}

func (x AvatarTeamAllDataNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarTeamAllDataNotify_CmdId.Descriptor instead.
func (AvatarTeamAllDataNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{66, 0}
}

type AvatarRenameInfoNotify_CmdId int32

const (
	AvatarRenameInfoNotify_NONE             AvatarRenameInfoNotify_CmdId = 0
	AvatarRenameInfoNotify_CMD_ID           AvatarRenameInfoNotify_CmdId = 1680
	AvatarRenameInfoNotify_ENET_CHANNEL_ID  AvatarRenameInfoNotify_CmdId = 0
	AvatarRenameInfoNotify_ENET_IS_RELIABLE AvatarRenameInfoNotify_CmdId = 1
)

// Enum value maps for AvatarRenameInfoNotify_CmdId.
var (
	AvatarRenameInfoNotify_CmdId_name = map[int32]string{
		0:    "NONE",
		1680: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	AvatarRenameInfoNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1680,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x AvatarRenameInfoNotify_CmdId) Enum() *AvatarRenameInfoNotify_CmdId {
	p := new(AvatarRenameInfoNotify_CmdId)
	*p = x
	return p
}

func (x AvatarRenameInfoNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarRenameInfoNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[63].Descriptor()
}

func (AvatarRenameInfoNotify_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[63]
}

func (x AvatarRenameInfoNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarRenameInfoNotify_CmdId.Descriptor instead.
func (AvatarRenameInfoNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{68, 0}
}

type ItemRenameAvatarReq_CmdId int32

const (
	ItemRenameAvatarReq_NONE             ItemRenameAvatarReq_CmdId = 0
	ItemRenameAvatarReq_CMD_ID           ItemRenameAvatarReq_CmdId = 1750
	ItemRenameAvatarReq_ENET_CHANNEL_ID  ItemRenameAvatarReq_CmdId = 0
	ItemRenameAvatarReq_ENET_IS_RELIABLE ItemRenameAvatarReq_CmdId = 1
	ItemRenameAvatarReq_IS_ALLOW_CLIENT  ItemRenameAvatarReq_CmdId = 1
)

// Enum value maps for ItemRenameAvatarReq_CmdId.
var (
	ItemRenameAvatarReq_CmdId_name = map[int32]string{
		0:    "NONE",
		1750: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
		// Duplicate value: 1: "IS_ALLOW_CLIENT",
	}
	ItemRenameAvatarReq_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1750,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"IS_ALLOW_CLIENT":  1,
	}
)

func (x ItemRenameAvatarReq_CmdId) Enum() *ItemRenameAvatarReq_CmdId {
	p := new(ItemRenameAvatarReq_CmdId)
	*p = x
	return p
}

func (x ItemRenameAvatarReq_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRenameAvatarReq_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[64].Descriptor()
}

func (ItemRenameAvatarReq_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[64]
}

func (x ItemRenameAvatarReq_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRenameAvatarReq_CmdId.Descriptor instead.
func (ItemRenameAvatarReq_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{69, 0}
}

type ItemRenameAvatarRsp_CmdId int32

const (
	ItemRenameAvatarRsp_NONE             ItemRenameAvatarRsp_CmdId = 0
	ItemRenameAvatarRsp_CMD_ID           ItemRenameAvatarRsp_CmdId = 1635
	ItemRenameAvatarRsp_ENET_CHANNEL_ID  ItemRenameAvatarRsp_CmdId = 0
	ItemRenameAvatarRsp_ENET_IS_RELIABLE ItemRenameAvatarRsp_CmdId = 1
)

// Enum value maps for ItemRenameAvatarRsp_CmdId.
var (
	ItemRenameAvatarRsp_CmdId_name = map[int32]string{
		0:    "NONE",
		1635: "CMD_ID",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1: "ENET_IS_RELIABLE",
	}
	ItemRenameAvatarRsp_CmdId_value = map[string]int32{
		"NONE":             0,
		"CMD_ID":           1635,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
	}
)

func (x ItemRenameAvatarRsp_CmdId) Enum() *ItemRenameAvatarRsp_CmdId {
	p := new(ItemRenameAvatarRsp_CmdId)
	*p = x
	return p
}

func (x ItemRenameAvatarRsp_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRenameAvatarRsp_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_cmd_avatar_proto_enumTypes[65].Descriptor()
}

func (ItemRenameAvatarRsp_CmdId) Type() protoreflect.EnumType {
	return &file_cmd_cmd_avatar_proto_enumTypes[65]
}

func (x ItemRenameAvatarRsp_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRenameAvatarRsp_CmdId.Descriptor instead.
func (ItemRenameAvatarRsp_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{70, 0}
}

type AvatarAddNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   *AvatarInfo `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsInTeam bool        `protobuf:"varint,12,opt,name=is_in_team,json=isInTeam,proto3" json:"is_in_team,omitempty"`
}

func (x *AvatarAddNotify) Reset() {
	*x = AvatarAddNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarAddNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarAddNotify) ProtoMessage() {}

func (x *AvatarAddNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarAddNotify.ProtoReflect.Descriptor instead.
func (*AvatarAddNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarAddNotify) GetAvatar() *AvatarInfo {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *AvatarAddNotify) GetIsInTeam() bool {
	if x != nil {
		return x.IsInTeam
	}
	return false
}

type AvatarDelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuidList []uint64 `protobuf:"varint,13,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
}

func (x *AvatarDelNotify) Reset() {
	*x = AvatarDelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDelNotify) ProtoMessage() {}

func (x *AvatarDelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDelNotify.ProtoReflect.Descriptor instead.
func (*AvatarDelNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{1}
}

func (x *AvatarDelNotify) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

type AvatarTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuidList []uint64 `protobuf:"varint,7,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
	TeamName       string   `protobuf:"bytes,14,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *AvatarTeam) Reset() {
	*x = AvatarTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeam) ProtoMessage() {}

func (x *AvatarTeam) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeam.ProtoReflect.Descriptor instead.
func (*AvatarTeam) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{2}
}

func (x *AvatarTeam) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

func (x *AvatarTeam) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type SetUpAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId             uint32   `protobuf:"varint,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	AvatarTeamGuidList []uint64 `protobuf:"varint,7,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,5,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *SetUpAvatarTeamReq) Reset() {
	*x = SetUpAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpAvatarTeamReq) ProtoMessage() {}

func (x *SetUpAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*SetUpAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{3}
}

func (x *SetUpAvatarTeamReq) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetUpAvatarTeamReq) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *SetUpAvatarTeamReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type SetUpAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamGuidList []uint64 `protobuf:"varint,1,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	TeamId             uint32   `protobuf:"varint,6,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Retcode            int32    `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,13,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *SetUpAvatarTeamRsp) Reset() {
	*x = SetUpAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpAvatarTeamRsp) ProtoMessage() {}

func (x *SetUpAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*SetUpAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{4}
}

func (x *SetUpAvatarTeamRsp) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *SetUpAvatarTeamRsp) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SetUpAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetUpAvatarTeamRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type ChooseCurAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId uint32 `protobuf:"varint,9,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *ChooseCurAvatarTeamReq) Reset() {
	*x = ChooseCurAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseCurAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseCurAvatarTeamReq) ProtoMessage() {}

func (x *ChooseCurAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseCurAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*ChooseCurAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{5}
}

func (x *ChooseCurAvatarTeamReq) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type ChooseCurAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurTeamId uint32 `protobuf:"varint,1,opt,name=cur_team_id,json=curTeamId,proto3" json:"cur_team_id,omitempty"`
	Retcode   int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ChooseCurAvatarTeamRsp) Reset() {
	*x = ChooseCurAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseCurAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseCurAvatarTeamRsp) ProtoMessage() {}

func (x *ChooseCurAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseCurAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*ChooseCurAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{6}
}

func (x *ChooseCurAvatarTeamRsp) GetCurTeamId() uint32 {
	if x != nil {
		return x.CurTeamId
	}
	return 0
}

func (x *ChooseCurAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ChangeAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovePos *Vector `protobuf:"bytes,15,opt,name=move_pos,json=movePos,proto3" json:"move_pos,omitempty"`
	SkillId uint32  `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Guid    uint64  `protobuf:"varint,7,opt,name=guid,proto3" json:"guid,omitempty"`
	IsMove  bool    `protobuf:"varint,10,opt,name=is_move,json=isMove,proto3" json:"is_move,omitempty"`
}

func (x *ChangeAvatarReq) Reset() {
	*x = ChangeAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarReq) ProtoMessage() {}

func (x *ChangeAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarReq.ProtoReflect.Descriptor instead.
func (*ChangeAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeAvatarReq) GetMovePos() *Vector {
	if x != nil {
		return x.MovePos
	}
	return nil
}

func (x *ChangeAvatarReq) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *ChangeAvatarReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *ChangeAvatarReq) GetIsMove() bool {
	if x != nil {
		return x.IsMove
	}
	return false
}

type ChangeAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId uint32 `protobuf:"varint,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Retcode int32  `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurGuid uint64 `protobuf:"varint,4,opt,name=cur_guid,json=curGuid,proto3" json:"cur_guid,omitempty"`
}

func (x *ChangeAvatarRsp) Reset() {
	*x = ChangeAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarRsp) ProtoMessage() {}

func (x *ChangeAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarRsp.ProtoReflect.Descriptor instead.
func (*ChangeAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeAvatarRsp) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *ChangeAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeAvatarRsp) GetCurGuid() uint64 {
	if x != nil {
		return x.CurGuid
	}
	return 0
}

type AvatarPromoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,5,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *AvatarPromoteReq) Reset() {
	*x = AvatarPromoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteReq) ProtoMessage() {}

func (x *AvatarPromoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteReq.ProtoReflect.Descriptor instead.
func (*AvatarPromoteReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{9}
}

func (x *AvatarPromoteReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type AvatarPromoteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,11,opt,name=guid,proto3" json:"guid,omitempty"`
	Retcode int32  `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarPromoteRsp) Reset() {
	*x = AvatarPromoteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteRsp) ProtoMessage() {}

func (x *AvatarPromoteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteRsp.ProtoReflect.Descriptor instead.
func (*AvatarPromoteRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{10}
}

func (x *AvatarPromoteRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *AvatarPromoteRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type SpringUseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,11,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *SpringUseReq) Reset() {
	*x = SpringUseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpringUseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpringUseReq) ProtoMessage() {}

func (x *SpringUseReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpringUseReq.ProtoReflect.Descriptor instead.
func (*SpringUseReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{11}
}

func (x *SpringUseReq) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

type SpringUseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,3,opt,name=guid,proto3" json:"guid,omitempty"`
	Retcode int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *SpringUseRsp) Reset() {
	*x = SpringUseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpringUseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpringUseRsp) ProtoMessage() {}

func (x *SpringUseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpringUseRsp.ProtoReflect.Descriptor instead.
func (*SpringUseRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{12}
}

func (x *SpringUseRsp) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *SpringUseRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type RefreshBackgroundAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshBackgroundAvatarReq) Reset() {
	*x = RefreshBackgroundAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshBackgroundAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshBackgroundAvatarReq) ProtoMessage() {}

func (x *RefreshBackgroundAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshBackgroundAvatarReq.ProtoReflect.Descriptor instead.
func (*RefreshBackgroundAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{13}
}

type RefreshBackgroundAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpFullTimeMap map[uint64]uint32 `protobuf:"bytes,15,rep,name=hp_full_time_map,json=hpFullTimeMap,proto3" json:"hp_full_time_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Retcode       int32             `protobuf:"varint,3,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *RefreshBackgroundAvatarRsp) Reset() {
	*x = RefreshBackgroundAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshBackgroundAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshBackgroundAvatarRsp) ProtoMessage() {}

func (x *RefreshBackgroundAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshBackgroundAvatarRsp.ProtoReflect.Descriptor instead.
func (*RefreshBackgroundAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshBackgroundAvatarRsp) GetHpFullTimeMap() map[uint64]uint32 {
	if x != nil {
		return x.HpFullTimeMap
	}
	return nil
}

func (x *RefreshBackgroundAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarTeamUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamMap      map[uint32]*AvatarTeam `protobuf:"bytes,2,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TempAvatarGuidList []uint64               `protobuf:"varint,13,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
}

func (x *AvatarTeamUpdateNotify) Reset() {
	*x = AvatarTeamUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeamUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeamUpdateNotify) ProtoMessage() {}

func (x *AvatarTeamUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeamUpdateNotify.ProtoReflect.Descriptor instead.
func (*AvatarTeamUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{15}
}

func (x *AvatarTeamUpdateNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarTeamUpdateNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

type AvatarDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamOrderList []uint32               `protobuf:"varint,9,rep,packed,name=backup_avatar_team_order_list,json=backupAvatarTeamOrderList,proto3" json:"backup_avatar_team_order_list,omitempty"`
	TempAvatarGuidList        []uint64               `protobuf:"varint,12,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
	AvatarList                []*AvatarInfo          `protobuf:"bytes,6,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"`
	CurAvatarTeamId           uint32                 `protobuf:"varint,2,opt,name=cur_avatar_team_id,json=curAvatarTeamId,proto3" json:"cur_avatar_team_id,omitempty"`
	AvatarRenameList          []*AvatarRenameInfo    `protobuf:"bytes,4,rep,name=avatar_rename_list,json=avatarRenameList,proto3" json:"avatar_rename_list,omitempty"`
	OwnedFlycloakList         []uint32               `protobuf:"varint,1,rep,packed,name=owned_flycloak_list,json=ownedFlycloakList,proto3" json:"owned_flycloak_list,omitempty"`
	OwnedCostumeList          []uint32               `protobuf:"varint,11,rep,packed,name=owned_costume_list,json=ownedCostumeList,proto3" json:"owned_costume_list,omitempty"`
	AvatarTeamMap             map[uint32]*AvatarTeam `protobuf:"bytes,7,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChooseAvatarGuid          uint64                 `protobuf:"varint,8,opt,name=choose_avatar_guid,json=chooseAvatarGuid,proto3" json:"choose_avatar_guid,omitempty"`
}

func (x *AvatarDataNotify) Reset() {
	*x = AvatarDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDataNotify) ProtoMessage() {}

func (x *AvatarDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{16}
}

func (x *AvatarDataNotify) GetBackupAvatarTeamOrderList() []uint32 {
	if x != nil {
		return x.BackupAvatarTeamOrderList
	}
	return nil
}

func (x *AvatarDataNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

func (x *AvatarDataNotify) GetAvatarList() []*AvatarInfo {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *AvatarDataNotify) GetCurAvatarTeamId() uint32 {
	if x != nil {
		return x.CurAvatarTeamId
	}
	return 0
}

func (x *AvatarDataNotify) GetAvatarRenameList() []*AvatarRenameInfo {
	if x != nil {
		return x.AvatarRenameList
	}
	return nil
}

func (x *AvatarDataNotify) GetOwnedFlycloakList() []uint32 {
	if x != nil {
		return x.OwnedFlycloakList
	}
	return nil
}

func (x *AvatarDataNotify) GetOwnedCostumeList() []uint32 {
	if x != nil {
		return x.OwnedCostumeList
	}
	return nil
}

func (x *AvatarDataNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarDataNotify) GetChooseAvatarGuid() uint64 {
	if x != nil {
		return x.ChooseAvatarGuid
	}
	return 0
}

type AvatarUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,6,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	ItemId     uint32 `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *AvatarUpgradeReq) Reset() {
	*x = AvatarUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUpgradeReq) ProtoMessage() {}

func (x *AvatarUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUpgradeReq.ProtoReflect.Descriptor instead.
func (*AvatarUpgradeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{17}
}

func (x *AvatarUpgradeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarUpgradeReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AvatarUpgradeReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type AvatarUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel        uint32             `protobuf:"varint,6,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	OldLevel        uint32             `protobuf:"varint,13,opt,name=old_level,json=oldLevel,proto3" json:"old_level,omitempty"`
	OldFightPropMap map[uint32]float32 `protobuf:"bytes,10,rep,name=old_fight_prop_map,json=oldFightPropMap,proto3" json:"old_fight_prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Retcode         int32              `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurFightPropMap map[uint32]float32 `protobuf:"bytes,4,rep,name=cur_fight_prop_map,json=curFightPropMap,proto3" json:"cur_fight_prop_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	AvatarGuid      uint64             `protobuf:"varint,15,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarUpgradeRsp) Reset() {
	*x = AvatarUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUpgradeRsp) ProtoMessage() {}

func (x *AvatarUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUpgradeRsp.ProtoReflect.Descriptor instead.
func (*AvatarUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{18}
}

func (x *AvatarUpgradeRsp) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetOldLevel() uint32 {
	if x != nil {
		return x.OldLevel
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetOldFightPropMap() map[uint32]float32 {
	if x != nil {
		return x.OldFightPropMap
	}
	return nil
}

func (x *AvatarUpgradeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarUpgradeRsp) GetCurFightPropMap() map[uint32]float32 {
	if x != nil {
		return x.CurFightPropMap
	}
	return nil
}

func (x *AvatarUpgradeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarDieAnimationEndReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RebornPos *Vector `protobuf:"bytes,3,opt,name=reborn_pos,json=rebornPos,proto3" json:"reborn_pos,omitempty"`
	DieGuid   uint64  `protobuf:"varint,7,opt,name=die_guid,json=dieGuid,proto3" json:"die_guid,omitempty"`
	SkillId   uint32  `protobuf:"varint,8,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
}

func (x *AvatarDieAnimationEndReq) Reset() {
	*x = AvatarDieAnimationEndReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDieAnimationEndReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDieAnimationEndReq) ProtoMessage() {}

func (x *AvatarDieAnimationEndReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDieAnimationEndReq.ProtoReflect.Descriptor instead.
func (*AvatarDieAnimationEndReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{19}
}

func (x *AvatarDieAnimationEndReq) GetRebornPos() *Vector {
	if x != nil {
		return x.RebornPos
	}
	return nil
}

func (x *AvatarDieAnimationEndReq) GetDieGuid() uint64 {
	if x != nil {
		return x.DieGuid
	}
	return 0
}

func (x *AvatarDieAnimationEndReq) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

type AvatarDieAnimationEndRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId uint32 `protobuf:"varint,13,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Retcode int32  `protobuf:"varint,14,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DieGuid uint64 `protobuf:"varint,15,opt,name=die_guid,json=dieGuid,proto3" json:"die_guid,omitempty"`
}

func (x *AvatarDieAnimationEndRsp) Reset() {
	*x = AvatarDieAnimationEndRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDieAnimationEndRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDieAnimationEndRsp) ProtoMessage() {}

func (x *AvatarDieAnimationEndRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDieAnimationEndRsp.ProtoReflect.Descriptor instead.
func (*AvatarDieAnimationEndRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{20}
}

func (x *AvatarDieAnimationEndRsp) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *AvatarDieAnimationEndRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarDieAnimationEndRsp) GetDieGuid() uint64 {
	if x != nil {
		return x.DieGuid
	}
	return 0
}

type AvatarChangeElementTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId uint32 `protobuf:"varint,7,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	AreaId  uint32 `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
}

func (x *AvatarChangeElementTypeReq) Reset() {
	*x = AvatarChangeElementTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeElementTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeElementTypeReq) ProtoMessage() {}

func (x *AvatarChangeElementTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeElementTypeReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeElementTypeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{21}
}

func (x *AvatarChangeElementTypeReq) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *AvatarChangeElementTypeReq) GetAreaId() uint32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

type AvatarChangeElementTypeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarChangeElementTypeRsp) Reset() {
	*x = AvatarChangeElementTypeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeElementTypeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeElementTypeRsp) ProtoMessage() {}

func (x *AvatarChangeElementTypeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeElementTypeRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeElementTypeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{22}
}

func (x *AvatarChangeElementTypeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarFetterDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetterInfoMap map[uint64]*AvatarFetterInfo `protobuf:"bytes,15,rep,name=fetter_info_map,json=fetterInfoMap,proto3" json:"fetter_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarFetterDataNotify) Reset() {
	*x = AvatarFetterDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterDataNotify) ProtoMessage() {}

func (x *AvatarFetterDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarFetterDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{23}
}

func (x *AvatarFetterDataNotify) GetFetterInfoMap() map[uint64]*AvatarFetterInfo {
	if x != nil {
		return x.FetterInfoMap
	}
	return nil
}

type AvatarExpeditionDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,6,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarExpeditionDataNotify) Reset() {
	*x = AvatarExpeditionDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionDataNotify) ProtoMessage() {}

func (x *AvatarExpeditionDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{24}
}

func (x *AvatarExpeditionDataNotify) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

type AvatarExpeditionAllDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AvatarExpeditionAllDataReq) Reset() {
	*x = AvatarExpeditionAllDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionAllDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionAllDataReq) ProtoMessage() {}

func (x *AvatarExpeditionAllDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionAllDataReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionAllDataReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{25}
}

type AvatarExpeditionAllDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenExpeditionList   []uint32                         `protobuf:"varint,3,rep,packed,name=open_expedition_list,json=openExpeditionList,proto3" json:"open_expedition_list,omitempty"`
	Retcode              int32                            `protobuf:"varint,15,opt,name=retcode,proto3" json:"retcode,omitempty"`
	ExpeditionCountLimit uint32                           `protobuf:"varint,12,opt,name=expedition_count_limit,json=expeditionCountLimit,proto3" json:"expedition_count_limit,omitempty"`
	ExpeditionInfoMap    map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,4,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarExpeditionAllDataRsp) Reset() {
	*x = AvatarExpeditionAllDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionAllDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionAllDataRsp) ProtoMessage() {}

func (x *AvatarExpeditionAllDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionAllDataRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionAllDataRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{26}
}

func (x *AvatarExpeditionAllDataRsp) GetOpenExpeditionList() []uint32 {
	if x != nil {
		return x.OpenExpeditionList
	}
	return nil
}

func (x *AvatarExpeditionAllDataRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarExpeditionAllDataRsp) GetExpeditionCountLimit() uint32 {
	if x != nil {
		return x.ExpeditionCountLimit
	}
	return 0
}

func (x *AvatarExpeditionAllDataRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

type AvatarExpeditionStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpId      uint32 `protobuf:"varint,9,opt,name=exp_id,json=expId,proto3" json:"exp_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	HourTime   uint32 `protobuf:"varint,2,opt,name=hour_time,json=hourTime,proto3" json:"hour_time,omitempty"`
}

func (x *AvatarExpeditionStartReq) Reset() {
	*x = AvatarExpeditionStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionStartReq) ProtoMessage() {}

func (x *AvatarExpeditionStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionStartReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionStartReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{27}
}

func (x *AvatarExpeditionStartReq) GetExpId() uint32 {
	if x != nil {
		return x.ExpId
	}
	return 0
}

func (x *AvatarExpeditionStartReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarExpeditionStartReq) GetHourTime() uint32 {
	if x != nil {
		return x.HourTime
	}
	return 0
}

type AvatarExpeditionStartRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,2,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionStartRsp) Reset() {
	*x = AvatarExpeditionStartRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionStartRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionStartRsp) ProtoMessage() {}

func (x *AvatarExpeditionStartRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionStartRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionStartRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{28}
}

func (x *AvatarExpeditionStartRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionStartRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarExpeditionCallBackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid []uint64 `protobuf:"varint,13,rep,packed,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarExpeditionCallBackReq) Reset() {
	*x = AvatarExpeditionCallBackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionCallBackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionCallBackReq) ProtoMessage() {}

func (x *AvatarExpeditionCallBackReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionCallBackReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionCallBackReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{29}
}

func (x *AvatarExpeditionCallBackReq) GetAvatarGuid() []uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return nil
}

type AvatarExpeditionCallBackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,9,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionCallBackRsp) Reset() {
	*x = AvatarExpeditionCallBackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionCallBackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionCallBackRsp) ProtoMessage() {}

func (x *AvatarExpeditionCallBackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionCallBackRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionCallBackRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{30}
}

func (x *AvatarExpeditionCallBackRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionCallBackRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarExpeditionGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,14,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarExpeditionGetRewardReq) Reset() {
	*x = AvatarExpeditionGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionGetRewardReq) ProtoMessage() {}

func (x *AvatarExpeditionGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionGetRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionGetRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{31}
}

func (x *AvatarExpeditionGetRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarExpeditionGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraItemList     []*ItemParam                     `protobuf:"bytes,9,rep,name=extra_item_list,json=extraItemList,proto3" json:"extra_item_list,omitempty"`
	ItemList          []*ItemParam                     `protobuf:"bytes,8,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	ExpeditionInfoMap map[uint64]*AvatarExpeditionInfo `protobuf:"bytes,12,rep,name=expedition_info_map,json=expeditionInfoMap,proto3" json:"expedition_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retcode           int32                            `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarExpeditionGetRewardRsp) Reset() {
	*x = AvatarExpeditionGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarExpeditionGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarExpeditionGetRewardRsp) ProtoMessage() {}

func (x *AvatarExpeditionGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarExpeditionGetRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarExpeditionGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{32}
}

func (x *AvatarExpeditionGetRewardRsp) GetExtraItemList() []*ItemParam {
	if x != nil {
		return x.ExtraItemList
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetItemList() []*ItemParam {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetExpeditionInfoMap() map[uint64]*AvatarExpeditionInfo {
	if x != nil {
		return x.ExpeditionInfoMap
	}
	return nil
}

func (x *AvatarExpeditionGetRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type ChangeMpTeamAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurAvatarGuid  uint64   `protobuf:"varint,4,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
	AvatarGuidList []uint64 `protobuf:"varint,8,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
}

func (x *ChangeMpTeamAvatarReq) Reset() {
	*x = ChangeMpTeamAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMpTeamAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMpTeamAvatarReq) ProtoMessage() {}

func (x *ChangeMpTeamAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMpTeamAvatarReq.ProtoReflect.Descriptor instead.
func (*ChangeMpTeamAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{33}
}

func (x *ChangeMpTeamAvatarReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

func (x *ChangeMpTeamAvatarReq) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

type ChangeMpTeamAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode        int32    `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuidList []uint64 `protobuf:"varint,3,rep,packed,name=avatar_guid_list,json=avatarGuidList,proto3" json:"avatar_guid_list,omitempty"`
	CurAvatarGuid  uint64   `protobuf:"varint,13,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *ChangeMpTeamAvatarRsp) Reset() {
	*x = ChangeMpTeamAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMpTeamAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMpTeamAvatarRsp) ProtoMessage() {}

func (x *ChangeMpTeamAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMpTeamAvatarRsp.ProtoReflect.Descriptor instead.
func (*ChangeMpTeamAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{34}
}

func (x *ChangeMpTeamAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeMpTeamAvatarRsp) GetAvatarGuidList() []uint64 {
	if x != nil {
		return x.AvatarGuidList
	}
	return nil
}

func (x *ChangeMpTeamAvatarRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type ChangeTeamNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int32  `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName string `protobuf:"bytes,9,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *ChangeTeamNameReq) Reset() {
	*x = ChangeTeamNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeamNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeamNameReq) ProtoMessage() {}

func (x *ChangeTeamNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeamNameReq.ProtoReflect.Descriptor instead.
func (*ChangeTeamNameReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{35}
}

func (x *ChangeTeamNameReq) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ChangeTeamNameReq) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type ChangeTeamNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode  int32  `protobuf:"varint,11,opt,name=retcode,proto3" json:"retcode,omitempty"`
	TeamName string `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	TeamId   int32  `protobuf:"varint,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *ChangeTeamNameRsp) Reset() {
	*x = ChangeTeamNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeamNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeamNameRsp) ProtoMessage() {}

func (x *ChangeTeamNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeamNameRsp.ProtoReflect.Descriptor instead.
func (*ChangeTeamNameRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeTeamNameRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *ChangeTeamNameRsp) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *ChangeTeamNameRsp) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type SceneTeamAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarAbilityInfo   *AbilitySyncStateInfo `protobuf:"bytes,5,opt,name=avatar_ability_info,json=avatarAbilityInfo,proto3" json:"avatar_ability_info,omitempty"`
	AvatarInfo          *AvatarInfo           `protobuf:"bytes,8,opt,name=avatar_info,json=avatarInfo,proto3" json:"avatar_info,omitempty"`
	IsOnScene           bool                  `protobuf:"varint,152,opt,name=is_on_scene,json=isOnScene,proto3" json:"is_on_scene,omitempty"`
	EntityId            uint32                `protobuf:"varint,9,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	AvatarGuid          uint64                `protobuf:"varint,15,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	SceneId             uint32                `protobuf:"varint,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	WeaponEntityId      uint32                `protobuf:"varint,7,opt,name=weapon_entity_id,json=weaponEntityId,proto3" json:"weapon_entity_id,omitempty"`
	SceneAvatarInfo     *SceneAvatarInfo      `protobuf:"bytes,3,opt,name=scene_avatar_info,json=sceneAvatarInfo,proto3" json:"scene_avatar_info,omitempty"`
	WeaponGuid          uint64                `protobuf:"varint,4,opt,name=weapon_guid,json=weaponGuid,proto3" json:"weapon_guid,omitempty"`
	WeaponAbilityInfo   *AbilitySyncStateInfo `protobuf:"bytes,11,opt,name=weapon_ability_info,json=weaponAbilityInfo,proto3" json:"weapon_ability_info,omitempty"`
	SceneEntityInfo     *SceneEntityInfo      `protobuf:"bytes,12,opt,name=scene_entity_info,json=sceneEntityInfo,proto3" json:"scene_entity_info,omitempty"`
	PlayerUid           uint32                `protobuf:"varint,14,opt,name=player_uid,json=playerUid,proto3" json:"player_uid,omitempty"`
	IsReconnect         bool                  `protobuf:"varint,6,opt,name=is_reconnect,json=isReconnect,proto3" json:"is_reconnect,omitempty"`
	AbilityControlBlock *AbilityControlBlock  `protobuf:"bytes,2,opt,name=ability_control_block,json=abilityControlBlock,proto3" json:"ability_control_block,omitempty"`
	IsPlayerCurAvatar   bool                  `protobuf:"varint,13,opt,name=is_player_cur_avatar,json=isPlayerCurAvatar,proto3" json:"is_player_cur_avatar,omitempty"`
	ServerBuffList      []*ServerBuff         `protobuf:"bytes,10,rep,name=server_buff_list,json=serverBuffList,proto3" json:"server_buff_list,omitempty"`
}

func (x *SceneTeamAvatar) Reset() {
	*x = SceneTeamAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTeamAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTeamAvatar) ProtoMessage() {}

func (x *SceneTeamAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTeamAvatar.ProtoReflect.Descriptor instead.
func (*SceneTeamAvatar) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{37}
}

func (x *SceneTeamAvatar) GetAvatarAbilityInfo() *AbilitySyncStateInfo {
	if x != nil {
		return x.AvatarAbilityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetAvatarInfo() *AvatarInfo {
	if x != nil {
		return x.AvatarInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetIsOnScene() bool {
	if x != nil {
		return x.IsOnScene
	}
	return false
}

func (x *SceneTeamAvatar) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *SceneTeamAvatar) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *SceneTeamAvatar) GetSceneId() uint32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *SceneTeamAvatar) GetWeaponEntityId() uint32 {
	if x != nil {
		return x.WeaponEntityId
	}
	return 0
}

func (x *SceneTeamAvatar) GetSceneAvatarInfo() *SceneAvatarInfo {
	if x != nil {
		return x.SceneAvatarInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetWeaponGuid() uint64 {
	if x != nil {
		return x.WeaponGuid
	}
	return 0
}

func (x *SceneTeamAvatar) GetWeaponAbilityInfo() *AbilitySyncStateInfo {
	if x != nil {
		return x.WeaponAbilityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetSceneEntityInfo() *SceneEntityInfo {
	if x != nil {
		return x.SceneEntityInfo
	}
	return nil
}

func (x *SceneTeamAvatar) GetPlayerUid() uint32 {
	if x != nil {
		return x.PlayerUid
	}
	return 0
}

func (x *SceneTeamAvatar) GetIsReconnect() bool {
	if x != nil {
		return x.IsReconnect
	}
	return false
}

func (x *SceneTeamAvatar) GetAbilityControlBlock() *AbilityControlBlock {
	if x != nil {
		return x.AbilityControlBlock
	}
	return nil
}

func (x *SceneTeamAvatar) GetIsPlayerCurAvatar() bool {
	if x != nil {
		return x.IsPlayerCurAvatar
	}
	return false
}

func (x *SceneTeamAvatar) GetServerBuffList() []*ServerBuff {
	if x != nil {
		return x.ServerBuffList
	}
	return nil
}

type SceneTeamUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneTeamAvatarList []*SceneTeamAvatar `protobuf:"bytes,11,rep,name=scene_team_avatar_list,json=sceneTeamAvatarList,proto3" json:"scene_team_avatar_list,omitempty"`
	IsInMp              bool               `protobuf:"varint,15,opt,name=is_in_mp,json=isInMp,proto3" json:"is_in_mp,omitempty"`
}

func (x *SceneTeamUpdateNotify) Reset() {
	*x = SceneTeamUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneTeamUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneTeamUpdateNotify) ProtoMessage() {}

func (x *SceneTeamUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneTeamUpdateNotify.ProtoReflect.Descriptor instead.
func (*SceneTeamUpdateNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{38}
}

func (x *SceneTeamUpdateNotify) GetSceneTeamAvatarList() []*SceneTeamAvatar {
	if x != nil {
		return x.SceneTeamAvatarList
	}
	return nil
}

func (x *SceneTeamUpdateNotify) GetIsInMp() bool {
	if x != nil {
		return x.IsInMp
	}
	return false
}

type FocusAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,1,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	IsFocus    bool   `protobuf:"varint,8,opt,name=is_focus,json=isFocus,proto3" json:"is_focus,omitempty"`
}

func (x *FocusAvatarReq) Reset() {
	*x = FocusAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusAvatarReq) ProtoMessage() {}

func (x *FocusAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusAvatarReq.ProtoReflect.Descriptor instead.
func (*FocusAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{39}
}

func (x *FocusAvatarReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *FocusAvatarReq) GetIsFocus() bool {
	if x != nil {
		return x.IsFocus
	}
	return false
}

type FocusAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	IsFocus    bool   `protobuf:"varint,11,opt,name=is_focus,json=isFocus,proto3" json:"is_focus,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *FocusAvatarRsp) Reset() {
	*x = FocusAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusAvatarRsp) ProtoMessage() {}

func (x *FocusAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusAvatarRsp.ProtoReflect.Descriptor instead.
func (*FocusAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{40}
}

func (x *FocusAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *FocusAvatarRsp) GetIsFocus() bool {
	if x != nil {
		return x.IsFocus
	}
	return false
}

func (x *FocusAvatarRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarSatiationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishTime        float32 `protobuf:"fixed32,14,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	AvatarGuid        uint64  `protobuf:"varint,13,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PenaltyFinishTime float32 `protobuf:"fixed32,12,opt,name=penalty_finish_time,json=penaltyFinishTime,proto3" json:"penalty_finish_time,omitempty"`
}

func (x *AvatarSatiationData) Reset() {
	*x = AvatarSatiationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSatiationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSatiationData) ProtoMessage() {}

func (x *AvatarSatiationData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSatiationData.ProtoReflect.Descriptor instead.
func (*AvatarSatiationData) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{41}
}

func (x *AvatarSatiationData) GetFinishTime() float32 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *AvatarSatiationData) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarSatiationData) GetPenaltyFinishTime() float32 {
	if x != nil {
		return x.PenaltyFinishTime
	}
	return 0
}

type AvatarSatiationDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SatiationDataList []*AvatarSatiationData `protobuf:"bytes,6,rep,name=satiation_data_list,json=satiationDataList,proto3" json:"satiation_data_list,omitempty"`
}

func (x *AvatarSatiationDataNotify) Reset() {
	*x = AvatarSatiationDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSatiationDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSatiationDataNotify) ProtoMessage() {}

func (x *AvatarSatiationDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSatiationDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarSatiationDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{42}
}

func (x *AvatarSatiationDataNotify) GetSatiationDataList() []*AvatarSatiationData {
	if x != nil {
		return x.SatiationDataList
	}
	return nil
}

type AvatarWearFlycloakReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	FlycloakId uint32 `protobuf:"varint,13,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
}

func (x *AvatarWearFlycloakReq) Reset() {
	*x = AvatarWearFlycloakReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarWearFlycloakReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarWearFlycloakReq) ProtoMessage() {}

func (x *AvatarWearFlycloakReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarWearFlycloakReq.ProtoReflect.Descriptor instead.
func (*AvatarWearFlycloakReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{43}
}

func (x *AvatarWearFlycloakReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarWearFlycloakReq) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

type AvatarWearFlycloakRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,13,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,6,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AvatarWearFlycloakRsp) Reset() {
	*x = AvatarWearFlycloakRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarWearFlycloakRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarWearFlycloakRsp) ProtoMessage() {}

func (x *AvatarWearFlycloakRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarWearFlycloakRsp.ProtoReflect.Descriptor instead.
func (*AvatarWearFlycloakRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{44}
}

func (x *AvatarWearFlycloakRsp) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

func (x *AvatarWearFlycloakRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarWearFlycloakRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarFlycloakChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,8,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,2,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarFlycloakChangeNotify) Reset() {
	*x = AvatarFlycloakChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFlycloakChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFlycloakChangeNotify) ProtoMessage() {}

func (x *AvatarFlycloakChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFlycloakChangeNotify.ProtoReflect.Descriptor instead.
func (*AvatarFlycloakChangeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{45}
}

func (x *AvatarFlycloakChangeNotify) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

func (x *AvatarFlycloakChangeNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarGainFlycloakNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlycloakId uint32 `protobuf:"varint,3,opt,name=flycloak_id,json=flycloakId,proto3" json:"flycloak_id,omitempty"`
}

func (x *AvatarGainFlycloakNotify) Reset() {
	*x = AvatarGainFlycloakNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarGainFlycloakNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarGainFlycloakNotify) ProtoMessage() {}

func (x *AvatarGainFlycloakNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarGainFlycloakNotify.ProtoReflect.Descriptor instead.
func (*AvatarGainFlycloakNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{46}
}

func (x *AvatarGainFlycloakNotify) GetFlycloakId() uint32 {
	if x != nil {
		return x.FlycloakId
	}
	return 0
}

type AvatarEquipAffixStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid     uint64                `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	EquipAffixInfo *AvatarEquipAffixInfo `protobuf:"bytes,12,opt,name=equip_affix_info,json=equipAffixInfo,proto3" json:"equip_affix_info,omitempty"`
}

func (x *AvatarEquipAffixStartNotify) Reset() {
	*x = AvatarEquipAffixStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarEquipAffixStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarEquipAffixStartNotify) ProtoMessage() {}

func (x *AvatarEquipAffixStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarEquipAffixStartNotify.ProtoReflect.Descriptor instead.
func (*AvatarEquipAffixStartNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{47}
}

func (x *AvatarEquipAffixStartNotify) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarEquipAffixStartNotify) GetEquipAffixInfo() *AvatarEquipAffixInfo {
	if x != nil {
		return x.EquipAffixInfo
	}
	return nil
}

type AvatarFetterLevelRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid  uint64 `protobuf:"varint,1,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	FetterLevel uint32 `protobuf:"varint,6,opt,name=fetter_level,json=fetterLevel,proto3" json:"fetter_level,omitempty"`
}

func (x *AvatarFetterLevelRewardReq) Reset() {
	*x = AvatarFetterLevelRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterLevelRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterLevelRewardReq) ProtoMessage() {}

func (x *AvatarFetterLevelRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterLevelRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarFetterLevelRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{48}
}

func (x *AvatarFetterLevelRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarFetterLevelRewardReq) GetFetterLevel() uint32 {
	if x != nil {
		return x.FetterLevel
	}
	return 0
}

type AvatarFetterLevelRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid  uint64 `protobuf:"varint,4,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	RewardId    uint32 `protobuf:"varint,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Retcode     int32  `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	FetterLevel uint32 `protobuf:"varint,14,opt,name=fetter_level,json=fetterLevel,proto3" json:"fetter_level,omitempty"`
}

func (x *AvatarFetterLevelRewardRsp) Reset() {
	*x = AvatarFetterLevelRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFetterLevelRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFetterLevelRewardRsp) ProtoMessage() {}

func (x *AvatarFetterLevelRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFetterLevelRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarFetterLevelRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{49}
}

func (x *AvatarFetterLevelRewardRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarFetterLevelRewardRsp) GetFetterLevel() uint32 {
	if x != nil {
		return x.FetterLevel
	}
	return 0
}

type AddNoGachaAvatarCardTransferItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  uint32 `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
	ItemId uint32 `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	IsNew  bool   `protobuf:"varint,15,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *AddNoGachaAvatarCardTransferItem) Reset() {
	*x = AddNoGachaAvatarCardTransferItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoGachaAvatarCardTransferItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoGachaAvatarCardTransferItem) ProtoMessage() {}

func (x *AddNoGachaAvatarCardTransferItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoGachaAvatarCardTransferItem.ProtoReflect.Descriptor instead.
func (*AddNoGachaAvatarCardTransferItem) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{50}
}

func (x *AddNoGachaAvatarCardTransferItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AddNoGachaAvatarCardTransferItem) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AddNoGachaAvatarCardTransferItem) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type AddNoGachaAvatarCardNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferItemList    []*AddNoGachaAvatarCardTransferItem `protobuf:"bytes,4,rep,name=transfer_item_list,json=transferItemList,proto3" json:"transfer_item_list,omitempty"`
	InitialPromoteLevel uint32                              `protobuf:"varint,2,opt,name=initial_promote_level,json=initialPromoteLevel,proto3" json:"initial_promote_level,omitempty"`
	AvatarId            uint32                              `protobuf:"varint,8,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	IsTransferToItem    bool                                `protobuf:"varint,6,opt,name=is_transfer_to_item,json=isTransferToItem,proto3" json:"is_transfer_to_item,omitempty"`
	Reason              uint32                              `protobuf:"varint,9,opt,name=reason,proto3" json:"reason,omitempty"`
	InitialLevel        uint32                              `protobuf:"varint,10,opt,name=initial_level,json=initialLevel,proto3" json:"initial_level,omitempty"`
	ItemId              uint32                              `protobuf:"varint,14,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *AddNoGachaAvatarCardNotify) Reset() {
	*x = AddNoGachaAvatarCardNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoGachaAvatarCardNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoGachaAvatarCardNotify) ProtoMessage() {}

func (x *AddNoGachaAvatarCardNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoGachaAvatarCardNotify.ProtoReflect.Descriptor instead.
func (*AddNoGachaAvatarCardNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{51}
}

func (x *AddNoGachaAvatarCardNotify) GetTransferItemList() []*AddNoGachaAvatarCardTransferItem {
	if x != nil {
		return x.TransferItemList
	}
	return nil
}

func (x *AddNoGachaAvatarCardNotify) GetInitialPromoteLevel() uint32 {
	if x != nil {
		return x.InitialPromoteLevel
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetIsTransferToItem() bool {
	if x != nil {
		return x.IsTransferToItem
	}
	return false
}

func (x *AddNoGachaAvatarCardNotify) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetInitialLevel() uint32 {
	if x != nil {
		return x.InitialLevel
	}
	return 0
}

func (x *AddNoGachaAvatarCardNotify) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type AvatarPromoteGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid   uint64 `protobuf:"varint,7,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PromoteLevel uint32 `protobuf:"varint,12,opt,name=promote_level,json=promoteLevel,proto3" json:"promote_level,omitempty"`
}

func (x *AvatarPromoteGetRewardReq) Reset() {
	*x = AvatarPromoteGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteGetRewardReq) ProtoMessage() {}

func (x *AvatarPromoteGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteGetRewardReq.ProtoReflect.Descriptor instead.
func (*AvatarPromoteGetRewardReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{52}
}

func (x *AvatarPromoteGetRewardReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarPromoteGetRewardReq) GetPromoteLevel() uint32 {
	if x != nil {
		return x.PromoteLevel
	}
	return 0
}

type AvatarPromoteGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32  `protobuf:"varint,10,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RewardId     uint32 `protobuf:"varint,15,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	AvatarGuid   uint64 `protobuf:"varint,11,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	PromoteLevel uint32 `protobuf:"varint,12,opt,name=promote_level,json=promoteLevel,proto3" json:"promote_level,omitempty"`
}

func (x *AvatarPromoteGetRewardRsp) Reset() {
	*x = AvatarPromoteGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarPromoteGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarPromoteGetRewardRsp) ProtoMessage() {}

func (x *AvatarPromoteGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarPromoteGetRewardRsp.ProtoReflect.Descriptor instead.
func (*AvatarPromoteGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{53}
}

func (x *AvatarPromoteGetRewardRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarPromoteGetRewardRsp) GetPromoteLevel() uint32 {
	if x != nil {
		return x.PromoteLevel
	}
	return 0
}

type AvatarChangeCostumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostumeId  uint32 `protobuf:"varint,4,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,2,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeCostumeReq) Reset() {
	*x = AvatarChangeCostumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeReq) ProtoMessage() {}

func (x *AvatarChangeCostumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{54}
}

func (x *AvatarChangeCostumeReq) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

func (x *AvatarChangeCostumeReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarChangeCostumeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarGuid uint64 `protobuf:"varint,12,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
	Retcode    int32  `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CostumeId  uint32 `protobuf:"varint,13,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *AvatarChangeCostumeRsp) Reset() {
	*x = AvatarChangeCostumeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeRsp) ProtoMessage() {}

func (x *AvatarChangeCostumeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{55}
}

func (x *AvatarChangeCostumeRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

func (x *AvatarChangeCostumeRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarChangeCostumeRsp) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type AvatarChangeCostumeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityInfo *SceneEntityInfo `protobuf:"bytes,7,opt,name=entity_info,json=entityInfo,proto3" json:"entity_info,omitempty"`
}

func (x *AvatarChangeCostumeNotify) Reset() {
	*x = AvatarChangeCostumeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeCostumeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeCostumeNotify) ProtoMessage() {}

func (x *AvatarChangeCostumeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeCostumeNotify.ProtoReflect.Descriptor instead.
func (*AvatarChangeCostumeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{56}
}

func (x *AvatarChangeCostumeNotify) GetEntityInfo() *SceneEntityInfo {
	if x != nil {
		return x.EntityInfo
	}
	return nil
}

type AvatarGainCostumeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostumeId uint32 `protobuf:"varint,15,opt,name=costume_id,json=costumeId,proto3" json:"costume_id,omitempty"`
}

func (x *AvatarGainCostumeNotify) Reset() {
	*x = AvatarGainCostumeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarGainCostumeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarGainCostumeNotify) ProtoMessage() {}

func (x *AvatarGainCostumeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarGainCostumeNotify.ProtoReflect.Descriptor instead.
func (*AvatarGainCostumeNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{57}
}

func (x *AvatarGainCostumeNotify) GetCostumeId() uint32 {
	if x != nil {
		return x.CostumeId
	}
	return 0
}

type AvatarChangeAnimHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimHash   uint32 `protobuf:"varint,6,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,3,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeAnimHashReq) Reset() {
	*x = AvatarChangeAnimHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeAnimHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeAnimHashReq) ProtoMessage() {}

func (x *AvatarChangeAnimHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeAnimHashReq.ProtoReflect.Descriptor instead.
func (*AvatarChangeAnimHashReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{58}
}

func (x *AvatarChangeAnimHashReq) GetAnimHash() uint32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *AvatarChangeAnimHashReq) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type AvatarChangeAnimHashRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimHash   uint32 `protobuf:"varint,13,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"`
	Retcode    int32  `protobuf:"varint,5,opt,name=retcode,proto3" json:"retcode,omitempty"`
	AvatarGuid uint64 `protobuf:"varint,10,opt,name=avatar_guid,json=avatarGuid,proto3" json:"avatar_guid,omitempty"`
}

func (x *AvatarChangeAnimHashRsp) Reset() {
	*x = AvatarChangeAnimHashRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarChangeAnimHashRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarChangeAnimHashRsp) ProtoMessage() {}

func (x *AvatarChangeAnimHashRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarChangeAnimHashRsp.ProtoReflect.Descriptor instead.
func (*AvatarChangeAnimHashRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{59}
}

func (x *AvatarChangeAnimHashRsp) GetAnimHash() uint32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *AvatarChangeAnimHashRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *AvatarChangeAnimHashRsp) GetAvatarGuid() uint64 {
	if x != nil {
		return x.AvatarGuid
	}
	return 0
}

type PersistentDungeonSwitchAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurAvatarGuid      uint64   `protobuf:"varint,8,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
	AvatarTeamGuidList []uint64 `protobuf:"varint,3,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
}

func (x *PersistentDungeonSwitchAvatarReq) Reset() {
	*x = PersistentDungeonSwitchAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistentDungeonSwitchAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentDungeonSwitchAvatarReq) ProtoMessage() {}

func (x *PersistentDungeonSwitchAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarReq.ProtoReflect.Descriptor instead.
func (*PersistentDungeonSwitchAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{60}
}

func (x *PersistentDungeonSwitchAvatarReq) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

func (x *PersistentDungeonSwitchAvatarReq) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

type PersistentDungeonSwitchAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarTeamGuidList []uint64 `protobuf:"varint,14,rep,packed,name=avatar_team_guid_list,json=avatarTeamGuidList,proto3" json:"avatar_team_guid_list,omitempty"`
	Retcode            int32    `protobuf:"varint,7,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurAvatarGuid      uint64   `protobuf:"varint,15,opt,name=cur_avatar_guid,json=curAvatarGuid,proto3" json:"cur_avatar_guid,omitempty"`
}

func (x *PersistentDungeonSwitchAvatarRsp) Reset() {
	*x = PersistentDungeonSwitchAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistentDungeonSwitchAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentDungeonSwitchAvatarRsp) ProtoMessage() {}

func (x *PersistentDungeonSwitchAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentDungeonSwitchAvatarRsp.ProtoReflect.Descriptor instead.
func (*PersistentDungeonSwitchAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{61}
}

func (x *PersistentDungeonSwitchAvatarRsp) GetAvatarTeamGuidList() []uint64 {
	if x != nil {
		return x.AvatarTeamGuidList
	}
	return nil
}

func (x *PersistentDungeonSwitchAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *PersistentDungeonSwitchAvatarRsp) GetCurAvatarGuid() uint64 {
	if x != nil {
		return x.CurAvatarGuid
	}
	return 0
}

type AddBackupAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBackupAvatarTeamReq) Reset() {
	*x = AddBackupAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBackupAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupAvatarTeamReq) ProtoMessage() {}

func (x *AddBackupAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*AddBackupAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{62}
}

type AddBackupAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32 `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *AddBackupAvatarTeamRsp) Reset() {
	*x = AddBackupAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBackupAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupAvatarTeamRsp) ProtoMessage() {}

func (x *AddBackupAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*AddBackupAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{63}
}

func (x *AddBackupAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type DelBackupAvatarTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamId uint32 `protobuf:"varint,4,opt,name=backup_avatar_team_id,json=backupAvatarTeamId,proto3" json:"backup_avatar_team_id,omitempty"`
}

func (x *DelBackupAvatarTeamReq) Reset() {
	*x = DelBackupAvatarTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBackupAvatarTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBackupAvatarTeamReq) ProtoMessage() {}

func (x *DelBackupAvatarTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBackupAvatarTeamReq.ProtoReflect.Descriptor instead.
func (*DelBackupAvatarTeamReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{64}
}

func (x *DelBackupAvatarTeamReq) GetBackupAvatarTeamId() uint32 {
	if x != nil {
		return x.BackupAvatarTeamId
	}
	return 0
}

type DelBackupAvatarTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAvatarTeamId uint32 `protobuf:"varint,15,opt,name=backup_avatar_team_id,json=backupAvatarTeamId,proto3" json:"backup_avatar_team_id,omitempty"`
	Retcode            int32  `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *DelBackupAvatarTeamRsp) Reset() {
	*x = DelBackupAvatarTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBackupAvatarTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBackupAvatarTeamRsp) ProtoMessage() {}

func (x *DelBackupAvatarTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBackupAvatarTeamRsp.ProtoReflect.Descriptor instead.
func (*DelBackupAvatarTeamRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{65}
}

func (x *DelBackupAvatarTeamRsp) GetBackupAvatarTeamId() uint32 {
	if x != nil {
		return x.BackupAvatarTeamId
	}
	return 0
}

func (x *DelBackupAvatarTeamRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

type AvatarTeamAllDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TempAvatarGuidList        []uint64               `protobuf:"varint,6,rep,packed,name=temp_avatar_guid_list,json=tempAvatarGuidList,proto3" json:"temp_avatar_guid_list,omitempty"`
	AvatarTeamMap             map[uint32]*AvatarTeam `protobuf:"bytes,3,rep,name=avatar_team_map,json=avatarTeamMap,proto3" json:"avatar_team_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackupAvatarTeamOrderList []uint32               `protobuf:"varint,1,rep,packed,name=backup_avatar_team_order_list,json=backupAvatarTeamOrderList,proto3" json:"backup_avatar_team_order_list,omitempty"`
}

func (x *AvatarTeamAllDataNotify) Reset() {
	*x = AvatarTeamAllDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarTeamAllDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarTeamAllDataNotify) ProtoMessage() {}

func (x *AvatarTeamAllDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarTeamAllDataNotify.ProtoReflect.Descriptor instead.
func (*AvatarTeamAllDataNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{66}
}

func (x *AvatarTeamAllDataNotify) GetTempAvatarGuidList() []uint64 {
	if x != nil {
		return x.TempAvatarGuidList
	}
	return nil
}

func (x *AvatarTeamAllDataNotify) GetAvatarTeamMap() map[uint32]*AvatarTeam {
	if x != nil {
		return x.AvatarTeamMap
	}
	return nil
}

func (x *AvatarTeamAllDataNotify) GetBackupAvatarTeamOrderList() []uint32 {
	if x != nil {
		return x.BackupAvatarTeamOrderList
	}
	return nil
}

type AvatarRenameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarName string `protobuf:"bytes,3,opt,name=avatar_name,json=avatarName,proto3" json:"avatar_name,omitempty"`
	AvatarId   uint32 `protobuf:"varint,12,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
}

func (x *AvatarRenameInfo) Reset() {
	*x = AvatarRenameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarRenameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarRenameInfo) ProtoMessage() {}

func (x *AvatarRenameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarRenameInfo.ProtoReflect.Descriptor instead.
func (*AvatarRenameInfo) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{67}
}

func (x *AvatarRenameInfo) GetAvatarName() string {
	if x != nil {
		return x.AvatarName
	}
	return ""
}

func (x *AvatarRenameInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type AvatarRenameInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarRenameList []*AvatarRenameInfo `protobuf:"bytes,8,rep,name=avatar_rename_list,json=avatarRenameList,proto3" json:"avatar_rename_list,omitempty"`
}

func (x *AvatarRenameInfoNotify) Reset() {
	*x = AvatarRenameInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarRenameInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarRenameInfoNotify) ProtoMessage() {}

func (x *AvatarRenameInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarRenameInfoNotify.ProtoReflect.Descriptor instead.
func (*AvatarRenameInfoNotify) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{68}
}

func (x *AvatarRenameInfoNotify) GetAvatarRenameList() []*AvatarRenameInfo {
	if x != nil {
		return x.AvatarRenameList
	}
	return nil
}

type ItemRenameAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenameId   uint32 `protobuf:"varint,2,opt,name=rename_id,json=renameId,proto3" json:"rename_id,omitempty"`
	AvatarName string `protobuf:"bytes,3,opt,name=avatar_name,json=avatarName,proto3" json:"avatar_name,omitempty"`
}

func (x *ItemRenameAvatarReq) Reset() {
	*x = ItemRenameAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRenameAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRenameAvatarReq) ProtoMessage() {}

func (x *ItemRenameAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRenameAvatarReq.ProtoReflect.Descriptor instead.
func (*ItemRenameAvatarReq) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{69}
}

func (x *ItemRenameAvatarReq) GetRenameId() uint32 {
	if x != nil {
		return x.RenameId
	}
	return 0
}

func (x *ItemRenameAvatarReq) GetAvatarName() string {
	if x != nil {
		return x.AvatarName
	}
	return ""
}

type ItemRenameAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenameId uint32 `protobuf:"varint,15,opt,name=rename_id,json=renameId,proto3" json:"rename_id,omitempty"`
	CdTime   uint32 `protobuf:"varint,2,opt,name=cd_time,json=cdTime,proto3" json:"cd_time,omitempty"`
	Retcode  int32  `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
}

func (x *ItemRenameAvatarRsp) Reset() {
	*x = ItemRenameAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_cmd_avatar_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRenameAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRenameAvatarRsp) ProtoMessage() {}

func (x *ItemRenameAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_cmd_avatar_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRenameAvatarRsp.ProtoReflect.Descriptor instead.
func (*ItemRenameAvatarRsp) Descriptor() ([]byte, []int) {
	return file_cmd_cmd_avatar_proto_rawDescGZIP(), []int{70}
}

func (x *ItemRenameAvatarRsp) GetRenameId() uint32 {
	if x != nil {
		return x.RenameId
	}
	return 0
}

func (x *ItemRenameAvatarRsp) GetCdTime() uint32 {
	if x != nil {
		return x.CdTime
	}
	return 0
}

func (x *ItemRenameAvatarRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

var File_cmd_cmd_avatar_proto protoreflect.FileDescriptor

var file_cmd_cmd_avatar_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6d, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x0f,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe9, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xed, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x53, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x55, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0x9a, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xf1, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xee, 0x0c, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x95, 0x01, 0x0a,
	0x16, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x84, 0x0e,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43,
	0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfd, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe7, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x08,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe8, 0x0c, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xc7, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x80, 0x0d, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xe7, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd4, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8b, 0x01,
	0x0a, 0x0c, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xea, 0x0c, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xcf, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa6,
	0x02, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a,
	0x10, 0x68, 0x70, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x48, 0x70, 0x46, 0x75, 0x6c,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x68,
	0x70, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x40, 0x0a, 0x12, 0x48, 0x70, 0x46, 0x75, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x88, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc9, 0x02, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x31, 0x0a, 0x15,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x74, 0x65, 0x6d,
	0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x53, 0x0a, 0x12, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xaa, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xb3, 0x05, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x40, 0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x19, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65,
	0x6d, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x45,
	0x0a, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x6f, 0x6f, 0x73,
	0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x47, 0x75, 0x69, 0x64, 0x1a, 0x53, 0x0a, 0x12, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xe1, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xea, 0x0d, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52,
	0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x94, 0x04, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x59, 0x0a, 0x12, 0x6f, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x4f, 0x6c, 0x64, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x6c, 0x64,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x5f, 0x66, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x75, 0x72, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x63, 0x75, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x1a, 0x42, 0x0a, 0x14, 0x4f, 0x6c, 0x64, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa5, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x18, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x44, 0x69, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x62, 0x6f, 0x72, 0x6e,
	0x5f, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x72, 0x65, 0x62, 0x6f, 0x72,
	0x6e, 0x50, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xca, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb9,
	0x01, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x69, 0x65, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x65, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x9e, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb4, 0x01, 0x0a, 0x1a, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf9, 0x0d, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf3, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x9c, 0x02, 0x0a, 0x16, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x59,
	0x0a, 0x12, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf6, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb8, 0x02, 0x0a, 0x1a, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x68, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xeb, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xba, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xba, 0x03, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x68, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xf0, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xd3, 0x01, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x65, 0x78, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x75, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x75,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0xb3, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xce, 0x02, 0x0a, 0x18, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x73, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xb7, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd8, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22,
	0xd4, 0x02, 0x0a, 0x1b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12,
	0x69, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78,
	0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xbe, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd7, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbf, 0x03, 0x0a,
	0x1c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x11, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x16,
	0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf8, 0x0d, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xcd,
	0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xac, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd2,
	0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xd9, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc3, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x82, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xac, 0x06, 0x0a, 0x0f, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x4b, 0x0a, 0x13,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x98, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x11, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x13, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42,
	0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x4b, 0x0a, 0x16, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x13, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x49, 0x6e, 0x4d, 0x70, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xef, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x63, 0x75,
	0x73, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xf6, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb5, 0x01, 0x0a, 0x0e, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x6f,
	0x63, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0x91, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x61, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x70, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a,
	0x19, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x61,
	0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x11, 0x73, 0x61, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x9d, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x57, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49,
	0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc9,
	0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x57, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x52, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xa2, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x1a, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79,
	0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xeb, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x61, 0x69, 0x6e, 0x46, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x61,
	0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x79, 0x63, 0x6c,
	0x6f, 0x61, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c,
	0x79, 0x63, 0x6c, 0x6f, 0x61, 0x6b, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf8, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd4, 0x01, 0x0a, 0x1b, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x66, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x66, 0x66, 0x69, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x41, 0x66, 0x66, 0x69, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xfe, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc4,
	0x01, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf5,
	0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc6, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x68,
	0x0a, 0x20, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22, 0x98, 0x03, 0x0a, 0x1a, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x55, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x44, 0x10, 0xf7, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x19, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xa0, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe7, 0x01, 0x0a, 0x19,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x93, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xf2, 0x0d,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xed, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xec, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x87,
	0x01, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x73, 0x74, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x8d, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xbb, 0x01, 0x0a, 0x17, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xaf, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xef, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x20, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x94, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xe6, 0x01,
	0x0a, 0x20, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d,
	0x44, 0x5f, 0x49, 0x44, 0x10, 0xe8, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x7c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x97, 0x0d,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06,
	0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xc7, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xc3, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb4, 0x01, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xc1, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x8d, 0x03, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x31, 0x0a,
	0x15, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x74, 0x65,
	0x6d, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x59, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x1d, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x19, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x53, 0x0a,
	0x12, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10,
	0xd5, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0x50, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x45,
	0x0a, 0x12, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0x90, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x43, 0x6d,
	0x64, 0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xd6, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e,
	0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xb4,
	0x01, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0xe3, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x79, 0x76, 0x61, 0x74, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x6b, 0x34, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_cmd_avatar_proto_rawDescOnce sync.Once
	file_cmd_cmd_avatar_proto_rawDescData = file_cmd_cmd_avatar_proto_rawDesc
)

func file_cmd_cmd_avatar_proto_rawDescGZIP() []byte {
	file_cmd_cmd_avatar_proto_rawDescOnce.Do(func() {
		file_cmd_cmd_avatar_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_cmd_avatar_proto_rawDescData)
	})
	return file_cmd_cmd_avatar_proto_rawDescData
}

var file_cmd_cmd_avatar_proto_enumTypes = make([]protoimpl.EnumInfo, 66)
var file_cmd_cmd_avatar_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_cmd_cmd_avatar_proto_goTypes = []interface{}{
	(AvatarAddNotify_CmdId)(0),                  // 0: proto.AvatarAddNotify.CmdId
	(AvatarDelNotify_CmdId)(0),                  // 1: proto.AvatarDelNotify.CmdId
	(SetUpAvatarTeamReq_CmdId)(0),               // 2: proto.SetUpAvatarTeamReq.CmdId
	(SetUpAvatarTeamRsp_CmdId)(0),               // 3: proto.SetUpAvatarTeamRsp.CmdId
	(ChooseCurAvatarTeamReq_CmdId)(0),           // 4: proto.ChooseCurAvatarTeamReq.CmdId
	(ChooseCurAvatarTeamRsp_CmdId)(0),           // 5: proto.ChooseCurAvatarTeamRsp.CmdId
	(ChangeAvatarReq_CmdId)(0),                  // 6: proto.ChangeAvatarReq.CmdId
	(ChangeAvatarRsp_CmdId)(0),                  // 7: proto.ChangeAvatarRsp.CmdId
	(AvatarPromoteReq_CmdId)(0),                 // 8: proto.AvatarPromoteReq.CmdId
	(AvatarPromoteRsp_CmdId)(0),                 // 9: proto.AvatarPromoteRsp.CmdId
	(SpringUseReq_CmdId)(0),                     // 10: proto.SpringUseReq.CmdId
	(SpringUseRsp_CmdId)(0),                     // 11: proto.SpringUseRsp.CmdId
	(RefreshBackgroundAvatarReq_CmdId)(0),       // 12: proto.RefreshBackgroundAvatarReq.CmdId
	(RefreshBackgroundAvatarRsp_CmdId)(0),       // 13: proto.RefreshBackgroundAvatarRsp.CmdId
	(AvatarTeamUpdateNotify_CmdId)(0),           // 14: proto.AvatarTeamUpdateNotify.CmdId
	(AvatarDataNotify_CmdId)(0),                 // 15: proto.AvatarDataNotify.CmdId
	(AvatarUpgradeReq_CmdId)(0),                 // 16: proto.AvatarUpgradeReq.CmdId
	(AvatarUpgradeRsp_CmdId)(0),                 // 17: proto.AvatarUpgradeRsp.CmdId
	(AvatarDieAnimationEndReq_CmdId)(0),         // 18: proto.AvatarDieAnimationEndReq.CmdId
	(AvatarDieAnimationEndRsp_CmdId)(0),         // 19: proto.AvatarDieAnimationEndRsp.CmdId
	(AvatarChangeElementTypeReq_CmdId)(0),       // 20: proto.AvatarChangeElementTypeReq.CmdId
	(AvatarChangeElementTypeRsp_CmdId)(0),       // 21: proto.AvatarChangeElementTypeRsp.CmdId
	(AvatarFetterDataNotify_CmdId)(0),           // 22: proto.AvatarFetterDataNotify.CmdId
	(AvatarExpeditionDataNotify_CmdId)(0),       // 23: proto.AvatarExpeditionDataNotify.CmdId
	(AvatarExpeditionAllDataReq_CmdId)(0),       // 24: proto.AvatarExpeditionAllDataReq.CmdId
	(AvatarExpeditionAllDataRsp_CmdId)(0),       // 25: proto.AvatarExpeditionAllDataRsp.CmdId
	(AvatarExpeditionStartReq_CmdId)(0),         // 26: proto.AvatarExpeditionStartReq.CmdId
	(AvatarExpeditionStartRsp_CmdId)(0),         // 27: proto.AvatarExpeditionStartRsp.CmdId
	(AvatarExpeditionCallBackReq_CmdId)(0),      // 28: proto.AvatarExpeditionCallBackReq.CmdId
	(AvatarExpeditionCallBackRsp_CmdId)(0),      // 29: proto.AvatarExpeditionCallBackRsp.CmdId
	(AvatarExpeditionGetRewardReq_CmdId)(0),     // 30: proto.AvatarExpeditionGetRewardReq.CmdId
	(AvatarExpeditionGetRewardRsp_CmdId)(0),     // 31: proto.AvatarExpeditionGetRewardRsp.CmdId
	(ChangeMpTeamAvatarReq_CmdId)(0),            // 32: proto.ChangeMpTeamAvatarReq.CmdId
	(ChangeMpTeamAvatarRsp_CmdId)(0),            // 33: proto.ChangeMpTeamAvatarRsp.CmdId
	(ChangeTeamNameReq_CmdId)(0),                // 34: proto.ChangeTeamNameReq.CmdId
	(ChangeTeamNameRsp_CmdId)(0),                // 35: proto.ChangeTeamNameRsp.CmdId
	(SceneTeamUpdateNotify_CmdId)(0),            // 36: proto.SceneTeamUpdateNotify.CmdId
	(FocusAvatarReq_CmdId)(0),                   // 37: proto.FocusAvatarReq.CmdId
	(FocusAvatarRsp_CmdId)(0),                   // 38: proto.FocusAvatarRsp.CmdId
	(AvatarSatiationDataNotify_CmdId)(0),        // 39: proto.AvatarSatiationDataNotify.CmdId
	(AvatarWearFlycloakReq_CmdId)(0),            // 40: proto.AvatarWearFlycloakReq.CmdId
	(AvatarWearFlycloakRsp_CmdId)(0),            // 41: proto.AvatarWearFlycloakRsp.CmdId
	(AvatarFlycloakChangeNotify_CmdId)(0),       // 42: proto.AvatarFlycloakChangeNotify.CmdId
	(AvatarGainFlycloakNotify_CmdId)(0),         // 43: proto.AvatarGainFlycloakNotify.CmdId
	(AvatarEquipAffixStartNotify_CmdId)(0),      // 44: proto.AvatarEquipAffixStartNotify.CmdId
	(AvatarFetterLevelRewardReq_CmdId)(0),       // 45: proto.AvatarFetterLevelRewardReq.CmdId
	(AvatarFetterLevelRewardRsp_CmdId)(0),       // 46: proto.AvatarFetterLevelRewardRsp.CmdId
	(AddNoGachaAvatarCardNotify_CmdId)(0),       // 47: proto.AddNoGachaAvatarCardNotify.CmdId
	(AvatarPromoteGetRewardReq_CmdId)(0),        // 48: proto.AvatarPromoteGetRewardReq.CmdId
	(AvatarPromoteGetRewardRsp_CmdId)(0),        // 49: proto.AvatarPromoteGetRewardRsp.CmdId
	(AvatarChangeCostumeReq_CmdId)(0),           // 50: proto.AvatarChangeCostumeReq.CmdId
	(AvatarChangeCostumeRsp_CmdId)(0),           // 51: proto.AvatarChangeCostumeRsp.CmdId
	(AvatarChangeCostumeNotify_CmdId)(0),        // 52: proto.AvatarChangeCostumeNotify.CmdId
	(AvatarGainCostumeNotify_CmdId)(0),          // 53: proto.AvatarGainCostumeNotify.CmdId
	(AvatarChangeAnimHashReq_CmdId)(0),          // 54: proto.AvatarChangeAnimHashReq.CmdId
	(AvatarChangeAnimHashRsp_CmdId)(0),          // 55: proto.AvatarChangeAnimHashRsp.CmdId
	(PersistentDungeonSwitchAvatarReq_CmdId)(0), // 56: proto.PersistentDungeonSwitchAvatarReq.CmdId
	(PersistentDungeonSwitchAvatarRsp_CmdId)(0), // 57: proto.PersistentDungeonSwitchAvatarRsp.CmdId
	(AddBackupAvatarTeamReq_CmdId)(0),           // 58: proto.AddBackupAvatarTeamReq.CmdId
	(AddBackupAvatarTeamRsp_CmdId)(0),           // 59: proto.AddBackupAvatarTeamRsp.CmdId
	(DelBackupAvatarTeamReq_CmdId)(0),           // 60: proto.DelBackupAvatarTeamReq.CmdId
	(DelBackupAvatarTeamRsp_CmdId)(0),           // 61: proto.DelBackupAvatarTeamRsp.CmdId
	(AvatarTeamAllDataNotify_CmdId)(0),          // 62: proto.AvatarTeamAllDataNotify.CmdId
	(AvatarRenameInfoNotify_CmdId)(0),           // 63: proto.AvatarRenameInfoNotify.CmdId
	(ItemRenameAvatarReq_CmdId)(0),              // 64: proto.ItemRenameAvatarReq.CmdId
	(ItemRenameAvatarRsp_CmdId)(0),              // 65: proto.ItemRenameAvatarRsp.CmdId
	(*AvatarAddNotify)(nil),                     // 66: proto.AvatarAddNotify
	(*AvatarDelNotify)(nil),                     // 67: proto.AvatarDelNotify
	(*AvatarTeam)(nil),                          // 68: proto.AvatarTeam
	(*SetUpAvatarTeamReq)(nil),                  // 69: proto.SetUpAvatarTeamReq
	(*SetUpAvatarTeamRsp)(nil),                  // 70: proto.SetUpAvatarTeamRsp
	(*ChooseCurAvatarTeamReq)(nil),              // 71: proto.ChooseCurAvatarTeamReq
	(*ChooseCurAvatarTeamRsp)(nil),              // 72: proto.ChooseCurAvatarTeamRsp
	(*ChangeAvatarReq)(nil),                     // 73: proto.ChangeAvatarReq
	(*ChangeAvatarRsp)(nil),                     // 74: proto.ChangeAvatarRsp
	(*AvatarPromoteReq)(nil),                    // 75: proto.AvatarPromoteReq
	(*AvatarPromoteRsp)(nil),                    // 76: proto.AvatarPromoteRsp
	(*SpringUseReq)(nil),                        // 77: proto.SpringUseReq
	(*SpringUseRsp)(nil),                        // 78: proto.SpringUseRsp
	(*RefreshBackgroundAvatarReq)(nil),          // 79: proto.RefreshBackgroundAvatarReq
	(*RefreshBackgroundAvatarRsp)(nil),          // 80: proto.RefreshBackgroundAvatarRsp
	(*AvatarTeamUpdateNotify)(nil),              // 81: proto.AvatarTeamUpdateNotify
	(*AvatarDataNotify)(nil),                    // 82: proto.AvatarDataNotify
	(*AvatarUpgradeReq)(nil),                    // 83: proto.AvatarUpgradeReq
	(*AvatarUpgradeRsp)(nil),                    // 84: proto.AvatarUpgradeRsp
	(*AvatarDieAnimationEndReq)(nil),            // 85: proto.AvatarDieAnimationEndReq
	(*AvatarDieAnimationEndRsp)(nil),            // 86: proto.AvatarDieAnimationEndRsp
	(*AvatarChangeElementTypeReq)(nil),          // 87: proto.AvatarChangeElementTypeReq
	(*AvatarChangeElementTypeRsp)(nil),          // 88: proto.AvatarChangeElementTypeRsp
	(*AvatarFetterDataNotify)(nil),              // 89: proto.AvatarFetterDataNotify
	(*AvatarExpeditionDataNotify)(nil),          // 90: proto.AvatarExpeditionDataNotify
	(*AvatarExpeditionAllDataReq)(nil),          // 91: proto.AvatarExpeditionAllDataReq
	(*AvatarExpeditionAllDataRsp)(nil),          // 92: proto.AvatarExpeditionAllDataRsp
	(*AvatarExpeditionStartReq)(nil),            // 93: proto.AvatarExpeditionStartReq
	(*AvatarExpeditionStartRsp)(nil),            // 94: proto.AvatarExpeditionStartRsp
	(*AvatarExpeditionCallBackReq)(nil),         // 95: proto.AvatarExpeditionCallBackReq
	(*AvatarExpeditionCallBackRsp)(nil),         // 96: proto.AvatarExpeditionCallBackRsp
	(*AvatarExpeditionGetRewardReq)(nil),        // 97: proto.AvatarExpeditionGetRewardReq
	(*AvatarExpeditionGetRewardRsp)(nil),        // 98: proto.AvatarExpeditionGetRewardRsp
	(*ChangeMpTeamAvatarReq)(nil),               // 99: proto.ChangeMpTeamAvatarReq
	(*ChangeMpTeamAvatarRsp)(nil),               // 100: proto.ChangeMpTeamAvatarRsp
	(*ChangeTeamNameReq)(nil),                   // 101: proto.ChangeTeamNameReq
	(*ChangeTeamNameRsp)(nil),                   // 102: proto.ChangeTeamNameRsp
	(*SceneTeamAvatar)(nil),                     // 103: proto.SceneTeamAvatar
	(*SceneTeamUpdateNotify)(nil),               // 104: proto.SceneTeamUpdateNotify
	(*FocusAvatarReq)(nil),                      // 105: proto.FocusAvatarReq
	(*FocusAvatarRsp)(nil),                      // 106: proto.FocusAvatarRsp
	(*AvatarSatiationData)(nil),                 // 107: proto.AvatarSatiationData
	(*AvatarSatiationDataNotify)(nil),           // 108: proto.AvatarSatiationDataNotify
	(*AvatarWearFlycloakReq)(nil),               // 109: proto.AvatarWearFlycloakReq
	(*AvatarWearFlycloakRsp)(nil),               // 110: proto.AvatarWearFlycloakRsp
	(*AvatarFlycloakChangeNotify)(nil),          // 111: proto.AvatarFlycloakChangeNotify
	(*AvatarGainFlycloakNotify)(nil),            // 112: proto.AvatarGainFlycloakNotify
	(*AvatarEquipAffixStartNotify)(nil),         // 113: proto.AvatarEquipAffixStartNotify
	(*AvatarFetterLevelRewardReq)(nil),          // 114: proto.AvatarFetterLevelRewardReq
	(*AvatarFetterLevelRewardRsp)(nil),          // 115: proto.AvatarFetterLevelRewardRsp
	(*AddNoGachaAvatarCardTransferItem)(nil),    // 116: proto.AddNoGachaAvatarCardTransferItem
	(*AddNoGachaAvatarCardNotify)(nil),          // 117: proto.AddNoGachaAvatarCardNotify
	(*AvatarPromoteGetRewardReq)(nil),           // 118: proto.AvatarPromoteGetRewardReq
	(*AvatarPromoteGetRewardRsp)(nil),           // 119: proto.AvatarPromoteGetRewardRsp
	(*AvatarChangeCostumeReq)(nil),              // 120: proto.AvatarChangeCostumeReq
	(*AvatarChangeCostumeRsp)(nil),              // 121: proto.AvatarChangeCostumeRsp
	(*AvatarChangeCostumeNotify)(nil),           // 122: proto.AvatarChangeCostumeNotify
	(*AvatarGainCostumeNotify)(nil),             // 123: proto.AvatarGainCostumeNotify
	(*AvatarChangeAnimHashReq)(nil),             // 124: proto.AvatarChangeAnimHashReq
	(*AvatarChangeAnimHashRsp)(nil),             // 125: proto.AvatarChangeAnimHashRsp
	(*PersistentDungeonSwitchAvatarReq)(nil),    // 126: proto.PersistentDungeonSwitchAvatarReq
	(*PersistentDungeonSwitchAvatarRsp)(nil),    // 127: proto.PersistentDungeonSwitchAvatarRsp
	(*AddBackupAvatarTeamReq)(nil),              // 128: proto.AddBackupAvatarTeamReq
	(*AddBackupAvatarTeamRsp)(nil),              // 129: proto.AddBackupAvatarTeamRsp
	(*DelBackupAvatarTeamReq)(nil),              // 130: proto.DelBackupAvatarTeamReq
	(*DelBackupAvatarTeamRsp)(nil),              // 131: proto.DelBackupAvatarTeamRsp
	(*AvatarTeamAllDataNotify)(nil),             // 132: proto.AvatarTeamAllDataNotify
	(*AvatarRenameInfo)(nil),                    // 133: proto.AvatarRenameInfo
	(*AvatarRenameInfoNotify)(nil),              // 134: proto.AvatarRenameInfoNotify
	(*ItemRenameAvatarReq)(nil),                 // 135: proto.ItemRenameAvatarReq
	(*ItemRenameAvatarRsp)(nil),                 // 136: proto.ItemRenameAvatarRsp
	nil,                                         // 137: proto.RefreshBackgroundAvatarRsp.HpFullTimeMapEntry
	nil,                                         // 138: proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry
	nil,                                         // 139: proto.AvatarDataNotify.AvatarTeamMapEntry
	nil,                                         // 140: proto.AvatarUpgradeRsp.OldFightPropMapEntry
	nil,                                         // 141: proto.AvatarUpgradeRsp.CurFightPropMapEntry
	nil,                                         // 142: proto.AvatarFetterDataNotify.FetterInfoMapEntry
	nil,                                         // 143: proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry
	nil,                                         // 144: proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry
	nil,                                         // 145: proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry
	nil,                                         // 146: proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry
	nil,                                         // 147: proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry
	nil,                                         // 148: proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry
	(*AvatarInfo)(nil),                          // 149: proto.AvatarInfo
	(*Vector)(nil),                              // 150: proto.Vector
	(*ItemParam)(nil),                           // 151: proto.ItemParam
	(*AbilitySyncStateInfo)(nil),                // 152: proto.AbilitySyncStateInfo
	(*SceneAvatarInfo)(nil),                     // 153: proto.SceneAvatarInfo
	(*SceneEntityInfo)(nil),                     // 154: proto.SceneEntityInfo
	(*AbilityControlBlock)(nil),                 // 155: proto.AbilityControlBlock
	(*ServerBuff)(nil),                          // 156: proto.ServerBuff
	(*AvatarEquipAffixInfo)(nil),                // 157: proto.AvatarEquipAffixInfo
	(*AvatarFetterInfo)(nil),                    // 158: proto.AvatarFetterInfo
	(*AvatarExpeditionInfo)(nil),                // 159: proto.AvatarExpeditionInfo
}
var file_cmd_cmd_avatar_proto_depIdxs = []int32{
	149, // 0: proto.AvatarAddNotify.avatar:type_name -> proto.AvatarInfo
	150, // 1: proto.ChangeAvatarReq.move_pos:type_name -> proto.Vector
	137, // 2: proto.RefreshBackgroundAvatarRsp.hp_full_time_map:type_name -> proto.RefreshBackgroundAvatarRsp.HpFullTimeMapEntry
	138, // 3: proto.AvatarTeamUpdateNotify.avatar_team_map:type_name -> proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry
	149, // 4: proto.AvatarDataNotify.avatar_list:type_name -> proto.AvatarInfo
	133, // 5: proto.AvatarDataNotify.avatar_rename_list:type_name -> proto.AvatarRenameInfo
	139, // 6: proto.AvatarDataNotify.avatar_team_map:type_name -> proto.AvatarDataNotify.AvatarTeamMapEntry
	140, // 7: proto.AvatarUpgradeRsp.old_fight_prop_map:type_name -> proto.AvatarUpgradeRsp.OldFightPropMapEntry
	141, // 8: proto.AvatarUpgradeRsp.cur_fight_prop_map:type_name -> proto.AvatarUpgradeRsp.CurFightPropMapEntry
	150, // 9: proto.AvatarDieAnimationEndReq.reborn_pos:type_name -> proto.Vector
	142, // 10: proto.AvatarFetterDataNotify.fetter_info_map:type_name -> proto.AvatarFetterDataNotify.FetterInfoMapEntry
	143, // 11: proto.AvatarExpeditionDataNotify.expedition_info_map:type_name -> proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry
	144, // 12: proto.AvatarExpeditionAllDataRsp.expedition_info_map:type_name -> proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry
	145, // 13: proto.AvatarExpeditionStartRsp.expedition_info_map:type_name -> proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry
	146, // 14: proto.AvatarExpeditionCallBackRsp.expedition_info_map:type_name -> proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry
	151, // 15: proto.AvatarExpeditionGetRewardRsp.extra_item_list:type_name -> proto.ItemParam
	151, // 16: proto.AvatarExpeditionGetRewardRsp.item_list:type_name -> proto.ItemParam
	147, // 17: proto.AvatarExpeditionGetRewardRsp.expedition_info_map:type_name -> proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry
	152, // 18: proto.SceneTeamAvatar.avatar_ability_info:type_name -> proto.AbilitySyncStateInfo
	149, // 19: proto.SceneTeamAvatar.avatar_info:type_name -> proto.AvatarInfo
	153, // 20: proto.SceneTeamAvatar.scene_avatar_info:type_name -> proto.SceneAvatarInfo
	152, // 21: proto.SceneTeamAvatar.weapon_ability_info:type_name -> proto.AbilitySyncStateInfo
	154, // 22: proto.SceneTeamAvatar.scene_entity_info:type_name -> proto.SceneEntityInfo
	155, // 23: proto.SceneTeamAvatar.ability_control_block:type_name -> proto.AbilityControlBlock
	156, // 24: proto.SceneTeamAvatar.server_buff_list:type_name -> proto.ServerBuff
	103, // 25: proto.SceneTeamUpdateNotify.scene_team_avatar_list:type_name -> proto.SceneTeamAvatar
	107, // 26: proto.AvatarSatiationDataNotify.satiation_data_list:type_name -> proto.AvatarSatiationData
	157, // 27: proto.AvatarEquipAffixStartNotify.equip_affix_info:type_name -> proto.AvatarEquipAffixInfo
	116, // 28: proto.AddNoGachaAvatarCardNotify.transfer_item_list:type_name -> proto.AddNoGachaAvatarCardTransferItem
	154, // 29: proto.AvatarChangeCostumeNotify.entity_info:type_name -> proto.SceneEntityInfo
	148, // 30: proto.AvatarTeamAllDataNotify.avatar_team_map:type_name -> proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry
	133, // 31: proto.AvatarRenameInfoNotify.avatar_rename_list:type_name -> proto.AvatarRenameInfo
	68,  // 32: proto.AvatarTeamUpdateNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	68,  // 33: proto.AvatarDataNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	158, // 34: proto.AvatarFetterDataNotify.FetterInfoMapEntry.value:type_name -> proto.AvatarFetterInfo
	159, // 35: proto.AvatarExpeditionDataNotify.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	159, // 36: proto.AvatarExpeditionAllDataRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	159, // 37: proto.AvatarExpeditionStartRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	159, // 38: proto.AvatarExpeditionCallBackRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	159, // 39: proto.AvatarExpeditionGetRewardRsp.ExpeditionInfoMapEntry.value:type_name -> proto.AvatarExpeditionInfo
	68,  // 40: proto.AvatarTeamAllDataNotify.AvatarTeamMapEntry.value:type_name -> proto.AvatarTeam
	41,  // [41:41] is the sub-list for method output_type
	41,  // [41:41] is the sub-list for method input_type
	41,  // [41:41] is the sub-list for extension type_name
	41,  // [41:41] is the sub-list for extension extendee
	0,   // [0:41] is the sub-list for field type_name
}

func init() { file_cmd_cmd_avatar_proto_init() }
func file_cmd_cmd_avatar_proto_init() {
	if File_cmd_cmd_avatar_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_cmd_avatar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarAddNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseCurAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseCurAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpringUseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpringUseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshBackgroundAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshBackgroundAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeamUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDieAnimationEndReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDieAnimationEndRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeElementTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeElementTypeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionAllDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionAllDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionStartRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionCallBackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionCallBackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarExpeditionGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMpTeamAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMpTeamAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeamNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeamNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTeamAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneTeamUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSatiationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSatiationDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarWearFlycloakReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarWearFlycloakRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFlycloakChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarGainFlycloakNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarEquipAffixStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterLevelRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFetterLevelRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoGachaAvatarCardTransferItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoGachaAvatarCardNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarPromoteGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeCostumeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarGainCostumeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeAnimHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarChangeAnimHashRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistentDungeonSwitchAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistentDungeonSwitchAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBackupAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBackupAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBackupAvatarTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBackupAvatarTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarTeamAllDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarRenameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarRenameInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRenameAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_cmd_avatar_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRenameAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_cmd_avatar_proto_rawDesc,
			NumEnums:      66,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_cmd_avatar_proto_goTypes,
		DependencyIndexes: file_cmd_cmd_avatar_proto_depIdxs,
		EnumInfos:         file_cmd_cmd_avatar_proto_enumTypes,
		MessageInfos:      file_cmd_cmd_avatar_proto_msgTypes,
	}.Build()
	File_cmd_cmd_avatar_proto = out.File
	file_cmd_cmd_avatar_proto_rawDesc = nil
	file_cmd_cmd_avatar_proto_goTypes = nil
	file_cmd_cmd_avatar_proto_depIdxs = nil
}
