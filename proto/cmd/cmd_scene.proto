syntax = "proto3";

package proto;

option go_package = "github.com/teyvat-helper/hk4e-proto/pb";

import "define.proto";
import "cmd/cmd_widget.proto";

enum EnterType {
  ENTER_NONE = 0;
  ENTER_SELF = 1;
  ENTER_GOTO = 2;
  ENTER_JUMP = 3;
  ENTER_OTHER = 4;
  ENTER_BACK = 5;
  ENTER_DUNGEON = 6;
  ENTER_DUNGEON_REPLAY = 7;
  ENTER_GOTO_BY_PORTAL = 8;
  ENTER_SELF_HOME = 9;
  ENTER_OTHER_HOME = 10;
  ENTER_GOTO_RECREATE = 11;
}

enum VisionType {
  VISION_NONE = 0;
  VISION_MEET = 1;
  VISION_REBORN = 2;
  VISION_REPLACE = 3;
  VISION_WAYPOINT_REBORN = 4;
  VISION_MISS = 5;
  VISION_DIE = 6;
  VISION_GATHER_ESCAPE = 7;
  VISION_REFRESH = 8;
  VISION_TRANSPORT = 9;
  VISION_REPLACE_DIE = 10;
  VISION_REPLACE_NO_NOTIFY = 11;
  VISION_BORN = 12;
  VISION_PICKUP = 13;
  VISION_REMOVE = 14;
  VISION_CHANGE_COSTUME = 15;
  VISION_FISH_REFRESH = 16;
  VISION_FISH_BIG_SHOCK = 17;
  VISION_FISH_QTE_SUCC = 18;
  VISION_CAPTURE_DISAPPEAR = 19;
}

enum CreateReason {
  CREATE_NONE = 0;
  CREATE_QUEST = 1;
  CREATE_ENERGY = 2;
}

enum TransmitReason {
  TRANSMIT_NONE = 0;
  TRANSMIT_QUEST = 1;
}

enum SealBattleType {
  SEAL_BATTLE_KEEP_ALIVE = 0;
  SEAL_BATTLE_KILL_MONSTER = 1;
  SEAL_BATTLE_ENERGY_CHARGE = 2;
}

enum DungeonEntryBlockReason {
  DUNGEON_ENTRY_REASON_NONE = 0;
  DUNGEON_ENTRY_REASON_LEVEL = 1;
  DUNGEON_ENTRY_REASON_QUEST = 2;
  DUNGEON_ENTRY_REASON_MULIPLE = 3;
}

enum AreaPlayType {
  AREA_PLAY_NONE = 0;
  AREA_PLAY_CLIMATE = 1;
  AREA_PLAY_REGIONAL_PLAY = 2;
}

message PlayerEnterSceneNotify {
  uint32 prev_scene_id = 6;
  uint32 dungeon_id = 12;
  bool is_skip_ui = 1732;
  uint32 scene_id = 15;
  EnterType type = 13;
  uint64 scene_begin_time = 14;
  uint32 world_level = 11;
  uint32 world_type = 1490;
  uint32 target_uid = 4;
  bool is_first_login_enter_scene = 3;
  repeated uint32 scene_tag_id_list = 5;
  string scene_transaction = 1842;
  Vector prev_pos = 8;
  uint32 enter_reason = 1828;
  Vector pos = 7;
  uint32 enter_scene_token = 2;
}

message LeaveSceneReq {
}

message LeaveSceneRsp {
  int32 retcode = 3;
}

message SceneInitFinishReq {
  uint32 enter_scene_token = 11;
}

message SceneInitFinishRsp {
  int32 retcode = 13;
  uint32 enter_scene_token = 8;
}

message SceneEntityAppearNotify {
  VisionType appear_type = 15;
  uint32 param = 9;
  repeated SceneEntityInfo entity_list = 5;
}

message SceneEntityDisappearNotify {
  uint32 param = 6;
  repeated uint32 entity_list = 1;
  VisionType disappear_type = 2;
}

message SceneEntityMoveReq {
  MotionInfo motion_info = 7;
  uint32 scene_time = 4;
  uint32 entity_id = 8;
  uint32 reliable_seq = 15;
}

message SceneEntityMoveRsp {
  uint32 entity_id = 4;
  MotionInfo fail_motion = 1;
  uint32 scene_time = 10;
  uint32 reliable_seq = 6;
  int32 retcode = 8;
}

message SceneAvatarStaminaStepReq {
  bool use_client_rot = 15;
  Vector rot = 7;
}

message SceneAvatarStaminaStepRsp {
  bool use_client_rot = 9;
  int32 retcode = 7;
  Vector rot = 11;
}

message SceneEntityMoveNotify {
  MotionInfo motion_info = 6;
  uint32 entity_id = 8;
  uint32 scene_time = 15;
  uint32 reliable_seq = 2;
}

message VehicleLocationInfo {
  Vector rot = 14;
  uint32 entity_id = 15;
  float cur_hp = 11;
  uint32 owner_uid = 5;
  Vector pos = 1;
  repeated uint32 uid_list = 3;
  uint32 gadget_id = 13;
  float max_hp = 6;
}

message ScenePlayerLocationNotify {
  repeated VehicleLocationInfo vehicle_loc_list = 3;
  uint32 scene_id = 9;
  repeated PlayerLocationInfo player_loc_list = 14;
}

message GetScenePointReq {
  uint32 belong_uid = 10;
  uint32 scene_id = 4;
}

message CityInfo {
  uint32 city_id = 15;
  uint32 crystal_num = 3;
  uint32 level = 4;
}

message GetScenePointRsp {
  repeated uint32 not_explored_dungeon_entry_list = 11;
  repeated uint32 to_be_explore_dungeon_entry_list = 15;
  repeated uint32 locked_point_list = 2;
  repeated uint32 unhide_point_list = 5;
  int32 retcode = 9;
  uint32 belong_uid = 12;
  repeated uint32 unlocked_point_list = 13;
  repeated uint32 unlock_area_list = 1;
  repeated uint32 hide_point_list = 4;
  uint32 scene_id = 14;
  repeated uint32 not_interact_dungeon_entry_list = 6;
  repeated uint32 group_unlimit_point_list = 10;
}

message EnterTransPointRegionNotify {
  uint32 scene_id = 8;
  uint32 point_id = 6;
}

message ExitTransPointRegionNotify {
  uint32 point_id = 1;
  uint32 scene_id = 7;
}

message ScenePointUnlockNotify {
  repeated uint32 point_list = 13;
  uint32 scene_id = 6;
  repeated uint32 unhide_point_list = 12;
  repeated uint32 hide_point_list = 1;
  repeated uint32 locked_point_list = 8;
}

message SceneTransToPointReq {
  uint32 scene_id = 13;
  uint32 point_id = 1;
}

message SceneTransToPointRsp {
  uint32 point_id = 14;
  uint32 scene_id = 3;
  int32 retcode = 8;
}

message EntityJumpNotify {
  enum Type {
    NULL = 0;
    ACTIVE = 1;
    PASSIVE = 2;
  }

  Type jump_type = 9;
  Vector rot = 8;
  Vector pos = 10;
  uint32 entity_id = 12;
}

message GetSceneAreaReq {
  uint32 scene_id = 4;
  uint32 belong_uid = 7;
}

message GetSceneAreaRsp {
  int32 retcode = 7;
  repeated CityInfo city_info_list = 13;
  uint32 scene_id = 15;
  repeated uint32 area_id_list = 9;
}

message SceneAreaUnlockNotify {
  repeated uint32 area_list = 10;
  uint32 scene_id = 9;
}

message SceneEntityDrownReq {
  uint32 entity_id = 10;
}

message SceneEntityDrownRsp {
  int32 retcode = 8;
  uint32 entity_id = 11;
}

message SceneCreateEntityReq {
  CreateEntityInfo entity = 1;
  bool is_destroy_when_disconnect = 10;
  CreateReason reason = 3;
}

message SceneCreateEntityRsp {
  int32 retcode = 14;
  uint32 entity_id = 1;
  CreateEntityInfo entity = 10;
}

message SceneDestroyEntityReq {
  uint32 entity_id = 7;
}

message SceneDestroyEntityRsp {
  int32 retcode = 14;
  uint32 entity_id = 7;
}

message SceneForceUnlockNotify {
  bool is_add = 10;
  repeated uint32 force_id_list = 2;
}

message SceneForceLockNotify {
  repeated uint32 force_id_list = 9;
}

message EnterWorldAreaReq {
  uint32 area_type = 8;
  uint32 area_id = 1;
}

message EnterWorldAreaRsp {
  uint32 area_type = 1;
  uint32 area_id = 7;
  int32 retcode = 9;
}

message EntityForceSyncReq {
  uint32 room_id = 1;
  MotionInfo motion_info = 11;
  uint32 entity_id = 13;
  uint32 scene_time = 12;
}

message EntityForceSyncRsp {
  uint32 scene_time = 14;
  uint32 entity_id = 6;
  MotionInfo fail_motion = 8;
  int32 retcode = 4;
}

message GetAreaExplorePointReq {
  repeated uint32 area_id_list = 14;
}

message GetAreaExplorePointRsp {
  int32 retcode = 8;
  repeated uint32 area_id_list = 11;
  repeated uint32 explore_point_list = 4;
}

message ClientTransmitReq {
  uint32 scene_id = 2;
  TransmitReason reason = 14;
  Vector pos = 1;
  Vector rot = 9;
}

message ClientTransmitRsp {
  TransmitReason reason = 3;
  int32 retcode = 9;
}

message EnterSceneWeatherAreaNotify {
  uint32 weather_gadget_id = 13;
}

message ExitSceneWeatherAreaNotify {
  uint32 weather_gadget_id = 2;
}

message SceneAreaWeatherNotify {
  uint32 weather_area_id = 1;
  uint32 weather_gadget_id = 9;
  uint32 climate_type = 14;
  float trans_duration = 15;
  map<uint32, string> weather_value_map = 10;
}

message ScenePlayerInfo {
  uint32 scene_id = 10;
  uint32 peer_id = 6;
  OnlinePlayerInfo online_player_info = 13;
  bool is_connected = 2;
  string name = 15;
  uint32 uid = 8;
}

message ScenePlayerInfoNotify {
  repeated ScenePlayerInfo player_info_list = 5;
}

message PlayerLocationInfo {
  uint32 uid = 15;
  Vector pos = 3;
  Vector rot = 13;
}

message PlayerWorldLocationInfo {
  uint32 scene_id = 1;
  PlayerLocationInfo player_loc = 12;
}

message WorldPlayerLocationNotify {
  repeated PlayerWorldLocationInfo player_world_loc_list = 8;
  repeated PlayerLocationInfo player_loc_list = 15;
}

message BeginCameraSceneLookNotify {
  enum KeepRotType {
    KEEP_ROT_X = 0;
    KEEP_ROT_XY = 1;
  }

  uint32 blend_type = 1154;
  float custom_radius = 7;
  bool is_set_screenXY = 5;
  Vector look_pos = 4;
  bool is_recover_keep_current = 11;
  bool is_abs_follow_pos = 1375;
  KeepRotType keep_rot_type = 6;
  bool is_change_play_mode = 9;
  uint32 disable_protect = 1103;
  float screen_y = 15;
  bool is_set_follow_pos = 13;
  bool is_force = 12;
  float blend_duration = 1758;
  uint32 entity_id = 1327;
  float screen_x = 3;
  bool is_force_walk = 10;
  repeated string other_params = 1;
  Vector follow_pos = 8;
  bool is_allow_input = 2;
  float duration = 14;
}

message EndCameraSceneLookNotify {
}

message MarkEntityInMinMapNotify {
  Vector position = 4;
  uint32 monster_id = 7;
  uint32 entity_id = 14;
}

message UnmarkEntityInMinMapNotify {
  uint32 entity_id = 8;
}

message ExecuteGroupTriggerReq {
  string source_name = 15;
  uint32 target_entity_id = 12;
  int32 param2 = 8;
  uint32 source_entity_id = 4;
  int32 param3 = 10;
  int32 param1 = 9;
}

message ExecuteGroupTriggerRsp {
  int32 retcode = 13;
}

message LevelupCityReq {
  uint32 scene_id = 5;
  uint32 area_id = 3;
  uint32 item_num = 14;
}

message LevelupCityRsp {
  uint32 area_id = 9;
  int32 retcode = 3;
  uint32 scene_id = 4;
  CityInfo city_info = 6;
}

message RoutePointChangeInfo {
  float wait_time = 6;
  float target_velocity = 14;
  uint32 point_index = 11;
}

message SceneRouteChangeInfo {
  bool is_forward = 12;
  uint32 route_id = 15;
  uint32 type = 4;
  repeated RoutePointChangeInfo point_list = 1;
}

message SceneRouteChangeNotify {
  uint32 scene_id = 12;
  uint32 scene_time = 11;
  repeated SceneRouteChangeInfo route_list = 2;
}

message PlatformStartRouteNotify {
  PlatformInfo platform = 15;
  uint32 scene_time = 12;
  uint32 entity_id = 8;
}

message PlatformStopRouteNotify {
  uint32 scene_time = 9;
  uint32 entity_id = 12;
  PlatformInfo platform = 8;
}

message PlatformChangeRouteNotify {
  uint32 entity_id = 2;
  PlatformInfo platform = 1;
  uint32 scene_time = 8;
}

message ScenePlayerSoundNotify {
  enum PlaySoundType {
    PLAY_SOUND_NONE = 0;
    PLAY_SOUND_START = 1;
    PLAY_SOUND_STOP = 2;
  }

  string sound_name = 4;
  PlaySoundType play_type = 8;
  Vector play_pos = 3;
}

message PersonalSceneJumpReq {
  uint32 point_id = 4;
}

message PersonalSceneJumpRsp {
  uint32 dest_scene_id = 5;
  int32 retcode = 8;
  Vector dest_pos = 11;
}

message SealBattleBeginNotify {
  uint32 seal_max_progress = 9;
  uint32 seal_entity_id = 1;
  uint32 seal_radius = 12;
  SealBattleType battle_type = 14;
}

message SealBattleEndNotify {
  bool is_win = 4;
  uint32 seal_entity_id = 15;
}

message SealBattleProgressNotify {
  uint32 seal_entity_id = 9;
  uint32 max_progress = 10;
  uint32 seal_radius = 4;
  uint32 progress = 5;
  uint32 end_time = 2;
}

message ClientPauseNotify {
  bool is_open = 1;
}

message AvatarEnterSceneInfo {
  repeated ServerBuff server_buff_list = 14;
  uint32 avatar_entity_id = 7;
  AbilitySyncStateInfo weapon_ability_info = 12;
  uint32 weapon_entity_id = 10;
  AbilitySyncStateInfo avatar_ability_info = 2;
  uint64 avatar_guid = 13;
  uint64 weapon_guid = 9;
  repeated uint32 buff_id_list = 5;
}

message TeamEnterSceneInfo {
  AbilityControlBlock ability_control_block = 7;
  AbilitySyncStateInfo team_ability_info = 10;
  uint32 team_entity_id = 15;
}

message MPLevelEntityInfo {
  AbilitySyncStateInfo ability_info = 2;
  uint32 entity_id = 11;
  uint32 authority_peer_id = 3;
}

message PlayerEnterSceneInfoNotify {
  TeamEnterSceneInfo team_enter_info = 8;
  uint32 enter_scene_token = 12;
  repeated AvatarEnterSceneInfo avatar_enter_info = 7;
  uint32 cur_avatar_entity_id = 6;
  MPLevelEntityInfo mp_level_entity_info = 5;
}

message JoinPlayerSceneReq {
  uint32 target_uid = 12;
}

message JoinPlayerSceneRsp {
  int32 retcode = 10;
}

message SceneKickPlayerReq {
  uint32 target_uid = 6;
}

message SceneKickPlayerRsp {
  int32 retcode = 13;
  uint32 target_uid = 10;
}

message SceneKickPlayerNotify {
  uint32 target_uid = 8;
  uint32 kicker_uid = 9;
}

message HitClientTrivialNotify {
  Vector position = 11;
  uint32 owner_entity_id = 12;
}

message BackMyWorldReq {
}

message BackMyWorldRsp {
  int32 retcode = 11;
}

message SeeMonsterReq {
  uint32 monster_id = 7;
}

message SeeMonsterRsp {
  int32 retcode = 9;
}

message AddSeenMonsterNotify {
  repeated uint32 monster_id_list = 12;
}

message AllSeenMonsterNotify {
  repeated uint32 monster_id_list = 4;
}

message SceneTimeNotify {
  uint64 scene_time = 14;
  bool is_paused = 1;
  uint32 scene_id = 7;
}

message EnterSceneReadyReq {
  uint32 enter_scene_token = 9;
}

message EnterSceneReadyRsp {
  uint32 enter_scene_token = 1;
  int32 retcode = 4;
}

message EnterScenePeerNotify {
  uint32 dest_scene_id = 12;
  uint32 enter_scene_token = 11;
  uint32 host_peer_id = 14;
  uint32 peer_id = 1;
}

message EnterSceneDoneReq {
  uint32 enter_scene_token = 11;
}

message EnterSceneDoneRsp {
  uint32 enter_scene_token = 15;
  int32 retcode = 7;
}

message WorldPlayerDieNotify {
  PlayerDieType die_type = 12;
  uint32 murderer_entity_id = 15;
  oneof entity {
    uint32 monster_id = 8;
    uint32 gadget_id = 4;
  }
}

message WorldPlayerReviveReq {
}

message WorldPlayerReviveRsp {
  int32 retcode = 3;
}

message JoinPlayerFailNotify {
  int32 retcode = 11;
}

message SetSceneWeatherAreaReq {
  uint32 weather_gadget_id = 13;
  map<uint32, string> weather_value_map = 4;
}

message SetSceneWeatherAreaRsp {
  int32 retcode = 4;
}

message ExecuteGadgetLuaReq {
  uint32 source_entity_id = 12;
  int32 param3 = 1;
  int32 param1 = 5;
  int32 param2 = 14;
}

message ExecuteGadgetLuaRsp {
  int32 retcode = 12;
}

message CutSceneExtraParam {
  repeated double detail_param_list = 1;
}

message CutSceneBeginNotify {
  bool is_wait_others = 9;
  uint32 cutscene_id = 14;
  repeated CutSceneExtraParam extra_param_list = 3;
}

message CutSceneFinishNotify {
  uint32 cutscene_id = 12;
}

message CutSceneEndNotify {
  int32 retcode = 5;
  uint32 cutscene_id = 14;
}

message ClientScriptEventNotify {
  repeated int32 param_list = 9;
  uint32 source_entity_id = 14;
  uint32 event_type = 10;
  uint32 target_entity_id = 13;
}

message SceneEntitiesMovesReq {
  repeated EntityMoveInfo entity_move_info_list = 14;
}

message EntityMoveFailInfo {
  int32 retcode = 12;
  uint32 scene_time = 9;
  MotionInfo fail_motion = 14;
  uint32 reliable_seq = 4;
  uint32 entity_id = 10;
}

message SceneEntitiesMovesRsp {
  repeated EntityMoveFailInfo entity_move_fail_info_list = 11;
}

message SceneEntitiesMoveCombineNotify {
  repeated EntityMoveInfo entity_move_info_list = 8;
}

message UnlockTransPointReq {
  uint32 point_id = 12;
  uint32 scene_id = 10;
}

message UnlockTransPointRsp {
  int32 retcode = 12;
}

message SceneWeatherForcastReq {
  uint32 weather_area_id = 15;
}

message SceneWeatherForcastRsp {
  uint64 next_climate_time = 14;
  repeated uint32 forcast_climate_list = 2;
  int32 retcode = 4;
}

message MarkMapReq {
  enum Operation {
    ADD = 0;
    MOD = 1;
    DEL = 2;
    GET = 3;
  }

  MapMarkPoint mark = 8;
  MapMarkPoint old = 6;
  Operation op = 9;
}

message MarkMapRsp {
  repeated MapMarkPoint mark_list = 8;
  int32 retcode = 11;
}

message AllMarkPointNotify {
  repeated MapMarkPoint mark_list = 7;
}

message WorldDataNotify {
  enum DataType {
    DATA_NONE = 0;
    WORLD_LEVEL = 1;
    IS_IN_MP_MODE = 2;
  }

  map<uint32, PropValue> world_prop_map = 9;
}

message EntityMoveRoomNotify {
  uint32 entity_id = 11;
  uint32 dest_room_id = 9;
}

message WorldPlayerInfoNotify {
  repeated PlayerWidgetInfo player_widget_info_list = 8;
  repeated OnlinePlayerInfo player_info_list = 14;
  repeated uint32 player_uid_list = 11;
}

message PostEnterSceneReq {
  uint32 enter_scene_token = 12;
}

message PostEnterSceneRsp {
  int32 retcode = 4;
  uint32 enter_scene_token = 12;
}

message ChatInfo {
  enum SystemHintType {
    CHAT_NONE = 0;
    CHAT_ENTER_WORLD = 1;
    CHAT_LEAVE_WORLD = 2;
  }

  message SystemHint {
    uint32 type = 14;
  }

  uint32 time = 13;
  uint32 sequence = 10;
  uint32 to_uid = 7;
  uint32 uid = 15;
  bool is_read = 5;
  oneof content {
    string text = 1946;
    uint32 icon = 914;
    SystemHint system_hint = 1753;
  }
}

message PlayerChatReq {
  uint32 channel_id = 13;
  ChatInfo chat_info = 15;
}

message PlayerChatRsp {
  uint32 chat_forbidden_endtime = 15;
  int32 retcode = 2;
}

message PlayerChatNotify {
  ChatInfo chat_info = 3;
  uint32 channel_id = 6;
}

message PlayerChatCDNotify {
  uint32 over_time = 15;
}

message ChatHistoryNotify {
  repeated ChatInfo chat_info = 9;
  uint32 channel_id = 12;
}

message SceneDataNotify {
  repeated string level_config_name_list = 15;
  repeated uint32 scene_tag_id_list = 8;
}

message DungeonEntryToBeExploreNotify {
  uint32 dungeon_entry_scene_point_id = 2;
  uint32 scene_id = 4;
  uint32 dungeon_entry_config_id = 10;
}

message GetDungeonEntryExploreConditionReq {
  uint32 scene_id = 6;
  uint32 dungeon_entry_config_id = 2;
  uint32 dungeon_entry_scene_point_id = 4;
}

message DungeonEntryCond {
  DungeonEntryBlockReason cond_reason = 7;
  uint32 param1 = 8;
}

message GetDungeonEntryExploreConditionRsp {
  DungeonEntryCond dungeon_entry_cond = 5;
  int32 retcode = 3;
}

message UnfreezeGroupLimitNotify {
  uint32 point_id = 9;
  uint32 scene_id = 11;
}

message SetEntityClientDataNotify {
  uint32 entity_id = 14;
  EntityClientData entity_client_data = 9;
}

message GroupSuiteNotify {
  map<uint32, uint32> group_map = 3;
}

message GroupUnloadNotify {
  repeated uint32 group_list = 10;
}

message MonsterAIConfigHashNotify {
  uint32 job_id = 10;
  uint32 entity_id = 15;
  int32 hash_value = 11;
}

message ShowTemplateReminderNotify {
  bool is_revoke = 1;
  uint32 template_reminder_id = 14;
  repeated uint32 param_uid_list = 3;
  repeated int32 param_list = 10;
  bool is_need_cache = 15;
}

message ShowCommonTipsNotify {
  string content = 8;
  string title = 13;
  uint32 close_time = 4;
}

message CloseCommonTipsNotify {
}

message ChangeWorldToSingleModeNotify {
}

message SyncScenePlayTeamEntityNotify {
  uint32 scene_id = 2;
  repeated PlayTeamEntityInfo entity_info_list = 3;
}

message DelScenePlayTeamEntityNotify {
  repeated uint32 del_entity_id_list = 2;
  uint32 scene_id = 4;
}

message CylinderRegionSize {
  float radius = 8;
  float height = 7;
}

message PolygonRegionSize {
  repeated VectorPlane point_list = 5;
  float height = 9;
}

message PlayerEyePointStateNotify {
  uint32 region_entity_id = 15;
  Vector eye_point_pos = 1;
  bool is_use_eye_point = 3;
  uint32 region_config_id = 7;
  uint32 region_shape = 12;
  bool is_filter_stream_pos = 2;
  int32 fix_lod_level = 5;
  uint32 region_group_id = 4;
  oneof region_size {
    float sphere_radius = 255;
    Vector cubic_size = 1823;
    CylinderRegionSize cylinder_size = 1862;
    PolygonRegionSize polygon_size = 877;
  }
}

message GetMapMarkTipsReq {
}

message GetMapMarkTipsRsp {
  int32 retcode = 7;
  repeated MapMarkTipsInfo mark_tips_list = 11;
}

message ChangeWorldToSingleModeReq {
}

message ChangeWorldToSingleModeRsp {
  uint32 quit_mp_valid_time = 15;
  int32 retcode = 4;
}

message GetWorldMpInfoReq {
}

message GetWorldMpInfoRsp {
  int32 retcode = 12;
  bool is_in_mp_mode = 1;
  uint32 quit_mp_valid_time = 9;
}

message EntityConfigHashEntry {
  uint32 job_id = 13;
  int32 hash_value = 6;
  uint32 entity_id = 11;
}

message EntityConfigHashNotify {
  repeated EntityConfigHashEntry ability_entry_list = 3;
  repeated EntityConfigHashEntry avatar_entry_list = 15;
  repeated EntityConfigHashEntry combat_entry_list = 8;
}

message ForceDragAvatarNotify {
  uint32 scene_time = 3;
  uint64 delta_time_ms = 1;
  uint32 entity_id = 2;
  MotionInfo motion_info = 10;
  bool is_first_valid = 8;
  uint64 last_move_time_ms = 12;
}

message MonsterPointArrayRouteUpdateNotify {
  uint32 entity_id = 7;
  MonsterRoute monster_route = 5;
}

message ForceDragBackTransferNotify {
}

message GetScenePerformanceReq {
}

message GetScenePerformanceRsp {
  uint32 monster_num = 9;
  uint32 gather_num_insight = 1;
  uint32 gadget_num = 6;
  int32 retcode = 7;
  uint32 dynamic_group_num = 12;
  uint32 group_num = 2;
  Vector pos = 4;
  uint32 entity_num = 8;
  uint32 gather_num = 13;
}

message SceneAudioNotify {
  repeated float param2 = 14;
  int32 type = 3;
  repeated string param3 = 11;
  uint32 source_uid = 6;
  repeated uint32 param1 = 4;
}

message HitTreeNotify {
  uint32 tree_type = 11;
  Vector tree_pos = 2;
  Vector drop_pos = 8;
}

message EntityTagChangeNotify {
  string tag = 2;
  uint32 entity_id = 8;
  bool is_add = 10;
}

message AvatarFollowRouteNotify {
  uint32 entity_id = 4;
  uint32 template_id = 6;
  uint32 start_scene_time_ms = 8;
  Route route = 2;
  string client_params = 13;
}

message SceneEntityUpdateNotify {
  uint32 param = 10;
  VisionType appear_type = 13;
  repeated SceneEntityInfo entity_list = 5;
}

message ClientHashDebugNotify {
  uint32 job_id = 12;
}

message PlayerWorldSceneInfo {
  uint32 scene_id = 11;
  repeated uint32 scene_tag_id_list = 8;
  bool is_locked = 12;
}

message PlayerWorldSceneInfoListNotify {
  repeated PlayerWorldSceneInfo info_list = 5;
}

message LuaEnvironmentEffectNotify {
  uint32 type = 1;
  repeated int32 int_param_list = 12;
  string effect_alias = 3;
  repeated float float_param_list = 14;
}

message ClientLoadingCostumeVerificationNotify {
  uint32 costume_id = 9;
  uint64 prefab_hash = 2;
  uint64 guid = 14;
}

message ShowClientGuideNotify {
  string guide_name = 7;
}

message ShowClientTutorialNotify {
  uint32 tutorial_id = 2;
}

message GetMapAreaReq {
}

message GetMapAreaRsp {
  int32 retcode = 14;
  repeated MapAreaInfo map_area_info_list = 9;
}

message MapAreaChangeNotify {
  repeated MapAreaInfo map_area_info_list = 3;
}

message LeaveWorldNotify {
}

message GuestBeginEnterSceneNotify {
  uint32 scene_id = 8;
  uint32 uid = 15;
}

message GuestPostEnterSceneNotify {
  uint32 scene_id = 5;
  uint32 uid = 4;
}

message LevelTagDataNotify {
  repeated uint32 level_tag_id_list = 9;
}

message StopReminderNotify {
  uint32 reminder_id = 15;
}

message AreaPlayInfoNotify {
  uint32 detail_play_type = 14;
  AreaPlayType area_play_type = 11;
}

message CheckGroupReplacedReq {
  repeated uint32 group_id_list = 7;
}

message CheckGroupReplacedRsp {
  int32 retcode = 4;
  repeated uint32 replaced_group_id_list = 6;
}

message DeathZoneObserveNotify {
  uint32 target_entity_id = 14;
  uint32 source_entity_id = 12;
}

message HitTreeInfo {
  Vector tree_pos = 12;
  uint32 tree_type = 8;
}

message WorldChestOpenNotify {
  uint32 group_id = 6;
  uint32 scene_id = 9;
  uint32 config_id = 12;
}

message WidgetQuickHitTreeReq {
  repeated HitTreeInfo hit_tree_info_list = 5;
}

message WidgetQuickHitTreeRsp {
  int32 retcode = 2;
}

message BeginCameraSceneLookWithTemplateNotify {
  enum FollowType {
    FOLLOW_TYPE_INIT_FOLLOW_POS = 0;
    FOLLOW_TYPE_SET_FOLLOW_POS = 1;
    FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2;
  }

  Vector look_pos = 8;
  uint32 template_id = 5;
  Vector follow_pos = 2;
  uint32 entity_id = 12;
  repeated string other_params = 13;
  FollowType follow_type = 9;
}

message RefreshEntityAuthNotify {
  repeated uint32 entity_id_list = 7;
}

message ScenePlayerBackgroundAvatarRefreshNotify {
  repeated SceneEntityInfo entity_list = 4;
  VisionType appear_type = 8;
  uint32 param = 9;
}
