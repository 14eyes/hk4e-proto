syntax = "proto3";

package proto;

option go_package = "github.com/teyvat-helper/hk4e-proto/pb";

import "define.proto";

message TowerTeam {
  uint32 tower_team_id = 3;
  repeated uint64 avatar_guid_list = 14;
}

message TowerLevelRecord {
  repeated uint32 satisfied_cond_list = 13;
  uint32 level_id = 10;
}

message TowerFloorRecord {
  uint32 floor_star_reward_progress = 15;
  map<uint32, uint32> passed_level_map = 8;
  uint32 floor_id = 12;
  repeated TowerLevelRecord passed_level_record_list = 2;
}

message TowerCurLevelRecord {
  repeated TowerTeam tower_team_list = 8;
  bool is_empty = 6;
  repeated uint32 buff_id_list = 4;
  bool is_upper_part = 2;
  uint32 cur_level_index = 1;
  uint32 cur_floor_id = 15;
}

message TowerBriefDataNotify {
  uint32 total_star_num = 11;
  uint32 last_floor_index = 8;
  uint32 schedule_start_time = 15;
  uint32 next_schedule_change_time = 6;
  bool is_finished_entrance_floor = 14;
  uint32 last_level_index = 4;
  uint32 tower_schedule_id = 5;
}

message TowerFloorRecordChangeNotify {
  bool is_finished_entrance_floor = 11;
  repeated TowerFloorRecord tower_floor_record_list = 8;
}

message TowerCurLevelRecordChangeNotify {
  TowerCurLevelRecord cur_level_record = 10;
}

message TowerDailyRewardProgressChangeNotify {
  uint32 daily_floor_id = 15;
  uint32 daily_level_index = 9;
}

message TowerTeamSelectReq {
  repeated TowerTeam tower_team_list = 11;
  uint32 floor_id = 10;
}

message TowerTeamSelectRsp {
  int32 retcode = 8;
}

message TowerAllDataReq {
  bool is_interact = 2;
}

message TowerMonthlyBrief {
  uint32 tower_schedule_id = 15;
  uint32 best_floor_index = 6;
  uint32 best_level_index = 3;
  uint32 total_star_count = 12;
}

message TowerAllDataRsp {
  uint32 tower_schedule_id = 10;
  uint32 daily_level_index = 9;
  map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  bool is_first_interact = 3;
  bool is_finished_entrance_floor = 1;
  repeated TowerFloorRecord tower_floor_record_list = 5;
  uint32 daily_floor_id = 11;
  uint32 commemorative_reward_id = 13;
  TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  uint32 next_schedule_change_time = 6;
  uint32 valid_tower_record_num = 7;
  uint32 skip_to_floor_index = 2;
  map<uint32, uint32> floor_open_time_map = 4;
  TowerCurLevelRecord cur_level_record = 15;
  int32 retcode = 8;
  uint32 schedule_start_time = 914;
  TowerMonthlyBrief monthly_brief = 14;
}

message TowerEnterLevelReq {
  uint32 enter_point_id = 3;
}

message TowerEnterLevelRsp {
  repeated uint32 tower_buff_id_list = 10;
  int32 retcode = 1;
  uint32 level_index = 14;
  uint32 floor_id = 5;
}

message TowerBuffSelectReq {
  uint32 tower_buff_id = 5;
}

message TowerBuffSelectRsp {
  int32 retcode = 11;
  uint32 tower_buff_id = 13;
}

message TowerSurrenderReq {
}

message TowerSurrenderRsp {
  int32 retcode = 9;
}

message TowerGetFloorStarRewardReq {
  uint32 floor_id = 15;
}

message TowerGetFloorStarRewardRsp {
  int32 retcode = 11;
  uint32 floor_id = 9;
}

message TowerLevelEndNotify {
  enum ContinueStateType {
    CONTINUE_STATE_CAN_NOT_CONTINUE = 0;
    CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL = 1;
    CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR = 2;
  }

  uint32 next_floor_id = 4;
  repeated ItemParam reward_item_list = 12;
  uint32 continue_state = 15;
  bool is_success = 5;
  repeated uint32 finished_star_cond_list = 6;
}

message TowerLevelStarCondData {
  bool is_fail = 15;
  uint32 cond_value = 9;
  bool is_pause = 13;
  uint32 star_cond_index = 6;
}

message TowerLevelStarCondNotify {
  uint32 level_index = 14;
  uint32 floor_id = 11;
  repeated TowerLevelStarCondData cond_data_list = 9;
}

message TowerMiddleLevelChangeTeamNotify {
}

message TowerFightRecordPair {
  uint32 avatar_id = 1;
  uint32 data = 3;
}

message TowerMonthlyCombatRecord {
  TowerFightRecordPair most_kill_avatar_pair = 14;
  TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  repeated TowerFightRecordPair most_reveal_avatar_list = 6;
  TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  TowerFightRecordPair highest_dps_avatr_pair = 12;
  TowerFightRecordPair most_take_damage_avatar_pair = 9;
}

message TowerMonthlyDetail {
  TowerMonthlyCombatRecord monthly_combat_record = 2;
  TowerMonthlyBrief monthly_brief = 12;
}

message TowerRecordHandbookReq {
}

message TowerRecordHandbookRsp {
  int32 retcode = 7;
  repeated TowerMonthlyDetail monthly_detail_list = 14;
}
