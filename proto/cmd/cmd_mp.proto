syntax = "proto3";

package proto;

option go_package = "github.com/teyvat-helper/hk4e-proto/pb";

import "define.proto";

message PlayerApplyEnterMpNotify {
  uint32 src_thread_index = 5;
  uint32 src_app_id = 6;
  OnlinePlayerInfo src_player_info = 2;
}

message PlayerApplyEnterMpReq {
  uint32 target_uid = 4;
}

message PlayerApplyEnterMpRsp {
  int32 retcode = 5;
  uint32 target_uid = 3;
  uint32 param = 4;
}

message PlayerApplyEnterMpResultNotify {
  enum Reason {
    PLAYER_JUDGE = 0;
    SCENE_CANNOT_ENTER = 1;
    PLAYER_CANNOT_ENTER_MP = 2;
    SYSTEM_JUDGE = 3;
    ALLOW_ENTER_PLAYER_FULL = 4;
    WORLD_LEVEL_LOWER_THAN_HOST = 5;
    HOST_IN_MATCH = 6;
    PLAYER_IN_BLACKLIST = 7;
    PS_PLAYER_NOT_ACCEPT_OTHERS = 8;
    HOST_IS_BLOCKED = 9;
    OTHER_DATA_VERSION_NOT_LATEST = 10;
    DATA_VERSION_NOT_LATEST = 11;
    PLAYER_NOT_IN_PLAYER_WORLD = 12;
    MAX_PLAYER = 13;
  }

  bool is_agreed = 2;
  string target_nickname = 12;
  Reason reason = 13;
  uint32 target_uid = 1;
}

message PlayerApplyEnterMpResultReq {
  uint32 apply_uid = 2;
  bool is_agreed = 12;
}

message PlayerApplyEnterMpResultRsp {
  int32 retcode = 1;
  bool is_agreed = 3;
  uint32 apply_uid = 10;
  uint32 param = 12;
}

message PlayerQuitFromMpNotify {
  enum QuitReason {
    INVALID = 0;
    HOST_NO_OTHER_PLAYER = 1;
    KICK_BY_HOST = 2;
    BACK_TO_MY_WORLD = 3;
    KICK_BY_HOST_LOGOUT = 4;
    KICK_BY_HOST_BLOCK = 5;
    BE_BLOCKED = 6;
    KICK_BY_HOST_ENTER_HOME = 7;
    HOST_SCENE_INVALID = 8;
    KICK_BY_PLAY = 9;
    KICK_BY_ISLAND_PARTY_GALLERY_START_FAILED = 10;
  }

  QuitReason reason = 11;
}

message PlayerPreEnterMpNotify {
  enum State {
    INVALID = 0;
    START = 1;
    TIMEOUT = 2;
  }

  State state = 2;
  uint32 uid = 14;
  string nickname = 6;
}

message GetPlayerMpModeAvailabilityReq {
}

message GetPlayerMpModeAvailabilityRsp {
  int32 mp_ret = 15;
  int32 retcode = 2;
  repeated uint32 param_list = 8;
}

message PlayerSetOnlyMPWithPSPlayerReq {
  bool is_only = 13;
}

message PlayerSetOnlyMPWithPSPlayerRsp {
  int32 retcode = 5;
  bool is_only = 8;
}

message PSPlayerApplyEnterMpReq {
  string target_psn_id = 5;
}

message PSPlayerApplyEnterMpRsp {
  string target_psn_id = 2;
  int32 retcode = 6;
  uint32 param = 10;
}

message MpPlayOwnerCheckReq {
  uint32 mp_play_id = 9;
  bool is_skip_match = 3;
}

message MpPlayOwnerCheckRsp {
  uint32 wrong_uid = 4;
  bool is_skip_match = 15;
  uint32 mp_play_id = 10;
  int32 retcode = 12;
}

message MpPlayOwnerStartInviteReq {
  uint32 mp_play_id = 3;
  bool is_skip_match = 6;
}

message MpPlayOwnerStartInviteRsp {
  int32 retcode = 14;
  uint32 mp_play_id = 3;
  bool is_skip_match = 9;
}

message MpPlayOwnerInviteNotify {
  uint32 cd = 12;
  uint32 mp_play_id = 13;
  bool is_remain_reward = 10;
}

message MpPlayGuestReplyInviteReq {
  uint32 mp_play_id = 3;
  bool is_agree = 15;
}

message MpPlayGuestReplyInviteRsp {
  int32 retcode = 4;
  uint32 mp_play_id = 10;
}

message MpPlayGuestReplyNotify {
  uint32 uid = 7;
  bool is_agree = 4;
  uint32 mp_play_id = 14;
}

message MpPlayPrepareNotify {
  uint32 mp_play_id = 9;
  uint32 prepare_end_time = 11;
}

message MpPlayInviteResultNotify {
  uint32 mp_play_id = 11;
  bool all_argee = 10;
}

message MpPlayPrepareInterruptNotify {
  uint32 mp_play_id = 12;
}

message MpBlockNotify {
  uint32 end_time = 13;
}
