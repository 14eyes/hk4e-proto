syntax = "proto3";

package proto;

option go_package = "github.com/teyvat-helper/hk4e-proto/pb";

import "server_only/bin_common.server.proto";
import "server_only/redis_data.proto";
import "server_only/enum.server.proto";

message AddRedisMailReq {
  MailAddOpType op_type = 1;
  MailBin mail_bin = 2;
  string ticket = 3;
  string transaction = 4;
}

message AddRedisMailRsp {
  int32 retcode = 1;
  MailAddOpType op_type = 2;
  string ticket = 3;
  string transaction = 4;
}

message DelRedisMailReq {
  MailDelOpType op_type = 1;
  repeated uint32 mail_id_list = 2;
  repeated string ticket_list = 3;
}

message DelRedisMailRsp {
  int32 retcode = 1;
  MailDelOpType op_type = 2;
  repeated uint32 mail_id_list = 3;
}

message GetRedisMailReq {
  MailGetOPType op_type = 1;
  MailGetType get_type = 2;
  repeated uint32 mail_id_list = 3;
  bool is_collectible_mail_transfered = 4;
}

message GetRedisMailRsp {
  int32 retcode = 1;
  repeated bytes mail_str_list = 2;
  MailGetOPType op_type = 3;
  bool is_truncated = 4;
  MailGetType get_type = 5;
  bool is_collectible_mail_transfered = 6;
  string transaction = 7;
  uint32 page_index = 8;
  uint32 total_page_count = 9;
}

message RedisMailChangeNotify {
  repeated MailRedisData update_mail_list = 1;
  repeated uint32 del_mail_id_list = 2;
}

message SendOfflineMsgReq {
  OfflineMsgBin msg = 1;
}

message SendOfflineMsgRsp {
  int32 retcode = 1;
  string ticket = 2;
}

message NewOfflineMsgNotify {
}

message GetOfflineMsgReq {
  uint32 index = 1;
  bool is_login = 2;
}

message GetOfflineMsgRsp {
  int32 retcode = 1;
  uint32 last_index = 2;
  repeated OfflineMsgBin offline_msg_list = 3;
  bool is_login = 4;
}

message RemoveOfflineMsgNotify {
  uint32 index = 1;
}

message ClearOfflineMsgNotify {
}

message UpdateRedisMailReq {
  MailUpdateOpType op_type = 1;
  repeated uint32 mail_id_list = 2;
}

message UpdateRedisMailRsp {
  int32 retcode = 1;
  MailUpdateOpType op_type = 2;
  repeated uint32 mail_id_list = 3;
}

message GetRedisMailTransactionStatusReq {
  repeated string transaction_list = 2;
}

message GetRedisMailTransactionStatusRsp {
  int32 retcode = 1;
  map<string, bool> transaction_status_map = 2;
}

message ClearUpRedisMailNotify {
}

message CleanRedisMailNotify {
}

message ResendRedisMailReq {
  map<string, MailBin> mail_bin_map = 1;
}

message ResendRedisMailRsp {
  int32 retcode = 1;
  map<string, bool> resend_status_map = 2;
}
